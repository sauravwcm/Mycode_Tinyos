<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="14:transmitAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10f240c20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10f336020"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10f336020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10f4f6590"/></to>
    </wire>
    <wire loc="15:transmitAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10f24f0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10f337590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f501020"/></to>
    </wire>
    <wire loc="16:transmitAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f25b1e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10fa85370"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10fa85370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10f8e7c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:transmitAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x10f276c40"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x10f7852d0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x10f7852d0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x10f8c6270"/></to>
    </wire>
    <wire loc="30:transmitAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x10f2d36c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1108e9c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1108e9c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1113ea8b0"/></to>
    </wire>
    <wire loc="31:transmitAppC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x10f2e48d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1108e88b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1108e88b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1113e9590"/></to>
    </wire>
    <wire loc="32:transmitAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10f2f98f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1108e9020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1108e9020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1113ebb60"/></to>
    </wire>
    <wire loc="33:transmitAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x10f2756d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10fcee970"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10fcee970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10fd4f020"/></to>
    </wire>
    <wire loc="34:transmitAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10f2f4180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1108e2910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1108e2910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10fd33cb0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:transmitAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x10f2709a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1108d98f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1108d98f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11095eb90"/></to>
    </wire>
    <wire loc="37:transmitAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x10f2f2bd0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x10fa7b950"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x10fa7b950"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x10fcfe060"/></to>
    </wire>
    <wire loc="38:transmitAppC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x10f3061e0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x10fa7c830"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x10fa7c830"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x10fcff0c0"/></to>
    </wire>
    <wire loc="42:transmitC.nc">
      <from><interface-ref name="radioSendToCon" scoped="" ref="0x10f302020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11095e540"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110790dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1106ccb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1106ea750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110695080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110568620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110455c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10fed97e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111299020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110000020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10fdfccc0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1110cdca0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f8df8c0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10f4f6c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10edc33a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10edc33a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10f21b420"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x10f5116c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f335380"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10f335380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f331800"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10f511dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10f32e020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x10f34abe0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10f34abe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f354b50"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x10f32e700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f32fa10"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x10f32ede0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f52bc40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10f354b50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f37f940"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x10f36c2c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x10f37e020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x10f13f510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x10f37d360"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x10f3c75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f4776d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x10f3d8020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f470b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x10f3be700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f47c160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x10f3eaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f4a3cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x10f3c4aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f47e480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x10f3cc020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f4a3020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x10f3e7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f4b4cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x10f3d35a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f49d220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x10f3a4b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f4359d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x10f3c8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f48b2f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x10f3ce3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f48c610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x10f3d75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f48d220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x10f3bd700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f4757a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x10f3e9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f49b2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x10f3d6be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f4866d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x10f3c3890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f476ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x10f3b3060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f41ec80"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x10f3ccda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f49c610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x10f3aa0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f47f020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x10f3d2a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f4956d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x10f3b8690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f45fa90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x10f3eba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f4847a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x10f3c0cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f460de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x10f3cd1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f485ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x10f3e8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f4bb7a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x10f3d40c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f4a5b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x10f3cbb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f4bcac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x10f3c9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10f494cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x10f3caa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f4b4020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x10f3cf570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10f494020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x10f3d0020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10f4b6b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10f41cc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f41c5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10f41a2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x10f4aea90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10f41a940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x10f4ab260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f45e930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f41ec80"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f45c020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f41c5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f47b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f41ec80"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f47a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f41c5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f474610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f41ec80"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f473c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f41c5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10f414c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10f4132f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x10f4ab9f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10f413940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x10f4aa240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f492b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f4902f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f48a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f4897a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f482610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f4a8c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f4a2b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f4a02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f49a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f4987a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f4ba610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f4b9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10f4b3b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10f4b02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10f4145b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10f21a320"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x10f216990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10ee23760"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10f52bc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f5048d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10f5217b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x10f52e360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10f52e360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10f74d440"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10f4ff980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x10f52d6a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10f52d6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10f76a020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10f526ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x10f52c9c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10f52c9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10f766b90"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10f76e610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10f57c200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10f57c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6a1740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10f7692f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x10f5a5200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x10f5a5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6cc100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10f765de0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x10f5a2200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x10f5a2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6c8d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10f53f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f625100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10f555020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f652d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x10f5b6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f644d10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x10f5bd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6d1100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x10f5b4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f66c740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x10f57a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f648100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x10f566200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f674e00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x10f596200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6dbd10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x10f5ae580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f663d10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x10f5c9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6be100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x10f5e1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6fdd10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10f563020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f617100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x10f5ac580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f65e740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x10f55f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f63c740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x10f574020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f667100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x10f58a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f694d10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x10f5a0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6c3740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x10f590200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6fdd10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10f543020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f603d10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10f559020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f62d860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x10f56e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f659100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x10f5b8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f644d10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x10f5c3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6df100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x10f5e3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6fdd10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x10f5d0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6a6d10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x10f56a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f67ea60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x10f580200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6aa100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x10f59a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6e4740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x10f5c1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6dbd10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x10f5aa570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6b5d10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x10f53d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f621d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10f552020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f64d740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x10f59e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6be100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x10f578020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f644d10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x10f58e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f69d740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x10f594200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6d6740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x10f5a6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6aa100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10f550020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f60c6d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10f55d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f637100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x10f572020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f663d10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x10f588200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f68f740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x10f5ce580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f659100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x10f5c7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6b9d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x10f5e7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6fdd10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x10f584200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6b5d10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x10f5cc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f683d10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10f541020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f62a740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10f557020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f656270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x10f56c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f683d10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x10f5a8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6b0740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x10f5bf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6d6740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x10f568200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f679460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10f57e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6a6d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x10f598200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6df100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10f565020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f61c740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x10f59c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6b9d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10f561020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f641d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x10f576020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f66c740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x10f58c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f698100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x10f592200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6d1100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10f545020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f607100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10f55b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f632d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x10f570020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f65e740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x10f586200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f68a100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x10f5b0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f667100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x10f5c5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6e4740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x10f5b2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f667100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x10f582200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6b0740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x10f5e5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6d1100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x10f5df580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f6c3740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x10f5ba1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10f648100"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x10f788080"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x10f8c8020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x10f8968f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x10f77f020"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x10f77f020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x10f889490"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x10f897660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10f783750"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x10f783750"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10f891d70"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x10f8c5e20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x10f89bb10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x10f8c3130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x10f899ca0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10f88f020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x10f552020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x10f87c020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x10f798020"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10f798020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x10f7b9bc0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10f7a3020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x10f791bc0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10f799020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x10f7babc0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10f7a0020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x10f78dbc0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x10f79e020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x10f7bfbc0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10f777140"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x10f793c40"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10f79b020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x10f7bcbc0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x10f7a2020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x10f790bc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10f7a5210"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x10f797d30"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10f79d020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x10f7bebc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10f7a40a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x10f792bc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10f79a060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x10f7bbc40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10f7a1020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x10f78ebc0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10f79f020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x10f7c0bc0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10f778200"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x10f794c80"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10f79c020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x10f7bdbc0"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x10f8cd480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10f8e7c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10f8db700"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10f8db700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10fa67150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10f8df8c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10f9ee020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10f8d51a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10fa59790"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10f9ee020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111016020"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10fa62640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10f9fe2f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10f9f9850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10f9ee870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10f9ee870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x111011a90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10fa58a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10f97ab50"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10f97ab50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10f997cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x111016020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110ffb660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x111009210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x111016870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x111016870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x110ffa020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x11100de10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10f97ab50"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x110ff6190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x111000340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x111000340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110ff5770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x110fffa80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x110fffa80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110ff4a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x110ffeda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x110ffeda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x10f3d8020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x10f3cf570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x10f3d6be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x10f3cd1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x10f3d40c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x10f3cc020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x10f3d35a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x10f3ccda0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x10f3d2a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x10f3cbb80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x10f3d0020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x10f3caa20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10f9b40f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10f978b70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10f978b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10f971b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10f963c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x10f9f59c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x10fa5ca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x10fcfe060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x10fad25c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x10fcff0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x10fad5040"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x10fa7c020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10fcfc790"/></to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10fcfe800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10fcf9020"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fcf9690"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fd01c00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fd01c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fad87a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10fd008f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x11109e970"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x11109e970"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10fc1fbc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10facf6c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10fcfe800"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111098a50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10fad62c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x10fad13f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x11109fcc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11109fcc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fc20850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x10fb0bc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1110982b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1110982b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10fc21980"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10fad62c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10fb50dc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x10fad25c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x10fb4e890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x10fad5040"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x10fb4f6d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fad87a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fb50020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10fb8e020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10facf6c0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x10fb8f230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x10fad13f0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x10fb89290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x10fb0bc20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x10fb8e690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x10fb7b8b0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x10fb7b8b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x10fb71020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10fb89c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10fc3b110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10fc3b110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10f978b70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10fb86dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10fb753b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10fbb0dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x10fb7b080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x10fb74710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x10fbae6d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x10f5a8580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x10fbac670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x10f5a6580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x10fbaa670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x10f5d0580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x10fba8670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x10f5cc580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x10fba6670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x10f5ce580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x11109d8d0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x10fb7b8b0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x11109d130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10fc1d4b0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10fc1d4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10fcec400"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10fc1c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111098a50"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10fc1fbc0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10fced020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10fced020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1110c83a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x10fc21980"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10fc1ab60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fc20850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fca6210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fca6210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1110c9540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10fcec400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1110c78b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x10fc4dc20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10fb753b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10fceccd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10fc1c280"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10fc4ca90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10fcec400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10fcd19d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10fced7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10fced7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1110c8b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x10fce7b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x10fb7b080"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1110c6210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10fceccd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1110c69d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x1110cc330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x1110c4c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x1111293a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x10fce7b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x111129b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x10fcd1400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1111280f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10fcd19d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111128d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x10fcd0720"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10fd4f020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10fd7dd80"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10fd34990"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10fd4e050"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10fd4e050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1107c3020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10fd31900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x10fd4ddf0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x10fd4ddf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1107c2df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10fd30020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10fd4aa80"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10fd4aa80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1107bfa80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10fd2c310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1105b4550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1105b4550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x110610a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x10fd12130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x10fd3fe70"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x10fd3fe70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x10fd60b40"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10fd33cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10fd4d210"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10fd4d210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1107c2210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd2d080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd48b20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd48b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd61990"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10fd30c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10fd4c470"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10fd4c470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1107c1470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10fd1d3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x11061a660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x11061a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x11060caf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10fd7dd80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x110783b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x10fd3f020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1107bd8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x10fd7e020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x1107bece0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10fd41c20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10fd649e0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10fd649e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x10fd60b40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x110783080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd61990"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x1105b66e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x10fd760d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x10fd5f790"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x10fd5f790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x11076f020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10fd3eda0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10fd604c0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10fd604c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1105b5a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x1107b50f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fd70e60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1107bc860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x10fd6c4e0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x10fd6c4e0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x11070dc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1107bb690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x10fd64390"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x10fd64390"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x11070ca50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1107b74d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1103e3b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1107bbce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x110615d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1107bab70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x110611640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x1107b9610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x10fe02550"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10fe02550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x10fdf80c0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x1107b61f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10fda3020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x10fda3020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10fd9e4c0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1107b5d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x110783b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x110780d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1105b5a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x110610020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x11076f020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x11076d410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x11070dc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x110702a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x110783080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x11077c2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x10fd6d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11070d5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x11070d5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x110702370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1105b66e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x110612c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fd70e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110710be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110710be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1107057b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x10fd63240"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11070f8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11070f8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x1107044d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x10fd6d6e0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x11070b170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x11070b170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x110700020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x11070ca50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x110701840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x110780d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10fda5020"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x10fda5020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x10fda2b80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x11070a6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1106f0220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1106f0220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1106eea10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1106ef020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x110772350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x110772350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x11076fd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x11076fd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x110788ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x110788ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x110781860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x110781860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10fda5b10"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10fda5b10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10fd9f790"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x11070a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x110784980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x110784980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x110780690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x110780690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1106d3aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1106d3aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1106cfe30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1106d0950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10fda4940"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10fda4940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11056c7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x11056c7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x110565020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fd9d320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fe10020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10fe10020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10fdf9390"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x10fd95880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x10fe0e4b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x10fe0e4b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x10fdf6020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x10fd9bba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1104646c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x10fd9bba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11056f5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x11056f5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x110568ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1104646c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x110454320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x10fd8c810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x110460020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x110460020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x110454bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x10fd93700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x110460cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x110460cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x110453970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10fd8ab00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10fdcb130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x10fd89b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x11069ba20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x11069ba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x110694a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x10fdc7850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x11069daa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x11069daa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110004280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10fd8b470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x10fdc22a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x10fdc32a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x10fdc42b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x10fdfd850"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x10fdf5500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x10fe3e3a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x10fed6220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x10fed6220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x10fed0af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x10fe3a5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x10fee1e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x10fee1e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10ff24b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x10fe38830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x10fedd6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x10fedd6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10ff15d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x10fe37b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x10ff2bce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x10ff2bce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10ff0b710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x10fe35020"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x10ff45d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x10ff45d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x10ff798a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10fe210d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110349e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110349e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ff8a950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10fe23120"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x1103467b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1103467b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10fe23830"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x110345ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x110345ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10fe22940"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x110347ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x110347ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10fe22020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x110344160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x110344160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10fe289b0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x11033b870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11033b870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10fe2f3c0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x110339880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x110339880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10fe2fc70"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x1103380a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1103380a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10fe2a570"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x110340e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x110340e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10fe2ae40"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x11033f670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11033f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10fe33200"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x11032b500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11032b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10fe2b830"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x11032cce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11032cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10fe26720"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x11033ce50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x11033ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10fe25020"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x11033fe50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x11033fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10fe258d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x11033ee50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11033ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x10fe20bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11037ba80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11037ba80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ff8a950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x10fe21e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1103ae9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1103ae9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ff8a950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10fe306b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1103e3b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10fe3d970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1103e2d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1103e2d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1103c7310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x10fe62820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x10fe63940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10fed97e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10fed0260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10fed0260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111100720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x10fed0af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1110ff020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x111100720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111190760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1110ff020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1111891d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x111190760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111173340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x111183b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x11118f020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x11118f020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x111173bd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111185690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10feba080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10feba080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10feb5cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x111170dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x11117ae70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11117ae70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x11116d440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1111775d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1111775d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11116c760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1111768f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1111768f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10ff010f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10f978b70"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x10fedf090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10ff1f710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x10fede390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10ff191d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x10fed7b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10ff28020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x10ff2c9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10ff10b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff272f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x10f53f020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff23de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x10f566200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff1e930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x10f541020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff18480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x10f550020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff13020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x10f588200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff0fde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x10f568200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff0a930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x10f58a200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x10ff45150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10ff3ea20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x10ff44a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x10ff768b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10ff805d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x10f3d75a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x10ff7f8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x10f3c8a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x10ff7e7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x10f568200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x10ff78480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x10f7a3020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x10ff75480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x10f7a5210"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x110346160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11033a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x1103320a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1103390a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x110326500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x110328500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x110345490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x11032e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11032a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x110334880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x1103350a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x110348a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff87670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff87670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff81920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x110344e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x110342490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11032dc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x110342be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11032ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x11032e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11033e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x1103300a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x110332880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x110330880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x110327ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x110328ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x110335880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x1103310a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11032bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x110338880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x110326ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x110347480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x110340670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x11033c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x1103330a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x110333880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11033a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x1103412f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x110340020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1103447b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11032c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x110327500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x1103340a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x110331880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x110346e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1103370a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x110341940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x110337880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x11032d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1103259b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ffd0bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ffce020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ffcedb0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10ff8a950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ffd1810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ffccba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x10ffc8020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110008770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x110008770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110004280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10ffcb400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1100bcc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1100bcc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11127c770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x10ffc9080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1100ba8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1100ba8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x11127bbe0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10ffc0680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x110310020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x110310020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x111279d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10ffc8df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x10ffbb120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x110004280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110000b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x111279d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1100fb850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x11127bbe0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1100fc020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11127c770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1100a8430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x11127b440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111271d90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x111271d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1102152c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1100fc020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x11014ca10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1112792b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x1100fc6a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1100fc6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x11014b060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1100f9a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1112785a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1112625d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1100fd6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1100fa690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x111271140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111271140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110216020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1100f72a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x11126b760"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x11126b760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1102184d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1100fd6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x11014c250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1100fb850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x11014bc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1100a8430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11014d470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1101493e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1100f9a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x11014a5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x1100fa690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x110144480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x1100f72a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x110149a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x110139020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x110139020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x110133c70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110144c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x1101422f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1101345e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x11012b150"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x110135d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x11012c780"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x110156bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x10f5b8580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x1101acb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x10f5b4580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x1101aab20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x10f5b2580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x1101a8b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x10f5ac580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x1101a6b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x10f5ae580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x11015bd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x110251430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x11126a020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1102173f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x11126a630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x11025d540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x11025d540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x110251430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x111270d40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x110139020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1112705a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x110215ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x110215ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x11020ac30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1102138a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1112625d0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1102152c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x11020b850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x11020b850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1112966c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x1102184d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x110211060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110216020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11020da80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11020da80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111297850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x1102173f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x110211990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x11020ac30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111294a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x110209570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1102138a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x110210e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x11020ac30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x110210060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x110135d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x110210840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1101345e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11020a020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111296e40"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111293400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x110209570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x111293bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x111299630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x111291de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x11024a250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x110133c70"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x110246d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x10f5b8580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x110244cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x10f5b2580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x11036ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x110379da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x110371b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11036b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x110364e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x11036be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1103582f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x11035a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x110376120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x110360670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11035b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x110370c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11036fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x110366670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x110368e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11036a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11037a760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff87670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x110375aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x110374120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11035fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x110374870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11035bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x110376dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x110361e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11036f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x110370480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x110379750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x110362e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x110363670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x110361670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x110359ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x11035aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x110367670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x110363e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11035cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x110369670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x110358ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x110379100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x110371370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x11036e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x110366e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11036ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x110364670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11036d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x110377450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11036de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x110373020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x110373cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11035c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11035dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x110375450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11035d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1103592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x110367e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x110362670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x110377aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x110376770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x110369e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x110373670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x110368670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x110360e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1103567a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1103a1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x1103acda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1103a5b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11039f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x110398e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x11039fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x11038b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x11038d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1103aa120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x110393670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11038f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x1103a4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1103a2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x110399670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x11039be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11039e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1103ad760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff87670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1103a8aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1103a7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x110392a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x1103a7870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11038fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1103aadc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x110394e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x1103a2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1103a4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1103ac750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x110396e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x110397670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x110394670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x11038cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x11038dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x11039a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x110397e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x110390ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x11039d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x11038bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1103ac100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x1103a5370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x1103a1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x110399e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11039ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x110398670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1103a0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1103ab450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1103a0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x1103a6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x1103a6cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1103902f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x110391ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1103a8450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1103912f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x11038c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x11039ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x110396670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x1103abaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1103aa770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x11039de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1103a6670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x11039b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x110393e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x11038a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1103c4880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x1103ba020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1103ba020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x110416140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x110412bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x1103b8c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x1103b8c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x1103fd150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x110415530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x11047aa20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x110401540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x110402590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x110402590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1104789e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x1103f8950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x1103ffca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x1103ffca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x110438a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x1103fd9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x110401540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x110427020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x110421530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x110421530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x11041ee50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11041a020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10f3b3060"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x110477c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x10f559020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x11045c990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x110452900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x11045e150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x1104510f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x110451ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x10fed6220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x1104aa500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x10fed7b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1104a4820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x10fee1e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x1104a3b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x10ff2c9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x1104ab880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x10ff45150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1104a1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x110537c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x110537c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ff8a950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1104a1d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x1105368f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1105368f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff87670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x11049d6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x1105352f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1105352f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x11049dde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x110534cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x110534cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x11049c530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x110533370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x110533370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x11049cc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x110532d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x110532d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11049ee00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x11052bc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11052bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1104a0780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x11057b7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x11057b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11049e550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1105182f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1105182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11049b3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x11052d480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11052d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11049a5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x110529e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x110529e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x110499020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x110528670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x110528670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x11049be80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x11052f7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x11052f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1104989c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x110515ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x110515ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x110499890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x1105162f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1105162f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x110498130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x110516ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x110516ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x110493d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x11056fdf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x11056fdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x110566550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x11044dd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x11044bbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x11044a950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1105b4550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1104a5be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x110616480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x110616480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1106088b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1104966c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x11052ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x110534020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x11052ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x110521e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x110528e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x11057c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x11051c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x11052dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x110522670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x110524e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x110527670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x110530370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11051ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x110530ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x110518ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x110532060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x11051de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11052b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x110535940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x11051fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x110520670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x11051d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x110523670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x110520e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x110519ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x110526670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x11057cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x11052e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x11052a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x110522e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x110527e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x110521670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x110529670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x110534670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x11052f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x11052fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1105192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11051aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1105326b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11051a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1105152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x110523e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x11051f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1105339c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x110526e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x110524670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x11051ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x11056b020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x1105657c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110550150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10f337590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x110564020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x10fee1e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x110563380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x10fedf090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x1105626b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x10fede390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x110561a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x10ff44a20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1105606e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11067d520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11067d520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10ff8a950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x11055f530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x110659480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x110659480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x11055ead0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x110677060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x110677060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x11055e3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x110677d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x110677d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x11055d330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x11055c1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x11055ad70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1105b4550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x11055cb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x10fe02550"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1105553e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x11066e840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11066e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x110555cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x11066d060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x11066d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x110556b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x110676ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x110676ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1105536d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x11065bc60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x11065bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x110554590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x11065dc60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x11065dc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x110554e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x11065c480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x11065c480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x110552020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11065d480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11065d480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1105528b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x11067cc20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x11067cc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x1105ad9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x11061d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10feba080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x1106063b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x110620cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x1106056e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10f8d51a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1106850b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10f8e7c60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x110670620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x11067a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x110673620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x110666840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x11066d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x110679cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x110662060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11065ec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x110672620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x110671620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x110667060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x11066a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11066c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11067c2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff87670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1106776b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x110660480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x110676490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1106789c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x110663840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x110672e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x110673e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x11067a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x110664840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x110665060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x110663060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x11065b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x110669060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x110665840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11065e480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x11066b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x110674e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x110671e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x110667840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11066c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x110666060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11066e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x110679020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x1106747b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11065fc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11065f480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x110660c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x11065cc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x110669840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x110664060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x110679670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x110678370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x11066b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x110674160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x11066a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x110662840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x110658160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x110699920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x110695940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11069f990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110695080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1106eae60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1106ef020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1106e9ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1106eb690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1106eb690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110004280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1106e88f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x11069ba20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1106e7170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x1106d0200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x1106cc570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1106cb3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x1106d0950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1106cba70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x110700d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x11070a6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1106ffb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x11070a020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1106fe2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1106fd170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1106fdb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x11078f410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x110740db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x110782800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x11077e580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x11077e580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x110004280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11076a1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd61990"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1113ebb60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x11148c640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1113ea8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10fd30020"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1113e9590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10fd30c90"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1108e5020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x1113e8c10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1113e8c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd2d080"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11148a2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x110862930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x111489020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10fd30c90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x110862930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1108894b0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1108fd400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10fd34990"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1108fc060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10fd30c90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1108fb720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10fd30020"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x1108fa480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x1108fac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1108dc020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10fd30020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1108dcc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10fd30c90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x11095eb90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1109507c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1108d6980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1108cd300"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1108d3330"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x110964d60"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1108d4cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1109650d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1108d1800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x110963a10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1108d2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1109656c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11095e540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110950170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1109582b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1108d0300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1109624a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11095a790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x110960120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11095bc60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x110953970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x110ad16b0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11095a790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x110a82de0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x11095bc60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x110a826c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x110a81c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x110953970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110944020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1109582b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110a7e920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1109582b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110a76dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1109582b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x110a7f590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x110945c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x110a7fe80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x110948720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x110947020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x110a7ae00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x11093e860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10fa7c020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x110a77e40"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x10fa7c830"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x1109da6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x1109984f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x1109ddc70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x1109d6a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x110a7c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x110a7c800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="transmitC" loc="7:transmitC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="transmitAppC.TimerMilliC" loc="44(transmitAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="transmitAppC.AMSenderC" loc="47(transmitAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="transmitAppC.AMSenderC.SenderC" loc="47(transmitAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="transmitAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(transmitAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="transmitAppC.AMReceiverC" loc="43(transmitAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10f3e2230" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10f3e25d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10f3e2980" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10f3e2d00" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10f3e00d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10f3e0440" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10f3e07d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x10f3e0b60" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x10f3df020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x10f411950" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x10f411d20" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x10f5da9f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x10f5dada0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x10f5d91a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x10f5d9550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x10f5d98c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10f93b3b0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10f93b3b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10f972c80" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10f972c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10f996570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10f996570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10f996d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10f996d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10f995160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10f995160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10f995940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10f995940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10f995d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x10f993540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x10f993540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10f9456d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10f9456d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10f9ad020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10f9ad020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10f9ad410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10f9ad410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10f9adbf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10f9adbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10f9ac020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10f9e9cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10f9e9cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10fa2c230" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10fa2c230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10fa2c560" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10fa5add0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10fa5add0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x10fc475b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x10fc805b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x10fc67d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110435020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110435020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1104357b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1104357b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x110886660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x11087d360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1108750d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x11085dc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1108e1330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x10f240c20" loc="12:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10f240c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10f23f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x10f2709a0" loc="17:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x10f2709a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10f270d20"/>
        <function-ref name="stopDone" scoped="" ref="0x10f275020"/>
        <function-ref name="start" scoped="" ref="0x10f2751b0"/>
        <function-ref name="stop" scoped="" ref="0x10f275340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x10f2e48d0" loc="22:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMPacket" scoped="" ref="0x10f2e48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10f2e4c50"/>
        <function-ref name="source" scoped="" ref="0x10f2e4de0"/>
        <function-ref name="address" scoped="" ref="0x10f26e020"/>
        <function-ref name="destination" scoped="" ref="0x10f26e1b0"/>
        <function-ref name="setSource" scoped="" ref="0x10f26e340"/>
        <function-ref name="setDestination" scoped="" ref="0x10f26e4d0"/>
        <function-ref name="type" scoped="" ref="0x10f26e660"/>
        <function-ref name="setType" scoped="" ref="0x10f26e7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x10f26e980"/>
        <function-ref name="setGroup" scoped="" ref="0x10f26eb10"/>
        <function-ref name="localGroup" scoped="" ref="0x10f26eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x10f2f98f0" loc="23:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10f2f98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10f2f9c70"/>
        <function-ref name="getPayload" scoped="" ref="0x10f2f9e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10f2e3020"/>
        <function-ref name="cancel" scoped="" ref="0x10f2e31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10f2e3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x10f2f2bd0" loc="27:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x10f2f2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10f2da020"/>
        <function-ref name="receive" scoped="" ref="0x10f2da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x10f2756d0" loc="18:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x10f2756d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10f275a50"/>
        <function-ref name="stopDone" scoped="" ref="0x10f275be0"/>
        <function-ref name="start" scoped="" ref="0x10f275d70"/>
        <function-ref name="stop" scoped="" ref="0x10f274020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x10f2d36c0" loc="21:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x10f2d36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f2d3a40"/>
        <function-ref name="payloadLength" scoped="" ref="0x10f2d3bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x10f2d3d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10f26f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10f26f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x10f2f4180" loc="25:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10f2f4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10f2f4500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x10f276c40" loc="15:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x10f276c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10f241080"/>
            <typename><typedef-ref name="button_state_t" ref="0x10f2419a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x10f27ace0"/>
        <function-ref name="enable" scoped="" ref="0x10f27a860"/>
        <function-ref name="notify" scoped="" ref="0x10f2791e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x10f3061e0" loc="28:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x10f3061e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10f306560"/>
        <function-ref name="receivedByte" scoped="" ref="0x10f3066f0"/>
        <function-ref name="receive" scoped="" ref="0x10f306880"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x10f306a10"/>
        <function-ref name="receiveDone" scoped="" ref="0x10f306ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x10f306d30"/>
        <function-ref name="sendDone" scoped="" ref="0x10f2f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendToCon" ref="0x10f302020" loc="42:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radioSendToCon" scoped="" ref="0x10f302020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10f3024a0"/>
        <function-ref name="runTask" scoped="" ref="0x10f302630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10f24f0d0" loc="13:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10f24f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10f24f450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10f24f5e0"/>
        <function-ref name="led1On" scoped="" ref="0x10f24f770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10f24f900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10f24fa90"/>
        <function-ref name="get" scoped="" ref="0x10f24fc20"/>
        <function-ref name="led1Off" scoped="" ref="0x10f24fdb0"/>
        <function-ref name="led2Off" scoped="" ref="0x10f25c4d0"/>
        <function-ref name="set" scoped="" ref="0x10f25c020"/>
        <function-ref name="led0On" scoped="" ref="0x10f25c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x10f25c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f25b1e0" loc="14:transmitC.nc">
      <component-ref qname="transmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f25b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10f25e630"/>
        <function-ref name="fired" scoped="" ref="0x10f24ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10f25f9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10f25f550"/>
        <function-ref name="getdt" scoped="" ref="0x10f25d020"/>
        <function-ref name="gett0" scoped="" ref="0x10f25eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x10f25f0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10f25bdd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10f25e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10f24e2e0"/>
        <function-ref name="stop" scoped="" ref="0x10f24e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10f3334d0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10f3334d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f333850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10f336020" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10f336020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10f3363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f335380" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f335380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f335700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x10f32e700" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x10f32e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f32ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f331800" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f331800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f331b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x10f32e020" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10f32e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f32e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x10f32ede0" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x10f32ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f32c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f32fa10" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f32fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f32fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x10f34abe0" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10f34abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10f36c2c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10f36c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10f3501b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x10f36c7d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10f36c960"/>
        <function-ref name="initTimerA" scoped="" ref="0x10f36caf0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10f36c640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10f36cc80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10f36ce10"/>
        <function-ref name="initClocks" scoped="" ref="0x10f350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f354b50" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f354b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10f37e020" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10f37e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10f37d020"/>
        <function-ref name="initTimerB" scoped="" ref="0x10f37e530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10f37e6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x10f37e850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10f37e3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10f37e9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10f37eb70"/>
        <function-ref name="initClocks" scoped="" ref="0x10f37ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x10f37d360" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10f37d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10f37d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f37f940" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f37f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f37fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x10f3c75a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x10f3c75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3c7920"/>
        <function-ref name="getControl" scoped="" ref="0x10f3c7ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3c7c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3c7dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3c5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3c51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3c5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3c54d0"/>
        <function-ref name="setControl" scoped="" ref="0x10f3c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x10f3d8020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x10f3d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3d83a0"/>
        <function-ref name="getControl" scoped="" ref="0x10f3d8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3d86c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3d8850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3d89e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d8b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3d8d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3d7020"/>
        <function-ref name="setControl" scoped="" ref="0x10f3d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x10f3be700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x10f3be700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3bea80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3bec10"/>
        <function-ref name="captured" scoped="" ref="0x10f3beda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3bd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3bd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x10f3eaa20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x10f3eaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3eada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3e9020"/>
        <function-ref name="captured" scoped="" ref="0x10f3e91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3e9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3e94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x10f3c4aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x10f3c4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3c4e20"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3c3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3c31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3c3340"/>
        <function-ref name="fired" scoped="" ref="0x10f3c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x10f3cc020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x10f3cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3cc3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3cc530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3cc6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3cc850"/>
        <function-ref name="fired" scoped="" ref="0x10f3cc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x10f3e7a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x10f3e7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3e7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3e6020"/>
        <function-ref name="captured" scoped="" ref="0x10f3e61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3e6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3e64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x10f3d35a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x10f3d35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3d3920"/>
        <function-ref name="getControl" scoped="" ref="0x10f3d3ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3d3c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3d3dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3d2020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d21b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3d2340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3d24d0"/>
        <function-ref name="setControl" scoped="" ref="0x10f3d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x10f3a4b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x10f3a4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3ab020"/>
        <function-ref name="getControl" scoped="" ref="0x10f3ab1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3ab340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3ab4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3ab660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3ab7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3ab980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3abb10"/>
        <function-ref name="setControl" scoped="" ref="0x10f3abca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x10f3c8a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x10f3c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3c8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3eb020"/>
        <function-ref name="captured" scoped="" ref="0x10f3eb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3eb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3eb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x10f3ce3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x10f3ce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3ce760"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3ce8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3cea80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3cec10"/>
        <function-ref name="fired" scoped="" ref="0x10f3ceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x10f3d75a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x10f3d75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3d7a20"/>
        <function-ref name="getControl" scoped="" ref="0x10f3d7bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3d7d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3d6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3d61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3d64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3d6660"/>
        <function-ref name="setControl" scoped="" ref="0x10f3d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x10f3bd700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x10f3bd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3bda80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3bdc10"/>
        <function-ref name="captured" scoped="" ref="0x10f3bdda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3b7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3b71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x10f3e9a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x10f3e9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3e9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3e8020"/>
        <function-ref name="captured" scoped="" ref="0x10f3e81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3e8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3e84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x10f3d6be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x10f3d6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3d5020"/>
        <function-ref name="getControl" scoped="" ref="0x10f3d51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3d5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3d54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3d5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3d5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3d5b10"/>
        <function-ref name="setControl" scoped="" ref="0x10f3d5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x10f3c3890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x10f3c3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3c3c10"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3c3da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3bf020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3bf1b0"/>
        <function-ref name="fired" scoped="" ref="0x10f3bf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x10f3b3060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x10f3b3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f3b33e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f3b3570"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3b3700"/>
        <function-ref name="get" scoped="" ref="0x10f3b3890"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3b3a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3b3bb0"/>
        <function-ref name="getMode" scoped="" ref="0x10f3b3d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3b2020"/>
        <function-ref name="overflow" scoped="" ref="0x10f3b21b0"/>
        <function-ref name="setMode" scoped="" ref="0x10f3b2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f3b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x10f3ccda0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x10f3ccda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3cb180"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3cb310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3cb4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3cb630"/>
        <function-ref name="fired" scoped="" ref="0x10f3cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x10f3aa0c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x10f3aa0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3aa440"/>
        <function-ref name="getControl" scoped="" ref="0x10f3aa5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3aa760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3aa8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3aaa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3aac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3aada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3c7020"/>
        <function-ref name="setControl" scoped="" ref="0x10f3c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x10f3d2a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x10f3d2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3d2dd0"/>
        <function-ref name="getControl" scoped="" ref="0x10f3d1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3d11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3d1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3d14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3d17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3d1980"/>
        <function-ref name="setControl" scoped="" ref="0x10f3d1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x10f3b8690" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x10f3b8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3b8a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3b8ba0"/>
        <function-ref name="captured" scoped="" ref="0x10f3b8d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3be020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3be1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x10f3eba20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x10f3eba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3ebda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3ea020"/>
        <function-ref name="captured" scoped="" ref="0x10f3ea1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3ea340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3ea4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x10f3c0cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x10f3c0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3c40a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3c4230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3c43c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3c4550"/>
        <function-ref name="fired" scoped="" ref="0x10f3c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x10f3cd1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x10f3cd1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3cd570"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3cd700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3cd890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3cda20"/>
        <function-ref name="fired" scoped="" ref="0x10f3cdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x10f3e8a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x10f3e8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3e8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3e7020"/>
        <function-ref name="captured" scoped="" ref="0x10f3e71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3e7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3e74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x10f3d40c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x10f3d40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3d4440"/>
        <function-ref name="getControl" scoped="" ref="0x10f3d45d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3d4760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3d48f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3d4a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d4c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3d4da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3d3020"/>
        <function-ref name="setControl" scoped="" ref="0x10f3d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x10f3b76c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x10f3b76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f3b7a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f3b7bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3b7d60"/>
        <function-ref name="get" scoped="" ref="0x10f3d9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3d9340"/>
        <function-ref name="getMode" scoped="" ref="0x10f3d94d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3d9660"/>
        <function-ref name="overflow" scoped="" ref="0x10f3d97f0"/>
        <function-ref name="setMode" scoped="" ref="0x10f3d9980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f3d9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x10f3cbb80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x10f3cbb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3ca020"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3ca1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3ca340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3ca4d0"/>
        <function-ref name="fired" scoped="" ref="0x10f3ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x10f3c9a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x10f3c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3c9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f3c8020"/>
        <function-ref name="captured" scoped="" ref="0x10f3c81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f3c8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f3c84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f3c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x10f3caa20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x10f3caa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3c9020"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3c91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3c9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3c94d0"/>
        <function-ref name="fired" scoped="" ref="0x10f3c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x10f3cf570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x10f3cf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f3cf8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x10f3cfa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f3cfc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f3cfda0"/>
        <function-ref name="fired" scoped="" ref="0x10f3ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x10f3d0020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x10f3d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f3d03a0"/>
        <function-ref name="getControl" scoped="" ref="0x10f3d0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f3d06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f3d0850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f3d09e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f3d0b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f3d0d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f3cf020"/>
        <function-ref name="setControl" scoped="" ref="0x10f3cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10f41a2f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10f41a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f41a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10f41cc20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10f41cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f41a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10f41a940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10f41a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f41acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10f41c5b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f41c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f41c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10f41ec80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f41ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f41d0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f41d230"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f41d3c0"/>
        <function-ref name="get" scoped="" ref="0x10f41d550"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f41d6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f41d870"/>
        <function-ref name="getMode" scoped="" ref="0x10f41da00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f41db90"/>
        <function-ref name="overflow" scoped="" ref="0x10f41dd20"/>
        <function-ref name="setMode" scoped="" ref="0x10f41c020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f41c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10f4132f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10f4132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f413670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10f414c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10f414c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f413020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10f413940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10f413940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f413cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10f4145b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4145b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f414950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10f416c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f416c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f4150a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f415230"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f4153c0"/>
        <function-ref name="get" scoped="" ref="0x10f415550"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4156e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f415870"/>
        <function-ref name="getMode" scoped="" ref="0x10f415a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f415b90"/>
        <function-ref name="overflow" scoped="" ref="0x10f415d20"/>
        <function-ref name="setMode" scoped="" ref="0x10f414020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f4141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f45fa90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f45fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f45fe10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f45e020"/>
        <function-ref name="captured" scoped="" ref="0x10f45e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f45e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f45e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f45e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f4359d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f4359d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f435d50"/>
        <function-ref name="getControl" scoped="" ref="0x10f460020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f4601b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f460340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f4604d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f460660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f4607f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f460980"/>
        <function-ref name="setControl" scoped="" ref="0x10f460b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f45c020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f45c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f45c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f460de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f460de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f45f180"/>
        <function-ref name="setEvent" scoped="" ref="0x10f45f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f45f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f45f630"/>
        <function-ref name="fired" scoped="" ref="0x10f45f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f45e930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f45e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f45ecb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f45ee40"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f45d020"/>
        <function-ref name="get" scoped="" ref="0x10f45d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f45d340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f45d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x10f45d660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f45d7f0"/>
        <function-ref name="overflow" scoped="" ref="0x10f45d980"/>
        <function-ref name="setMode" scoped="" ref="0x10f45db10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f45dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f47c160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f47c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f47c4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f47c670"/>
        <function-ref name="captured" scoped="" ref="0x10f47c800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f47c990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f47cb20"/>
        <function-ref name="setEdge" scoped="" ref="0x10f47ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f47f020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f47f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f47f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x10f47f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f47f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f47f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f47f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f47fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f47fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f47e020"/>
        <function-ref name="setControl" scoped="" ref="0x10f47e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f47a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f47a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f47ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f47e480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f47e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f47e800"/>
        <function-ref name="setEvent" scoped="" ref="0x10f47e990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f47eb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f47ecb0"/>
        <function-ref name="fired" scoped="" ref="0x10f47ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f47b020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f47b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f47b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f47b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f47b6c0"/>
        <function-ref name="get" scoped="" ref="0x10f47b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f47b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f47bb70"/>
        <function-ref name="getMode" scoped="" ref="0x10f47bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f47a020"/>
        <function-ref name="overflow" scoped="" ref="0x10f47a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x10f47a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f47a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f4757a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f4757a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f475b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f475cb0"/>
        <function-ref name="captured" scoped="" ref="0x10f475e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f474020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4741b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f474340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f4776d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f4776d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f477a50"/>
        <function-ref name="getControl" scoped="" ref="0x10f477be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f477d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f476020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f4761b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f476340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f4764d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f476660"/>
        <function-ref name="setControl" scoped="" ref="0x10f4767f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f473c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f473c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f472020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f476ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f476ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f476e40"/>
        <function-ref name="setEvent" scoped="" ref="0x10f475020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f4751b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f475340"/>
        <function-ref name="fired" scoped="" ref="0x10f4754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f474610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f474610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f474990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f474b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f474cb0"/>
        <function-ref name="get" scoped="" ref="0x10f474e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f473020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4731b0"/>
        <function-ref name="getMode" scoped="" ref="0x10f473340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4734d0"/>
        <function-ref name="overflow" scoped="" ref="0x10f473660"/>
        <function-ref name="setMode" scoped="" ref="0x10f4737f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f473980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f494cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f494cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4920a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f492230"/>
        <function-ref name="captured" scoped="" ref="0x10f4923c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f492550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4926e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f492870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f470b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f470b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f46f020"/>
        <function-ref name="getControl" scoped="" ref="0x10f46f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f46f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f46f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f46f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f46f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f46f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f46fb10"/>
        <function-ref name="setControl" scoped="" ref="0x10f46fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f4902f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f490670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f494020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f494020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4943a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10f494530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f4946c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f494850"/>
        <function-ref name="fired" scoped="" ref="0x10f4949e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f492b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f492b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f491020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f4911b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f491340"/>
        <function-ref name="get" scoped="" ref="0x10f4914d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f491660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4917f0"/>
        <function-ref name="getMode" scoped="" ref="0x10f491980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f491b10"/>
        <function-ref name="overflow" scoped="" ref="0x10f491ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10f491e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f490020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f48b2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f48b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f48b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f48b800"/>
        <function-ref name="captured" scoped="" ref="0x10f48b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f48bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f48bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f48be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f48d220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f48d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f48d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x10f48d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f48d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f48da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f48dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f48dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f48c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f48c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x10f48c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f4897a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4897a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f489b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f48c610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f48c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f48c990"/>
        <function-ref name="setEvent" scoped="" ref="0x10f48cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f48ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f48ce40"/>
        <function-ref name="fired" scoped="" ref="0x10f48b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f48a160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f48a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f48a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f48a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f48a800"/>
        <function-ref name="get" scoped="" ref="0x10f48a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f48ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f48acb0"/>
        <function-ref name="getMode" scoped="" ref="0x10f48ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f489020"/>
        <function-ref name="overflow" scoped="" ref="0x10f4891b0"/>
        <function-ref name="setMode" scoped="" ref="0x10f489340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f4894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f4847a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f4847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f484b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f484cb0"/>
        <function-ref name="captured" scoped="" ref="0x10f484e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f482020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4821b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f482340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f4866d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f4866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f486a50"/>
        <function-ref name="getControl" scoped="" ref="0x10f486be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f486d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f485020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f4851b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f485340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f4854d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f485660"/>
        <function-ref name="setControl" scoped="" ref="0x10f4857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f4a8c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4a8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f485ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f485ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f485e40"/>
        <function-ref name="setEvent" scoped="" ref="0x10f484020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f4841b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f484340"/>
        <function-ref name="fired" scoped="" ref="0x10f4844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f482610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f482610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f482990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f482b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f482cb0"/>
        <function-ref name="get" scoped="" ref="0x10f482e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4a8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4a81b0"/>
        <function-ref name="getMode" scoped="" ref="0x10f4a8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4a84d0"/>
        <function-ref name="overflow" scoped="" ref="0x10f4a8660"/>
        <function-ref name="setMode" scoped="" ref="0x10f4a87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f4a8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f4a3cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f4a3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4a20a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f4a2230"/>
        <function-ref name="captured" scoped="" ref="0x10f4a23c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4a2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4a26e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f4a2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f4a5b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f4a5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f4a4020"/>
        <function-ref name="getControl" scoped="" ref="0x10f4a41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f4a4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f4a44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f4a4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4a47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f4a4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f4a4b10"/>
        <function-ref name="setControl" scoped="" ref="0x10f4a4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f4a02f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4a0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f4a3020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f4a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4a33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10f4a3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f4a36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f4a3850"/>
        <function-ref name="fired" scoped="" ref="0x10f4a39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f4a2b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f4a2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f4a1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f4a11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f4a1340"/>
        <function-ref name="get" scoped="" ref="0x10f4a14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4a1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4a17f0"/>
        <function-ref name="getMode" scoped="" ref="0x10f4a1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4a1b10"/>
        <function-ref name="overflow" scoped="" ref="0x10f4a1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10f4a1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f4a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f49b2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f49b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f49b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f49b800"/>
        <function-ref name="captured" scoped="" ref="0x10f49b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f49bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f49bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f49be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f49d220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f49d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f49d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x10f49d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f49d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f49da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f49dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f49dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f49c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f49c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x10f49c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f4987a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4987a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f498b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f49c610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f49c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f49c990"/>
        <function-ref name="setEvent" scoped="" ref="0x10f49cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f49ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f49ce40"/>
        <function-ref name="fired" scoped="" ref="0x10f49b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f49a160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f49a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f49a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f49a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f49a800"/>
        <function-ref name="get" scoped="" ref="0x10f49a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f49ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f49acb0"/>
        <function-ref name="getMode" scoped="" ref="0x10f49ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f498020"/>
        <function-ref name="overflow" scoped="" ref="0x10f4981b0"/>
        <function-ref name="setMode" scoped="" ref="0x10f498340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f4984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f4bb7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f4bb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4bbb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f4bbcb0"/>
        <function-ref name="captured" scoped="" ref="0x10f4bbe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4ba020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4ba1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f4ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f4956d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f4956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f495a50"/>
        <function-ref name="getControl" scoped="" ref="0x10f495be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f495d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f4bc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f4bc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4bc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f4bc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f4bc660"/>
        <function-ref name="setControl" scoped="" ref="0x10f4bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f4b9c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4b9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f4bcac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f4bcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4bce40"/>
        <function-ref name="setEvent" scoped="" ref="0x10f4bb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f4bb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f4bb340"/>
        <function-ref name="fired" scoped="" ref="0x10f4bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f4ba610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f4ba610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f4ba990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f4bab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f4bacb0"/>
        <function-ref name="get" scoped="" ref="0x10f4bae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4b9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4b91b0"/>
        <function-ref name="getMode" scoped="" ref="0x10f4b9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4b94d0"/>
        <function-ref name="overflow" scoped="" ref="0x10f4b9660"/>
        <function-ref name="setMode" scoped="" ref="0x10f4b97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f4b9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10f4b4cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10f4b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4b30a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10f4b3230"/>
        <function-ref name="captured" scoped="" ref="0x10f4b33c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4b3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4b36e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10f4b3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10f4b6b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10f4b6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f4b5020"/>
        <function-ref name="getControl" scoped="" ref="0x10f4b51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f4b5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f4b54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f4b5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4b57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f4b5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f4b5b10"/>
        <function-ref name="setControl" scoped="" ref="0x10f4b5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10f4b02f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10f4b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4b0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10f4b4020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10f4b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f4b43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10f4b4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f4b46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f4b4850"/>
        <function-ref name="fired" scoped="" ref="0x10f4b49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10f4b3b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f4b3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f4b1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f4b11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f4b1340"/>
        <function-ref name="get" scoped="" ref="0x10f4b14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f4b1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f4b17f0"/>
        <function-ref name="getMode" scoped="" ref="0x10f4b1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f4b1b10"/>
        <function-ref name="overflow" scoped="" ref="0x10f4b1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10f4b1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f4b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x10f4aa240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x10f4aa240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4aa5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x10f4aea90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x10f4aea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4aee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x10f4ab260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x10f4ab260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4ab5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x10f4ab9f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x10f4ab9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f4abd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x10f13f510" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10f13f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10f13f890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10ee23760" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10ee23760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10ee23ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x10eec8cc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x10eec8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x10ef5d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x10f352b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10f352b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10f4f5b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x10f4f51b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10f4f5340"/>
        <function-ref name="initTimerA" scoped="" ref="0x10f4f54d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10f4f5020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10f4f5660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10f4f57f0"/>
        <function-ref name="initClocks" scoped="" ref="0x10f4f5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10f511dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10f511dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f510180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10f4f6590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10f4f6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10f4f6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x10f5116c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x10f5116c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f511a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x10f4f6c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10f4f6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f511020"/>
        <function-ref name="taskLoop" scoped="" ref="0x10f5111b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10f511340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10ed4f1d0" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10ed4f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10ed4f550"/>
        <function-ref name="runTask" scoped="" ref="0x10ed4f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10edc33a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10edc33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10edc3720"/>
        <function-ref name="taskLoop" scoped="" ref="0x10edc38b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10edc3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10f21a320" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10f21a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10f21a6a0"/>
        <function-ref name="runTask" scoped="" ref="0x10f21a830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x10f216990" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10f216990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10f216d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10f21b420" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10f21b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f21b7a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10f21b930"/>
        <function-ref name="runNextTask" scoped="" ref="0x10f21bac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10f337590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10f337590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10f337910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10f337aa0"/>
        <function-ref name="led1On" scoped="" ref="0x10f337c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10f337dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10f505020"/>
        <function-ref name="get" scoped="" ref="0x10f5051b0"/>
        <function-ref name="led1Off" scoped="" ref="0x10f505340"/>
        <function-ref name="led2Off" scoped="" ref="0x10f505980"/>
        <function-ref name="set" scoped="" ref="0x10f5054d0"/>
        <function-ref name="led0On" scoped="" ref="0x10f505660"/>
        <function-ref name="led2On" scoped="" ref="0x10f5057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x10f5217b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10f5217b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f521b30"/>
        <function-ref name="isInput" scoped="" ref="0x10f521cc0"/>
        <function-ref name="toggle" scoped="" ref="0x10f521e50"/>
        <function-ref name="isOutput" scoped="" ref="0x10f4ff020"/>
        <function-ref name="get" scoped="" ref="0x10f4ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f4ff340"/>
        <function-ref name="set" scoped="" ref="0x10f4ff4d0"/>
        <function-ref name="clr" scoped="" ref="0x10f4ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f5048d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f5048d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f504c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x10f4ff980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10f4ff980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f4ffd00"/>
        <function-ref name="isInput" scoped="" ref="0x10f526020"/>
        <function-ref name="toggle" scoped="" ref="0x10f5261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f526340"/>
        <function-ref name="get" scoped="" ref="0x10f5264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f526660"/>
        <function-ref name="set" scoped="" ref="0x10f5267f0"/>
        <function-ref name="clr" scoped="" ref="0x10f526980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10f501020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10f501020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10f5013a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10f501530"/>
        <function-ref name="led1On" scoped="" ref="0x10f5016c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10f501850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10f5019e0"/>
        <function-ref name="get" scoped="" ref="0x10f501b70"/>
        <function-ref name="led1Off" scoped="" ref="0x10f501d00"/>
        <function-ref name="led2Off" scoped="" ref="0x10f5004d0"/>
        <function-ref name="set" scoped="" ref="0x10f500020"/>
        <function-ref name="led0On" scoped="" ref="0x10f5001b0"/>
        <function-ref name="led2On" scoped="" ref="0x10f500340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x10f526ca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10f526ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5200a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f520230"/>
        <function-ref name="toggle" scoped="" ref="0x10f5203c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f520550"/>
        <function-ref name="get" scoped="" ref="0x10f5206e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f520870"/>
        <function-ref name="set" scoped="" ref="0x10f520a00"/>
        <function-ref name="clr" scoped="" ref="0x10f520b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x10f52e360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10f52e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f52e6e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f52e870"/>
        <function-ref name="toggle" scoped="" ref="0x10f52ea00"/>
        <function-ref name="isOutput" scoped="" ref="0x10f52eb90"/>
        <function-ref name="get" scoped="" ref="0x10f52ed20"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f52d020"/>
        <function-ref name="set" scoped="" ref="0x10f52d1b0"/>
        <function-ref name="clr" scoped="" ref="0x10f52d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x10f52d6a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10f52d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f52da20"/>
        <function-ref name="isInput" scoped="" ref="0x10f52dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x10f52dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10f52c020"/>
        <function-ref name="get" scoped="" ref="0x10f52c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f52c340"/>
        <function-ref name="set" scoped="" ref="0x10f52c4d0"/>
        <function-ref name="clr" scoped="" ref="0x10f52c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x10f52bc40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f52bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f52a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x10f52c9c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10f52c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f52cd40"/>
        <function-ref name="isInput" scoped="" ref="0x10f52b020"/>
        <function-ref name="toggle" scoped="" ref="0x10f52b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f52b340"/>
        <function-ref name="get" scoped="" ref="0x10f52b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f52b660"/>
        <function-ref name="set" scoped="" ref="0x10f52b7f0"/>
        <function-ref name="clr" scoped="" ref="0x10f52b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10f53f020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10f53f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f53f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f53f530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f53f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f53f850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f53f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f53fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f53fd00"/>
        <function-ref name="get" scoped="" ref="0x10f53e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f53e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f53e340"/>
        <function-ref name="set" scoped="" ref="0x10f53e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f53e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f53e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f53ea80"/>
        <function-ref name="clr" scoped="" ref="0x10f53ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10f555020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10f555020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5553a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f555530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5556c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f555850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5559e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f555b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f555d00"/>
        <function-ref name="get" scoped="" ref="0x10f554020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f554340"/>
        <function-ref name="set" scoped="" ref="0x10f5544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f554660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f554a80"/>
        <function-ref name="clr" scoped="" ref="0x10f554c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x10f5b6560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x10f5b6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5b68e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5b6a70"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5b6c00"/>
        <function-ref name="toggle" scoped="" ref="0x10f5b6d90"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5b5020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5b51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5b5340"/>
        <function-ref name="get" scoped="" ref="0x10f5b54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5b5660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5b57f0"/>
        <function-ref name="set" scoped="" ref="0x10f5b5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5b5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5b5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5b4020"/>
        <function-ref name="clr" scoped="" ref="0x10f5b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x10f5bd570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x10f5bd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5bd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5bda80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5bdc10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5bdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5bc020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5bc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5bc340"/>
        <function-ref name="get" scoped="" ref="0x10f5bc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5bc660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5bc7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5bc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5bcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5bcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5e7020"/>
        <function-ref name="clr" scoped="" ref="0x10f5e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x10f5b4580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x10f5b4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5b4900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5b4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5b4c20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5b4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5b3020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5b31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5b3340"/>
        <function-ref name="get" scoped="" ref="0x10f5b34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5b3660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5b37f0"/>
        <function-ref name="set" scoped="" ref="0x10f5b3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5b3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5b3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5b2020"/>
        <function-ref name="clr" scoped="" ref="0x10f5b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x10f57a020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x10f57a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f57a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f57a530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f57a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f57a850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f57a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f57ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f57ad00"/>
        <function-ref name="get" scoped="" ref="0x10f579020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f579340"/>
        <function-ref name="set" scoped="" ref="0x10f5794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f579660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f579a80"/>
        <function-ref name="clr" scoped="" ref="0x10f579c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x10f566200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x10f566200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f566580"/>
        <function-ref name="isInput" scoped="" ref="0x10f566710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5668a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f566a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f566bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f566d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f58f020"/>
        <function-ref name="get" scoped="" ref="0x10f58f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f58f340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f58f4d0"/>
        <function-ref name="set" scoped="" ref="0x10f58f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f58f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f58f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f58fc10"/>
        <function-ref name="clr" scoped="" ref="0x10f58fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10f57c200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10f57c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f57c580"/>
        <function-ref name="isInput" scoped="" ref="0x10f57c710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f57c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f57ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f57cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f57cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f57b020"/>
        <function-ref name="get" scoped="" ref="0x10f57b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f57b340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f57b4d0"/>
        <function-ref name="set" scoped="" ref="0x10f57b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f57b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f57b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f57bc10"/>
        <function-ref name="clr" scoped="" ref="0x10f57bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x10f596200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x10f596200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f596580"/>
        <function-ref name="isInput" scoped="" ref="0x10f596710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5968a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f596a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f596bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f596d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f595020"/>
        <function-ref name="get" scoped="" ref="0x10f5951b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f595340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5954d0"/>
        <function-ref name="set" scoped="" ref="0x10f595660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5957f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f595980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f595c10"/>
        <function-ref name="clr" scoped="" ref="0x10f595da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x10f5ae580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x10f5ae580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5ae900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5aea90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5aec20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5aedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5ad020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5ad340"/>
        <function-ref name="get" scoped="" ref="0x10f5ad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5ad660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5ad7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5ad980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5adb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5adca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5ac020"/>
        <function-ref name="clr" scoped="" ref="0x10f5ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x10f5c9570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x10f5c9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5c98f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5c9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5c9c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5c9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5c8020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5c81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5c8340"/>
        <function-ref name="get" scoped="" ref="0x10f5c84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5c8660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5c87f0"/>
        <function-ref name="set" scoped="" ref="0x10f5c8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5c8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5c8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5c7020"/>
        <function-ref name="clr" scoped="" ref="0x10f5c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x10f5e1580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x10f5e1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5e1900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5e1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5e1c20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5e1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5e0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5e0340"/>
        <function-ref name="get" scoped="" ref="0x10f5e04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5e0660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5e07f0"/>
        <function-ref name="set" scoped="" ref="0x10f5e0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5e0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5e0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5df020"/>
        <function-ref name="clr" scoped="" ref="0x10f5df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10f563020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10f563020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5633a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f563530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5636c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f563850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5639e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f563b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f563d00"/>
        <function-ref name="get" scoped="" ref="0x10f562020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f562340"/>
        <function-ref name="set" scoped="" ref="0x10f5624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f562660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f562a80"/>
        <function-ref name="clr" scoped="" ref="0x10f562c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x10f5ac580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x10f5ac580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5ac900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5aca90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5acc20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5acdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5ab020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5ab340"/>
        <function-ref name="get" scoped="" ref="0x10f5ab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5ab660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5ab7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5ab980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5abb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5abca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5aa020"/>
        <function-ref name="clr" scoped="" ref="0x10f5aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10f55f020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10f55f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f55f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f55f530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f55f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f55f850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f55f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f55fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f55fd00"/>
        <function-ref name="get" scoped="" ref="0x10f55e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f55e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f55e340"/>
        <function-ref name="set" scoped="" ref="0x10f55e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f55e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f55e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f55ea80"/>
        <function-ref name="clr" scoped="" ref="0x10f55ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x10f574020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x10f574020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5743a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f574530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5746c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f574850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5749e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f574b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f574d00"/>
        <function-ref name="get" scoped="" ref="0x10f573020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5731b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f573340"/>
        <function-ref name="set" scoped="" ref="0x10f5734d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f573660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5737f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f573a80"/>
        <function-ref name="clr" scoped="" ref="0x10f573c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x10f58a200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x10f58a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f58a580"/>
        <function-ref name="isInput" scoped="" ref="0x10f58a710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f58a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f58aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f58abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f58ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f589020"/>
        <function-ref name="get" scoped="" ref="0x10f5891b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f589340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5894d0"/>
        <function-ref name="set" scoped="" ref="0x10f589660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5897f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f589980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f589c10"/>
        <function-ref name="clr" scoped="" ref="0x10f589da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x10f5a0200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x10f5a0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5a0580"/>
        <function-ref name="isInput" scoped="" ref="0x10f5a0710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5a08a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f5a0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5a0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5a0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f59f020"/>
        <function-ref name="get" scoped="" ref="0x10f59f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f59f340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f59f4d0"/>
        <function-ref name="set" scoped="" ref="0x10f59f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f59f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f59f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f59fc10"/>
        <function-ref name="clr" scoped="" ref="0x10f59fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x10f590200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x10f590200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f590580"/>
        <function-ref name="isInput" scoped="" ref="0x10f590710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5908a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f590a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f590bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f590d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5bb020"/>
        <function-ref name="get" scoped="" ref="0x10f5bb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5bb4d0"/>
        <function-ref name="set" scoped="" ref="0x10f5bb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5bb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5bb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5bbc10"/>
        <function-ref name="clr" scoped="" ref="0x10f5bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10f543020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10f543020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5433a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f543530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5436c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f543850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f543b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f543d00"/>
        <function-ref name="get" scoped="" ref="0x10f542020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f542340"/>
        <function-ref name="set" scoped="" ref="0x10f5424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f542660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f542a80"/>
        <function-ref name="clr" scoped="" ref="0x10f542c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10f559020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10f559020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5594a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f559630"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5597c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f559950"/>
        <function-ref name="isOutput" scoped="" ref="0x10f559ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f559c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f559e00"/>
        <function-ref name="get" scoped="" ref="0x10f558020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f558340"/>
        <function-ref name="set" scoped="" ref="0x10f5584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f558660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f558a80"/>
        <function-ref name="clr" scoped="" ref="0x10f558c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x10f56e020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x10f56e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f56e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f56e530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f56e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f56e850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f56e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f56eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f56ed00"/>
        <function-ref name="get" scoped="" ref="0x10f56d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f56d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f56d340"/>
        <function-ref name="set" scoped="" ref="0x10f56d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f56d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f56d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f56da80"/>
        <function-ref name="clr" scoped="" ref="0x10f56dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x10f5b8580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x10f5b8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5b8900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5b8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5b8c20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5b8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5b7020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5b7340"/>
        <function-ref name="get" scoped="" ref="0x10f5b74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5b7660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5b77f0"/>
        <function-ref name="set" scoped="" ref="0x10f5b7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5b7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5b7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5b6020"/>
        <function-ref name="clr" scoped="" ref="0x10f5b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x10f5c3570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x10f5c3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5c38f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5c3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5c3c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5c3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5c2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5c21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5c2340"/>
        <function-ref name="get" scoped="" ref="0x10f5c24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5c2660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5c27f0"/>
        <function-ref name="set" scoped="" ref="0x10f5c2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5c2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5c2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5c1020"/>
        <function-ref name="clr" scoped="" ref="0x10f5c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x10f5e3570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x10f5e3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5e38f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5e3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5e3c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5e3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5e21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5e2340"/>
        <function-ref name="get" scoped="" ref="0x10f5e24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5e2660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5e27f0"/>
        <function-ref name="set" scoped="" ref="0x10f5e2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5e2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5e2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5e1020"/>
        <function-ref name="clr" scoped="" ref="0x10f5e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x10f5d0580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x10f5d0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5d0900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5d0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5d0c20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5d0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5cf020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5cf340"/>
        <function-ref name="get" scoped="" ref="0x10f5cf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5cf660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5cf7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5cf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5cfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5cfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5ce020"/>
        <function-ref name="clr" scoped="" ref="0x10f5ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x10f56a020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x10f56a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f56a5a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f56a730"/>
        <function-ref name="setResistor" scoped="" ref="0x10f56a8c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f56aa50"/>
        <function-ref name="isOutput" scoped="" ref="0x10f56abe0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f56ad70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f569020"/>
        <function-ref name="get" scoped="" ref="0x10f5691b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f569340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5694d0"/>
        <function-ref name="set" scoped="" ref="0x10f569660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5697f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f569980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f569c10"/>
        <function-ref name="clr" scoped="" ref="0x10f569da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x10f580200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x10f580200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f580580"/>
        <function-ref name="isInput" scoped="" ref="0x10f580710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5808a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f580a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f580bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f580d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f57f020"/>
        <function-ref name="get" scoped="" ref="0x10f57f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f57f340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f57f4d0"/>
        <function-ref name="set" scoped="" ref="0x10f57f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f57f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f57f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f57fc10"/>
        <function-ref name="clr" scoped="" ref="0x10f57fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x10f59a200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x10f59a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f59a580"/>
        <function-ref name="isInput" scoped="" ref="0x10f59a710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f59a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f59aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f59abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f59ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f599020"/>
        <function-ref name="get" scoped="" ref="0x10f5991b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f599340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5994d0"/>
        <function-ref name="set" scoped="" ref="0x10f599660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5997f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f599980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f599c10"/>
        <function-ref name="clr" scoped="" ref="0x10f599da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x10f5c1570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x10f5c1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5c18f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5c1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5c1c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5c1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5c0020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5c01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5c0340"/>
        <function-ref name="get" scoped="" ref="0x10f5c04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5c0660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5c07f0"/>
        <function-ref name="set" scoped="" ref="0x10f5c0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5c0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5c0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5bf020"/>
        <function-ref name="clr" scoped="" ref="0x10f5bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x10f5aa570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x10f5aa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5aa8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5aaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5aac10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5aada0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5a9340"/>
        <function-ref name="get" scoped="" ref="0x10f5a94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5a9660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5a97f0"/>
        <function-ref name="set" scoped="" ref="0x10f5a9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5a9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5a9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5a8020"/>
        <function-ref name="clr" scoped="" ref="0x10f5a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10f53d020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10f53d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f53d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f53d530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f53d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f53d850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f53d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f53db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f53dd00"/>
        <function-ref name="get" scoped="" ref="0x10f53c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f53c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f53c340"/>
        <function-ref name="set" scoped="" ref="0x10f53c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f53c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f53c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f53ca80"/>
        <function-ref name="clr" scoped="" ref="0x10f53cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10f552020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10f552020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5523a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f552530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5526c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f552850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5529e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f552b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f552d00"/>
        <function-ref name="get" scoped="" ref="0x10f551020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f551340"/>
        <function-ref name="set" scoped="" ref="0x10f5514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f551660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f551a80"/>
        <function-ref name="clr" scoped="" ref="0x10f551c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x10f59e200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x10f59e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f59e580"/>
        <function-ref name="isInput" scoped="" ref="0x10f59e710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f59e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f59ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f59ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f59ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f59d020"/>
        <function-ref name="get" scoped="" ref="0x10f59d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f59d340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f59d4d0"/>
        <function-ref name="set" scoped="" ref="0x10f59d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f59d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f59d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f59dc10"/>
        <function-ref name="clr" scoped="" ref="0x10f59dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x10f578020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x10f578020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5783a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f578530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5786c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f578850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5789e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f578b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f578d00"/>
        <function-ref name="get" scoped="" ref="0x10f577020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5771b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f577340"/>
        <function-ref name="set" scoped="" ref="0x10f5774d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f577660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5777f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f577a80"/>
        <function-ref name="clr" scoped="" ref="0x10f577c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x10f58e200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x10f58e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f58e580"/>
        <function-ref name="isInput" scoped="" ref="0x10f58e710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f58e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f58ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f58ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f58ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f58d020"/>
        <function-ref name="get" scoped="" ref="0x10f58d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f58d340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f58d4d0"/>
        <function-ref name="set" scoped="" ref="0x10f58d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f58d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f58d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f58dc10"/>
        <function-ref name="clr" scoped="" ref="0x10f58dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x10f5a5200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x10f5a5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5a5580"/>
        <function-ref name="isInput" scoped="" ref="0x10f5a5710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5a58a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f5a5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5a5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5a5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5a4020"/>
        <function-ref name="get" scoped="" ref="0x10f5a41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5a4340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5a44d0"/>
        <function-ref name="set" scoped="" ref="0x10f5a4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5a47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5a4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5a4c10"/>
        <function-ref name="clr" scoped="" ref="0x10f5a4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x10f594200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x10f594200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f594580"/>
        <function-ref name="isInput" scoped="" ref="0x10f594710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5948a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f594a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f594bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f594d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f593020"/>
        <function-ref name="get" scoped="" ref="0x10f5931b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f593340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5934d0"/>
        <function-ref name="set" scoped="" ref="0x10f593660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5937f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f593980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f593c10"/>
        <function-ref name="clr" scoped="" ref="0x10f593da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x10f5a6580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x10f5a6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5a6900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5a6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5a6c20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5a6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5d1020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5d11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5d1340"/>
        <function-ref name="get" scoped="" ref="0x10f5d14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5d1660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5d17f0"/>
        <function-ref name="set" scoped="" ref="0x10f5d1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5d1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5d1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5d0020"/>
        <function-ref name="clr" scoped="" ref="0x10f5d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10f550020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10f550020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5503a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f550530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5506c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f550850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5509e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f550b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f550d00"/>
        <function-ref name="get" scoped="" ref="0x10f54f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f54f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f54f340"/>
        <function-ref name="set" scoped="" ref="0x10f54f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f54f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f54f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f54fa80"/>
        <function-ref name="clr" scoped="" ref="0x10f54fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10f55d020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10f55d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f55d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f55d530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f55d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f55d850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f55d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f55db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f55dd00"/>
        <function-ref name="get" scoped="" ref="0x10f55c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f55c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f55c340"/>
        <function-ref name="set" scoped="" ref="0x10f55c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f55c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f55c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f55ca80"/>
        <function-ref name="clr" scoped="" ref="0x10f55cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x10f572020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x10f572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5723a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f572530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5726c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f572850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5729e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f572b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f572d00"/>
        <function-ref name="get" scoped="" ref="0x10f571020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f571340"/>
        <function-ref name="set" scoped="" ref="0x10f5714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f571660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f571a80"/>
        <function-ref name="clr" scoped="" ref="0x10f571c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x10f588200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x10f588200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f588580"/>
        <function-ref name="isInput" scoped="" ref="0x10f588710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5888a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f588a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f588bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f588d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f587020"/>
        <function-ref name="get" scoped="" ref="0x10f5871b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f587340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5874d0"/>
        <function-ref name="set" scoped="" ref="0x10f587660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5877f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f587980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f587c10"/>
        <function-ref name="clr" scoped="" ref="0x10f587da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x10f5ce580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x10f5ce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5ce900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5cea90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5cec20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5cedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5cd020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5cd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5cd340"/>
        <function-ref name="get" scoped="" ref="0x10f5cd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5cd660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5cd7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5cd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5cdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5cdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5cc020"/>
        <function-ref name="clr" scoped="" ref="0x10f5cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x10f5c7570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x10f5c7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5c78f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5c7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5c7c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5c7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5c6020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5c61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5c6340"/>
        <function-ref name="get" scoped="" ref="0x10f5c64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5c6660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5c67f0"/>
        <function-ref name="set" scoped="" ref="0x10f5c6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5c6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5c6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5c5020"/>
        <function-ref name="clr" scoped="" ref="0x10f5c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x10f5e7570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x10f5e7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5e78f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5e7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5e7c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5e7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5e6340"/>
        <function-ref name="get" scoped="" ref="0x10f5e64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5e6660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5e67f0"/>
        <function-ref name="set" scoped="" ref="0x10f5e6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5e6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5e6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5e5020"/>
        <function-ref name="clr" scoped="" ref="0x10f5e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x10f584200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x10f584200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f584580"/>
        <function-ref name="isInput" scoped="" ref="0x10f584710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5848a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f584a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f584bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f584d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f583020"/>
        <function-ref name="get" scoped="" ref="0x10f5831b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f583340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5834d0"/>
        <function-ref name="set" scoped="" ref="0x10f583660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5837f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f583980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f583c10"/>
        <function-ref name="clr" scoped="" ref="0x10f583da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x10f5cc580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x10f5cc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5cc900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5cca90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5ccc20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5ccdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5ca020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5ca340"/>
        <function-ref name="get" scoped="" ref="0x10f5ca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5ca660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5ca7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5ca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5cab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5caca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5c9020"/>
        <function-ref name="clr" scoped="" ref="0x10f5c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10f541020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10f541020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5413a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f541530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5416c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f541850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5419e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f541b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f541d00"/>
        <function-ref name="get" scoped="" ref="0x10f540020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f540340"/>
        <function-ref name="set" scoped="" ref="0x10f5404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f540660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f540a80"/>
        <function-ref name="clr" scoped="" ref="0x10f540c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10f557020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10f557020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5573a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f557530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5576c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f557850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5579e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f557b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f557d00"/>
        <function-ref name="get" scoped="" ref="0x10f556020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f556340"/>
        <function-ref name="set" scoped="" ref="0x10f5564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f556660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f556a80"/>
        <function-ref name="clr" scoped="" ref="0x10f556c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x10f56c020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x10f56c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f56c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f56c530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f56c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f56c850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f56c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f56cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f56cd00"/>
        <function-ref name="get" scoped="" ref="0x10f56b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f56b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f56b340"/>
        <function-ref name="set" scoped="" ref="0x10f56b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f56b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f56b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f56ba80"/>
        <function-ref name="clr" scoped="" ref="0x10f56bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x10f5a8580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x10f5a8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5a8900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5a8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5a8c20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5a8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5a7340"/>
        <function-ref name="get" scoped="" ref="0x10f5a74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5a7660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5a77f0"/>
        <function-ref name="set" scoped="" ref="0x10f5a7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5a7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5a7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5a6020"/>
        <function-ref name="clr" scoped="" ref="0x10f5a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x10f5bf570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x10f5bf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5bf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5bfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5bfc10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5bfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5be020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5be340"/>
        <function-ref name="get" scoped="" ref="0x10f5be4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5be660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5be7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5be980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5beb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5beca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5bd020"/>
        <function-ref name="clr" scoped="" ref="0x10f5bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x10f568200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x10f568200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f568580"/>
        <function-ref name="isInput" scoped="" ref="0x10f568710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5688a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f568a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f568bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f568d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f567020"/>
        <function-ref name="get" scoped="" ref="0x10f5671b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f567340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5674d0"/>
        <function-ref name="set" scoped="" ref="0x10f567660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5677f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f567980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f567c10"/>
        <function-ref name="clr" scoped="" ref="0x10f567da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10f57e200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10f57e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f57e580"/>
        <function-ref name="isInput" scoped="" ref="0x10f57e710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f57e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f57ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f57ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f57ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f57d020"/>
        <function-ref name="get" scoped="" ref="0x10f57d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f57d340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f57d4d0"/>
        <function-ref name="set" scoped="" ref="0x10f57d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f57d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f57d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f57dc10"/>
        <function-ref name="clr" scoped="" ref="0x10f57dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x10f598200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x10f598200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f598580"/>
        <function-ref name="isInput" scoped="" ref="0x10f598710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5988a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f598a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f598bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f598d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f597020"/>
        <function-ref name="get" scoped="" ref="0x10f5971b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f597340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5974d0"/>
        <function-ref name="set" scoped="" ref="0x10f597660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5977f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f597980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f597c10"/>
        <function-ref name="clr" scoped="" ref="0x10f597da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10f565020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10f565020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5653a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f565530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5656c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f565850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f565b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f565d00"/>
        <function-ref name="get" scoped="" ref="0x10f564020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f564340"/>
        <function-ref name="set" scoped="" ref="0x10f5644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f564660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f564a80"/>
        <function-ref name="clr" scoped="" ref="0x10f564c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x10f59c200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x10f59c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f59c580"/>
        <function-ref name="isInput" scoped="" ref="0x10f59c710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f59c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f59ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f59cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f59cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f59b020"/>
        <function-ref name="get" scoped="" ref="0x10f59b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f59b340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f59b4d0"/>
        <function-ref name="set" scoped="" ref="0x10f59b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f59b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f59b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f59bc10"/>
        <function-ref name="clr" scoped="" ref="0x10f59bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10f561020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10f561020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5613a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f561530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5616c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f561850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5619e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f561b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f561d00"/>
        <function-ref name="get" scoped="" ref="0x10f560020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f560340"/>
        <function-ref name="set" scoped="" ref="0x10f5604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f560660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f560a80"/>
        <function-ref name="clr" scoped="" ref="0x10f560c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x10f576020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x10f576020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5763a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f576530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5766c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f576850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5769e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f576b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f576d00"/>
        <function-ref name="get" scoped="" ref="0x10f575020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5751b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f575340"/>
        <function-ref name="set" scoped="" ref="0x10f5754d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f575660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5757f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f575a80"/>
        <function-ref name="clr" scoped="" ref="0x10f575c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x10f58c200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x10f58c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f58c580"/>
        <function-ref name="isInput" scoped="" ref="0x10f58c710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f58c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f58ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f58cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f58cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f58b020"/>
        <function-ref name="get" scoped="" ref="0x10f58b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f58b340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f58b4d0"/>
        <function-ref name="set" scoped="" ref="0x10f58b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f58b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f58b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f58bc10"/>
        <function-ref name="clr" scoped="" ref="0x10f58bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x10f5a2200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x10f5a2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5a2580"/>
        <function-ref name="isInput" scoped="" ref="0x10f5a2710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5a28a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f5a2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5a2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5a2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5a1020"/>
        <function-ref name="get" scoped="" ref="0x10f5a11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5a1340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5a14d0"/>
        <function-ref name="set" scoped="" ref="0x10f5a1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5a17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5a1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5a1c10"/>
        <function-ref name="clr" scoped="" ref="0x10f5a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x10f592200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x10f592200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f592580"/>
        <function-ref name="isInput" scoped="" ref="0x10f592710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5928a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f592a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f592bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f592d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f591020"/>
        <function-ref name="get" scoped="" ref="0x10f5911b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f591340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5914d0"/>
        <function-ref name="set" scoped="" ref="0x10f591660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5917f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f591980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f591c10"/>
        <function-ref name="clr" scoped="" ref="0x10f591da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10f545020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10f545020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5453a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f545530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5456c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f545850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f545b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f545d00"/>
        <function-ref name="get" scoped="" ref="0x10f544020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f544340"/>
        <function-ref name="set" scoped="" ref="0x10f5444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f544660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f544a80"/>
        <function-ref name="clr" scoped="" ref="0x10f544c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10f55b020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10f55b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f55b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f55b530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f55b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f55b850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f55b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f55bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f55bd00"/>
        <function-ref name="get" scoped="" ref="0x10f55a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f55a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f55a340"/>
        <function-ref name="set" scoped="" ref="0x10f55a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f55a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f55a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f55aa80"/>
        <function-ref name="clr" scoped="" ref="0x10f55ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x10f570020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x10f570020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5703a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f570530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5706c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f570850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5709e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f570b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f570d00"/>
        <function-ref name="get" scoped="" ref="0x10f56f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f56f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f56f340"/>
        <function-ref name="set" scoped="" ref="0x10f56f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f56f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f56f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f56fa80"/>
        <function-ref name="clr" scoped="" ref="0x10f56fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x10f586200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x10f586200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f586580"/>
        <function-ref name="isInput" scoped="" ref="0x10f586710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5868a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f586a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f586bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f586d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f585020"/>
        <function-ref name="get" scoped="" ref="0x10f5851b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f585340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5854d0"/>
        <function-ref name="set" scoped="" ref="0x10f585660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5857f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f585980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f585c10"/>
        <function-ref name="clr" scoped="" ref="0x10f585da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x10f5b0560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x10f5b0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5b08e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5b0a70"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5b0c00"/>
        <function-ref name="toggle" scoped="" ref="0x10f5b0d90"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5af020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5af340"/>
        <function-ref name="get" scoped="" ref="0x10f5af4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5af660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5af7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5af980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5afb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5afca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5ae020"/>
        <function-ref name="clr" scoped="" ref="0x10f5ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x10f5c5570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x10f5c5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5c58f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5c5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5c5c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5c5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5c4020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5c41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5c4340"/>
        <function-ref name="get" scoped="" ref="0x10f5c44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5c4660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5c47f0"/>
        <function-ref name="set" scoped="" ref="0x10f5c4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5c4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5c4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5c3020"/>
        <function-ref name="clr" scoped="" ref="0x10f5c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x10f5b2580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x10f5b2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5b2900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5b2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5b2c20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5b2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5b1020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5b1340"/>
        <function-ref name="get" scoped="" ref="0x10f5b14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5b1660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5b17f0"/>
        <function-ref name="set" scoped="" ref="0x10f5b1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5b1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5b1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5b0020"/>
        <function-ref name="clr" scoped="" ref="0x10f5b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x10f582200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x10f582200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f582580"/>
        <function-ref name="isInput" scoped="" ref="0x10f582710"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5828a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f582a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10f582bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f582d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f581020"/>
        <function-ref name="get" scoped="" ref="0x10f5811b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f581340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5814d0"/>
        <function-ref name="set" scoped="" ref="0x10f581660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5817f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f581980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f581c10"/>
        <function-ref name="clr" scoped="" ref="0x10f581da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x10f5e5570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x10f5e5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5e58f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f5e5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5e5c10"/>
        <function-ref name="toggle" scoped="" ref="0x10f5e5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5e4340"/>
        <function-ref name="get" scoped="" ref="0x10f5e44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5e4660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5e47f0"/>
        <function-ref name="set" scoped="" ref="0x10f5e4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5e4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5e4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5e3020"/>
        <function-ref name="clr" scoped="" ref="0x10f5e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x10f5df580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x10f5df580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5df900"/>
        <function-ref name="isInput" scoped="" ref="0x10f5dfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5dfc20"/>
        <function-ref name="toggle" scoped="" ref="0x10f5dfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5de020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5de340"/>
        <function-ref name="get" scoped="" ref="0x10f5de4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5de660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5de7f0"/>
        <function-ref name="set" scoped="" ref="0x10f5de980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5deb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5deca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5dd020"/>
        <function-ref name="clr" scoped="" ref="0x10f5dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x10f5ba1f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x10f5ba1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f5ba970"/>
        <function-ref name="isInput" scoped="" ref="0x10f5bab00"/>
        <function-ref name="setResistor" scoped="" ref="0x10f5bac90"/>
        <function-ref name="toggle" scoped="" ref="0x10f5bae20"/>
        <function-ref name="isOutput" scoped="" ref="0x10f5b9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f5b91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f5b9340"/>
        <function-ref name="get" scoped="" ref="0x10f5b94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f5b9660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f5b97f0"/>
        <function-ref name="set" scoped="" ref="0x10f5b9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f5b9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f5b9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f5b8020"/>
        <function-ref name="clr" scoped="" ref="0x10f5b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f60c6d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f60c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f60ca50"/>
        <function-ref name="isInput" scoped="" ref="0x10f60cbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x10f60cd70"/>
        <function-ref name="toggle" scoped="" ref="0x10f60b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f60b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f60b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f60b4d0"/>
        <function-ref name="get" scoped="" ref="0x10f60b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f60b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f60b980"/>
        <function-ref name="set" scoped="" ref="0x10f60bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f60bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f60be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f60a120"/>
        <function-ref name="clr" scoped="" ref="0x10f60a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f607100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f607100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f607480"/>
        <function-ref name="isInput" scoped="" ref="0x10f607610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6077a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f607930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f607ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f607c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f607de0"/>
        <function-ref name="get" scoped="" ref="0x10f606020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f606340"/>
        <function-ref name="set" scoped="" ref="0x10f6064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f606660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f606a80"/>
        <function-ref name="clr" scoped="" ref="0x10f606c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f603d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f603d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6010e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f601270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f601400"/>
        <function-ref name="toggle" scoped="" ref="0x10f601590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f601720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6018b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f601a40"/>
        <function-ref name="get" scoped="" ref="0x10f601bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f601d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f600020"/>
        <function-ref name="set" scoped="" ref="0x10f6001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f600340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f600760"/>
        <function-ref name="clr" scoped="" ref="0x10f6008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f62a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f62a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f62aac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f62ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f62ade0"/>
        <function-ref name="toggle" scoped="" ref="0x10f629020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6291b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f629340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6294d0"/>
        <function-ref name="get" scoped="" ref="0x10f629660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6297f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f629980"/>
        <function-ref name="set" scoped="" ref="0x10f629b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f629ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f629e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f628120"/>
        <function-ref name="clr" scoped="" ref="0x10f6282b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f625100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f625100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f625480"/>
        <function-ref name="isInput" scoped="" ref="0x10f625610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6257a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f625930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f625ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f625c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f625de0"/>
        <function-ref name="get" scoped="" ref="0x10f624020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f624340"/>
        <function-ref name="set" scoped="" ref="0x10f6244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f624660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f624a80"/>
        <function-ref name="clr" scoped="" ref="0x10f624c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f621d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f621d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6200e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f620270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f620400"/>
        <function-ref name="toggle" scoped="" ref="0x10f620590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f620720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6208b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f620a40"/>
        <function-ref name="get" scoped="" ref="0x10f620bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f620d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f61f020"/>
        <function-ref name="set" scoped="" ref="0x10f61f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f61f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f61f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f61f760"/>
        <function-ref name="clr" scoped="" ref="0x10f61f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f61c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f61c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f61cac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f61cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f61cde0"/>
        <function-ref name="toggle" scoped="" ref="0x10f61b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f61b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f61b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f61b4d0"/>
        <function-ref name="get" scoped="" ref="0x10f61b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f61b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f61b980"/>
        <function-ref name="set" scoped="" ref="0x10f61bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f61bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f61be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f61a120"/>
        <function-ref name="clr" scoped="" ref="0x10f61a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f617100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f617100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f617480"/>
        <function-ref name="isInput" scoped="" ref="0x10f617610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6177a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f617930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f617ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f617c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f617de0"/>
        <function-ref name="get" scoped="" ref="0x10f616020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6161b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f616340"/>
        <function-ref name="set" scoped="" ref="0x10f6164d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f616660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6167f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f616a80"/>
        <function-ref name="clr" scoped="" ref="0x10f616c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f641d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f641d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6400e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f640270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f640400"/>
        <function-ref name="toggle" scoped="" ref="0x10f640590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f640720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6408b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f640a40"/>
        <function-ref name="get" scoped="" ref="0x10f640bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f640d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f63f020"/>
        <function-ref name="set" scoped="" ref="0x10f63f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f63f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f63f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f63f760"/>
        <function-ref name="clr" scoped="" ref="0x10f63f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f63c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f63c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f63cac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f63cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f63cde0"/>
        <function-ref name="toggle" scoped="" ref="0x10f63b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f63b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f63b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f63b4d0"/>
        <function-ref name="get" scoped="" ref="0x10f63b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f63b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f63b980"/>
        <function-ref name="set" scoped="" ref="0x10f63bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f63bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f63be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f63a120"/>
        <function-ref name="clr" scoped="" ref="0x10f63a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f637100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f637100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f637480"/>
        <function-ref name="isInput" scoped="" ref="0x10f637610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6377a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f637930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f637ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f637c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f637de0"/>
        <function-ref name="get" scoped="" ref="0x10f635020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f635340"/>
        <function-ref name="set" scoped="" ref="0x10f6354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f635660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f635a80"/>
        <function-ref name="clr" scoped="" ref="0x10f635c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f632d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f632d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6310e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f631270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f631400"/>
        <function-ref name="toggle" scoped="" ref="0x10f631590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f631720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6318b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f631a40"/>
        <function-ref name="get" scoped="" ref="0x10f631bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f631d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f630020"/>
        <function-ref name="set" scoped="" ref="0x10f6301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f630340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f630760"/>
        <function-ref name="clr" scoped="" ref="0x10f6308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f62d860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f62d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f62dbe0"/>
        <function-ref name="isInput" scoped="" ref="0x10f62dd70"/>
        <function-ref name="setResistor" scoped="" ref="0x10f62c020"/>
        <function-ref name="toggle" scoped="" ref="0x10f62c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f62c340"/>
        <function-ref name="getResistor" scoped="" ref="0x10f62c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f62c660"/>
        <function-ref name="get" scoped="" ref="0x10f62c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f62c980"/>
        <function-ref name="getRaw" scoped="" ref="0x10f62cb10"/>
        <function-ref name="set" scoped="" ref="0x10f62cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f62ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f62b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f62b2b0"/>
        <function-ref name="clr" scoped="" ref="0x10f62b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f656270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f656270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6565f0"/>
        <function-ref name="isInput" scoped="" ref="0x10f656780"/>
        <function-ref name="setResistor" scoped="" ref="0x10f656910"/>
        <function-ref name="toggle" scoped="" ref="0x10f656aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f656c30"/>
        <function-ref name="getResistor" scoped="" ref="0x10f656dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f655020"/>
        <function-ref name="get" scoped="" ref="0x10f6551b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f655340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6554d0"/>
        <function-ref name="set" scoped="" ref="0x10f655660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6557f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f655980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f655c10"/>
        <function-ref name="clr" scoped="" ref="0x10f655da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f652d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f652d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6510e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f651270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f651400"/>
        <function-ref name="toggle" scoped="" ref="0x10f651590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f651720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6518b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f651a40"/>
        <function-ref name="get" scoped="" ref="0x10f651bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f651d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f650020"/>
        <function-ref name="set" scoped="" ref="0x10f6501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f650340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f650760"/>
        <function-ref name="clr" scoped="" ref="0x10f6508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f64d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f64d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f64dac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f64dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f64dde0"/>
        <function-ref name="toggle" scoped="" ref="0x10f64c020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f64c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f64c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f64c4d0"/>
        <function-ref name="get" scoped="" ref="0x10f64c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f64c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f64c980"/>
        <function-ref name="set" scoped="" ref="0x10f64cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f64cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f64ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f64b120"/>
        <function-ref name="clr" scoped="" ref="0x10f64b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f648100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f648100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f648480"/>
        <function-ref name="isInput" scoped="" ref="0x10f648610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6487a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f648930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f648ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f648c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f648de0"/>
        <function-ref name="get" scoped="" ref="0x10f647020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f647340"/>
        <function-ref name="set" scoped="" ref="0x10f6474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f647660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f647a80"/>
        <function-ref name="clr" scoped="" ref="0x10f647c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f644d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f644d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6430e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f643270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f643400"/>
        <function-ref name="toggle" scoped="" ref="0x10f643590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f643720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6438b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f643a40"/>
        <function-ref name="get" scoped="" ref="0x10f643bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f643d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f642020"/>
        <function-ref name="set" scoped="" ref="0x10f6421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f642340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f642760"/>
        <function-ref name="clr" scoped="" ref="0x10f6428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f66c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f66c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f66cac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f66cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f66cde0"/>
        <function-ref name="toggle" scoped="" ref="0x10f66b020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f66b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f66b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f66b4d0"/>
        <function-ref name="get" scoped="" ref="0x10f66b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f66b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f66b980"/>
        <function-ref name="set" scoped="" ref="0x10f66bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f66bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f66be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f66a120"/>
        <function-ref name="clr" scoped="" ref="0x10f66a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f667100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f667100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f667480"/>
        <function-ref name="isInput" scoped="" ref="0x10f667610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6677a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f667930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f667ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f667c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f667de0"/>
        <function-ref name="get" scoped="" ref="0x10f666020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f666340"/>
        <function-ref name="set" scoped="" ref="0x10f6664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f666660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f666a80"/>
        <function-ref name="clr" scoped="" ref="0x10f666c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f663d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f663d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6620e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f662270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f662400"/>
        <function-ref name="toggle" scoped="" ref="0x10f662590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f662720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6628b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f662a40"/>
        <function-ref name="get" scoped="" ref="0x10f662bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f662d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f661020"/>
        <function-ref name="set" scoped="" ref="0x10f6611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f661340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f661760"/>
        <function-ref name="clr" scoped="" ref="0x10f6618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f65e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f65e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f65eac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f65ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f65ede0"/>
        <function-ref name="toggle" scoped="" ref="0x10f65d020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f65d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f65d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f65d4d0"/>
        <function-ref name="get" scoped="" ref="0x10f65d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f65d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f65d980"/>
        <function-ref name="set" scoped="" ref="0x10f65db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f65dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f65de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f65c120"/>
        <function-ref name="clr" scoped="" ref="0x10f65c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f659100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f659100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f659480"/>
        <function-ref name="isInput" scoped="" ref="0x10f659610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6597a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f659930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f659ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f659c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f659de0"/>
        <function-ref name="get" scoped="" ref="0x10f686020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f686340"/>
        <function-ref name="set" scoped="" ref="0x10f6864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f686660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f686a80"/>
        <function-ref name="clr" scoped="" ref="0x10f686c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f683d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f683d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6820e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f682270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f682400"/>
        <function-ref name="toggle" scoped="" ref="0x10f682590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f682720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f682a40"/>
        <function-ref name="get" scoped="" ref="0x10f682bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f682d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f681020"/>
        <function-ref name="set" scoped="" ref="0x10f6811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f681340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f681760"/>
        <function-ref name="clr" scoped="" ref="0x10f6818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f67ea60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f67ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f67ede0"/>
        <function-ref name="isInput" scoped="" ref="0x10f67d020"/>
        <function-ref name="setResistor" scoped="" ref="0x10f67d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10f67d340"/>
        <function-ref name="isOutput" scoped="" ref="0x10f67d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f67d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f67d7f0"/>
        <function-ref name="get" scoped="" ref="0x10f67d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f67db10"/>
        <function-ref name="getRaw" scoped="" ref="0x10f67dca0"/>
        <function-ref name="set" scoped="" ref="0x10f67de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f67c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f67c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f67c440"/>
        <function-ref name="clr" scoped="" ref="0x10f67c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f679460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f679460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6797e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f679970"/>
        <function-ref name="setResistor" scoped="" ref="0x10f679b00"/>
        <function-ref name="toggle" scoped="" ref="0x10f679c90"/>
        <function-ref name="isOutput" scoped="" ref="0x10f679e20"/>
        <function-ref name="getResistor" scoped="" ref="0x10f677020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6771b0"/>
        <function-ref name="get" scoped="" ref="0x10f677340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6774d0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f677660"/>
        <function-ref name="set" scoped="" ref="0x10f6777f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f677980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f677b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f677da0"/>
        <function-ref name="clr" scoped="" ref="0x10f676020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f674e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f674e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6731c0"/>
        <function-ref name="isInput" scoped="" ref="0x10f673350"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6734e0"/>
        <function-ref name="toggle" scoped="" ref="0x10f673670"/>
        <function-ref name="isOutput" scoped="" ref="0x10f673800"/>
        <function-ref name="getResistor" scoped="" ref="0x10f673990"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f673b20"/>
        <function-ref name="get" scoped="" ref="0x10f673cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f673e40"/>
        <function-ref name="getRaw" scoped="" ref="0x10f672020"/>
        <function-ref name="set" scoped="" ref="0x10f6721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f672340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f672760"/>
        <function-ref name="clr" scoped="" ref="0x10f6728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f69d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f69d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f69dac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f69dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f69dde0"/>
        <function-ref name="toggle" scoped="" ref="0x10f69c020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f69c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f69c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f69c4d0"/>
        <function-ref name="get" scoped="" ref="0x10f69c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f69c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f69c980"/>
        <function-ref name="set" scoped="" ref="0x10f69cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f69cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f69ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f69b120"/>
        <function-ref name="clr" scoped="" ref="0x10f69b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f698100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f698100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f698480"/>
        <function-ref name="isInput" scoped="" ref="0x10f698610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6987a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f698930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f698ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f698c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f698de0"/>
        <function-ref name="get" scoped="" ref="0x10f697020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f697340"/>
        <function-ref name="set" scoped="" ref="0x10f6974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f697660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f697a80"/>
        <function-ref name="clr" scoped="" ref="0x10f697c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f694d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f694d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6930e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f693270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f693400"/>
        <function-ref name="toggle" scoped="" ref="0x10f693590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f693720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6938b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f693a40"/>
        <function-ref name="get" scoped="" ref="0x10f693bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f693d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f692020"/>
        <function-ref name="set" scoped="" ref="0x10f6921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f692340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f692760"/>
        <function-ref name="clr" scoped="" ref="0x10f6928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f68f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f68f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f68fac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f68fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f68fde0"/>
        <function-ref name="toggle" scoped="" ref="0x10f68e020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f68e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f68e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f68e4d0"/>
        <function-ref name="get" scoped="" ref="0x10f68e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f68e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f68e980"/>
        <function-ref name="set" scoped="" ref="0x10f68eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f68eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f68ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f68d120"/>
        <function-ref name="clr" scoped="" ref="0x10f68d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f68a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f68a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f68a480"/>
        <function-ref name="isInput" scoped="" ref="0x10f68a610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f68a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f68a930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f68aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f68ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f68ade0"/>
        <function-ref name="get" scoped="" ref="0x10f689020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f689340"/>
        <function-ref name="set" scoped="" ref="0x10f6894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f689660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f689a80"/>
        <function-ref name="clr" scoped="" ref="0x10f689c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6b5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6b5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6b40e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6b4270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6b4400"/>
        <function-ref name="toggle" scoped="" ref="0x10f6b4590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6b4720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6b48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6b4a40"/>
        <function-ref name="get" scoped="" ref="0x10f6b4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6b4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6b3020"/>
        <function-ref name="set" scoped="" ref="0x10f6b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6b3760"/>
        <function-ref name="clr" scoped="" ref="0x10f6b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6b0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6b0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6b0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6b0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6b0de0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6ae1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6ae340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6ae4d0"/>
        <function-ref name="get" scoped="" ref="0x10f6ae660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6ae7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6ae980"/>
        <function-ref name="set" scoped="" ref="0x10f6aeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6aeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6aee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6ad120"/>
        <function-ref name="clr" scoped="" ref="0x10f6ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6aa100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6aa480"/>
        <function-ref name="isInput" scoped="" ref="0x10f6aa610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6aa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6aa930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6aaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6aac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6aade0"/>
        <function-ref name="get" scoped="" ref="0x10f6a9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6a91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6a9340"/>
        <function-ref name="set" scoped="" ref="0x10f6a94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6a9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6a97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6a9a80"/>
        <function-ref name="clr" scoped="" ref="0x10f6a9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6a6d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6a6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6a50e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6a5270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6a5400"/>
        <function-ref name="toggle" scoped="" ref="0x10f6a5590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6a5720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6a58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6a5a40"/>
        <function-ref name="get" scoped="" ref="0x10f6a5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6a5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6a4020"/>
        <function-ref name="set" scoped="" ref="0x10f6a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6a4760"/>
        <function-ref name="clr" scoped="" ref="0x10f6a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6a1740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6a1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6a1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6a1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6a1de0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6a0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6a04d0"/>
        <function-ref name="get" scoped="" ref="0x10f6a0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6a07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6a0980"/>
        <function-ref name="set" scoped="" ref="0x10f6a0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6a0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6a0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f69f120"/>
        <function-ref name="clr" scoped="" ref="0x10f69f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6cc100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6cc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6cc480"/>
        <function-ref name="isInput" scoped="" ref="0x10f6cc610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6cc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6cc930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6ccac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6ccc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6ccde0"/>
        <function-ref name="get" scoped="" ref="0x10f6cb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6cb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6cb340"/>
        <function-ref name="set" scoped="" ref="0x10f6cb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6cb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6cb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6cba80"/>
        <function-ref name="clr" scoped="" ref="0x10f6cbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6c8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6c8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6c70e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6c7270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6c7400"/>
        <function-ref name="toggle" scoped="" ref="0x10f6c7590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6c7720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6c78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6c7a40"/>
        <function-ref name="get" scoped="" ref="0x10f6c7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6c7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6c6020"/>
        <function-ref name="set" scoped="" ref="0x10f6c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6c6760"/>
        <function-ref name="clr" scoped="" ref="0x10f6c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6c3740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6c3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6c3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6c3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6c3de0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6c21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6c2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6c24d0"/>
        <function-ref name="get" scoped="" ref="0x10f6c2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6c27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6c2980"/>
        <function-ref name="set" scoped="" ref="0x10f6c2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6c2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6c2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6c1120"/>
        <function-ref name="clr" scoped="" ref="0x10f6c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6be100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6be100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6be480"/>
        <function-ref name="isInput" scoped="" ref="0x10f6be610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6be7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6be930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6beac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6bec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6bede0"/>
        <function-ref name="get" scoped="" ref="0x10f6bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6bd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6bd340"/>
        <function-ref name="set" scoped="" ref="0x10f6bd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6bd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6bd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6bda80"/>
        <function-ref name="clr" scoped="" ref="0x10f6bdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6b9d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6b9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6b80e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6b8270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6b8400"/>
        <function-ref name="toggle" scoped="" ref="0x10f6b8590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6b8720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6b88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6b8a40"/>
        <function-ref name="get" scoped="" ref="0x10f6b8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6b8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6b7020"/>
        <function-ref name="set" scoped="" ref="0x10f6b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6b7760"/>
        <function-ref name="clr" scoped="" ref="0x10f6b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6e4740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6e4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6e4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6e4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6e4de0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6e31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6e3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6e34d0"/>
        <function-ref name="get" scoped="" ref="0x10f6e3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6e37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6e3980"/>
        <function-ref name="set" scoped="" ref="0x10f6e3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6e3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6e3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6e2120"/>
        <function-ref name="clr" scoped="" ref="0x10f6e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6df100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6df100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6df480"/>
        <function-ref name="isInput" scoped="" ref="0x10f6df610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6df7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6df930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6dfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6dfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6dfde0"/>
        <function-ref name="get" scoped="" ref="0x10f6de020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6de1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6de340"/>
        <function-ref name="set" scoped="" ref="0x10f6de4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6de660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6de7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6dea80"/>
        <function-ref name="clr" scoped="" ref="0x10f6dec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6dbd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6dbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6da0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6da270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6da400"/>
        <function-ref name="toggle" scoped="" ref="0x10f6da590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6da720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6da8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6daa40"/>
        <function-ref name="get" scoped="" ref="0x10f6dabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6dad60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6d9020"/>
        <function-ref name="set" scoped="" ref="0x10f6d91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6d9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6d94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6d9760"/>
        <function-ref name="clr" scoped="" ref="0x10f6d98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6d6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6d6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6d6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6d6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6d6de0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6d51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6d5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6d54d0"/>
        <function-ref name="get" scoped="" ref="0x10f6d5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6d57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6d5980"/>
        <function-ref name="set" scoped="" ref="0x10f6d5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6d5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6d5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6d4120"/>
        <function-ref name="clr" scoped="" ref="0x10f6d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6d1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6d1480"/>
        <function-ref name="isInput" scoped="" ref="0x10f6d1610"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6d17a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f6d1930"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6d1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6d1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6d1de0"/>
        <function-ref name="get" scoped="" ref="0x10f6d0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6d01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6d0340"/>
        <function-ref name="set" scoped="" ref="0x10f6d04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6d0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6d07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6d0a80"/>
        <function-ref name="clr" scoped="" ref="0x10f6d0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10f6fdd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10f6fdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f6fc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f6fc270"/>
        <function-ref name="setResistor" scoped="" ref="0x10f6fc400"/>
        <function-ref name="toggle" scoped="" ref="0x10f6fc590"/>
        <function-ref name="isOutput" scoped="" ref="0x10f6fc720"/>
        <function-ref name="getResistor" scoped="" ref="0x10f6fc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f6fca40"/>
        <function-ref name="get" scoped="" ref="0x10f6fcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f6fcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10f6fb020"/>
        <function-ref name="set" scoped="" ref="0x10f6fb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f6fb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f6fb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f6fb760"/>
        <function-ref name="clr" scoped="" ref="0x10f6fb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10f76e610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10f76e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f76e990"/>
        <function-ref name="isInput" scoped="" ref="0x10f76eb20"/>
        <function-ref name="setResistor" scoped="" ref="0x10f76ecb0"/>
        <function-ref name="toggle" scoped="" ref="0x10f76ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x10f76d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10f76d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f76d340"/>
        <function-ref name="get" scoped="" ref="0x10f76d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f76d660"/>
        <function-ref name="getRaw" scoped="" ref="0x10f76d7f0"/>
        <function-ref name="set" scoped="" ref="0x10f76d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f76db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f76dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f76c020"/>
        <function-ref name="clr" scoped="" ref="0x10f76c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10f74d440" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10f74d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f74d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x10f74d950"/>
        <function-ref name="toggle" scoped="" ref="0x10f74dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f74dc70"/>
        <function-ref name="get" scoped="" ref="0x10f74de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f76e020"/>
        <function-ref name="set" scoped="" ref="0x10f76e1b0"/>
        <function-ref name="clr" scoped="" ref="0x10f76e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10f7692f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10f7692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f769670"/>
        <function-ref name="isInput" scoped="" ref="0x10f769800"/>
        <function-ref name="setResistor" scoped="" ref="0x10f769990"/>
        <function-ref name="toggle" scoped="" ref="0x10f769b20"/>
        <function-ref name="isOutput" scoped="" ref="0x10f769cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f769e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f768020"/>
        <function-ref name="get" scoped="" ref="0x10f7681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f768340"/>
        <function-ref name="getRaw" scoped="" ref="0x10f7684d0"/>
        <function-ref name="set" scoped="" ref="0x10f768660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f7687f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f768980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f768c10"/>
        <function-ref name="clr" scoped="" ref="0x10f768da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10f76a020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10f76a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f76a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f76a530"/>
        <function-ref name="toggle" scoped="" ref="0x10f76a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f76a850"/>
        <function-ref name="get" scoped="" ref="0x10f76a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f76ab70"/>
        <function-ref name="set" scoped="" ref="0x10f76ad00"/>
        <function-ref name="clr" scoped="" ref="0x10f769020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10f765de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10f765de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f764180"/>
        <function-ref name="isInput" scoped="" ref="0x10f764310"/>
        <function-ref name="setResistor" scoped="" ref="0x10f7644a0"/>
        <function-ref name="toggle" scoped="" ref="0x10f764630"/>
        <function-ref name="isOutput" scoped="" ref="0x10f7647c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f764950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f764ae0"/>
        <function-ref name="get" scoped="" ref="0x10f764c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f764e00"/>
        <function-ref name="getRaw" scoped="" ref="0x10f763020"/>
        <function-ref name="set" scoped="" ref="0x10f7631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f763340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f7634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f763760"/>
        <function-ref name="clr" scoped="" ref="0x10f7638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10f766b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10f766b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f765020"/>
        <function-ref name="isInput" scoped="" ref="0x10f7651b0"/>
        <function-ref name="toggle" scoped="" ref="0x10f765340"/>
        <function-ref name="isOutput" scoped="" ref="0x10f7654d0"/>
        <function-ref name="get" scoped="" ref="0x10f765660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f7657f0"/>
        <function-ref name="set" scoped="" ref="0x10f765980"/>
        <function-ref name="clr" scoped="" ref="0x10f765b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x10f7852d0" loc="49:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x10f7852d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10f241080"/>
            <typename><typedef-ref name="button_state_t" ref="0x10f2419a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x10f7844a0"/>
        <function-ref name="enable" scoped="" ref="0x10f784020"/>
        <function-ref name="notify" scoped="" ref="0x10f784920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x10f788080" loc="48:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x10f788080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10f241080"/>
            <typename><typedef-ref name="button_state_t" ref="0x10f2419a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f788c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x10f77f020" loc="41:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x10f77f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f77f3a0"/>
        <function-ref name="disable" scoped="" ref="0x10f77f530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10f77f6c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10f77f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10f783750" loc="40:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10f783750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f783ad0"/>
        <function-ref name="isInput" scoped="" ref="0x10f783c60"/>
        <function-ref name="toggle" scoped="" ref="0x10f783df0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f780020"/>
        <function-ref name="get" scoped="" ref="0x10f7801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f780340"/>
        <function-ref name="set" scoped="" ref="0x10f7804d0"/>
        <function-ref name="clr" scoped="" ref="0x10f780660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10f7a3020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10f7a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7a33a0"/>
        <function-ref name="fired" scoped="" ref="0x10f7a3530"/>
        <function-ref name="disable" scoped="" ref="0x10f7a36c0"/>
        <function-ref name="edge" scoped="" ref="0x10f7a3850"/>
        <function-ref name="enable" scoped="" ref="0x10f7a39e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f7a3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10f799020" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10f799020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7993a0"/>
        <function-ref name="fired" scoped="" ref="0x10f799530"/>
        <function-ref name="disable" scoped="" ref="0x10f7996c0"/>
        <function-ref name="edge" scoped="" ref="0x10f799850"/>
        <function-ref name="enable" scoped="" ref="0x10f7999e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f799b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10f7a0020" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10f7a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7a03a0"/>
        <function-ref name="fired" scoped="" ref="0x10f7a0530"/>
        <function-ref name="disable" scoped="" ref="0x10f7a06c0"/>
        <function-ref name="edge" scoped="" ref="0x10f7a0850"/>
        <function-ref name="enable" scoped="" ref="0x10f7a09e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f7a0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10f79e020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10f79e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f79e3a0"/>
        <function-ref name="fired" scoped="" ref="0x10f79e530"/>
        <function-ref name="disable" scoped="" ref="0x10f79e6c0"/>
        <function-ref name="edge" scoped="" ref="0x10f79e850"/>
        <function-ref name="enable" scoped="" ref="0x10f79e9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f79eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10f777140" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10f777140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7774c0"/>
        <function-ref name="fired" scoped="" ref="0x10f777650"/>
        <function-ref name="disable" scoped="" ref="0x10f7777e0"/>
        <function-ref name="edge" scoped="" ref="0x10f777970"/>
        <function-ref name="enable" scoped="" ref="0x10f777b00"/>
        <function-ref name="getValue" scoped="" ref="0x10f777c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10f79b020" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10f79b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f79b4a0"/>
        <function-ref name="fired" scoped="" ref="0x10f79b630"/>
        <function-ref name="disable" scoped="" ref="0x10f79b7c0"/>
        <function-ref name="edge" scoped="" ref="0x10f79b950"/>
        <function-ref name="enable" scoped="" ref="0x10f79bae0"/>
        <function-ref name="getValue" scoped="" ref="0x10f79bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10f7a2020" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10f7a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7a23a0"/>
        <function-ref name="fired" scoped="" ref="0x10f7a2530"/>
        <function-ref name="disable" scoped="" ref="0x10f7a26c0"/>
        <function-ref name="edge" scoped="" ref="0x10f7a2850"/>
        <function-ref name="enable" scoped="" ref="0x10f7a29e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f7a2b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10f798020" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10f798020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7983a0"/>
        <function-ref name="fired" scoped="" ref="0x10f798530"/>
        <function-ref name="disable" scoped="" ref="0x10f7986c0"/>
        <function-ref name="edge" scoped="" ref="0x10f798850"/>
        <function-ref name="enable" scoped="" ref="0x10f7989e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f798b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10f7a5210" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10f7a5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7a5590"/>
        <function-ref name="fired" scoped="" ref="0x10f7a5720"/>
        <function-ref name="disable" scoped="" ref="0x10f7a58b0"/>
        <function-ref name="edge" scoped="" ref="0x10f7a5a40"/>
        <function-ref name="enable" scoped="" ref="0x10f7a5bd0"/>
        <function-ref name="getValue" scoped="" ref="0x10f7a5d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10f79d020" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10f79d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f79d3a0"/>
        <function-ref name="fired" scoped="" ref="0x10f79d530"/>
        <function-ref name="disable" scoped="" ref="0x10f79d6c0"/>
        <function-ref name="edge" scoped="" ref="0x10f79d850"/>
        <function-ref name="enable" scoped="" ref="0x10f79d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f79db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10f7a40a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10f7a40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7a4420"/>
        <function-ref name="fired" scoped="" ref="0x10f7a45b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7a4740"/>
        <function-ref name="edge" scoped="" ref="0x10f7a48d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7a4a60"/>
        <function-ref name="getValue" scoped="" ref="0x10f7a4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10f79a060" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10f79a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f79a3e0"/>
        <function-ref name="fired" scoped="" ref="0x10f79a570"/>
        <function-ref name="disable" scoped="" ref="0x10f79a700"/>
        <function-ref name="edge" scoped="" ref="0x10f79a890"/>
        <function-ref name="enable" scoped="" ref="0x10f79aa20"/>
        <function-ref name="getValue" scoped="" ref="0x10f79abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10f7a1020" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10f7a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7a13a0"/>
        <function-ref name="fired" scoped="" ref="0x10f7a1530"/>
        <function-ref name="disable" scoped="" ref="0x10f7a16c0"/>
        <function-ref name="edge" scoped="" ref="0x10f7a1850"/>
        <function-ref name="enable" scoped="" ref="0x10f7a19e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f7a1b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10f79f020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10f79f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f79f3a0"/>
        <function-ref name="fired" scoped="" ref="0x10f79f530"/>
        <function-ref name="disable" scoped="" ref="0x10f79f6c0"/>
        <function-ref name="edge" scoped="" ref="0x10f79f850"/>
        <function-ref name="enable" scoped="" ref="0x10f79f9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f79fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10f778200" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10f778200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f778580"/>
        <function-ref name="fired" scoped="" ref="0x10f778710"/>
        <function-ref name="disable" scoped="" ref="0x10f7788a0"/>
        <function-ref name="edge" scoped="" ref="0x10f778a30"/>
        <function-ref name="enable" scoped="" ref="0x10f778bc0"/>
        <function-ref name="getValue" scoped="" ref="0x10f778d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10f79c020" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10f79c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f79c3a0"/>
        <function-ref name="fired" scoped="" ref="0x10f79c530"/>
        <function-ref name="disable" scoped="" ref="0x10f79c6c0"/>
        <function-ref name="edge" scoped="" ref="0x10f79c850"/>
        <function-ref name="enable" scoped="" ref="0x10f79c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f79cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10f791bc0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10f791bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f790020"/>
        <function-ref name="fired" scoped="" ref="0x10f7901b0"/>
        <function-ref name="disable" scoped="" ref="0x10f790340"/>
        <function-ref name="edge" scoped="" ref="0x10f7904d0"/>
        <function-ref name="enable" scoped="" ref="0x10f790660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10f7babc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10f7babc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7b9020"/>
        <function-ref name="fired" scoped="" ref="0x10f7b91b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7b9340"/>
        <function-ref name="edge" scoped="" ref="0x10f7b94d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7b9660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10f78dbc0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10f78dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7c0020"/>
        <function-ref name="fired" scoped="" ref="0x10f7c01b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7c0340"/>
        <function-ref name="edge" scoped="" ref="0x10f7c04d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7c0660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7c07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10f7bfbc0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10f7bfbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7be020"/>
        <function-ref name="fired" scoped="" ref="0x10f7be1b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7be340"/>
        <function-ref name="edge" scoped="" ref="0x10f7be4d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7be660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7be7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10f793c40" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10f793c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f792020"/>
        <function-ref name="fired" scoped="" ref="0x10f7921b0"/>
        <function-ref name="disable" scoped="" ref="0x10f792340"/>
        <function-ref name="edge" scoped="" ref="0x10f7924d0"/>
        <function-ref name="enable" scoped="" ref="0x10f792660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7927f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10f7bcbc0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10f7bcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7bb0a0"/>
        <function-ref name="fired" scoped="" ref="0x10f7bb230"/>
        <function-ref name="disable" scoped="" ref="0x10f7bb3c0"/>
        <function-ref name="edge" scoped="" ref="0x10f7bb550"/>
        <function-ref name="enable" scoped="" ref="0x10f7bb6e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f7bb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10f790bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10f790bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f78e020"/>
        <function-ref name="fired" scoped="" ref="0x10f78e1b0"/>
        <function-ref name="disable" scoped="" ref="0x10f78e340"/>
        <function-ref name="edge" scoped="" ref="0x10f78e4d0"/>
        <function-ref name="enable" scoped="" ref="0x10f78e660"/>
        <function-ref name="getValue" scoped="" ref="0x10f78e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10f7b9bc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10f7b9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7b8020"/>
        <function-ref name="fired" scoped="" ref="0x10f7b81b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7b8340"/>
        <function-ref name="edge" scoped="" ref="0x10f7b84d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7b8660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10f797d30" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10f797d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7940e0"/>
        <function-ref name="fired" scoped="" ref="0x10f794270"/>
        <function-ref name="disable" scoped="" ref="0x10f794400"/>
        <function-ref name="edge" scoped="" ref="0x10f794590"/>
        <function-ref name="enable" scoped="" ref="0x10f794720"/>
        <function-ref name="getValue" scoped="" ref="0x10f7948b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10f7bebc0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10f7bebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7bd020"/>
        <function-ref name="fired" scoped="" ref="0x10f7bd1b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7bd340"/>
        <function-ref name="edge" scoped="" ref="0x10f7bd4d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7bd660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10f792bc0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10f792bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f791020"/>
        <function-ref name="fired" scoped="" ref="0x10f7911b0"/>
        <function-ref name="disable" scoped="" ref="0x10f791340"/>
        <function-ref name="edge" scoped="" ref="0x10f7914d0"/>
        <function-ref name="enable" scoped="" ref="0x10f791660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10f7bbc40" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10f7bbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7ba020"/>
        <function-ref name="fired" scoped="" ref="0x10f7ba1b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7ba340"/>
        <function-ref name="edge" scoped="" ref="0x10f7ba4d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7ba660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10f78ebc0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10f78ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f78d020"/>
        <function-ref name="fired" scoped="" ref="0x10f78d1b0"/>
        <function-ref name="disable" scoped="" ref="0x10f78d340"/>
        <function-ref name="edge" scoped="" ref="0x10f78d4d0"/>
        <function-ref name="enable" scoped="" ref="0x10f78d660"/>
        <function-ref name="getValue" scoped="" ref="0x10f78d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10f7c0bc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10f7c0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7bf020"/>
        <function-ref name="fired" scoped="" ref="0x10f7bf1b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7bf340"/>
        <function-ref name="edge" scoped="" ref="0x10f7bf4d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7bf660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7bf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10f794c80" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10f794c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7930a0"/>
        <function-ref name="fired" scoped="" ref="0x10f793230"/>
        <function-ref name="disable" scoped="" ref="0x10f7933c0"/>
        <function-ref name="edge" scoped="" ref="0x10f793550"/>
        <function-ref name="enable" scoped="" ref="0x10f7936e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f793870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10f7bdbc0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10f7bdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f7bc020"/>
        <function-ref name="fired" scoped="" ref="0x10f7bc1b0"/>
        <function-ref name="disable" scoped="" ref="0x10f7bc340"/>
        <function-ref name="edge" scoped="" ref="0x10f7bc4d0"/>
        <function-ref name="enable" scoped="" ref="0x10f7bc660"/>
        <function-ref name="getValue" scoped="" ref="0x10f7bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10f88f020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10f88f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f88f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10f88f530"/>
        <function-ref name="setResistor" scoped="" ref="0x10f88f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10f88f850"/>
        <function-ref name="isOutput" scoped="" ref="0x10f88f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10f88fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f88fd00"/>
        <function-ref name="get" scoped="" ref="0x10f88d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10f88d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10f88d340"/>
        <function-ref name="set" scoped="" ref="0x10f88d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10f88d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10f88d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10f88da80"/>
        <function-ref name="clr" scoped="" ref="0x10f88dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10f891d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10f891d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f890180"/>
        <function-ref name="isInput" scoped="" ref="0x10f890310"/>
        <function-ref name="toggle" scoped="" ref="0x10f8904a0"/>
        <function-ref name="isOutput" scoped="" ref="0x10f890630"/>
        <function-ref name="get" scoped="" ref="0x10f8907c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f890950"/>
        <function-ref name="set" scoped="" ref="0x10f890ae0"/>
        <function-ref name="clr" scoped="" ref="0x10f890c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x10f87c020" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x10f87c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f87c3a0"/>
        <function-ref name="fired" scoped="" ref="0x10f87c530"/>
        <function-ref name="disable" scoped="" ref="0x10f87c6c0"/>
        <function-ref name="edge" scoped="" ref="0x10f87c850"/>
        <function-ref name="enable" scoped="" ref="0x10f87c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x10f87cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x10f889490" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x10f889490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f889810"/>
        <function-ref name="disable" scoped="" ref="0x10f8899a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10f889b30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10f889cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x10f8cd480" loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x10f8cd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10f8cd800"/>
        <function-ref name="runTask" scoped="" ref="0x10f8cd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x10f8968f0" loc="46:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x10f8968f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10f896c70"/>
        <function-ref name="disable" scoped="" ref="0x10f896e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10f8cd020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10f8cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x10f899ca0" loc="43:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x10f899ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x10f898d40"/>
        <function-ref name="enable" scoped="" ref="0x10f8988c0"/>
        <function-ref name="notify" scoped="" ref="0x10f8971e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x10f89bb10" loc="42:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x10f89bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f899750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x10f897660" loc="45:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10f897660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10f8979e0"/>
        <function-ref name="isInput" scoped="" ref="0x10f897b70"/>
        <function-ref name="toggle" scoped="" ref="0x10f897d00"/>
        <function-ref name="isOutput" scoped="" ref="0x10f896020"/>
        <function-ref name="get" scoped="" ref="0x10f8961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10f896340"/>
        <function-ref name="set" scoped="" ref="0x10f8964d0"/>
        <function-ref name="clr" scoped="" ref="0x10f896660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x10f8c5e20" loc="45:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x10f8c5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f8c4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x10f8c6270" loc="43:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x10f8c6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10f241080"/>
            <typename><typedef-ref name="button_state_t" ref="0x10f2419a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x10f8c5310"/>
        <function-ref name="enable" scoped="" ref="0x10f8c6e60"/>
        <function-ref name="notify" scoped="" ref="0x10f8c5790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x10f8c3130" loc="46:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x10f8c3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x10f8c21e0"/>
        <function-ref name="enable" scoped="" ref="0x10f8c3d20"/>
        <function-ref name="notify" scoped="" ref="0x10f8c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x10f8c8020" loc="42:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x10f8c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10f241080"/>
            <typename><typedef-ref name="button_state_t" ref="0x10f2419a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f8c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10fa85370" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="transmitAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10fa85370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10fa81870"/>
        <function-ref name="fired" scoped="" ref="0x10fa84e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10fa82c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x10fa82780"/>
        <function-ref name="getdt" scoped="" ref="0x10fa801e0"/>
        <function-ref name="gett0" scoped="" ref="0x10fa81cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x10fa82300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10fa84020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10fa81260"/>
        <function-ref name="startOneShot" scoped="" ref="0x10fa844f0"/>
        <function-ref name="stop" scoped="" ref="0x10fa849c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10f8e7c60" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10f8e7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10f8e0170"/>
        <function-ref name="fired" scoped="" ref="0x10f8e3720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10f8e2510"/>
        <function-ref name="isOneShot" scoped="" ref="0x10f8e2090"/>
        <function-ref name="getdt" scoped="" ref="0x10f8e0a70"/>
        <function-ref name="gett0" scoped="" ref="0x10f8e05f0"/>
        <function-ref name="isRunning" scoped="" ref="0x10f8e3ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10f8e48a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10f8e2b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x10f8e4d70"/>
        <function-ref name="stop" scoped="" ref="0x10f8e32a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10f8db700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10f8db700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10f8d8c40"/>
        <function-ref name="fired" scoped="" ref="0x10f8d91e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10f8d8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10f8d9ae0"/>
        <function-ref name="getdt" scoped="" ref="0x10f8d7590"/>
        <function-ref name="gett0" scoped="" ref="0x10f8d7110"/>
        <function-ref name="isRunning" scoped="" ref="0x10f8d9660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10f8da390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10f8d8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x10f8da860"/>
        <function-ref name="stop" scoped="" ref="0x10f8dad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10f8d51a0" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10f8d51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f8d5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f8df8c0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f8df8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f8dfc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10f9ee870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10f9ee870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10f9ea090"/>
        <function-ref name="fired" scoped="" ref="0x10f9ec090"/>
        <function-ref name="startAt" scoped="" ref="0x10f9eca10"/>
        <function-ref name="isRunning" scoped="" ref="0x10f9ec550"/>
        <function-ref name="getAlarm" scoped="" ref="0x10f9ea550"/>
        <function-ref name="start" scoped="" ref="0x10f9ed6a0"/>
        <function-ref name="stop" scoped="" ref="0x10f9edbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10f9ee020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10f9ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10f9ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x111016870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111016870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111013090"/>
        <function-ref name="fired" scoped="" ref="0x111014090"/>
        <function-ref name="startAt" scoped="" ref="0x111014a10"/>
        <function-ref name="isRunning" scoped="" ref="0x111014550"/>
        <function-ref name="getAlarm" scoped="" ref="0x111013550"/>
        <function-ref name="start" scoped="" ref="0x1110156a0"/>
        <function-ref name="stop" scoped="" ref="0x111015bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111016020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111016020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1110163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x110ffeda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x110ffeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ffd180"/>
        <function-ref name="setEvent" scoped="" ref="0x110ffd310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110ffd4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110ffd630"/>
        <function-ref name="fired" scoped="" ref="0x110ffd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x111000340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x111000340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1110006c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x111000850"/>
        <function-ref name="enableEvents" scoped="" ref="0x1110009e0"/>
        <function-ref name="get" scoped="" ref="0x111000b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x111000d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110fff020"/>
        <function-ref name="getMode" scoped="" ref="0x110fff1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110fff340"/>
        <function-ref name="overflow" scoped="" ref="0x110fff4d0"/>
        <function-ref name="setMode" scoped="" ref="0x110fff660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110fff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x110fffa80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x110fffa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110fffe00"/>
        <function-ref name="getControl" scoped="" ref="0x110ffe020"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ffe1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110ffe340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110ffe4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ffe660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110ffe7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110ffe980"/>
        <function-ref name="setControl" scoped="" ref="0x110ffeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10f91f210" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10f91f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10f91f590"/>
        <function-ref name="setEvent" scoped="" ref="0x10f91f720"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10f91f8b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10f91fa40"/>
        <function-ref name="fired" scoped="" ref="0x10f91fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10f8eebf0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10f8eebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f8eb020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f8eb1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f8eb340"/>
        <function-ref name="get" scoped="" ref="0x10f8eb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f8eb660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f8eb7f0"/>
        <function-ref name="getMode" scoped="" ref="0x10f8eb980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f8ebb10"/>
        <function-ref name="overflow" scoped="" ref="0x10f8ebca0"/>
        <function-ref name="setMode" scoped="" ref="0x10f8ebe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f8ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10f8ea8b0" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10f8ea8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10f8eac30"/>
        <function-ref name="getControl" scoped="" ref="0x10f8eadc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f920020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10f9201b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10f920340"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f9204d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10f920660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10f9207f0"/>
        <function-ref name="setControl" scoped="" ref="0x10f920980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x110ff4a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x110ff4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ff4e00"/>
        <function-ref name="setEvent" scoped="" ref="0x110ff3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110ff31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110ff3340"/>
        <function-ref name="fired" scoped="" ref="0x110ff34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x110ff6190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x110ff6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110ff6510"/>
        <function-ref name="setClockSource" scoped="" ref="0x110ff66a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ff6830"/>
        <function-ref name="get" scoped="" ref="0x110ff69c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ff6b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110ff6ce0"/>
        <function-ref name="getMode" scoped="" ref="0x110ff6e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110ff5030"/>
        <function-ref name="overflow" scoped="" ref="0x110ff51c0"/>
        <function-ref name="setMode" scoped="" ref="0x110ff5350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110ff54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x110ffa020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x110ffa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110ff7870"/>
        <function-ref name="fired" scoped="" ref="0x110ff9840"/>
        <function-ref name="startAt" scoped="" ref="0x110ff7220"/>
        <function-ref name="isRunning" scoped="" ref="0x110ff9d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x110ff7d30"/>
        <function-ref name="start" scoped="" ref="0x110ffae30"/>
        <function-ref name="stop" scoped="" ref="0x110ff9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110ffb660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110ffb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110ffb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x110ff5770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x110ff5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110ff5af0"/>
        <function-ref name="getControl" scoped="" ref="0x110ff5c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ff5e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110ff4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110ff41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ff4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110ff44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110ff4660"/>
        <function-ref name="setControl" scoped="" ref="0x110ff47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10f97ab50" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10f97ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f9449b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f943360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f944e70"/>
        <function-ref name="overflow" scoped="" ref="0x10f943820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x10f978b70" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10f978b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f9759b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f974360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f975e70"/>
        <function-ref name="overflow" scoped="" ref="0x10f974820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10f963c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10f963c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10f961020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10f9611b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10f961340"/>
        <function-ref name="get" scoped="" ref="0x10f9614d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10f961660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f9617f0"/>
        <function-ref name="getMode" scoped="" ref="0x10f961980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f961b10"/>
        <function-ref name="overflow" scoped="" ref="0x10f961ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10f961e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10f960020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10f971b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10f971b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f9709b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f963360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f970e70"/>
        <function-ref name="overflow" scoped="" ref="0x10f963820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10f9b40f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10f9b40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f9b3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f9b39a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f9b34e0"/>
        <function-ref name="overflow" scoped="" ref="0x10f9b3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10f997cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10f997cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10f97cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10f9b5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10f9b5090"/>
        <function-ref name="overflow" scoped="" ref="0x10f9b5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x111011a90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111011a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11100d2e0"/>
        <function-ref name="fired" scoped="" ref="0x11100e2e0"/>
        <function-ref name="startAt" scoped="" ref="0x11100ec60"/>
        <function-ref name="isRunning" scoped="" ref="0x11100e7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x11100d7a0"/>
        <function-ref name="start" scoped="" ref="0x11100f8d0"/>
        <function-ref name="stop" scoped="" ref="0x11100fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x111009210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x111009210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111007b30"/>
        <function-ref name="fired" scoped="" ref="0x111008a60"/>
        <function-ref name="startAt" scoped="" ref="0x1110074e0"/>
        <function-ref name="isRunning" scoped="" ref="0x111007020"/>
        <function-ref name="getAlarm" scoped="" ref="0x111006020"/>
        <function-ref name="start" scoped="" ref="0x111008090"/>
        <function-ref name="stop" scoped="" ref="0x1110085a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x11100de10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11100de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11100cca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11100b670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11100b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x11100bb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x10f9f59c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x10f9f59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10f9f5d40"/>
        <function-ref name="runTask" scoped="" ref="0x10f9f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x10f9f9850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10f9f9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10f9f5090"/>
        <function-ref name="fired" scoped="" ref="0x10f9f6090"/>
        <function-ref name="startAt" scoped="" ref="0x10f9f6a10"/>
        <function-ref name="isRunning" scoped="" ref="0x10f9f6550"/>
        <function-ref name="getAlarm" scoped="" ref="0x10f9f5550"/>
        <function-ref name="start" scoped="" ref="0x10f9f76a0"/>
        <function-ref name="stop" scoped="" ref="0x10f9f7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10f9fe2f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10f9fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10f9fa870"/>
        <function-ref name="fired" scoped="" ref="0x10f9fce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10f9fbc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x10f9fb780"/>
        <function-ref name="getdt" scoped="" ref="0x10f9f91e0"/>
        <function-ref name="gett0" scoped="" ref="0x10f9facf0"/>
        <function-ref name="isRunning" scoped="" ref="0x10f9fb300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10f9fc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10f9fa260"/>
        <function-ref name="startOneShot" scoped="" ref="0x10f9fc4f0"/>
        <function-ref name="stop" scoped="" ref="0x10f9fc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x10fa5ca00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x10fa5ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fa5cd80"/>
        <function-ref name="runTask" scoped="" ref="0x10fa5b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10fa62640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10fa62640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10fa5ec40"/>
        <function-ref name="fired" scoped="" ref="0x10fa5f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10fa5e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10fa5fae0"/>
        <function-ref name="getdt" scoped="" ref="0x10fa5c590"/>
        <function-ref name="gett0" scoped="" ref="0x10fa5c110"/>
        <function-ref name="isRunning" scoped="" ref="0x10fa5f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10fa60390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10fa5e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x10fa60860"/>
        <function-ref name="stop" scoped="" ref="0x10fa60d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10fa67150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10fa67150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10fa63700"/>
        <function-ref name="fired" scoped="" ref="0x10fa66c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10fa65a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x10fa655b0"/>
        <function-ref name="getdt" scoped="" ref="0x10fa62090"/>
        <function-ref name="gett0" scoped="" ref="0x10fa63ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x10fa65110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10fa67d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10fa630d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x10fa662a0"/>
        <function-ref name="stop" scoped="" ref="0x10fa66790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10fa59790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10fa59790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10fa583f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10fa58a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10fa58a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10fa4e890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10fa8b260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10fa4ed50"/>
        <function-ref name="overflow" scoped="" ref="0x10fa8b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x10fa7b950" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x10fa7b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fa7bcd0"/>
        <function-ref name="receive" scoped="" ref="0x10fa7be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x10fa7c830" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x10fa7c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fa7cbb0"/>
        <function-ref name="receivedByte" scoped="" ref="0x10fa7cd40"/>
        <function-ref name="receive" scoped="" ref="0x10fa7b020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x10fa7b1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x10fa7b340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x10fa7b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x10fa7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10fa7c020" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10fa7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10fa7c3a0"/>
        <function-ref name="stop" scoped="" ref="0x10fa7c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10fd008f0" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10fd008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10fd00c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10fd00e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x10fcfe060" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x10fcfe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fcfe3e0"/>
        <function-ref name="receive" scoped="" ref="0x10fcfe570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x10fcfe800" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10fcfe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10fcfeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x10fcff0c0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x10fcff0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fcff440"/>
        <function-ref name="receivedByte" scoped="" ref="0x10fcff5d0"/>
        <function-ref name="receive" scoped="" ref="0x10fcff760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x10fcff8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x10fcffa80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x10fcffc10"/>
        <function-ref name="sendDone" scoped="" ref="0x10fcffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fd01c00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fd01c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fd00020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fd001b0"/>
        <function-ref name="request" scoped="" ref="0x10fd00340"/>
        <function-ref name="granted" scoped="" ref="0x10fd004d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10fd00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x10fad62c0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10fad62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10fad6640"/>
        <function-ref name="configure" scoped="" ref="0x10fad67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x10fad25c0" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x10fad25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fad2940"/>
        <function-ref name="receive" scoped="" ref="0x10fad2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x10facf6c0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10facf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10facfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x10fad5040" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x10fad5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fad53c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x10fad5550"/>
        <function-ref name="receive" scoped="" ref="0x10fad56e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x10fad5870"/>
        <function-ref name="receiveDone" scoped="" ref="0x10fad5a00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x10fad5b90"/>
        <function-ref name="sendDone" scoped="" ref="0x10fad5d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x10fad13f0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x10fad13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fad1770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fad1900"/>
        <function-ref name="request" scoped="" ref="0x10fad1a90"/>
        <function-ref name="granted" scoped="" ref="0x10fad1c20"/>
        <function-ref name="isOwner" scoped="" ref="0x10fad1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fad87a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fad87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fad8b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fad8cb0"/>
        <function-ref name="request" scoped="" ref="0x10fad8e40"/>
        <function-ref name="granted" scoped="" ref="0x10fad7020"/>
        <function-ref name="isOwner" scoped="" ref="0x10fad71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x10fb0bc20" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x10fb0bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10facd020"/>
        <function-ref name="txDone" scoped="" ref="0x10facd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x10fb50dc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10fb50dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10fb4f180"/>
        <function-ref name="configure" scoped="" ref="0x10fb4f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x10fb4e890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x10fb4e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fb4ec30"/>
        <function-ref name="receive" scoped="" ref="0x10fb4edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x10fb8e020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10fb8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10fb8e3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x10fb8e690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x10fb8e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10fb8ea10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10fb8eba0"/>
        <function-ref name="setUctl" scoped="" ref="0x10fb8ed30"/>
        <function-ref name="enableUart" scoped="" ref="0x10fb8d020"/>
        <function-ref name="setUrctl" scoped="" ref="0x10fb8d1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10fb8d340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10fb8d4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x10fb8d660"/>
        <function-ref name="getUrctl" scoped="" ref="0x10fb8d7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x10fb8d980"/>
        <function-ref name="getUmctl" scoped="" ref="0x10fb8db10"/>
        <function-ref name="disableIntr" scoped="" ref="0x10fb8dca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x10fb8de30"/>
        <function-ref name="getUbr" scoped="" ref="0x10fb8c120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10fb8c2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x10fb8c440"/>
        <function-ref name="isUartRx" scoped="" ref="0x10fb8c5d0"/>
        <function-ref name="isUart" scoped="" ref="0x10fb8c760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10fb8c8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x10fb8ca80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10fb8cc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10fb8cda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10fb8b020"/>
        <function-ref name="enableIntr" scoped="" ref="0x10fb8b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10fb8b340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10fb8b6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x10fb8b860"/>
        <function-ref name="setUbr" scoped="" ref="0x10fb8b9f0"/>
        <function-ref name="tx" scoped="" ref="0x10fb8bb80"/>
        <function-ref name="getUctl" scoped="" ref="0x10fb8bd10"/>
        <function-ref name="disableUart" scoped="" ref="0x10fb8a020"/>
        <function-ref name="enableSpi" scoped="" ref="0x10fb8a1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x10fb8a340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10fb8a4d0"/>
        <function-ref name="rx" scoped="" ref="0x10fb8a660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10fb8a7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x10fb8a980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10fb8ab10"/>
        <function-ref name="disableSpi" scoped="" ref="0x10fb8aca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10fb8ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x10fb4f6d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x10fb4f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fb4fa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x10fb4fc00"/>
        <function-ref name="receive" scoped="" ref="0x10fb4fd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x10fb4e020"/>
        <function-ref name="receiveDone" scoped="" ref="0x10fb4e1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x10fb4e340"/>
        <function-ref name="sendDone" scoped="" ref="0x10fb4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10fb89c90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10fb89c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10fb87ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10fb864e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10fb86020"/>
        <function-ref name="overflow" scoped="" ref="0x10fb869a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x10fb8f230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x10fb8f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fb8f5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fb8f760"/>
        <function-ref name="request" scoped="" ref="0x10fb8f8f0"/>
        <function-ref name="granted" scoped="" ref="0x10fb8fa80"/>
        <function-ref name="isOwner" scoped="" ref="0x10fb8fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fb50020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fb50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fb503c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fb50550"/>
        <function-ref name="request" scoped="" ref="0x10fb506e0"/>
        <function-ref name="granted" scoped="" ref="0x10fb50870"/>
        <function-ref name="isOwner" scoped="" ref="0x10fb50a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x10fb89290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x10fb89290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10fb89630"/>
        <function-ref name="txDone" scoped="" ref="0x10fb897c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10fb86dd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10fb86dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10fb85180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10fb85310"/>
        <function-ref name="led1On" scoped="" ref="0x10fb854a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10fb85630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10fb857c0"/>
        <function-ref name="get" scoped="" ref="0x10fb85950"/>
        <function-ref name="led1Off" scoped="" ref="0x10fb85ae0"/>
        <function-ref name="led2On" scoped="" ref="0x10fb841b0"/>
        <function-ref name="set" scoped="" ref="0x10fb85e00"/>
        <function-ref name="led2Off" scoped="" ref="0x10fb85c70"/>
        <function-ref name="led0On" scoped="" ref="0x10fb84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x10fb753b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10fb753b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10fb75730"/>
        <function-ref name="txDone" scoped="" ref="0x10fb758c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x10fb7b080" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x10fb7b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10fb7b400"/>
        <function-ref name="stop" scoped="" ref="0x10fb7b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x10fb7b8b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x10fb7b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10fb7bc30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10fb7bdc0"/>
        <function-ref name="setUctl" scoped="" ref="0x10fb7a020"/>
        <function-ref name="enableUart" scoped="" ref="0x10fb7a1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x10fb7a340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10fb7a4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10fb7a660"/>
        <function-ref name="getUtctl" scoped="" ref="0x10fb7a7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x10fb7a980"/>
        <function-ref name="resetUsart" scoped="" ref="0x10fb7ab10"/>
        <function-ref name="getUmctl" scoped="" ref="0x10fb7aca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x10fb7ae30"/>
        <function-ref name="setUtctl" scoped="" ref="0x10fb78020"/>
        <function-ref name="getUbr" scoped="" ref="0x10fb782b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10fb78440"/>
        <function-ref name="setUmctl" scoped="" ref="0x10fb785d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x10fb78760"/>
        <function-ref name="isUart" scoped="" ref="0x10fb788f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10fb78a80"/>
        <function-ref name="isSpi" scoped="" ref="0x10fb78c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10fb78da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10fb77020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10fb771b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x10fb77340"/>
        <function-ref name="getMode" scoped="" ref="0x10fb774d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10fb77860"/>
        <function-ref name="clrIntr" scoped="" ref="0x10fb779f0"/>
        <function-ref name="setUbr" scoped="" ref="0x10fb77b80"/>
        <function-ref name="tx" scoped="" ref="0x10fb77d10"/>
        <function-ref name="getUctl" scoped="" ref="0x10fb76020"/>
        <function-ref name="disableUart" scoped="" ref="0x10fb761b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10fb76340"/>
        <function-ref name="setModeUart" scoped="" ref="0x10fb764d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10fb76660"/>
        <function-ref name="rx" scoped="" ref="0x10fb767f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10fb76980"/>
        <function-ref name="isUartTx" scoped="" ref="0x10fb76b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10fb76ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x10fb76e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10fb75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x10fbaa670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x10fbaa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fbaa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x10fbaab80"/>
        <function-ref name="setResistor" scoped="" ref="0x10fbaad10"/>
        <function-ref name="toggle" scoped="" ref="0x10fba9020"/>
        <function-ref name="isOutput" scoped="" ref="0x10fba91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10fba9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fba94d0"/>
        <function-ref name="get" scoped="" ref="0x10fba9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10fba97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10fba9980"/>
        <function-ref name="set" scoped="" ref="0x10fba9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10fba9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10fba9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10fba8120"/>
        <function-ref name="clr" scoped="" ref="0x10fba82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10fbb0dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10fbb0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10fbae180"/>
        <function-ref name="txDone" scoped="" ref="0x10fbae310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x10fba8670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x10fba8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fba89f0"/>
        <function-ref name="isInput" scoped="" ref="0x10fba8b80"/>
        <function-ref name="setResistor" scoped="" ref="0x10fba8d10"/>
        <function-ref name="toggle" scoped="" ref="0x10fba7020"/>
        <function-ref name="isOutput" scoped="" ref="0x10fba71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10fba7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fba74d0"/>
        <function-ref name="get" scoped="" ref="0x10fba7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10fba77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10fba7980"/>
        <function-ref name="set" scoped="" ref="0x10fba7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10fba7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10fba7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10fba6120"/>
        <function-ref name="clr" scoped="" ref="0x10fba62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x10fba6670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x10fba6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fba69f0"/>
        <function-ref name="isInput" scoped="" ref="0x10fba6b80"/>
        <function-ref name="setResistor" scoped="" ref="0x10fba6d10"/>
        <function-ref name="toggle" scoped="" ref="0x10fba5020"/>
        <function-ref name="isOutput" scoped="" ref="0x10fba51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10fba5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fba54d0"/>
        <function-ref name="get" scoped="" ref="0x10fba5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10fba57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10fba5980"/>
        <function-ref name="set" scoped="" ref="0x10fba5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10fba5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10fba5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10fba4120"/>
        <function-ref name="clr" scoped="" ref="0x10fba42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x10fb71020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x10fb71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10fb713a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10fb71530"/>
        <function-ref name="setUctl" scoped="" ref="0x10fb716c0"/>
        <function-ref name="enableUart" scoped="" ref="0x10fb71850"/>
        <function-ref name="setUrctl" scoped="" ref="0x10fb719e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10fb71b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10fb71d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x10fb70020"/>
        <function-ref name="getUrctl" scoped="" ref="0x10fb701b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x10fb70340"/>
        <function-ref name="getUmctl" scoped="" ref="0x10fb704d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x10fb70660"/>
        <function-ref name="setUtctl" scoped="" ref="0x10fb707f0"/>
        <function-ref name="getUbr" scoped="" ref="0x10fb70a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10fb70c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x10fb70da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x10fb6f020"/>
        <function-ref name="isUart" scoped="" ref="0x10fb6f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10fb6f340"/>
        <function-ref name="isSpi" scoped="" ref="0x10fb6f4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10fb6f660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10fb6f7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10fb6f980"/>
        <function-ref name="enableIntr" scoped="" ref="0x10fb6fb10"/>
        <function-ref name="getMode" scoped="" ref="0x10fb6fca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10fbb1220"/>
        <function-ref name="clrIntr" scoped="" ref="0x10fbb13b0"/>
        <function-ref name="setUbr" scoped="" ref="0x10fbb1540"/>
        <function-ref name="tx" scoped="" ref="0x10fbb16d0"/>
        <function-ref name="getUctl" scoped="" ref="0x10fbb1860"/>
        <function-ref name="disableUart" scoped="" ref="0x10fbb19f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10fbb1b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x10fbb1d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10fbb0020"/>
        <function-ref name="rx" scoped="" ref="0x10fbb01b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10fbb0340"/>
        <function-ref name="isUartTx" scoped="" ref="0x10fbb04d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10fbb0660"/>
        <function-ref name="disableSpi" scoped="" ref="0x10fbb07f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10fbb0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x10fb74710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x10fb74710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10fb74a90"/>
        <function-ref name="stop" scoped="" ref="0x10fb74c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x10fbac670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x10fbac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fbac9f0"/>
        <function-ref name="isInput" scoped="" ref="0x10fbacb80"/>
        <function-ref name="setResistor" scoped="" ref="0x10fbacd10"/>
        <function-ref name="toggle" scoped="" ref="0x10fbab020"/>
        <function-ref name="isOutput" scoped="" ref="0x10fbab1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10fbab340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fbab4d0"/>
        <function-ref name="get" scoped="" ref="0x10fbab660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10fbab7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10fbab980"/>
        <function-ref name="set" scoped="" ref="0x10fbabb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10fbabca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10fbabe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10fbaa120"/>
        <function-ref name="clr" scoped="" ref="0x10fbaa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x10fbae6d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x10fbae6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fbaea50"/>
        <function-ref name="isInput" scoped="" ref="0x10fbaebe0"/>
        <function-ref name="setResistor" scoped="" ref="0x10fbaed70"/>
        <function-ref name="toggle" scoped="" ref="0x10fbad020"/>
        <function-ref name="isOutput" scoped="" ref="0x10fbad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10fbad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fbad4d0"/>
        <function-ref name="get" scoped="" ref="0x10fbad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10fbad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10fbad980"/>
        <function-ref name="set" scoped="" ref="0x10fbadb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10fbadca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10fbade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10fbac120"/>
        <function-ref name="clr" scoped="" ref="0x10fbac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10fc3b110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10fc3b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10fc3a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10fc3a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10fc3a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x10fc3ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x11109e970" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x11109e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x11109ecf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11109ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111098a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111098a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111098dd0"/>
        <function-ref name="configure" scoped="" ref="0x111097020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x1110982b0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1110982b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111098630"/>
        <function-ref name="txDone" scoped="" ref="0x1110987c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11109fcc0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11109fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11109e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11109e230"/>
        <function-ref name="request" scoped="" ref="0x11109e3c0"/>
        <function-ref name="granted" scoped="" ref="0x11109e550"/>
        <function-ref name="isOwner" scoped="" ref="0x11109e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x11109d8d0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x11109d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11109dc50"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11109dde0"/>
        <function-ref name="setUctl" scoped="" ref="0x11109c020"/>
        <function-ref name="enableUart" scoped="" ref="0x11109c1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x11109c340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11109c4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11109c660"/>
        <function-ref name="getUtctl" scoped="" ref="0x11109c7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x11109c980"/>
        <function-ref name="resetUsart" scoped="" ref="0x11109cb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x11109cca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x11109ce30"/>
        <function-ref name="setUtctl" scoped="" ref="0x11109b020"/>
        <function-ref name="getUbr" scoped="" ref="0x11109b2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11109b440"/>
        <function-ref name="setUmctl" scoped="" ref="0x11109b5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x11109b760"/>
        <function-ref name="isUart" scoped="" ref="0x11109b8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x11109ba80"/>
        <function-ref name="isSpi" scoped="" ref="0x11109bc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x11109bda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x11109a020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x11109a1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x11109a340"/>
        <function-ref name="getMode" scoped="" ref="0x11109a4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x11109a860"/>
        <function-ref name="clrIntr" scoped="" ref="0x11109a9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x11109ab80"/>
        <function-ref name="tx" scoped="" ref="0x11109ad10"/>
        <function-ref name="getUctl" scoped="" ref="0x111099020"/>
        <function-ref name="disableUart" scoped="" ref="0x1110991b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x111099340"/>
        <function-ref name="setModeUart" scoped="" ref="0x1110994d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111099660"/>
        <function-ref name="rx" scoped="" ref="0x1110997f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111099980"/>
        <function-ref name="isUartTx" scoped="" ref="0x111099b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111099ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x111099e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111098020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x11109d130" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x11109d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x11109d4b0"/>
        <function-ref name="userId" scoped="" ref="0x11109d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10fc1fbc0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10fc1fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10fc1d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10fc1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10fc1c280" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10fc1c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10fc1c600"/>
        <function-ref name="configure" scoped="" ref="0x10fc1c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10fc21980" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10fc21980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10fc21d00"/>
        <function-ref name="txDone" scoped="" ref="0x10fc20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fc20850" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fc20850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fc20bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fc20d60"/>
        <function-ref name="request" scoped="" ref="0x10fc1f020"/>
        <function-ref name="granted" scoped="" ref="0x10fc1f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x10fc1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10fc1d4b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10fc1d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10fc1d830"/>
        <function-ref name="userId" scoped="" ref="0x10fc1d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x10fc4ca90" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10fc4ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10fc4ce10"/>
        <function-ref name="userId" scoped="" ref="0x10fc4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10fc1ab60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10fc1ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10fc4d020"/>
        <function-ref name="txDone" scoped="" ref="0x10fc4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x10fc4c480" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x10fc4c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10fc4c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x10fc4d5b0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x10fc4d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10fc4d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x10fc4dc20" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x10fc4dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10fc4c020"/>
        <function-ref name="txDone" scoped="" ref="0x10fc4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10fced020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10fced020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10fced3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10fced550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10fceccd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10fceccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10fceb0a0"/>
        <function-ref name="configure" scoped="" ref="0x10fceb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x10fced7a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10fced7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fcedb20"/>
        <function-ref name="requested" scoped="" ref="0x10fcedcb0"/>
        <function-ref name="granted" scoped="" ref="0x10fcede40"/>
        <function-ref name="isOwner" scoped="" ref="0x10fcec020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10fcec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fca6210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fca6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fca65b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fca6740"/>
        <function-ref name="request" scoped="" ref="0x10fca68d0"/>
        <function-ref name="granted" scoped="" ref="0x10fca6a60"/>
        <function-ref name="isOwner" scoped="" ref="0x10fca6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10fcec400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10fcec400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10fcec780"/>
        <function-ref name="userId" scoped="" ref="0x10fcec910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1110cdca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1110cdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1110cc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x1110cc330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x1110cc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1110cc6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x1110cc840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1110cc9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x1110ccb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1110c83a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1110c83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1110c8740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1110c88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1110c6210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1110c6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1110c65b0"/>
        <function-ref name="configure" scoped="" ref="0x1110c6740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1110c69d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1110c69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1110c6d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x1110c5020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1110c51b0"/>
        <function-ref name="dequeue" scoped="" ref="0x1110c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1110c8b20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1110c8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1110c7020"/>
        <function-ref name="requested" scoped="" ref="0x1110c71b0"/>
        <function-ref name="granted" scoped="" ref="0x1110c7340"/>
        <function-ref name="isOwner" scoped="" ref="0x1110c74d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1110c7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1110c5590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1110c5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1110c5910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1110c5aa0"/>
        <function-ref name="led1On" scoped="" ref="0x1110c5c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1110c5dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1110c4020"/>
        <function-ref name="get" scoped="" ref="0x1110c41b0"/>
        <function-ref name="led1Off" scoped="" ref="0x1110c4340"/>
        <function-ref name="led0On" scoped="" ref="0x1110c4980"/>
        <function-ref name="set" scoped="" ref="0x1110c4660"/>
        <function-ref name="led2On" scoped="" ref="0x1110c44d0"/>
        <function-ref name="led2Off" scoped="" ref="0x1110c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1110c9540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1110c9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1110c98e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1110c9a70"/>
        <function-ref name="request" scoped="" ref="0x1110c9c00"/>
        <function-ref name="granted" scoped="" ref="0x1110c9d90"/>
        <function-ref name="isOwner" scoped="" ref="0x1110c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1110c78b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1110c78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1110c7c30"/>
        <function-ref name="userId" scoped="" ref="0x1110c7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1110c4c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x1110c4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1110c2020"/>
        <function-ref name="runTask" scoped="" ref="0x1110c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x10fcd1400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x10fcd1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x10fcd1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x10fcd19d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x10fcd19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fcd1d50"/>
        <function-ref name="requested" scoped="" ref="0x10fcd0020"/>
        <function-ref name="granted" scoped="" ref="0x10fcd01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x10fcd0340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10fcd04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x10fce7b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x10fce7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10fcd1020"/>
        <function-ref name="stop" scoped="" ref="0x10fcd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x10fcd0720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10fcd0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10fcd0aa0"/>
        <function-ref name="userId" scoped="" ref="0x10fcd0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x111129b00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x111129b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x111129e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x1111280f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1111280f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111128470"/>
        <function-ref name="requested" scoped="" ref="0x111128600"/>
        <function-ref name="granted" scoped="" ref="0x111128790"/>
        <function-ref name="isOwner" scoped="" ref="0x111128920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111128ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x1111293a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x1111293a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111129720"/>
        <function-ref name="stop" scoped="" ref="0x1111298b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x111128d00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111128d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1111270a0"/>
        <function-ref name="userId" scoped="" ref="0x111127230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x10fcf9020" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x10fcf9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10fcf93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x10fcf9690" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fcf9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fcf9a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fcf9ba0"/>
        <function-ref name="request" scoped="" ref="0x10fcf9d30"/>
        <function-ref name="granted" scoped="" ref="0x10fcf8020"/>
        <function-ref name="isOwner" scoped="" ref="0x10fcf81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10fcfc790" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10fcfc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10fcfcb10"/>
        <function-ref name="stop" scoped="" ref="0x10fcfcca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10fcee970" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10fcee970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10fceecf0"/>
        <function-ref name="stopDone" scoped="" ref="0x10fceee80"/>
        <function-ref name="start" scoped="" ref="0x10fd34030"/>
        <function-ref name="stop" scoped="" ref="0x10fd341c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10fd34990" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10fd34990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fd34d10"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd33020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd331b0"/>
        <function-ref name="cancel" scoped="" ref="0x10fd33340"/>
        <function-ref name="sendDone" scoped="" ref="0x10fd334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10fd31900" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10fd31900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10fd31c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10fd30020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10fd30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10fd303a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10fd30530"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd306c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd30850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10fd309e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x10fd2c310" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10fd2c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10fd27880"/>
        <function-ref name="clear" scoped="" ref="0x10fd1f020"/>
        <function-ref name="isValid" scoped="" ref="0x10fd27150"/>
        <function-ref name="set" scoped="" ref="0x10fd1f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10fd12130" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10fd12130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10fd124b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10fd12640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10fd127d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10fd12960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10fd33cb0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10fd33cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10fd310a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10fd2d080" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd2d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10fd2d400"/>
        <function-ref name="noAck" scoped="" ref="0x10fd2d590"/>
        <function-ref name="wasAcked" scoped="" ref="0x10fd2d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10fd30c90" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10fd30c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10fd2f0a0"/>
        <function-ref name="source" scoped="" ref="0x10fd2f230"/>
        <function-ref name="address" scoped="" ref="0x10fd2f3c0"/>
        <function-ref name="destination" scoped="" ref="0x10fd2f550"/>
        <function-ref name="setSource" scoped="" ref="0x10fd2f6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x10fd2f870"/>
        <function-ref name="type" scoped="" ref="0x10fd2fa00"/>
        <function-ref name="setType" scoped="" ref="0x10fd2fb90"/>
        <function-ref name="isForMe" scoped="" ref="0x10fd2fd20"/>
        <function-ref name="setGroup" scoped="" ref="0x10fd2e020"/>
        <function-ref name="localGroup" scoped="" ref="0x10fd2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x10fd1d3f0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x10fd1d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10fd1c970"/>
        <function-ref name="clear" scoped="" ref="0x10fd1b0d0"/>
        <function-ref name="isValid" scoped="" ref="0x10fd1c240"/>
        <function-ref name="set" scoped="" ref="0x10fd1b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10fd4f020" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10fd4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10fd4f3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x10fd4f530"/>
        <function-ref name="start" scoped="" ref="0x10fd4f6c0"/>
        <function-ref name="stop" scoped="" ref="0x10fd4f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10fd3f020" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10fd3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10fd3f3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10fd3f530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10fd3f6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10fd3f850"/>
        <function-ref name="setCca" scoped="" ref="0x10fd3f9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10fd3fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x10fd7e020" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x10fd7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x10fd7e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10fd4aa80" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10fd4aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10fd4ae00"/>
        <function-ref name="payloadLength" scoped="" ref="0x10fd49020"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd491b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd49340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10fd494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10fd4e050" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10fd4e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fd4e3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd4e560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd4e6f0"/>
        <function-ref name="cancel" scoped="" ref="0x10fd4e880"/>
        <function-ref name="sendDone" scoped="" ref="0x10fd4ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x10fd4ddf0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x10fd4ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10fd4c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x10fd41c20" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10fd41c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10fd48020"/>
        <function-ref name="setNetwork" scoped="" ref="0x10fd481b0"/>
        <function-ref name="getRssi" scoped="" ref="0x10fd48340"/>
        <function-ref name="getNetwork" scoped="" ref="0x10fd484d0"/>
        <function-ref name="getPower" scoped="" ref="0x10fd48660"/>
        <function-ref name="getLqi" scoped="" ref="0x10fd487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10fd3fe70" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10fd3fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10fd7f220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10fd7f3b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10fd7f540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10fd7f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10fd4d210" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10fd4d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10fd4d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10fd48b20" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd48b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10fd47020"/>
        <function-ref name="noAck" scoped="" ref="0x10fd471b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10fd47340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x10fd760d0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x10fd760d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x10fd76450"/>
        <function-ref name="setRetries" scoped="" ref="0x10fd765e0"/>
        <function-ref name="getRetries" scoped="" ref="0x10fd76770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x10fd76900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x10fd76a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10fd4c470" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10fd4c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10fd4c7f0"/>
        <function-ref name="source" scoped="" ref="0x10fd4c980"/>
        <function-ref name="address" scoped="" ref="0x10fd4cb10"/>
        <function-ref name="destination" scoped="" ref="0x10fd4cca0"/>
        <function-ref name="setSource" scoped="" ref="0x10fd4ce30"/>
        <function-ref name="setDestination" scoped="" ref="0x10fd4a020"/>
        <function-ref name="type" scoped="" ref="0x10fd4a1b0"/>
        <function-ref name="setType" scoped="" ref="0x10fd4a340"/>
        <function-ref name="isForMe" scoped="" ref="0x10fd4a4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x10fd4a660"/>
        <function-ref name="localGroup" scoped="" ref="0x10fd4a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10fd3eda0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10fd3eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10fd40180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10fd7dd80" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10fd7dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10fd70180"/>
        <function-ref name="stopDone" scoped="" ref="0x10fd70310"/>
        <function-ref name="start" scoped="" ref="0x10fd704a0"/>
        <function-ref name="stop" scoped="" ref="0x10fd70630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10fd604c0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10fd604c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10fd60840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x10fd5f790" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x10fd5f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x10fd5fb10"/>
        <function-ref name="setRetries" scoped="" ref="0x10fd5fca0"/>
        <function-ref name="getRetries" scoped="" ref="0x10fd5fe30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x10fd5e020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x10fd5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x10fd649e0" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10fd649e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10fd64d60"/>
        <function-ref name="setNetwork" scoped="" ref="0x10fd61020"/>
        <function-ref name="getRssi" scoped="" ref="0x10fd611b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10fd61340"/>
        <function-ref name="getPower" scoped="" ref="0x10fd614d0"/>
        <function-ref name="getLqi" scoped="" ref="0x10fd61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x10fd6c4e0" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x10fd6c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fd6c860"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd6c9f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd6cb80"/>
        <function-ref name="cancel" scoped="" ref="0x10fd6cd10"/>
        <function-ref name="sendDone" scoped="" ref="0x10fd64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x10fd60b40" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x10fd60b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x10fd5f020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x10fd5f1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x10fd5f340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x10fd5f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x10fd6d020" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x10fd6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10fd6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10fd61990" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10fd61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10fd61d10"/>
        <function-ref name="noAck" scoped="" ref="0x10fd60020"/>
        <function-ref name="wasAcked" scoped="" ref="0x10fd601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fd70e60" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fd70e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fd6f210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fd6f3a0"/>
        <function-ref name="request" scoped="" ref="0x10fd6f530"/>
        <function-ref name="granted" scoped="" ref="0x10fd6f6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x10fd6f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x10fd63240" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x10fd63240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fd635c0"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd63750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd638e0"/>
        <function-ref name="cancel" scoped="" ref="0x10fd63a70"/>
        <function-ref name="sendDone" scoped="" ref="0x10fd63c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x10fd6d6e0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x10fd6d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10fd6da60"/>
        <function-ref name="payloadLength" scoped="" ref="0x10fd6dbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd6dd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd6c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10fd6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x10fd64390" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x10fd64390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10fd64710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10fda5020" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10fda5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10fda53a0"/>
        <function-ref name="stopDone" scoped="" ref="0x10fda5530"/>
        <function-ref name="start" scoped="" ref="0x10fda56c0"/>
        <function-ref name="stop" scoped="" ref="0x10fda5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10fda3020" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10fda3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10fda33a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10fda3530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10fda36c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10fda3850"/>
        <function-ref name="setCca" scoped="" ref="0x10fda39e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10fda3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10fda5b10" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10fda5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fda4020"/>
        <function-ref name="getPayload" scoped="" ref="0x10fda41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fda4340"/>
        <function-ref name="cancel" scoped="" ref="0x10fda44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x10fda4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10fda4940" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10fda4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10fda4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x10fda2b80" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x10fda2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10fd9f020"/>
        <function-ref name="stopDone" scoped="" ref="0x10fd9f1b0"/>
        <function-ref name="start" scoped="" ref="0x10fd9f340"/>
        <function-ref name="stop" scoped="" ref="0x10fd9f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10fd9e4c0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10fd9e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10fd9e840"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10fd9e9d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10fd9eb60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10fd9ecf0"/>
        <function-ref name="setCca" scoped="" ref="0x10fd9ee80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10fd9d030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x10fd93700" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x10fd93700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10fd93a80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10fd93c10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10fd93da0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10fd92020"/>
        <function-ref name="setCca" scoped="" ref="0x10fd921b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10fd92340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10fd8ab00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10fd8ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10fd8ae80"/>
        <function-ref name="setNetwork" scoped="" ref="0x10fd88030"/>
        <function-ref name="getRssi" scoped="" ref="0x10fd881c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10fd88350"/>
        <function-ref name="getPower" scoped="" ref="0x10fd884e0"/>
        <function-ref name="getLqi" scoped="" ref="0x10fd88670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x10fd8c810" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x10fd8c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fd8cb90"/>
        <function-ref name="cancel" scoped="" ref="0x10fd8cd20"/>
        <function-ref name="modify" scoped="" ref="0x10fd93020"/>
        <function-ref name="sendDone" scoped="" ref="0x10fd931b0"/>
        <function-ref name="resend" scoped="" ref="0x10fd93340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10fd9f790" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10fd9f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10fd9fb10"/>
        <function-ref name="getPayload" scoped="" ref="0x10fd9fca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10fd9fe30"/>
        <function-ref name="cancel" scoped="" ref="0x10fd9e020"/>
        <function-ref name="sendDone" scoped="" ref="0x10fd9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x10fd89b60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10fd89b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10fd8b020"/>
        <function-ref name="rand32" scoped="" ref="0x10fd8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x10fd9bba0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x10fd9bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10fd9a020"/>
        <function-ref name="stop" scoped="" ref="0x10fd9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10fdcb130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10fdcb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10fdcb4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x10fdcb640"/>
        <function-ref name="getMetadata" scoped="" ref="0x10fdcb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x10fd95880" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10fd95880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10fd95c00"/>
        <function-ref name="rfOff" scoped="" ref="0x10fd95d90"/>
        <function-ref name="rxOn" scoped="" ref="0x10fd9b020"/>
        <function-ref name="startVReg" scoped="" ref="0x10fd9b1b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x10fd9b340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10fd9b4d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10fd9b660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10fd9b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10fd8b470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10fd8b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10fd8b7f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10fd8b980"/>
        <function-ref name="led1On" scoped="" ref="0x10fd8bb10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10fd8bca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10fd8be30"/>
        <function-ref name="get" scoped="" ref="0x10fd8a020"/>
        <function-ref name="led1Off" scoped="" ref="0x10fd8a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x10fd8a7f0"/>
        <function-ref name="set" scoped="" ref="0x10fd8a340"/>
        <function-ref name="led0On" scoped="" ref="0x10fd8a4d0"/>
        <function-ref name="led2On" scoped="" ref="0x10fd8a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x10fd9d320" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fd9d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fd9d6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fd9d830"/>
        <function-ref name="request" scoped="" ref="0x10fd9d9c0"/>
        <function-ref name="granted" scoped="" ref="0x10fd9db50"/>
        <function-ref name="isOwner" scoped="" ref="0x10fd9dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x10fdc7850" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x10fdc7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10fdc7cd0"/>
        <function-ref name="toIdle" scoped="" ref="0x10fdc7e60"/>
        <function-ref name="isState" scoped="" ref="0x10fd87020"/>
        <function-ref name="isIdle" scoped="" ref="0x10fd871b0"/>
        <function-ref name="requestState" scoped="" ref="0x10fd87340"/>
        <function-ref name="forceState" scoped="" ref="0x10fd874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x10fdc22a0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x10fdc22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fdc2620"/>
        <function-ref name="runTask" scoped="" ref="0x10fdc27b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x10fdc32a0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x10fdc32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fdc3620"/>
        <function-ref name="runTask" scoped="" ref="0x10fdc37b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x10fdc42b0" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x10fdc42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fdc4630"/>
        <function-ref name="runTask" scoped="" ref="0x10fdc47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x10fe02550" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10fe02550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10fe028d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10fe02a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10fe02bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x10fe02d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10fe0f020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10fe0f1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x10fe0f340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10fe0f4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10fe0f660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10fe0f7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10fe0f980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10fe0fb10"/>
        <function-ref name="sync" scoped="" ref="0x10fe0fca0"/>
        <function-ref name="getChannel" scoped="" ref="0x10fe0e020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10fe0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x10fdfd850" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x10fdfd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe00480"/>
        <function-ref name="readDone" scoped="" ref="0x10fe00900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x10fe0e4b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10fe0e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10fe0e830"/>
        <function-ref name="rfOff" scoped="" ref="0x10fe0e9c0"/>
        <function-ref name="rxOn" scoped="" ref="0x10fe0eb50"/>
        <function-ref name="startVReg" scoped="" ref="0x10fe0ece0"/>
        <function-ref name="stopVReg" scoped="" ref="0x10fe0ee70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10fe01030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10fe011c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10fe01350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fe10020" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fe10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fe103a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fe10530"/>
        <function-ref name="request" scoped="" ref="0x10fe106c0"/>
        <function-ref name="granted" scoped="" ref="0x10fe10850"/>
        <function-ref name="isOwner" scoped="" ref="0x10fe109e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x10fdf80c0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10fdf80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10fdf8440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10fdf85d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10fdf8760"/>
        <function-ref name="syncDone" scoped="" ref="0x10fdf88f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10fdf8a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10fdf8c10"/>
        <function-ref name="setChannel" scoped="" ref="0x10fdf8da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10fdf7020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10fdf71b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10fdf7340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10fdf74d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10fdf7660"/>
        <function-ref name="sync" scoped="" ref="0x10fdf77f0"/>
        <function-ref name="getChannel" scoped="" ref="0x10fdf7a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10fdf7c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x10fe26720" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10fe26720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe26aa0"/>
        <function-ref name="write" scoped="" ref="0x10fe26c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x10fe3d970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10fe3d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x10fe3dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x10fe3e3a0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x10fe3e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10fe3bbe0"/>
        <function-ref name="fired" scoped="" ref="0x10fe3cbc0"/>
        <function-ref name="startAt" scoped="" ref="0x10fe3b590"/>
        <function-ref name="isRunning" scoped="" ref="0x10fe3b0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x10fe3a0d0"/>
        <function-ref name="start" scoped="" ref="0x10fe3c1f0"/>
        <function-ref name="stop" scoped="" ref="0x10fe3c700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x10fe2a570" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10fe2a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe2a8f0"/>
        <function-ref name="write" scoped="" ref="0x10fe2aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x10fe38830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x10fe38830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fe38bb0"/>
        <function-ref name="isInput" scoped="" ref="0x10fe38d40"/>
        <function-ref name="toggle" scoped="" ref="0x10fe37020"/>
        <function-ref name="isOutput" scoped="" ref="0x10fe371b0"/>
        <function-ref name="get" scoped="" ref="0x10fe37340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fe374d0"/>
        <function-ref name="set" scoped="" ref="0x10fe37660"/>
        <function-ref name="clr" scoped="" ref="0x10fe377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x10fdf5500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x10fdf5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fdf4130"/>
        <function-ref name="readDone" scoped="" ref="0x10fdf45b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x10fe62820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x10fe62820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fe62ba0"/>
        <function-ref name="runTask" scoped="" ref="0x10fe62d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x10fe25020" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10fe25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe253a0"/>
        <function-ref name="write" scoped="" ref="0x10fe25530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x10fe258d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10fe258d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe25c50"/>
        <function-ref name="write" scoped="" ref="0x10fe25de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x10fe2f3c0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10fe2f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe2f740"/>
        <function-ref name="write" scoped="" ref="0x10fe2f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x10fe306b0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x10fe306b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x10fe30a30"/>
        <function-ref name="changed" scoped="" ref="0x10fe30bc0"/>
        <function-ref name="amGroup" scoped="" ref="0x10fe30d50"/>
        <function-ref name="setAddress" scoped="" ref="0x10fe34020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x10fe3a5c0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x10fe3a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fe3a940"/>
        <function-ref name="isInput" scoped="" ref="0x10fe3aad0"/>
        <function-ref name="toggle" scoped="" ref="0x10fe3ac60"/>
        <function-ref name="isOutput" scoped="" ref="0x10fe3adf0"/>
        <function-ref name="get" scoped="" ref="0x10fe38020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fe381b0"/>
        <function-ref name="set" scoped="" ref="0x10fe38340"/>
        <function-ref name="clr" scoped="" ref="0x10fe384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x10fe22020" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10fe22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10fe225a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x10fe37b50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x10fe37b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fe36020"/>
        <function-ref name="isInput" scoped="" ref="0x10fe361b0"/>
        <function-ref name="toggle" scoped="" ref="0x10fe36340"/>
        <function-ref name="isOutput" scoped="" ref="0x10fe364d0"/>
        <function-ref name="get" scoped="" ref="0x10fe36660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fe367f0"/>
        <function-ref name="set" scoped="" ref="0x10fe36980"/>
        <function-ref name="clr" scoped="" ref="0x10fe36b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10fdfccc0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10fdfccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10fdf90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x10fe2ae40" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10fe2ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe261e0"/>
        <function-ref name="write" scoped="" ref="0x10fe26370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x10fe22940" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10fe22940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10fe22cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10fe210d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10fe210d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fe21450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fe215e0"/>
        <function-ref name="request" scoped="" ref="0x10fe21770"/>
        <function-ref name="granted" scoped="" ref="0x10fe21900"/>
        <function-ref name="isOwner" scoped="" ref="0x10fe21a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x10fe20bd0" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x10fe20bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fe1f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fe1f1b0"/>
        <function-ref name="request" scoped="" ref="0x10fe1f340"/>
        <function-ref name="granted" scoped="" ref="0x10fe1f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10fe1f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x10fdf6020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10fdf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10fdf63a0"/>
        <function-ref name="rfOff" scoped="" ref="0x10fdf6530"/>
        <function-ref name="rxOn" scoped="" ref="0x10fdf66c0"/>
        <function-ref name="startVReg" scoped="" ref="0x10fdf6850"/>
        <function-ref name="stopVReg" scoped="" ref="0x10fdf69e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10fdf6b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10fdf6d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10fdf5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x10fe2fc70" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10fe2fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe2a020"/>
        <function-ref name="write" scoped="" ref="0x10fe2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x10fe289b0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10fe289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe28d30"/>
        <function-ref name="write" scoped="" ref="0x10fe2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x10fe23120" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10fe23120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10fe234a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10fe1f920" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10fe1f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10fe1fca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10fe1fe30"/>
        <function-ref name="led1On" scoped="" ref="0x10fe1e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10fe1e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10fe1e340"/>
        <function-ref name="get" scoped="" ref="0x10fe1e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x10fe1e660"/>
        <function-ref name="led2Off" scoped="" ref="0x10fe1eca0"/>
        <function-ref name="set" scoped="" ref="0x10fe1e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x10fe1e980"/>
        <function-ref name="led2On" scoped="" ref="0x10fe1eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x10fe63940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x10fe63940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10fe63cc0"/>
        <function-ref name="runTask" scoped="" ref="0x10fe63e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10fdf9390" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10fdf9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fdf9710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fdf98a0"/>
        <function-ref name="request" scoped="" ref="0x10fdf9a30"/>
        <function-ref name="granted" scoped="" ref="0x10fdf9bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x10fdf9d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x10fe33200" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10fe33200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe33580"/>
        <function-ref name="write" scoped="" ref="0x10fe33710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x10fe2b830" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10fe2b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10fe2bcb0"/>
        <function-ref name="write" scoped="" ref="0x10fe2be40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x10fe35020" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x10fe35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10fe353a0"/>
        <function-ref name="disable" scoped="" ref="0x10fe35530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10fe356c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10fe35850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x10fe21e40" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x10fe21e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10fe201e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10fe20370"/>
        <function-ref name="request" scoped="" ref="0x10fe20500"/>
        <function-ref name="granted" scoped="" ref="0x10fe20690"/>
        <function-ref name="isOwner" scoped="" ref="0x10fe20820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x10fe23830" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10fe23830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10fe23bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10fed97e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10fed97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10fed9b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x10fed6220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x10fed6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10fed4b30"/>
        <function-ref name="fired" scoped="" ref="0x10fed5a60"/>
        <function-ref name="startAt" scoped="" ref="0x10fed44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x10fed4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x10fed2020"/>
        <function-ref name="start" scoped="" ref="0x10fed5090"/>
        <function-ref name="stop" scoped="" ref="0x10fed55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10fed0260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10fed0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10fed05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x10fed0af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x10fed0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10fee6390"/>
        <function-ref name="fired" scoped="" ref="0x10fee7360"/>
        <function-ref name="startAt" scoped="" ref="0x10fee7ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x10fee7820"/>
        <function-ref name="getAlarm" scoped="" ref="0x10fee6850"/>
        <function-ref name="start" scoped="" ref="0x10fee8970"/>
        <function-ref name="stop" scoped="" ref="0x10fee8e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1110ff020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1110ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1110fd870"/>
        <function-ref name="fired" scoped="" ref="0x1110fe840"/>
        <function-ref name="startAt" scoped="" ref="0x1110fd220"/>
        <function-ref name="isRunning" scoped="" ref="0x1110fed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x1110fdd30"/>
        <function-ref name="start" scoped="" ref="0x1110ffe30"/>
        <function-ref name="stop" scoped="" ref="0x1110fe380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111100720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111100720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111100aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x11118f020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x11118f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11118c870"/>
        <function-ref name="fired" scoped="" ref="0x11118d840"/>
        <function-ref name="startAt" scoped="" ref="0x11118c220"/>
        <function-ref name="isRunning" scoped="" ref="0x11118dd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x11118cd30"/>
        <function-ref name="start" scoped="" ref="0x11118fe30"/>
        <function-ref name="stop" scoped="" ref="0x11118d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111190760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111190760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111190ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1111768f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1111768f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x111176c70"/>
        <function-ref name="setEvent" scoped="" ref="0x111176e00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x111175020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1111751b0"/>
        <function-ref name="fired" scoped="" ref="0x111175340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x11117ae70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11117ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111178220"/>
        <function-ref name="setClockSource" scoped="" ref="0x1111783b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x111178540"/>
        <function-ref name="get" scoped="" ref="0x1111786d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x111178860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1111789f0"/>
        <function-ref name="getMode" scoped="" ref="0x111178b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111178d10"/>
        <function-ref name="overflow" scoped="" ref="0x111177020"/>
        <function-ref name="setMode" scoped="" ref="0x1111771b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x111177340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1111775d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1111775d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x111177950"/>
        <function-ref name="getControl" scoped="" ref="0x111177ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x111177c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x111177e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x111176020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1111761b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x111176340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1111764d0"/>
        <function-ref name="setControl" scoped="" ref="0x111176660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x11116c760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x11116c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11116cae0"/>
        <function-ref name="setEvent" scoped="" ref="0x11116cc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11116ce00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11116b020"/>
        <function-ref name="fired" scoped="" ref="0x11116b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x111170dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x111170dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11116e180"/>
        <function-ref name="setClockSource" scoped="" ref="0x11116e310"/>
        <function-ref name="enableEvents" scoped="" ref="0x11116e4a0"/>
        <function-ref name="get" scoped="" ref="0x11116e630"/>
        <function-ref name="disableEvents" scoped="" ref="0x11116e7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11116e950"/>
        <function-ref name="getMode" scoped="" ref="0x11116eae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11116ec70"/>
        <function-ref name="overflow" scoped="" ref="0x11116ee00"/>
        <function-ref name="setMode" scoped="" ref="0x11116d020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x11116d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x111173bd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111173bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1111704e0"/>
        <function-ref name="fired" scoped="" ref="0x1111714e0"/>
        <function-ref name="startAt" scoped="" ref="0x111171e60"/>
        <function-ref name="isRunning" scoped="" ref="0x1111719a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1111709a0"/>
        <function-ref name="start" scoped="" ref="0x111172a80"/>
        <function-ref name="stop" scoped="" ref="0x111171020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111173340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111173340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1111736c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x11116d440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x11116d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x11116d7c0"/>
        <function-ref name="getControl" scoped="" ref="0x11116d950"/>
        <function-ref name="enableEvents" scoped="" ref="0x11116dae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x11116dc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x11116de00"/>
        <function-ref name="disableEvents" scoped="" ref="0x11116c020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x11116c1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x11116c340"/>
        <function-ref name="setControl" scoped="" ref="0x11116c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10feba080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10feba080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10feb9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10feb99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10feb94e0"/>
        <function-ref name="overflow" scoped="" ref="0x10feb9e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10ff010f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10ff010f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ff00020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ff009a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ff004e0"/>
        <function-ref name="overflow" scoped="" ref="0x10ff00e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10feb5cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10feb5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10ff04b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ff03550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ff03090"/>
        <function-ref name="overflow" scoped="" ref="0x10ff03a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1111891d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1111891d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111187b30"/>
        <function-ref name="fired" scoped="" ref="0x1111889f0"/>
        <function-ref name="startAt" scoped="" ref="0x1111874e0"/>
        <function-ref name="isRunning" scoped="" ref="0x111187020"/>
        <function-ref name="getAlarm" scoped="" ref="0x111185020"/>
        <function-ref name="start" scoped="" ref="0x111188020"/>
        <function-ref name="stop" scoped="" ref="0x111188530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x111183b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x111183b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11117f4e0"/>
        <function-ref name="fired" scoped="" ref="0x1111814e0"/>
        <function-ref name="startAt" scoped="" ref="0x111181e60"/>
        <function-ref name="isRunning" scoped="" ref="0x1111819a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x11117f9a0"/>
        <function-ref name="start" scoped="" ref="0x1111829d0"/>
        <function-ref name="stop" scoped="" ref="0x111181020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x111185690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111185690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1111845b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111183020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111184a70"/>
        <function-ref name="overflow" scoped="" ref="0x1111834e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x10fedf090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x10fedf090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fedf410"/>
        <function-ref name="isInput" scoped="" ref="0x10fedf5a0"/>
        <function-ref name="toggle" scoped="" ref="0x10fedf730"/>
        <function-ref name="isOutput" scoped="" ref="0x10fedf8c0"/>
        <function-ref name="get" scoped="" ref="0x10fedfa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fedfbe0"/>
        <function-ref name="set" scoped="" ref="0x10fedfd70"/>
        <function-ref name="clr" scoped="" ref="0x10fede020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x10fede390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x10fede390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fede710"/>
        <function-ref name="isInput" scoped="" ref="0x10fede8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10fedea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10fedebc0"/>
        <function-ref name="get" scoped="" ref="0x10feded50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fedd020"/>
        <function-ref name="set" scoped="" ref="0x10fedd1b0"/>
        <function-ref name="clr" scoped="" ref="0x10fedd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x10fedd6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x10fedd6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fedda20"/>
        <function-ref name="isInput" scoped="" ref="0x10feddbb0"/>
        <function-ref name="toggle" scoped="" ref="0x10feddd40"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff2c020"/>
        <function-ref name="get" scoped="" ref="0x10ff2c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff2c340"/>
        <function-ref name="set" scoped="" ref="0x10ff2c4d0"/>
        <function-ref name="clr" scoped="" ref="0x10ff2c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x10fee1e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x10fee1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fee0210"/>
        <function-ref name="isInput" scoped="" ref="0x10fee03a0"/>
        <function-ref name="toggle" scoped="" ref="0x10fee0530"/>
        <function-ref name="isOutput" scoped="" ref="0x10fee06c0"/>
        <function-ref name="get" scoped="" ref="0x10fee0850"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fee09e0"/>
        <function-ref name="set" scoped="" ref="0x10fee0b70"/>
        <function-ref name="clr" scoped="" ref="0x10fee0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x10ff2bce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x10ff2bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff2a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10ff2a230"/>
        <function-ref name="toggle" scoped="" ref="0x10ff2a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff2a550"/>
        <function-ref name="get" scoped="" ref="0x10ff2a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff2a870"/>
        <function-ref name="set" scoped="" ref="0x10ff2aa00"/>
        <function-ref name="clr" scoped="" ref="0x10ff2ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x10fed7b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x10fed7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10fee1020"/>
        <function-ref name="isInput" scoped="" ref="0x10fee11b0"/>
        <function-ref name="toggle" scoped="" ref="0x10fee1340"/>
        <function-ref name="isOutput" scoped="" ref="0x10fee14d0"/>
        <function-ref name="get" scoped="" ref="0x10fee1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10fee17f0"/>
        <function-ref name="set" scoped="" ref="0x10fee1980"/>
        <function-ref name="clr" scoped="" ref="0x10fee1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x10ff2c9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x10ff2c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff2cd30"/>
        <function-ref name="isInput" scoped="" ref="0x10ff2b020"/>
        <function-ref name="toggle" scoped="" ref="0x10ff2b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff2b340"/>
        <function-ref name="get" scoped="" ref="0x10ff2b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff2b660"/>
        <function-ref name="set" scoped="" ref="0x10ff2b7f0"/>
        <function-ref name="clr" scoped="" ref="0x10ff2b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10ff272f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff27670"/>
        <function-ref name="isInput" scoped="" ref="0x10ff27800"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff27990"/>
        <function-ref name="toggle" scoped="" ref="0x10ff27b20"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff27cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff27e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff26020"/>
        <function-ref name="get" scoped="" ref="0x10ff261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff26340"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff264d0"/>
        <function-ref name="set" scoped="" ref="0x10ff26660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff267f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff26980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff26c10"/>
        <function-ref name="clr" scoped="" ref="0x10ff26da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10ff28020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff283a0"/>
        <function-ref name="isInput" scoped="" ref="0x10ff28530"/>
        <function-ref name="toggle" scoped="" ref="0x10ff286c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff28850"/>
        <function-ref name="get" scoped="" ref="0x10ff289e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff28b70"/>
        <function-ref name="set" scoped="" ref="0x10ff28d00"/>
        <function-ref name="clr" scoped="" ref="0x10ff27020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10ff23de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff23de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff22180"/>
        <function-ref name="isInput" scoped="" ref="0x10ff22310"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff224a0"/>
        <function-ref name="toggle" scoped="" ref="0x10ff22630"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff227c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff22950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff22ae0"/>
        <function-ref name="get" scoped="" ref="0x10ff22c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff22e00"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff21020"/>
        <function-ref name="set" scoped="" ref="0x10ff211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff21340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff21760"/>
        <function-ref name="clr" scoped="" ref="0x10ff218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10ff24b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff24b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff23020"/>
        <function-ref name="isInput" scoped="" ref="0x10ff231b0"/>
        <function-ref name="toggle" scoped="" ref="0x10ff23340"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff234d0"/>
        <function-ref name="get" scoped="" ref="0x10ff23660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff237f0"/>
        <function-ref name="set" scoped="" ref="0x10ff23980"/>
        <function-ref name="clr" scoped="" ref="0x10ff23b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10ff1e930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff1e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff1ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x10ff1ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff1c020"/>
        <function-ref name="toggle" scoped="" ref="0x10ff1c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff1c340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff1c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff1c660"/>
        <function-ref name="get" scoped="" ref="0x10ff1c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff1c980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff1cb10"/>
        <function-ref name="set" scoped="" ref="0x10ff1cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff1ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff1b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff1b2b0"/>
        <function-ref name="clr" scoped="" ref="0x10ff1b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10ff1f710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff1f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff1fa90"/>
        <function-ref name="isInput" scoped="" ref="0x10ff1fc20"/>
        <function-ref name="toggle" scoped="" ref="0x10ff1fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff1e020"/>
        <function-ref name="get" scoped="" ref="0x10ff1e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff1e340"/>
        <function-ref name="set" scoped="" ref="0x10ff1e4d0"/>
        <function-ref name="clr" scoped="" ref="0x10ff1e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10ff18480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff18480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff18800"/>
        <function-ref name="isInput" scoped="" ref="0x10ff18990"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff18b20"/>
        <function-ref name="toggle" scoped="" ref="0x10ff18cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff18e40"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff171b0"/>
        <function-ref name="get" scoped="" ref="0x10ff17340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff174d0"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff17660"/>
        <function-ref name="set" scoped="" ref="0x10ff177f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff17980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff17b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff17da0"/>
        <function-ref name="clr" scoped="" ref="0x10ff16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10ff191d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff191d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff19550"/>
        <function-ref name="isInput" scoped="" ref="0x10ff196e0"/>
        <function-ref name="toggle" scoped="" ref="0x10ff19870"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff19a00"/>
        <function-ref name="get" scoped="" ref="0x10ff19b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff19d20"/>
        <function-ref name="set" scoped="" ref="0x10ff18020"/>
        <function-ref name="clr" scoped="" ref="0x10ff181b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10ff13020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff133a0"/>
        <function-ref name="isInput" scoped="" ref="0x10ff13530"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff136c0"/>
        <function-ref name="toggle" scoped="" ref="0x10ff13850"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff139e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff13b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff13d00"/>
        <function-ref name="get" scoped="" ref="0x10ff12020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff12340"/>
        <function-ref name="set" scoped="" ref="0x10ff124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff12660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff12a80"/>
        <function-ref name="clr" scoped="" ref="0x10ff12c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10ff15d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff15d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff14180"/>
        <function-ref name="isInput" scoped="" ref="0x10ff14310"/>
        <function-ref name="toggle" scoped="" ref="0x10ff144a0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff14630"/>
        <function-ref name="get" scoped="" ref="0x10ff147c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff14950"/>
        <function-ref name="set" scoped="" ref="0x10ff14ae0"/>
        <function-ref name="clr" scoped="" ref="0x10ff14c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10ff0fde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff0fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff0e180"/>
        <function-ref name="isInput" scoped="" ref="0x10ff0e310"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff0e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x10ff0e630"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff0e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff0e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff0eae0"/>
        <function-ref name="get" scoped="" ref="0x10ff0ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff0ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff0d020"/>
        <function-ref name="set" scoped="" ref="0x10ff0d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff0d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff0d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff0d760"/>
        <function-ref name="clr" scoped="" ref="0x10ff0d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10ff10b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff10b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff0f020"/>
        <function-ref name="isInput" scoped="" ref="0x10ff0f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10ff0f340"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff0f4d0"/>
        <function-ref name="get" scoped="" ref="0x10ff0f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff0f7f0"/>
        <function-ref name="set" scoped="" ref="0x10ff0f980"/>
        <function-ref name="clr" scoped="" ref="0x10ff0fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10ff0a930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10ff0a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff0acb0"/>
        <function-ref name="isInput" scoped="" ref="0x10ff0ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff09020"/>
        <function-ref name="toggle" scoped="" ref="0x10ff091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff09340"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff09660"/>
        <function-ref name="get" scoped="" ref="0x10ff097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff09980"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff09b10"/>
        <function-ref name="set" scoped="" ref="0x10ff09ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff09e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff08020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff082b0"/>
        <function-ref name="clr" scoped="" ref="0x10ff08440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10ff0b710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff0b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff0ba90"/>
        <function-ref name="isInput" scoped="" ref="0x10ff0bc20"/>
        <function-ref name="toggle" scoped="" ref="0x10ff0bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff0a020"/>
        <function-ref name="get" scoped="" ref="0x10ff0a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff0a340"/>
        <function-ref name="set" scoped="" ref="0x10ff0a4d0"/>
        <function-ref name="clr" scoped="" ref="0x10ff0a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x10ff45150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x10ff45150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x10ff454d0"/>
        <function-ref name="disable" scoped="" ref="0x10ff45660"/>
        <function-ref name="captured" scoped="" ref="0x10ff457f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x10ff45980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x10ff45d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x10ff45d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ff44180"/>
        <function-ref name="disable" scoped="" ref="0x10ff44310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10ff444a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10ff44630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x10ff44a20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x10ff44a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ff44da0"/>
        <function-ref name="disable" scoped="" ref="0x10ff41020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10ff411b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10ff41340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x10ff7f8f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x10ff7f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ff7fc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10ff7fe00"/>
        <function-ref name="captured" scoped="" ref="0x10ff7e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ff7e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ff7e340"/>
        <function-ref name="setEdge" scoped="" ref="0x10ff7e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10ff3ea20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10ff3ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x10ff3eda0"/>
        <function-ref name="disable" scoped="" ref="0x10ff80020"/>
        <function-ref name="captured" scoped="" ref="0x10ff801b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x10ff80340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10ff805d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10ff805d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10ff80950"/>
        <function-ref name="getControl" scoped="" ref="0x10ff80ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ff80c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10ff80e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10ff7f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ff7f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10ff7f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10ff7f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x10ff7f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x10ff7e7a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10ff7e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ff7eb20"/>
        <function-ref name="isInput" scoped="" ref="0x10ff7ecb0"/>
        <function-ref name="setResistor" scoped="" ref="0x10ff7ee40"/>
        <function-ref name="toggle" scoped="" ref="0x10ff7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x10ff7d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ff7d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ff7d4d0"/>
        <function-ref name="get" scoped="" ref="0x10ff7d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ff7d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10ff7d980"/>
        <function-ref name="set" scoped="" ref="0x10ff7db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ff7dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ff7de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ff7c120"/>
        <function-ref name="clr" scoped="" ref="0x10ff7c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x10ff78480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x10ff78480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ff78800"/>
        <function-ref name="fired" scoped="" ref="0x10ff78990"/>
        <function-ref name="disable" scoped="" ref="0x10ff78b20"/>
        <function-ref name="edge" scoped="" ref="0x10ff78cb0"/>
        <function-ref name="enable" scoped="" ref="0x10ff78e40"/>
        <function-ref name="getValue" scoped="" ref="0x10ff77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x10ff798a0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x10ff798a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ff79c20"/>
        <function-ref name="disable" scoped="" ref="0x10ff79db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10ff78020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10ff781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x10ff75480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x10ff75480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ff75800"/>
        <function-ref name="fired" scoped="" ref="0x10ff75990"/>
        <function-ref name="disable" scoped="" ref="0x10ff75b20"/>
        <function-ref name="edge" scoped="" ref="0x10ff75cb0"/>
        <function-ref name="enable" scoped="" ref="0x10ff75e40"/>
        <function-ref name="getValue" scoped="" ref="0x10ff74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x10ff768b0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x10ff768b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ff76c30"/>
        <function-ref name="disable" scoped="" ref="0x10ff76dc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10ff75020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10ff751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x11033ce50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x11033ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033b410"/>
        <function-ref name="write" scoped="" ref="0x11033b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x110346160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x110346160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103464e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x110340e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x110340e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033f210"/>
        <function-ref name="write" scoped="" ref="0x11033f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x11033a880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11033a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033ac00"/>
        <function-ref name="write" scoped="" ref="0x11033ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x1103320a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x1103320a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110332420"/>
        <function-ref name="write" scoped="" ref="0x1103325b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1103390a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1103390a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110339420"/>
        <function-ref name="write" scoped="" ref="0x1103395b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x110326500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x110326500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110326880"/>
        <function-ref name="write" scoped="" ref="0x110326a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x110328500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x110328500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110328880"/>
        <function-ref name="write" scoped="" ref="0x110328a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x110345490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x110345490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110345810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x11032e880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x11032e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032ec00"/>
        <function-ref name="write" scoped="" ref="0x11032ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11032a500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11032a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032a880"/>
        <function-ref name="write" scoped="" ref="0x11032aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x11033fe50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x11033fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033e210"/>
        <function-ref name="write" scoped="" ref="0x11033e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x11033ee50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11033ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033c210"/>
        <function-ref name="write" scoped="" ref="0x11033c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x110334880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x110334880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110334c00"/>
        <function-ref name="write" scoped="" ref="0x110334d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x1103350a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x1103350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110335420"/>
        <function-ref name="write" scoped="" ref="0x1103355b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x110339880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x110339880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110339c00"/>
        <function-ref name="write" scoped="" ref="0x110339d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x110348a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x110348a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x110348e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x110347020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1103471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x110344e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x110344e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103421c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x110342490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x110342490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110342910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x11032dc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11032dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032c0a0"/>
        <function-ref name="write" scoped="" ref="0x11032c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x110342be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x110342be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x11032ace0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11032ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103280a0"/>
        <function-ref name="write" scoped="" ref="0x110328230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x110344160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x110344160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103444e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x11032e0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x11032e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032e420"/>
        <function-ref name="write" scoped="" ref="0x11032e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11033e670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11033e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033e9f0"/>
        <function-ref name="write" scoped="" ref="0x11033eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x11033f670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11033f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033f9f0"/>
        <function-ref name="write" scoped="" ref="0x11033fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x110347ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x110347ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110347e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x1103300a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x1103300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110330420"/>
        <function-ref name="write" scoped="" ref="0x1103305b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x110332880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x110332880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110332c00"/>
        <function-ref name="write" scoped="" ref="0x110332d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x110330880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x110330880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110330c00"/>
        <function-ref name="write" scoped="" ref="0x110330d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x110327ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x110327ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103260a0"/>
        <function-ref name="write" scoped="" ref="0x110326230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x110328ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x110328ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103270a0"/>
        <function-ref name="write" scoped="" ref="0x110327230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x110335880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x110335880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110335c00"/>
        <function-ref name="write" scoped="" ref="0x110335d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x1103310a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x1103310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110331420"/>
        <function-ref name="write" scoped="" ref="0x1103315b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11032bce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11032bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032a0a0"/>
        <function-ref name="write" scoped="" ref="0x11032a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x110338880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x110338880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110338c00"/>
        <function-ref name="write" scoped="" ref="0x110338d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x110326ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x110326ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1103250a0"/>
        <function-ref name="writeDone" scoped="" ref="0x110325230"/>
        <function-ref name="write" scoped="" ref="0x1103253c0"/>
        <function-ref name="beginRead" scoped="" ref="0x110325550"/>
        <function-ref name="readDone" scoped="" ref="0x1103256e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x110347480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x110347480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110347800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x110340670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x110340670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103409f0"/>
        <function-ref name="write" scoped="" ref="0x110340b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x11033c670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x11033c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033c9f0"/>
        <function-ref name="write" scoped="" ref="0x11033cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x1103330a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x1103330a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110333420"/>
        <function-ref name="write" scoped="" ref="0x1103335b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1103380a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1103380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110338420"/>
        <function-ref name="write" scoped="" ref="0x1103385b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x110333880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x110333880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110333c00"/>
        <function-ref name="write" scoped="" ref="0x110333d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11033b870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11033b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033bbf0"/>
        <function-ref name="write" scoped="" ref="0x11033bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1103467b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1103467b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110346b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11033a0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11033a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11033a420"/>
        <function-ref name="write" scoped="" ref="0x11033a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110349e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110349e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1103481c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110348350"/>
        <function-ref name="request" scoped="" ref="0x1103484e0"/>
        <function-ref name="granted" scoped="" ref="0x110348670"/>
        <function-ref name="isOwner" scoped="" ref="0x110348800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x1103412f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x1103412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110341670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x110340020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x110340020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11032b500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11032b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032b880"/>
        <function-ref name="write" scoped="" ref="0x11032ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11032cce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11032cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032b0a0"/>
        <function-ref name="write" scoped="" ref="0x11032b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1103447b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1103447b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110344b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11032c500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11032c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032c880"/>
        <function-ref name="write" scoped="" ref="0x11032ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x110327500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x110327500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110327880"/>
        <function-ref name="write" scoped="" ref="0x110327a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x1103340a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x1103340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110334420"/>
        <function-ref name="write" scoped="" ref="0x1103345b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x110331880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x110331880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110331c00"/>
        <function-ref name="write" scoped="" ref="0x110331d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x110346e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x110346e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103451c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x110345ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x110345ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110345e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1103370a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1103370a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110337420"/>
        <function-ref name="write" scoped="" ref="0x1103375b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x110341940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x110341940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110341cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x110337880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x110337880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110337c00"/>
        <function-ref name="write" scoped="" ref="0x110337d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x11032d0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x11032d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11032d820"/>
        <function-ref name="write" scoped="" ref="0x11032d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1103259b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1103259b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x110325d30"/>
        <function-ref name="writeDone" scoped="" ref="0x110324020"/>
        <function-ref name="write" scoped="" ref="0x1103241b0"/>
        <function-ref name="beginRead" scoped="" ref="0x110324340"/>
        <function-ref name="readDone" scoped="" ref="0x1103244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x10ff86630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x10ff86630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10ff869b0"/>
        <function-ref name="writeDone" scoped="" ref="0x10ff86b40"/>
        <function-ref name="write" scoped="" ref="0x10ff86cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x10ff86e60"/>
        <function-ref name="readDone" scoped="" ref="0x10ff85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10ff87670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10ff879f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10ff87b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10ff87d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x10ff858c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x10ff858c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ff85c40"/>
        <function-ref name="write" scoped="" ref="0x10ff85dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x10ff846f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x10ff846f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ff84a70"/>
        <function-ref name="write" scoped="" ref="0x10ff84c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10ff8a950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10ff8a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ff8acd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ff8ae60"/>
        <function-ref name="request" scoped="" ref="0x10ff87020"/>
        <function-ref name="granted" scoped="" ref="0x10ff871b0"/>
        <function-ref name="isOwner" scoped="" ref="0x10ff87340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x10ff82510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x10ff82510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10ff82890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x10ffc0680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10ffc0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10ffc0a00"/>
        <function-ref name="sendDone" scoped="" ref="0x10ffc0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x10ffd0bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x10ffd0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10ffcf020"/>
        <function-ref name="writeDone" scoped="" ref="0x10ffcf1b0"/>
        <function-ref name="write" scoped="" ref="0x10ffcf340"/>
        <function-ref name="beginRead" scoped="" ref="0x10ffcf4d0"/>
        <function-ref name="readDone" scoped="" ref="0x10ffcf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10ff81920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10ff81920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10ff81ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10ff81e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10ffd1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x10ffc9080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x10ffc9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x10ffc9400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x10ffc8020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x10ffc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10ffc83a0"/>
        <function-ref name="toIdle" scoped="" ref="0x10ffc8530"/>
        <function-ref name="isState" scoped="" ref="0x10ffc86c0"/>
        <function-ref name="isIdle" scoped="" ref="0x10ffc8850"/>
        <function-ref name="requestState" scoped="" ref="0x10ffc89e0"/>
        <function-ref name="forceState" scoped="" ref="0x10ffc8b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10ffcb400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10ffcb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ffcb780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ffcb910"/>
        <function-ref name="request" scoped="" ref="0x10ffcbaa0"/>
        <function-ref name="granted" scoped="" ref="0x10ffcbc30"/>
        <function-ref name="isOwner" scoped="" ref="0x10ffcbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x10ffce020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x10ffce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ffce3a0"/>
        <function-ref name="write" scoped="" ref="0x10ffce530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x10ffcedb0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x10ffcedb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10ffcc180"/>
        <function-ref name="write" scoped="" ref="0x10ffcc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10ffc8df0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10ffc8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10ffc71c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10ffc7350"/>
        <function-ref name="led1On" scoped="" ref="0x10ffc74e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10ffc7670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10ffc7800"/>
        <function-ref name="get" scoped="" ref="0x10ffc7990"/>
        <function-ref name="led1Off" scoped="" ref="0x10ffc7b20"/>
        <function-ref name="led2Off" scoped="" ref="0x10ffc11b0"/>
        <function-ref name="set" scoped="" ref="0x10ffc7cb0"/>
        <function-ref name="led0On" scoped="" ref="0x10ffc7e40"/>
        <function-ref name="led2On" scoped="" ref="0x10ffc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10ffd1810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10ffd1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10ffd1b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10ffd1d20"/>
        <function-ref name="request" scoped="" ref="0x10ffd0020"/>
        <function-ref name="granted" scoped="" ref="0x10ffd01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x10ffd0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x10ffbb120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x10ffbb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10ffbb4a0"/>
        <function-ref name="runTask" scoped="" ref="0x10ffbb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x10ffccba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x10ffccba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10ffcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x110008770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x110008770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110008af0"/>
        <function-ref name="toIdle" scoped="" ref="0x110008c80"/>
        <function-ref name="isState" scoped="" ref="0x110008e10"/>
        <function-ref name="isIdle" scoped="" ref="0x110005020"/>
        <function-ref name="requestState" scoped="" ref="0x1100051b0"/>
        <function-ref name="forceState" scoped="" ref="0x110005340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x110004280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x110004280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110004600"/>
        <function-ref name="toIdle" scoped="" ref="0x110004790"/>
        <function-ref name="isState" scoped="" ref="0x110004920"/>
        <function-ref name="isIdle" scoped="" ref="0x110004ab0"/>
        <function-ref name="requestState" scoped="" ref="0x110004c40"/>
        <function-ref name="forceState" scoped="" ref="0x110004dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110000020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110000020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1100003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x110000b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x110000b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10fffe020"/>
        <function-ref name="toIdle" scoped="" ref="0x10fffe1b0"/>
        <function-ref name="isState" scoped="" ref="0x10fffe340"/>
        <function-ref name="isIdle" scoped="" ref="0x10fffe4d0"/>
        <function-ref name="requestState" scoped="" ref="0x10fffe660"/>
        <function-ref name="forceState" scoped="" ref="0x10fffe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x110310020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x110310020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1103103a0"/>
        <function-ref name="sendDone" scoped="" ref="0x110310530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1100ba8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1100ba8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1100bac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1100bcc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1100bcc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1100ba020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1100ba1b0"/>
        <function-ref name="request" scoped="" ref="0x1100ba340"/>
        <function-ref name="granted" scoped="" ref="0x1100ba4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x1100ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x11127b440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x11127b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x11127b7c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11127b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x111279d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x111279d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111278180"/>
        <function-ref name="sendDone" scoped="" ref="0x111278310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1112785a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1112785a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x111278920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x11127bbe0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x11127bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x111279020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11127c770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11127c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11127caf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11127cc80"/>
        <function-ref name="request" scoped="" ref="0x11127ce10"/>
        <function-ref name="granted" scoped="" ref="0x11127b020"/>
        <function-ref name="isOwner" scoped="" ref="0x11127b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1112792b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1112792b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x111279630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1112797c0"/>
        <function-ref name="splitRead" scoped="" ref="0x111279950"/>
        <function-ref name="write" scoped="" ref="0x111279ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1100fd6b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1100fd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1100fda30"/>
        <function-ref name="configure" scoped="" ref="0x1100fdbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1100fb850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1100fb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1100fbbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x1100fbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1100f9a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1100f9a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1100f9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1100fc020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1100fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1100fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1100fa690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1100fa690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1100faa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1100faba0"/>
        <function-ref name="request" scoped="" ref="0x1100fad30"/>
        <function-ref name="granted" scoped="" ref="0x1100f9020"/>
        <function-ref name="isOwner" scoped="" ref="0x1100f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1100a8430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1100a8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1100a87b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1100a8940"/>
        <function-ref name="request" scoped="" ref="0x1100a8ad0"/>
        <function-ref name="granted" scoped="" ref="0x1100a8c60"/>
        <function-ref name="isOwner" scoped="" ref="0x1100a8df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1100fc6a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1100fc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1100fca20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1100fcbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x1100fcd40"/>
        <function-ref name="write" scoped="" ref="0x1100fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1100f72a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1100f72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1100f7620"/>
        <function-ref name="txDone" scoped="" ref="0x1100f77b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x11014c250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x11014c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x11014c5f0"/>
        <function-ref name="configure" scoped="" ref="0x11014c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x11014bc50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x11014bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11014a020"/>
        <function-ref name="sendDone" scoped="" ref="0x11014a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1101493e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1101493e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x110149780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x11014ca10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x11014ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x11014cd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x110149a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x110149a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x110149dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110148020"/>
        <function-ref name="setUctl" scoped="" ref="0x1101481b0"/>
        <function-ref name="enableUart" scoped="" ref="0x110148340"/>
        <function-ref name="setUrctl" scoped="" ref="0x1101484d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x110148660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1101487f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x110148980"/>
        <function-ref name="getUrctl" scoped="" ref="0x110148b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x110148ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x110148e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x110147020"/>
        <function-ref name="setUtctl" scoped="" ref="0x1101471b0"/>
        <function-ref name="getUbr" scoped="" ref="0x110147440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1101475d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x110147760"/>
        <function-ref name="isUartRx" scoped="" ref="0x1101478f0"/>
        <function-ref name="isUart" scoped="" ref="0x110147a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x110147c10"/>
        <function-ref name="isSpi" scoped="" ref="0x110147da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x110146020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1101461b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x110146340"/>
        <function-ref name="enableIntr" scoped="" ref="0x1101464d0"/>
        <function-ref name="getMode" scoped="" ref="0x110146660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1101469f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x110146b80"/>
        <function-ref name="setUbr" scoped="" ref="0x110146d10"/>
        <function-ref name="tx" scoped="" ref="0x110145020"/>
        <function-ref name="getUctl" scoped="" ref="0x1101451b0"/>
        <function-ref name="disableUart" scoped="" ref="0x110145340"/>
        <function-ref name="enableSpi" scoped="" ref="0x1101454d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x110145660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1101457f0"/>
        <function-ref name="rx" scoped="" ref="0x110145980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x110145b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x110145ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x110145e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x110144020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1101441b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110144c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110144c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110143020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1101431b0"/>
        <function-ref name="led1On" scoped="" ref="0x110143340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1101434d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110143660"/>
        <function-ref name="get" scoped="" ref="0x1101437f0"/>
        <function-ref name="led1Off" scoped="" ref="0x110143980"/>
        <function-ref name="led2On" scoped="" ref="0x110142020"/>
        <function-ref name="set" scoped="" ref="0x110143ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x110143b10"/>
        <function-ref name="led0On" scoped="" ref="0x110143e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x11014a5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x11014a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11014a950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11014aae0"/>
        <function-ref name="request" scoped="" ref="0x11014ac70"/>
        <function-ref name="granted" scoped="" ref="0x11014ae00"/>
        <function-ref name="isOwner" scoped="" ref="0x110149020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11014d470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11014d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11014d810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11014d9a0"/>
        <function-ref name="request" scoped="" ref="0x11014db30"/>
        <function-ref name="granted" scoped="" ref="0x11014dcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x11014de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x11014b060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x11014b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x11014b3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x11014b570"/>
        <function-ref name="splitRead" scoped="" ref="0x11014b700"/>
        <function-ref name="write" scoped="" ref="0x11014b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x110144480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x110144480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110144800"/>
        <function-ref name="txDone" scoped="" ref="0x110144990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x1101422f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x1101422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110142670"/>
        <function-ref name="runTask" scoped="" ref="0x110142800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x1101345e0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1101345e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110134960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x110135d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x110135d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1101340e0"/>
        <function-ref name="txDone" scoped="" ref="0x110134270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x110139020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x110139020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1101393a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x110139530"/>
        <function-ref name="setUctl" scoped="" ref="0x1101396c0"/>
        <function-ref name="enableUart" scoped="" ref="0x110139850"/>
        <function-ref name="setUrctl" scoped="" ref="0x1101399e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x110139b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x110139d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x110138020"/>
        <function-ref name="getUrctl" scoped="" ref="0x1101381b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x110138340"/>
        <function-ref name="getUmctl" scoped="" ref="0x1101384d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x110138660"/>
        <function-ref name="setUtctl" scoped="" ref="0x1101387f0"/>
        <function-ref name="getUbr" scoped="" ref="0x110138a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x110138c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x110138da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x110137020"/>
        <function-ref name="isUart" scoped="" ref="0x1101371b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x110137340"/>
        <function-ref name="isSpi" scoped="" ref="0x1101374d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x110137660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1101377f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x110137980"/>
        <function-ref name="enableIntr" scoped="" ref="0x110137b10"/>
        <function-ref name="getMode" scoped="" ref="0x110137ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x110136220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1101363b0"/>
        <function-ref name="setUbr" scoped="" ref="0x110136540"/>
        <function-ref name="tx" scoped="" ref="0x1101366d0"/>
        <function-ref name="getUctl" scoped="" ref="0x110136860"/>
        <function-ref name="disableUart" scoped="" ref="0x1101369f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x110136b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x110136d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x110135020"/>
        <function-ref name="rx" scoped="" ref="0x1101351b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x110135340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1101354d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x110135660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1101357f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x110135980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x1101aab20" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x1101aab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1101a9020"/>
        <function-ref name="isInput" scoped="" ref="0x1101a91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1101a9340"/>
        <function-ref name="toggle" scoped="" ref="0x1101a94d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1101a9660"/>
        <function-ref name="getResistor" scoped="" ref="0x1101a97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1101a9980"/>
        <function-ref name="get" scoped="" ref="0x1101a9b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1101a9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x1101a9e30"/>
        <function-ref name="set" scoped="" ref="0x1101a8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1101a81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1101a8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1101a85d0"/>
        <function-ref name="clr" scoped="" ref="0x1101a8760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x11012c780" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x11012c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x11012cb00"/>
        <function-ref name="txDone" scoped="" ref="0x11012cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x1101a8b20" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x1101a8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1101a7020"/>
        <function-ref name="isInput" scoped="" ref="0x1101a71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1101a7340"/>
        <function-ref name="toggle" scoped="" ref="0x1101a74d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1101a7660"/>
        <function-ref name="getResistor" scoped="" ref="0x1101a77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1101a7980"/>
        <function-ref name="get" scoped="" ref="0x1101a7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1101a7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x1101a7e30"/>
        <function-ref name="set" scoped="" ref="0x1101a6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1101a61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1101a6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1101a65d0"/>
        <function-ref name="clr" scoped="" ref="0x1101a6760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x1101a6b20" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x1101a6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1101a5020"/>
        <function-ref name="isInput" scoped="" ref="0x1101a51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1101a5340"/>
        <function-ref name="toggle" scoped="" ref="0x1101a54d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1101a5660"/>
        <function-ref name="getResistor" scoped="" ref="0x1101a57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1101a5980"/>
        <function-ref name="get" scoped="" ref="0x1101a5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1101a5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x1101a5e30"/>
        <function-ref name="set" scoped="" ref="0x1101a4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1101a41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1101a4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1101a45d0"/>
        <function-ref name="clr" scoped="" ref="0x1101a4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x110133c70" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x110133c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x110130020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1101301b0"/>
        <function-ref name="setUctl" scoped="" ref="0x110130340"/>
        <function-ref name="enableUart" scoped="" ref="0x1101304d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x110130660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1101307f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x110130980"/>
        <function-ref name="getUtctl" scoped="" ref="0x110130b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x110130ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x110130e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x11012f020"/>
        <function-ref name="disableIntr" scoped="" ref="0x11012f1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x11012f340"/>
        <function-ref name="getUbr" scoped="" ref="0x11012f5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11012f760"/>
        <function-ref name="setUmctl" scoped="" ref="0x11012f8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x11012fa80"/>
        <function-ref name="isUart" scoped="" ref="0x11012fc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x11012fda0"/>
        <function-ref name="isSpi" scoped="" ref="0x11012e020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x11012e1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x11012e340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x11012e4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x11012e660"/>
        <function-ref name="getMode" scoped="" ref="0x11012e7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x11012eb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x11012ed10"/>
        <function-ref name="setUbr" scoped="" ref="0x11012d020"/>
        <function-ref name="tx" scoped="" ref="0x11012d1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x11012d340"/>
        <function-ref name="disableUart" scoped="" ref="0x11012d4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x11012d660"/>
        <function-ref name="setModeUart" scoped="" ref="0x11012d7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x11012d980"/>
        <function-ref name="rx" scoped="" ref="0x11012db10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x11012dca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x11012de30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x11012c020"/>
        <function-ref name="disableSpi" scoped="" ref="0x11012c1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x11012c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x11015bd10" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x11015bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x11012a0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x11012a270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x11012a400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x11012a590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x11012a720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x11012a8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x11012aa40"/>
        <function-ref name="getStopBit" scoped="" ref="0x11012abd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x11012ad60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x110129020"/>
        <function-ref name="getData" scoped="" ref="0x1101291b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x110129340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1101294d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x110129760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1101298f0"/>
        <function-ref name="getIV" scoped="" ref="0x110129a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x110129c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x110129da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x11015a020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x11015a1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x11015a340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x11015a4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x11015a660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x11015a7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x11015a980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x11015ad10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x110159020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1101591b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x110159340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1101594d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x110159660"/>
        <function-ref name="disableI2C" scoped="" ref="0x1101597f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x110159980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x110159b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x110159ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x110159e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x110158020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x1101581b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x110158340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x1101584d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x110158660"/>
        <function-ref name="setWordMode" scoped="" ref="0x1101587f0"/>
        <function-ref name="setData" scoped="" ref="0x110158980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x110158b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x110158ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x110158e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x110157020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1101571b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x110157340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x1101578d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x110157a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x110157bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x110157d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x110156020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1101561b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x110156340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x1101564d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x110156660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x1101567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x1101acb20" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x1101acb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1101ab020"/>
        <function-ref name="isInput" scoped="" ref="0x1101ab1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1101ab340"/>
        <function-ref name="toggle" scoped="" ref="0x1101ab4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1101ab660"/>
        <function-ref name="getResistor" scoped="" ref="0x1101ab7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1101ab980"/>
        <function-ref name="get" scoped="" ref="0x1101abb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1101abca0"/>
        <function-ref name="getRaw" scoped="" ref="0x1101abe30"/>
        <function-ref name="set" scoped="" ref="0x1101aa020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1101aa1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1101aa340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1101aa5d0"/>
        <function-ref name="clr" scoped="" ref="0x1101aa760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x11012b150" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x11012b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11012b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x110156bb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x110156bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110155020"/>
        <function-ref name="isInput" scoped="" ref="0x1101551b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110155340"/>
        <function-ref name="toggle" scoped="" ref="0x1101554d0"/>
        <function-ref name="isOutput" scoped="" ref="0x110155660"/>
        <function-ref name="getResistor" scoped="" ref="0x1101557f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110155980"/>
        <function-ref name="get" scoped="" ref="0x110155b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110155ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x110155e30"/>
        <function-ref name="set" scoped="" ref="0x1101ac020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1101ac1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1101ac340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1101ac5d0"/>
        <function-ref name="clr" scoped="" ref="0x1101ac760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111271d90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111271d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111270180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111270310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x11126a020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x11126a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11126a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1112625d0" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1112625d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111262950"/>
        <function-ref name="configure" scoped="" ref="0x111262ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x11126a630" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x11126a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x11126a9b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x11126ab40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x11126acd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x11126ae60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x111268020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1112681b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x111268340"/>
        <function-ref name="getStopBit" scoped="" ref="0x1112684d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x111268660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1112687f0"/>
        <function-ref name="getData" scoped="" ref="0x111268980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111268b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111268ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x111267020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1112671b0"/>
        <function-ref name="getIV" scoped="" ref="0x111267340"/>
        <function-ref name="enableI2C" scoped="" ref="0x1112674d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x111267660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1112677f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x111267980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x111267b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111267ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x111267e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111266020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1112661b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x111266540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1112666d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x111266860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1112669f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x111266b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x111266d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x111265020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1112651b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x111265340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1112654d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x111265660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1112657f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x111265980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x111265b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x111265ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x111265e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x111264020"/>
        <function-ref name="setData" scoped="" ref="0x1112641b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x111264340"/>
        <function-ref name="getClockSource" scoped="" ref="0x1112644d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x111264660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1112647f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x111264980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x111264b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x111263420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1112635b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x111263740"/>
        <function-ref name="setStopBit" scoped="" ref="0x1112638d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x111263a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x111263bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x111263d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x111262020"/>
        <function-ref name="setStartByte" scoped="" ref="0x1112621b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x111262340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x11126b760" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x11126b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x11126bae0"/>
        <function-ref name="txDone" scoped="" ref="0x11126bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111271140" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111271140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1112714c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111271650"/>
        <function-ref name="request" scoped="" ref="0x1112717e0"/>
        <function-ref name="granted" scoped="" ref="0x111271970"/>
        <function-ref name="isOwner" scoped="" ref="0x111271b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x111270d40" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x111270d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11126f0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11126f270"/>
        <function-ref name="setUctl" scoped="" ref="0x11126f400"/>
        <function-ref name="enableUart" scoped="" ref="0x11126f590"/>
        <function-ref name="setUrctl" scoped="" ref="0x11126f720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11126f8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11126fa40"/>
        <function-ref name="getUtctl" scoped="" ref="0x11126fbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x11126fd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x11126e020"/>
        <function-ref name="getUmctl" scoped="" ref="0x11126e1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x11126e340"/>
        <function-ref name="setUtctl" scoped="" ref="0x11126e4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x11126e760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11126e8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x11126ea80"/>
        <function-ref name="isUartRx" scoped="" ref="0x11126ec10"/>
        <function-ref name="isUart" scoped="" ref="0x11126eda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x11126d020"/>
        <function-ref name="isSpi" scoped="" ref="0x11126d1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x11126d340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x11126d4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x11126d660"/>
        <function-ref name="enableIntr" scoped="" ref="0x11126d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x11126d980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x11126dd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x11126c020"/>
        <function-ref name="setUbr" scoped="" ref="0x11126c1b0"/>
        <function-ref name="tx" scoped="" ref="0x11126c340"/>
        <function-ref name="getUctl" scoped="" ref="0x11126c4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x11126c660"/>
        <function-ref name="enableSpi" scoped="" ref="0x11126c7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x11126c980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x11126cb10"/>
        <function-ref name="rx" scoped="" ref="0x11126cca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x11126ce30"/>
        <function-ref name="isUartTx" scoped="" ref="0x11126b020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x11126b1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x11126b340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x11126b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1112705a0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1112705a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111270920"/>
        <function-ref name="userId" scoped="" ref="0x111270ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1102152c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1102152c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x110215640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1102157d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1102138a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1102138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x110213c20"/>
        <function-ref name="configure" scoped="" ref="0x110213db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1102184d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1102184d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110218850"/>
        <function-ref name="txDone" scoped="" ref="0x1102189e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110216020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110216020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1102163a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110216530"/>
        <function-ref name="request" scoped="" ref="0x1102166c0"/>
        <function-ref name="granted" scoped="" ref="0x110216850"/>
        <function-ref name="isOwner" scoped="" ref="0x1102169e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1102173f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1102173f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110217770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x110215ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110215ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110215e50"/>
        <function-ref name="userId" scoped="" ref="0x110213020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x110210e50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x110210e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x11020f210"/>
        <function-ref name="userId" scoped="" ref="0x11020f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x110211060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x110211060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x110211400"/>
        <function-ref name="txDone" scoped="" ref="0x110211590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x110210840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x110210840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110210bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x110211990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x110211990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110211d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x110210060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x110210060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1102103e0"/>
        <function-ref name="txDone" scoped="" ref="0x110210570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x11020b850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x11020b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x11020bbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11020bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x110209570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x110209570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x110209910"/>
        <function-ref name="configure" scoped="" ref="0x110209aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x11020a020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11020a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11020a3a0"/>
        <function-ref name="requested" scoped="" ref="0x11020a530"/>
        <function-ref name="granted" scoped="" ref="0x11020a6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x11020a850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11020a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11020da80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11020da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11020de20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11020b020"/>
        <function-ref name="request" scoped="" ref="0x11020b1b0"/>
        <function-ref name="granted" scoped="" ref="0x11020b340"/>
        <function-ref name="isOwner" scoped="" ref="0x11020b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x11020ac30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x11020ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x110209020"/>
        <function-ref name="userId" scoped="" ref="0x1102091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111299020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111299020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1112993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x111299630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x111299630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1112999b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x111299b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x111299cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x111299e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1112966c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1112966c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111296a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111296bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111293400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111293400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1112937a0"/>
        <function-ref name="configure" scoped="" ref="0x111293930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x111293bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x111293bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x111292020"/>
        <function-ref name="isEmpty" scoped="" ref="0x1112921b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x111292340"/>
        <function-ref name="dequeue" scoped="" ref="0x1112924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x111296e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111296e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1112941e0"/>
        <function-ref name="requested" scoped="" ref="0x111294370"/>
        <function-ref name="granted" scoped="" ref="0x111294500"/>
        <function-ref name="isOwner" scoped="" ref="0x111294690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111294820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111292720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111292720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111292aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111292c30"/>
        <function-ref name="led1On" scoped="" ref="0x111292dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111291020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1112911b0"/>
        <function-ref name="get" scoped="" ref="0x111291340"/>
        <function-ref name="led1Off" scoped="" ref="0x1112914d0"/>
        <function-ref name="led0On" scoped="" ref="0x111291b10"/>
        <function-ref name="set" scoped="" ref="0x1112917f0"/>
        <function-ref name="led2On" scoped="" ref="0x111291660"/>
        <function-ref name="led2Off" scoped="" ref="0x111291980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111297850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111297850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111297bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111297d80"/>
        <function-ref name="request" scoped="" ref="0x111296020"/>
        <function-ref name="granted" scoped="" ref="0x1112961b0"/>
        <function-ref name="isOwner" scoped="" ref="0x111296340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x111294a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111294a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111294df0"/>
        <function-ref name="userId" scoped="" ref="0x111293020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x111291de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x111291de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111290180"/>
        <function-ref name="runTask" scoped="" ref="0x111290310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x11025d540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x11025d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x11025d8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x11025da50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x11025dbe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x11025dd70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x11025a020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x11025a1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x11025a340"/>
        <function-ref name="getStopBit" scoped="" ref="0x11025a4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x11025a660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x11025a7f0"/>
        <function-ref name="getData" scoped="" ref="0x11025a980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x11025ab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x11025aca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x110259020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1102591b0"/>
        <function-ref name="getIV" scoped="" ref="0x110259340"/>
        <function-ref name="enableI2C" scoped="" ref="0x1102594d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x110259660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1102597f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x110259980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x110259b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x110259ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x110259e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x110258020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1102581b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x110258540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1102586d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x110258860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1102589f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x110258b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x110258d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x110257020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1102571b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x110257340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1102574d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x110257660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1102577f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x110257980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x110257b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x110257ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x110257e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x110256020"/>
        <function-ref name="setData" scoped="" ref="0x1102561b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x110256340"/>
        <function-ref name="getClockSource" scoped="" ref="0x1102564d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x110256660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1102567f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x110256980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x110256b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x110255420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1102555b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x110255740"/>
        <function-ref name="setStopBit" scoped="" ref="0x1102558d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x110255a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x110255bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x110255d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x110254020"/>
        <function-ref name="setStartByte" scoped="" ref="0x1102541b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x110254340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x11024a250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x11024a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11024a5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11024a760"/>
        <function-ref name="setUctl" scoped="" ref="0x11024a8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x11024aa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x11024ac10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11024ada0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x110249020"/>
        <function-ref name="getUtctl" scoped="" ref="0x1102491b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x110249340"/>
        <function-ref name="resetUsart" scoped="" ref="0x1102494d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x110249660"/>
        <function-ref name="disableIntr" scoped="" ref="0x1102497f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x110249980"/>
        <function-ref name="getUbr" scoped="" ref="0x110249c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x110249da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x110248020"/>
        <function-ref name="isUartRx" scoped="" ref="0x1102481b0"/>
        <function-ref name="isUart" scoped="" ref="0x110248340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1102484d0"/>
        <function-ref name="isSpi" scoped="" ref="0x110248660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1102487f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x110248980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x110248b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x110248ca0"/>
        <function-ref name="getMode" scoped="" ref="0x110248e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x110247220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1102473b0"/>
        <function-ref name="setUbr" scoped="" ref="0x110247540"/>
        <function-ref name="tx" scoped="" ref="0x1102476d0"/>
        <function-ref name="getUctl" scoped="" ref="0x110247860"/>
        <function-ref name="disableUart" scoped="" ref="0x1102479f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x110247b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x110247d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x110246020"/>
        <function-ref name="rx" scoped="" ref="0x1102461b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x110246340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1102464d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x110246660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1102467f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x110246980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x110244cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x110244cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1102430a0"/>
        <function-ref name="isInput" scoped="" ref="0x110243230"/>
        <function-ref name="setResistor" scoped="" ref="0x1102433c0"/>
        <function-ref name="toggle" scoped="" ref="0x110243550"/>
        <function-ref name="isOutput" scoped="" ref="0x1102436e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110243870"/>
        <function-ref name="makeOutput" scoped="" ref="0x110243a00"/>
        <function-ref name="get" scoped="" ref="0x110243b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110243d20"/>
        <function-ref name="getRaw" scoped="" ref="0x110242020"/>
        <function-ref name="set" scoped="" ref="0x1102421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110242340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1102424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110242760"/>
        <function-ref name="clr" scoped="" ref="0x1102428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x110251430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x110251430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1102517b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x110251940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x110251ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x110251c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x110251df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x110250020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1102501b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x110250340"/>
        <function-ref name="setClockSource" scoped="" ref="0x1102504d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x110250660"/>
        <function-ref name="getData" scoped="" ref="0x1102507f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x110250980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x110250b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x110250da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x11024f020"/>
        <function-ref name="getIV" scoped="" ref="0x11024f1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x11024f340"/>
        <function-ref name="setStartBit" scoped="" ref="0x11024f4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x11024f660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x11024f7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x11024f980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x11024fb10"/>
        <function-ref name="isI2C" scoped="" ref="0x11024fca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x11024fe30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x11024e020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x11024e3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x11024e540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x11024e6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x11024e860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x11024e9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x11024eb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x11024ed10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x11024d020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x11024d1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x11024d340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x11024d4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x11024d660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x11024d7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x11024d980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x11024db10"/>
        <function-ref name="getStartBit" scoped="" ref="0x11024dca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x11024de30"/>
        <function-ref name="setData" scoped="" ref="0x11024c020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x11024c1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x11024c340"/>
        <function-ref name="getWordMode" scoped="" ref="0x11024c4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x11024c660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x11024c7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x11024c980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x11024b020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x11024b1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x11024b340"/>
        <function-ref name="setStopBit" scoped="" ref="0x11024b4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x11024b660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x11024b7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x11024b980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x11024bb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x11024bca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x11024be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x110246d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x110246d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1102450e0"/>
        <function-ref name="isInput" scoped="" ref="0x110245270"/>
        <function-ref name="setResistor" scoped="" ref="0x110245400"/>
        <function-ref name="toggle" scoped="" ref="0x110245590"/>
        <function-ref name="isOutput" scoped="" ref="0x110245720"/>
        <function-ref name="getResistor" scoped="" ref="0x1102458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110245a40"/>
        <function-ref name="get" scoped="" ref="0x110245bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110245d60"/>
        <function-ref name="getRaw" scoped="" ref="0x110244020"/>
        <function-ref name="set" scoped="" ref="0x1102441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110244340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1102444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110244760"/>
        <function-ref name="clr" scoped="" ref="0x1102448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x11036ec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x11036ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036d210"/>
        <function-ref name="write" scoped="" ref="0x11036d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x110379da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x110379da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110377180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x110371b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x110371b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110370020"/>
        <function-ref name="write" scoped="" ref="0x1103701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x11036b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11036b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036b9f0"/>
        <function-ref name="write" scoped="" ref="0x11036bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x110364e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x110364e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110363210"/>
        <function-ref name="write" scoped="" ref="0x1103633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x11036be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x11036be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036a210"/>
        <function-ref name="write" scoped="" ref="0x11036a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1103582f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1103582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110358670"/>
        <function-ref name="write" scoped="" ref="0x110358800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x11035a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x11035a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035a670"/>
        <function-ref name="write" scoped="" ref="0x11035a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x110376120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x110376120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103764a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x110360670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x110360670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103609f0"/>
        <function-ref name="write" scoped="" ref="0x110360b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11035b2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11035b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035b670"/>
        <function-ref name="write" scoped="" ref="0x11035b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x110370c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x110370c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036f020"/>
        <function-ref name="write" scoped="" ref="0x11036f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x11036fc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11036fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036e020"/>
        <function-ref name="write" scoped="" ref="0x11036e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x110366670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x110366670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103669f0"/>
        <function-ref name="write" scoped="" ref="0x110366b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x110368e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x110368e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110367210"/>
        <function-ref name="write" scoped="" ref="0x1103673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x11036a670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11036a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036a9f0"/>
        <function-ref name="write" scoped="" ref="0x11036ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x11037a760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11037a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11037aae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x11037ac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x11037ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x110375aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x110375aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110375e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x110374120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x110374120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103745a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x11035fa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11035fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035fdf0"/>
        <function-ref name="write" scoped="" ref="0x11035d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x110374870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x110374870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110374bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x11035bad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11035bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035be50"/>
        <function-ref name="write" scoped="" ref="0x11035a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x110376dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x110376dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110375180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x110361e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x110361e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110360210"/>
        <function-ref name="write" scoped="" ref="0x1103603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11036f480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11036f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036f800"/>
        <function-ref name="write" scoped="" ref="0x11036f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x110370480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x110370480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110370800"/>
        <function-ref name="write" scoped="" ref="0x110370990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x110379750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x110379750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110379ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x110362e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x110362e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110361210"/>
        <function-ref name="write" scoped="" ref="0x1103613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x110363670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x110363670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103639f0"/>
        <function-ref name="write" scoped="" ref="0x110363b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x110361670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x110361670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103619f0"/>
        <function-ref name="write" scoped="" ref="0x110361b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x110359ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x110359ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110359e50"/>
        <function-ref name="write" scoped="" ref="0x110358020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x11035aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x11035aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035ae50"/>
        <function-ref name="write" scoped="" ref="0x110359020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x110367670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x110367670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103679f0"/>
        <function-ref name="write" scoped="" ref="0x110367b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x110363e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x110363e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110362210"/>
        <function-ref name="write" scoped="" ref="0x1103623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11035cad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11035cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035ce50"/>
        <function-ref name="write" scoped="" ref="0x11035b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x110369670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x110369670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103699f0"/>
        <function-ref name="write" scoped="" ref="0x110369b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x110358ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x110358ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x110358e50"/>
        <function-ref name="writeDone" scoped="" ref="0x110356020"/>
        <function-ref name="write" scoped="" ref="0x1103561b0"/>
        <function-ref name="beginRead" scoped="" ref="0x110356340"/>
        <function-ref name="readDone" scoped="" ref="0x1103564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x110379100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x110379100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110379480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x110371370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x110371370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103716f0"/>
        <function-ref name="write" scoped="" ref="0x110371880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x11036e480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x11036e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036e800"/>
        <function-ref name="write" scoped="" ref="0x11036e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x110366e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x110366e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110364210"/>
        <function-ref name="write" scoped="" ref="0x1103643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x11036ae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11036ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110369210"/>
        <function-ref name="write" scoped="" ref="0x1103693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x110364670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x110364670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103649f0"/>
        <function-ref name="write" scoped="" ref="0x110364b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11036d670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11036d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036d9f0"/>
        <function-ref name="write" scoped="" ref="0x11036db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x110377450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x110377450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103777d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11036de50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11036de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11036b210"/>
        <function-ref name="write" scoped="" ref="0x11036b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11037ba80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11037ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11037be00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11037a020"/>
        <function-ref name="request" scoped="" ref="0x11037a1b0"/>
        <function-ref name="granted" scoped="" ref="0x11037a340"/>
        <function-ref name="isOwner" scoped="" ref="0x11037a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x110373020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x110373020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x110373cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x110373cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103710a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11035c2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11035c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035c670"/>
        <function-ref name="write" scoped="" ref="0x11035c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11035dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11035dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035de50"/>
        <function-ref name="write" scoped="" ref="0x11035c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x110375450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x110375450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103757d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11035d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11035d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035d670"/>
        <function-ref name="write" scoped="" ref="0x11035d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1103592f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1103592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110359670"/>
        <function-ref name="write" scoped="" ref="0x110359800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x110367e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x110367e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110366210"/>
        <function-ref name="write" scoped="" ref="0x1103663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x110362670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x110362670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103629f0"/>
        <function-ref name="write" scoped="" ref="0x110362b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x110377aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x110377aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110377e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x110376770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x110376770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110376af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x110369e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x110369e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110368210"/>
        <function-ref name="write" scoped="" ref="0x1103683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x110373670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x110373670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103739f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x110368670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x110368670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103689f0"/>
        <function-ref name="write" scoped="" ref="0x110368b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x110360e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x110360e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11035f610"/>
        <function-ref name="write" scoped="" ref="0x11035f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1103567a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1103567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x110356b20"/>
        <function-ref name="writeDone" scoped="" ref="0x110356cb0"/>
        <function-ref name="write" scoped="" ref="0x110356e40"/>
        <function-ref name="beginRead" scoped="" ref="0x110355020"/>
        <function-ref name="readDone" scoped="" ref="0x1103551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x1103a1c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1103a1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a0210"/>
        <function-ref name="write" scoped="" ref="0x1103a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x1103acda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x1103acda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103ab180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1103a5b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x1103a5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a4020"/>
        <function-ref name="write" scoped="" ref="0x1103a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x11039f670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11039f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039f9f0"/>
        <function-ref name="write" scoped="" ref="0x11039fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x110398e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x110398e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110397210"/>
        <function-ref name="write" scoped="" ref="0x1103973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x11039fe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x11039fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039e210"/>
        <function-ref name="write" scoped="" ref="0x11039e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x11038b2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x11038b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11038b670"/>
        <function-ref name="write" scoped="" ref="0x11038b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x11038d2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x11038d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11038d670"/>
        <function-ref name="write" scoped="" ref="0x11038d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1103aa120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x1103aa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103aa4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x110393670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x110393670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103939f0"/>
        <function-ref name="write" scoped="" ref="0x110393b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11038f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11038f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11038f670"/>
        <function-ref name="write" scoped="" ref="0x11038f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x1103a4c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x1103a4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a2020"/>
        <function-ref name="write" scoped="" ref="0x1103a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1103a2c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x1103a2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a1020"/>
        <function-ref name="write" scoped="" ref="0x1103a11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x110399670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x110399670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103999f0"/>
        <function-ref name="write" scoped="" ref="0x110399b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x11039be50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x11039be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039a210"/>
        <function-ref name="write" scoped="" ref="0x11039a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x11039e670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11039e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039e9f0"/>
        <function-ref name="write" scoped="" ref="0x11039eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x1103ad760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1103ad760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1103adae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x1103adc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1103ade00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1103a8aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1103a8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x1103a7120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1103a7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a75a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x110392a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x110392a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110392df0"/>
        <function-ref name="write" scoped="" ref="0x110391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x1103a7870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x1103a7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x11038fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11038fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11038fe50"/>
        <function-ref name="write" scoped="" ref="0x11038d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1103aadc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1103aadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x110394e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x110394e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110393210"/>
        <function-ref name="write" scoped="" ref="0x1103933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x1103a2480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x1103a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a2800"/>
        <function-ref name="write" scoped="" ref="0x1103a2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1103a4480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1103a4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a4800"/>
        <function-ref name="write" scoped="" ref="0x1103a4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1103ac750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1103ac750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103acad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x110396e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x110396e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110394210"/>
        <function-ref name="write" scoped="" ref="0x1103943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x110397670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x110397670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103979f0"/>
        <function-ref name="write" scoped="" ref="0x110397b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x110394670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x110394670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103949f0"/>
        <function-ref name="write" scoped="" ref="0x110394b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x11038cad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x11038cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11038ce50"/>
        <function-ref name="write" scoped="" ref="0x11038b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x11038dad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x11038dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11038de50"/>
        <function-ref name="write" scoped="" ref="0x11038c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x11039a670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x11039a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039a9f0"/>
        <function-ref name="write" scoped="" ref="0x11039ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x110397e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x110397e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110396210"/>
        <function-ref name="write" scoped="" ref="0x1103963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x110390ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x110390ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110390e50"/>
        <function-ref name="write" scoped="" ref="0x11038f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x11039d670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x11039d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039d9f0"/>
        <function-ref name="write" scoped="" ref="0x11039db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x11038bad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x11038bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11038be50"/>
        <function-ref name="writeDone" scoped="" ref="0x11038a020"/>
        <function-ref name="write" scoped="" ref="0x11038a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x11038a340"/>
        <function-ref name="readDone" scoped="" ref="0x11038a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1103ac100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1103ac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103ac480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x1103a5370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x1103a5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a56f0"/>
        <function-ref name="write" scoped="" ref="0x1103a5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x1103a1480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x1103a1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a1800"/>
        <function-ref name="write" scoped="" ref="0x1103a1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x110399e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x110399e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110398210"/>
        <function-ref name="write" scoped="" ref="0x1103983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x11039ee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11039ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039d210"/>
        <function-ref name="write" scoped="" ref="0x11039d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x110398670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x110398670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103989f0"/>
        <function-ref name="write" scoped="" ref="0x110398b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1103a0670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1103a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103a09f0"/>
        <function-ref name="write" scoped="" ref="0x1103a0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1103ab450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1103ab450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103ab7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1103a0e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1103a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039f210"/>
        <function-ref name="write" scoped="" ref="0x11039f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1103ae9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1103ae9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1103aed60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1103ad020"/>
        <function-ref name="request" scoped="" ref="0x1103ad1b0"/>
        <function-ref name="granted" scoped="" ref="0x1103ad340"/>
        <function-ref name="isOwner" scoped="" ref="0x1103ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x1103a6020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x1103a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x1103a6cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x1103a6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1103902f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1103902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110390670"/>
        <function-ref name="write" scoped="" ref="0x110390800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x110391ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x110391ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110391e50"/>
        <function-ref name="write" scoped="" ref="0x110390020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1103a8450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1103a8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1103912f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1103912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110391670"/>
        <function-ref name="write" scoped="" ref="0x110391800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x11038c2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x11038c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11038c670"/>
        <function-ref name="write" scoped="" ref="0x11038c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x11039ae50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x11039ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110399210"/>
        <function-ref name="write" scoped="" ref="0x1103993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x110396670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x110396670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103969f0"/>
        <function-ref name="write" scoped="" ref="0x110396b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x1103abaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x1103abaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103abe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1103aa770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1103aa770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103aaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x11039de50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x11039de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039b210"/>
        <function-ref name="write" scoped="" ref="0x11039b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x1103a6670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1103a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1103a69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x11039b670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x11039b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11039b9f0"/>
        <function-ref name="write" scoped="" ref="0x11039bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x110393e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x110393e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110392610"/>
        <function-ref name="write" scoped="" ref="0x1103927a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x11038a7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x11038a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11038ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x11038acb0"/>
        <function-ref name="write" scoped="" ref="0x11038ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x110389020"/>
        <function-ref name="readDone" scoped="" ref="0x1103891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x1103e3b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1103e3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1103e0020"/>
        <function-ref name="changed" scoped="" ref="0x1103e01b0"/>
        <function-ref name="amGroup" scoped="" ref="0x1103e0340"/>
        <function-ref name="setAddress" scoped="" ref="0x1103e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x1103e2d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1103e2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x1103cb0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x1103c7310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1103c7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x1103c7690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x1103c4880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1103c4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103c4c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x1103ba020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1103ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x110412bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x110412bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110415020"/>
        <function-ref name="write" scoped="" ref="0x1104151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x110415530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x110415530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1104158b0"/>
        <function-ref name="stop" scoped="" ref="0x110415a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x110416140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x110416140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1104164c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x1103b8c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1103b8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110401020"/>
        <function-ref name="write" scoped="" ref="0x1104011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x110401540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x110401540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1104018c0"/>
        <function-ref name="isInput" scoped="" ref="0x110401a50"/>
        <function-ref name="toggle" scoped="" ref="0x110401be0"/>
        <function-ref name="isOutput" scoped="" ref="0x110401d70"/>
        <function-ref name="get" scoped="" ref="0x110400020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1104001b0"/>
        <function-ref name="set" scoped="" ref="0x110400340"/>
        <function-ref name="clr" scoped="" ref="0x1104004d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x1103f8950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1103f8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1103fb780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x1103fd150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1103fd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1103fd4d0"/>
        <function-ref name="write" scoped="" ref="0x1103fd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x1103fd9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x1103fd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1103fdd70"/>
        <function-ref name="isInput" scoped="" ref="0x1103fc020"/>
        <function-ref name="toggle" scoped="" ref="0x1103fc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1103fc340"/>
        <function-ref name="get" scoped="" ref="0x1103fc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1103fc660"/>
        <function-ref name="set" scoped="" ref="0x1103fc7f0"/>
        <function-ref name="clr" scoped="" ref="0x1103fc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x1103ffca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1103ffca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x11043bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x110438a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x110438a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1104288d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x110427020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x110427020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110427e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110426800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110426340"/>
        <function-ref name="overflow" scoped="" ref="0x110426cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x110421530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x110421530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1104203d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110420d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110420890"/>
        <function-ref name="overflow" scoped="" ref="0x11041f260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x11041a020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11041a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11041a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x11041a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x11041a6c0"/>
        <function-ref name="get" scoped="" ref="0x11041a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x11041a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11041ab70"/>
        <function-ref name="getMode" scoped="" ref="0x11041ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110419020"/>
        <function-ref name="overflow" scoped="" ref="0x1104191b0"/>
        <function-ref name="setMode" scoped="" ref="0x110419340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1104194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x11041ee50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11041ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26a640"/>
            <typename><typedef-ref name="TMicro" ref="0x10f26a9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11041dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11041b670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11041b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x11041bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x110402590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x110402590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110402910"/>
        <function-ref name="isInput" scoped="" ref="0x110402aa0"/>
        <function-ref name="toggle" scoped="" ref="0x110402c30"/>
        <function-ref name="isOutput" scoped="" ref="0x110402dc0"/>
        <function-ref name="get" scoped="" ref="0x110479020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1104791b0"/>
        <function-ref name="set" scoped="" ref="0x110479340"/>
        <function-ref name="clr" scoped="" ref="0x1104794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x110477c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x110477c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110476020"/>
        <function-ref name="isInput" scoped="" ref="0x1104761b0"/>
        <function-ref name="setResistor" scoped="" ref="0x110476340"/>
        <function-ref name="toggle" scoped="" ref="0x1104764d0"/>
        <function-ref name="isOutput" scoped="" ref="0x110476660"/>
        <function-ref name="getResistor" scoped="" ref="0x1104767f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110476980"/>
        <function-ref name="get" scoped="" ref="0x110476b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110476ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x110476e30"/>
        <function-ref name="set" scoped="" ref="0x110475020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1104751b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110475340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1104755d0"/>
        <function-ref name="clr" scoped="" ref="0x110475760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1104789e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1104789e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110478d60"/>
        <function-ref name="isInput" scoped="" ref="0x110477020"/>
        <function-ref name="toggle" scoped="" ref="0x1104771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110477340"/>
        <function-ref name="get" scoped="" ref="0x1104774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110477660"/>
        <function-ref name="set" scoped="" ref="0x1104777f0"/>
        <function-ref name="clr" scoped="" ref="0x110477980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11047aa20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11047aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11047ada0"/>
        <function-ref name="stop" scoped="" ref="0x110470020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x110460cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x110460cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x11045f0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x11045f230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x11045f3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x11045f550"/>
        <function-ref name="setCca" scoped="" ref="0x11045f6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x11045f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x11045c990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x11045c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x11045cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x110460020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x110460020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1104603a0"/>
        <function-ref name="cancel" scoped="" ref="0x110460530"/>
        <function-ref name="modify" scoped="" ref="0x1104606c0"/>
        <function-ref name="sendDone" scoped="" ref="0x110460850"/>
        <function-ref name="resend" scoped="" ref="0x1104609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1104646c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1104646c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x110464a40"/>
        <function-ref name="stop" scoped="" ref="0x110464bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x11045e150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x11045e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x11045e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x110453970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x110453970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x110453cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x110453e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x110452030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1104521c0"/>
        <function-ref name="setCca" scoped="" ref="0x110452350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1104524e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x11044a950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x11044a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1104ae020"/>
        <function-ref name="clear" scoped="" ref="0x1104ae750"/>
        <function-ref name="isValid" scoped="" ref="0x110449780"/>
        <function-ref name="set" scoped="" ref="0x1104aee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x110499020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x110499020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1104993a0"/>
        <function-ref name="write" scoped="" ref="0x110499530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x110499890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x110499890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110499c10"/>
        <function-ref name="write" scoped="" ref="0x110499da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x110452900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x110452900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x110452c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x11049c530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x11049c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11049c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x1104ab880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x1104ab880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1104abc00"/>
        <function-ref name="disable" scoped="" ref="0x1104abd90"/>
        <function-ref name="captured" scoped="" ref="0x1104aa020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1104aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x110451ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x110451ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11044d390"/>
        <function-ref name="fired" scoped="" ref="0x11044e360"/>
        <function-ref name="startAt" scoped="" ref="0x11044ece0"/>
        <function-ref name="isRunning" scoped="" ref="0x11044e820"/>
        <function-ref name="getAlarm" scoped="" ref="0x11044d850"/>
        <function-ref name="start" scoped="" ref="0x11044f970"/>
        <function-ref name="stop" scoped="" ref="0x11044fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x11044dd00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x11044dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x11044b0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x11044b230"/>
        <function-ref name="getRssi" scoped="" ref="0x11044b3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x11044b550"/>
        <function-ref name="getPower" scoped="" ref="0x11044b6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x11044b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x11049e550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11049e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11049e8d0"/>
        <function-ref name="write" scoped="" ref="0x11049ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x11049ee00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11049ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11049d1c0"/>
        <function-ref name="write" scoped="" ref="0x11049d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x110493d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x110493d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1104960e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x110496270"/>
        <function-ref name="sfd" scoped="" ref="0x110496400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110454bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110454bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110453020"/>
        <function-ref name="cancel" scoped="" ref="0x1104531b0"/>
        <function-ref name="modify" scoped="" ref="0x110453340"/>
        <function-ref name="sendDone" scoped="" ref="0x1104534d0"/>
        <function-ref name="resend" scoped="" ref="0x110453660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x1104a1d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1104a1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1104a00e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x1104a0270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1104a0400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x11049cc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x11049cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11049b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x1104a4820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x1104a4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1104a4ba0"/>
        <function-ref name="isInput" scoped="" ref="0x1104a4d30"/>
        <function-ref name="toggle" scoped="" ref="0x1104a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x1104a31b0"/>
        <function-ref name="get" scoped="" ref="0x1104a3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1104a34d0"/>
        <function-ref name="set" scoped="" ref="0x1104a3660"/>
        <function-ref name="clr" scoped="" ref="0x1104a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110455c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110455c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110454020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x11044bbb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x11044bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x11044a020"/>
        <function-ref name="getHeader" scoped="" ref="0x11044a1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x11044a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x1104a5be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1104a5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1104ab020"/>
        <function-ref name="isSet" scoped="" ref="0x1104ab1b0"/>
        <function-ref name="cancel" scoped="" ref="0x1104ab340"/>
        <function-ref name="set" scoped="" ref="0x1104ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x11049b3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11049b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11049b960"/>
        <function-ref name="write" scoped="" ref="0x11049baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1104a1020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1104a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1104a13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1104a1530"/>
        <function-ref name="request" scoped="" ref="0x1104a16c0"/>
        <function-ref name="granted" scoped="" ref="0x1104a1850"/>
        <function-ref name="isOwner" scoped="" ref="0x1104a19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x1104aa500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x1104aa500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1104aa980"/>
        <function-ref name="isInput" scoped="" ref="0x1104aab10"/>
        <function-ref name="toggle" scoped="" ref="0x1104aaca0"/>
        <function-ref name="isOutput" scoped="" ref="0x1104aae30"/>
        <function-ref name="get" scoped="" ref="0x1104a4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1104a41b0"/>
        <function-ref name="set" scoped="" ref="0x1104a4340"/>
        <function-ref name="clr" scoped="" ref="0x1104a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x110498130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x110498130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1104984b0"/>
        <function-ref name="write" scoped="" ref="0x110498640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x1104989c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1104989c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110498d40"/>
        <function-ref name="write" scoped="" ref="0x110497020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x11049d6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x11049d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11049da50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x1104a3b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x1104a3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1104a2020"/>
        <function-ref name="isInput" scoped="" ref="0x1104a21b0"/>
        <function-ref name="toggle" scoped="" ref="0x1104a2340"/>
        <function-ref name="isOutput" scoped="" ref="0x1104a24d0"/>
        <function-ref name="get" scoped="" ref="0x1104a2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1104a27f0"/>
        <function-ref name="set" scoped="" ref="0x1104a2980"/>
        <function-ref name="clr" scoped="" ref="0x1104a2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1104966c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1104966c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110496a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110496bd0"/>
        <function-ref name="led1On" scoped="" ref="0x110496d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110495020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1104951b0"/>
        <function-ref name="get" scoped="" ref="0x110495340"/>
        <function-ref name="led1Off" scoped="" ref="0x1104954d0"/>
        <function-ref name="led2Off" scoped="" ref="0x110495b10"/>
        <function-ref name="set" scoped="" ref="0x110495660"/>
        <function-ref name="led0On" scoped="" ref="0x1104957f0"/>
        <function-ref name="led2On" scoped="" ref="0x110495980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x11049a5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11049a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11049a960"/>
        <function-ref name="write" scoped="" ref="0x11049aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x110454320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x110454320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1104546a0"/>
        <function-ref name="stop" scoped="" ref="0x110454830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x1104a0780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1104a0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1104a0b00"/>
        <function-ref name="writeDone" scoped="" ref="0x1104a0c90"/>
        <function-ref name="write" scoped="" ref="0x1104a0e20"/>
        <function-ref name="beginRead" scoped="" ref="0x11049e020"/>
        <function-ref name="readDone" scoped="" ref="0x11049e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x11049dde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x11049dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11049c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x11049be80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x11049be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11049a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x1104510f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x1104510f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x110451470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x11052ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x11052ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110529210"/>
        <function-ref name="write" scoped="" ref="0x1105293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x110534020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x110534020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1105343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x11052ec70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x11052ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11052d020"/>
        <function-ref name="write" scoped="" ref="0x11052d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x110528670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x110528670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105289f0"/>
        <function-ref name="write" scoped="" ref="0x110528b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x110521e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x110521e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110520210"/>
        <function-ref name="write" scoped="" ref="0x1105203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x110528e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x110528e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110527210"/>
        <function-ref name="write" scoped="" ref="0x1105273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x11057c2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x11057c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11057c670"/>
        <function-ref name="write" scoped="" ref="0x11057c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1105162f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1105162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110516670"/>
        <function-ref name="write" scoped="" ref="0x110516800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x110533370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x110533370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1105336f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x11051c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x11051c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051c9f0"/>
        <function-ref name="write" scoped="" ref="0x11051cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1105182f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1105182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110518670"/>
        <function-ref name="write" scoped="" ref="0x110518800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x11052dc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x11052dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11052b020"/>
        <function-ref name="write" scoped="" ref="0x11052b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x11052bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11052bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11052a020"/>
        <function-ref name="write" scoped="" ref="0x11052a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x110522670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x110522670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105229f0"/>
        <function-ref name="write" scoped="" ref="0x110522b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x110524e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x110524e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110523210"/>
        <function-ref name="write" scoped="" ref="0x1105233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x110527670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x110527670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105279f0"/>
        <function-ref name="write" scoped="" ref="0x110527b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x1105368f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1105368f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x110536c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x110536e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x110535020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x110532d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x110532d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1105300a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x110530370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x110530370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1105307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x11051ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11051ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051bdf0"/>
        <function-ref name="write" scoped="" ref="0x11051a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x110530ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x110530ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110530e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x110518ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x110518ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110518e50"/>
        <function-ref name="write" scoped="" ref="0x110516020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x110532060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x110532060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1105323e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x11051de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x11051de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051c210"/>
        <function-ref name="write" scoped="" ref="0x11051c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11052b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11052b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11052b800"/>
        <function-ref name="write" scoped="" ref="0x11052b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x11052d480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11052d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11052d800"/>
        <function-ref name="write" scoped="" ref="0x11052d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x110535940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x110535940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110535cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x11051fe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x11051fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051d210"/>
        <function-ref name="write" scoped="" ref="0x11051d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x110520670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x110520670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105209f0"/>
        <function-ref name="write" scoped="" ref="0x110520b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x11051d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x11051d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051d9f0"/>
        <function-ref name="write" scoped="" ref="0x11051db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x110515ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x110515ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110515e50"/>
        <function-ref name="write" scoped="" ref="0x11057c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x110516ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x110516ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110516e50"/>
        <function-ref name="write" scoped="" ref="0x110515020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x110523670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x110523670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105239f0"/>
        <function-ref name="write" scoped="" ref="0x110523b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x110520e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x110520e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051f210"/>
        <function-ref name="write" scoped="" ref="0x11051f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x110519ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x110519ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110519e50"/>
        <function-ref name="write" scoped="" ref="0x110518020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x110526670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x110526670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105269f0"/>
        <function-ref name="write" scoped="" ref="0x110526b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x11057cad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x11057cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11057ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x11057b020"/>
        <function-ref name="write" scoped="" ref="0x11057b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x11057b340"/>
        <function-ref name="readDone" scoped="" ref="0x11057b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1105352f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1105352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110535670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x11052e490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x11052e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11052e810"/>
        <function-ref name="write" scoped="" ref="0x11052e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x11052a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x11052a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11052a800"/>
        <function-ref name="write" scoped="" ref="0x11052a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x110522e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x110522e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110521210"/>
        <function-ref name="write" scoped="" ref="0x1105213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x110527e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x110527e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110526210"/>
        <function-ref name="write" scoped="" ref="0x1105263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x110521670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x110521670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105219f0"/>
        <function-ref name="write" scoped="" ref="0x110521b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x110529670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x110529670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105299f0"/>
        <function-ref name="write" scoped="" ref="0x110529b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x110534670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x110534670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1105349f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x110529e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x110529e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110528210"/>
        <function-ref name="write" scoped="" ref="0x1105283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110537c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110537c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110536020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1105361b0"/>
        <function-ref name="request" scoped="" ref="0x110536340"/>
        <function-ref name="granted" scoped="" ref="0x1105364d0"/>
        <function-ref name="isOwner" scoped="" ref="0x110536660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x11052f160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x11052f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11052f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x11052fe00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x11052fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11052e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1105192f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1105192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110519670"/>
        <function-ref name="write" scoped="" ref="0x110519800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11051aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11051aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051ae50"/>
        <function-ref name="write" scoped="" ref="0x110519020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1105326b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1105326b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110532a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11051a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11051a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051a670"/>
        <function-ref name="write" scoped="" ref="0x11051a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1105152f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1105152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110515670"/>
        <function-ref name="write" scoped="" ref="0x110515800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x110523e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x110523e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110522210"/>
        <function-ref name="write" scoped="" ref="0x1105223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x11051f670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x11051f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051f9f0"/>
        <function-ref name="write" scoped="" ref="0x11051fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x110534cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x110534cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1105330a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1105339c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1105339c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110533d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x110526e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x110526e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110524210"/>
        <function-ref name="write" scoped="" ref="0x1105243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x11052f7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x11052f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11052fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x110524670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x110524670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105249f0"/>
        <function-ref name="write" scoped="" ref="0x110524b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x11051ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x11051ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11051b610"/>
        <function-ref name="write" scoped="" ref="0x11051b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x11057b7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x11057b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11057bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x11057bcb0"/>
        <function-ref name="write" scoped="" ref="0x11057be40"/>
        <function-ref name="beginRead" scoped="" ref="0x11057a020"/>
        <function-ref name="readDone" scoped="" ref="0x11057a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x11056fdf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x11056fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11056c1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x11056c350"/>
        <function-ref name="sfd" scoped="" ref="0x11056c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11056c7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11056c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11056cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x11056b020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x11056b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x11056b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x11056f5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x11056f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11056f940"/>
        <function-ref name="stop" scoped="" ref="0x11056fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x110563380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x110563380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110563700"/>
        <function-ref name="isInput" scoped="" ref="0x110563890"/>
        <function-ref name="toggle" scoped="" ref="0x110563a20"/>
        <function-ref name="isOutput" scoped="" ref="0x110563bb0"/>
        <function-ref name="get" scoped="" ref="0x110563d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x110562020"/>
        <function-ref name="set" scoped="" ref="0x1105621b0"/>
        <function-ref name="clr" scoped="" ref="0x110562340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x11055cb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x11055cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x11055b020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x11055b1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x11055b340"/>
        <function-ref name="syncDone" scoped="" ref="0x11055b4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x11055b660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x11055b7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x11055b980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x11055bb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x11055bca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x11055be30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x11055a020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x11055a1b0"/>
        <function-ref name="sync" scoped="" ref="0x11055a340"/>
        <function-ref name="getChannel" scoped="" ref="0x11055a5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x11055a760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x1105ad9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x1105ad9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1105add50"/>
        <function-ref name="runTask" scoped="" ref="0x1105ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x11055ad70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x11055ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x110557330"/>
        <function-ref name="clear" scoped="" ref="0x110557a60"/>
        <function-ref name="isValid" scoped="" ref="0x110559ba0"/>
        <function-ref name="set" scoped="" ref="0x110556210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x1105626b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x1105626b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110562a30"/>
        <function-ref name="isInput" scoped="" ref="0x110562bc0"/>
        <function-ref name="toggle" scoped="" ref="0x110562d50"/>
        <function-ref name="isOutput" scoped="" ref="0x110561020"/>
        <function-ref name="get" scoped="" ref="0x1105611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110561340"/>
        <function-ref name="set" scoped="" ref="0x1105614d0"/>
        <function-ref name="clr" scoped="" ref="0x110561660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x110555cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x110555cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105540a0"/>
        <function-ref name="write" scoped="" ref="0x110554230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x110554590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x110554590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110554910"/>
        <function-ref name="write" scoped="" ref="0x110554aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x1105536d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1105536d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110553a50"/>
        <function-ref name="write" scoped="" ref="0x110553be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x11055d330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x11055d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x11055d6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x11055d840"/>
        <function-ref name="getRssi" scoped="" ref="0x11055d9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x11055db60"/>
        <function-ref name="getPower" scoped="" ref="0x11055dcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x11055de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x110566550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x110566550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1105668d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x110566a60"/>
        <function-ref name="sfd" scoped="" ref="0x110566bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x11055e3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x11055e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11055e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x110564020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x110564020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1105643a0"/>
        <function-ref name="isInput" scoped="" ref="0x110564530"/>
        <function-ref name="toggle" scoped="" ref="0x1105646c0"/>
        <function-ref name="isOutput" scoped="" ref="0x110564850"/>
        <function-ref name="get" scoped="" ref="0x1105649e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110564b70"/>
        <function-ref name="set" scoped="" ref="0x110564d00"/>
        <function-ref name="clr" scoped="" ref="0x110563020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x110552020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x110552020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105523a0"/>
        <function-ref name="write" scoped="" ref="0x110552530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110568620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110568620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1105689a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x11055c1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x11055c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x11055c560"/>
        <function-ref name="getHeader" scoped="" ref="0x11055c6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x11055c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x110565020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x110565020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1105653a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1105606e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1105606e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110560a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110560bf0"/>
        <function-ref name="request" scoped="" ref="0x110560d80"/>
        <function-ref name="granted" scoped="" ref="0x11055f020"/>
        <function-ref name="isOwner" scoped="" ref="0x11055f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x110554e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x110554e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1105531c0"/>
        <function-ref name="write" scoped="" ref="0x110553350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x11055f530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x11055f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x11055f8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x11055fa40"/>
        <function-ref name="write" scoped="" ref="0x11055fbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x11055fd60"/>
        <function-ref name="readDone" scoped="" ref="0x11055e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x1105528b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1105528b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110552e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x1105657c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x1105657c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x110565b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110550150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110550150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1105504d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110550660"/>
        <function-ref name="led1On" scoped="" ref="0x1105507f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110550980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110550b10"/>
        <function-ref name="get" scoped="" ref="0x110550ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x110550e30"/>
        <function-ref name="led2Off" scoped="" ref="0x11054f4d0"/>
        <function-ref name="set" scoped="" ref="0x11054f020"/>
        <function-ref name="led0On" scoped="" ref="0x11054f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x11054f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x1105553e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1105553e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110555760"/>
        <function-ref name="write" scoped="" ref="0x1105558f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x110556b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x110556b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110555020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x110561a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x110561a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110561dd0"/>
        <function-ref name="disable" scoped="" ref="0x110560020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1105601b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x110560340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x11055ead0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x11055ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11055d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x110568ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x110568ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1105660a0"/>
        <function-ref name="stop" scoped="" ref="0x110566230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1105b5a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1105b5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1105b5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1105b9670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1105b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1105b99f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1105b9b80"/>
        <function-ref name="getRssi" scoped="" ref="0x1105b9d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x1105b6020"/>
        <function-ref name="getPower" scoped="" ref="0x1105b61b0"/>
        <function-ref name="getLqi" scoped="" ref="0x1105b6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x1105b4550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1105b4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1105b3b00"/>
        <function-ref name="clear" scoped="" ref="0x1105b12a0"/>
        <function-ref name="isValid" scoped="" ref="0x1105b33d0"/>
        <function-ref name="set" scoped="" ref="0x1105b19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x1105b50c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1105b50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1105b5440"/>
        <function-ref name="getHeader" scoped="" ref="0x1105b55d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x1105b5760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x110616480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x110616480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110616800"/>
        <function-ref name="isSet" scoped="" ref="0x110616990"/>
        <function-ref name="cancel" scoped="" ref="0x110616b20"/>
        <function-ref name="set" scoped="" ref="0x110616cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x11061a660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x11061a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x110619ce0"/>
        <function-ref name="clear" scoped="" ref="0x110617460"/>
        <function-ref name="isValid" scoped="" ref="0x1106195b0"/>
        <function-ref name="set" scoped="" ref="0x110617b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1105b66e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1105b66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1105b6a60"/>
        <function-ref name="noAck" scoped="" ref="0x1105b6bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1105b6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x110610020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x110610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1106103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x110615d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x110615d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1106120e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x110612270"/>
        <function-ref name="getRssi" scoped="" ref="0x110612400"/>
        <function-ref name="getNetwork" scoped="" ref="0x110612590"/>
        <function-ref name="getPower" scoped="" ref="0x110612720"/>
        <function-ref name="getLqi" scoped="" ref="0x1106128b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1106074a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1106074a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110607820"/>
        <function-ref name="payloadLength" scoped="" ref="0x1106079b0"/>
        <function-ref name="getPayload" scoped="" ref="0x110607b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110607cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x110607e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x110610a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x110610a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x11060d020"/>
        <function-ref name="clear" scoped="" ref="0x11060d750"/>
        <function-ref name="isValid" scoped="" ref="0x11060f8d0"/>
        <function-ref name="set" scoped="" ref="0x11060de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x110611640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x110611640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1106119c0"/>
        <function-ref name="getHeader" scoped="" ref="0x110611b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x110611ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x1106088b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1106088b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110608c30"/>
        <function-ref name="isSet" scoped="" ref="0x110608dc0"/>
        <function-ref name="cancel" scoped="" ref="0x110607020"/>
        <function-ref name="set" scoped="" ref="0x1106071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x1106063b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x1106063b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x110605020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x1106056e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x1106056e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1106033d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x11060caf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x11060caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1106090d0"/>
        <function-ref name="clear" scoped="" ref="0x110609800"/>
        <function-ref name="isValid" scoped="" ref="0x11060b970"/>
        <function-ref name="set" scoped="" ref="0x110608020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x110612c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x110612c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x110611020"/>
        <function-ref name="noAck" scoped="" ref="0x1106111b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x110611340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x110620cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x110620cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11061f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x11061d020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x11061d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26bdf0"/>
            <typename><typedef-ref name="T32khz" ref="0x10f26a200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11061de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11061c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11061c340"/>
        <function-ref name="overflow" scoped="" ref="0x11061ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1106850b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1106850b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10f26b640"/>
            <typename><typedef-ref name="TMilli" ref="0x10f26b9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110681630"/>
        <function-ref name="fired" scoped="" ref="0x110684b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110682920"/>
        <function-ref name="isOneShot" scoped="" ref="0x1106824a0"/>
        <function-ref name="getdt" scoped="" ref="0x110680020"/>
        <function-ref name="gett0" scoped="" ref="0x110681ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x110682020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110685ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110681020"/>
        <function-ref name="startOneShot" scoped="" ref="0x1106841b0"/>
        <function-ref name="stop" scoped="" ref="0x110684680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x110670620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x110670620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110670ba0"/>
        <function-ref name="write" scoped="" ref="0x110670d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x11067a940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x11067a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11067acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x110673620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x110673620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106739a0"/>
        <function-ref name="write" scoped="" ref="0x110673b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x11066d060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x11066d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066d3e0"/>
        <function-ref name="write" scoped="" ref="0x11066d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x110666840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x110666840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110666bc0"/>
        <function-ref name="write" scoped="" ref="0x110666d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x11066d840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x11066d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066dbc0"/>
        <function-ref name="write" scoped="" ref="0x11066dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x11065bc60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x11065bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110659020"/>
        <function-ref name="write" scoped="" ref="0x1106591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x11065dc60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x11065dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065c020"/>
        <function-ref name="write" scoped="" ref="0x11065c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x110679cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x110679cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1106780a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x110662060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x110662060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106623e0"/>
        <function-ref name="write" scoped="" ref="0x110662570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11065ec60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11065ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065d020"/>
        <function-ref name="write" scoped="" ref="0x11065d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x110672620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x110672620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106729a0"/>
        <function-ref name="write" scoped="" ref="0x110672b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x110671620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x110671620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106719a0"/>
        <function-ref name="write" scoped="" ref="0x110671b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x110667060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x110667060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106673e0"/>
        <function-ref name="write" scoped="" ref="0x110667570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x11066a840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x11066a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066abc0"/>
        <function-ref name="write" scoped="" ref="0x11066ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x11066c060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11066c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066c3e0"/>
        <function-ref name="write" scoped="" ref="0x11066c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x11067c2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11067c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11067c630"/>
        <function-ref name="abortRelease" scoped="" ref="0x11067c7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x11067c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1106776b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1106776b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110677a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x110677d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x110677d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1106761c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x110660480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x110660480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110660800"/>
        <function-ref name="write" scoped="" ref="0x110660990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x110676490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x110676490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110676810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x11065d480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x11065d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065d800"/>
        <function-ref name="write" scoped="" ref="0x11065d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1106789c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1106789c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110678d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x110663840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x110663840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110663bc0"/>
        <function-ref name="write" scoped="" ref="0x110663d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x110672e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x110672e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106711c0"/>
        <function-ref name="write" scoped="" ref="0x110671350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x110673e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x110673e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106721c0"/>
        <function-ref name="write" scoped="" ref="0x110672350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x11067a2f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x11067a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11067a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x110664840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x110664840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110664bc0"/>
        <function-ref name="write" scoped="" ref="0x110664d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x110665060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x110665060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106653e0"/>
        <function-ref name="write" scoped="" ref="0x110665570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x110663060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x110663060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106633e0"/>
        <function-ref name="write" scoped="" ref="0x110663570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x11065b480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x11065b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065b800"/>
        <function-ref name="write" scoped="" ref="0x11065b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x11065c480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x11065c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065c800"/>
        <function-ref name="write" scoped="" ref="0x11065c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x110669060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x110669060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106693e0"/>
        <function-ref name="write" scoped="" ref="0x110669570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x110665840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x110665840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110665bc0"/>
        <function-ref name="write" scoped="" ref="0x110665d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11065e480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11065e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065e800"/>
        <function-ref name="write" scoped="" ref="0x11065e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x11066b060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x11066b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066b3e0"/>
        <function-ref name="write" scoped="" ref="0x11066b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x110659480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x110659480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x110659800"/>
        <function-ref name="writeDone" scoped="" ref="0x110659990"/>
        <function-ref name="write" scoped="" ref="0x110659b20"/>
        <function-ref name="beginRead" scoped="" ref="0x110659cb0"/>
        <function-ref name="readDone" scoped="" ref="0x110659e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x11067cc20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x11067cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11067a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x110674e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x110674e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106731c0"/>
        <function-ref name="write" scoped="" ref="0x110673350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x110671e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x110671e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106701c0"/>
        <function-ref name="write" scoped="" ref="0x110670350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x110667840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x110667840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110667bc0"/>
        <function-ref name="write" scoped="" ref="0x110667d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x11066c840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11066c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066cbc0"/>
        <function-ref name="write" scoped="" ref="0x11066cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x110666060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x110666060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106663e0"/>
        <function-ref name="write" scoped="" ref="0x110666570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11066e060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11066e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066e3e0"/>
        <function-ref name="write" scoped="" ref="0x11066e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x110679020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x110679020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1106793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11066e840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11066e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066ebc0"/>
        <function-ref name="write" scoped="" ref="0x11066ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11067d520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11067d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11067d8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11067da30"/>
        <function-ref name="request" scoped="" ref="0x11067dbc0"/>
        <function-ref name="granted" scoped="" ref="0x11067dd50"/>
        <function-ref name="isOwner" scoped="" ref="0x11067c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x110676ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x110676ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110676e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x1106747b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x1106747b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x110674b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11065fc60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11065fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065e020"/>
        <function-ref name="write" scoped="" ref="0x11065e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11065f480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11065f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065f800"/>
        <function-ref name="write" scoped="" ref="0x11065f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x110677060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x110677060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1106773e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x110660c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x110660c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065f020"/>
        <function-ref name="write" scoped="" ref="0x11065f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x11065cc60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x11065cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11065b020"/>
        <function-ref name="write" scoped="" ref="0x11065b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x110669840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x110669840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110669bc0"/>
        <function-ref name="write" scoped="" ref="0x110669d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x110664060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x110664060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1106643e0"/>
        <function-ref name="write" scoped="" ref="0x110664570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x110679670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x110679670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1106799f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x110678370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x110678370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1106786f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x11066b840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x11066b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066bbc0"/>
        <function-ref name="write" scoped="" ref="0x11066bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x110674160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x110674160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1106744e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x11066a060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x11066a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11066a3e0"/>
        <function-ref name="write" scoped="" ref="0x11066a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x110662840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x110662840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x110660020"/>
        <function-ref name="write" scoped="" ref="0x1106601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x110658160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x110658160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1106584e0"/>
        <function-ref name="writeDone" scoped="" ref="0x110658670"/>
        <function-ref name="write" scoped="" ref="0x110658800"/>
        <function-ref name="beginRead" scoped="" ref="0x110658990"/>
        <function-ref name="readDone" scoped="" ref="0x110658b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x11069ba20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x11069ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x11069bda0"/>
        <function-ref name="rand32" scoped="" ref="0x11069a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x110699920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x110699920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11069b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11069f990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11069f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11069fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x110694a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x110694a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x110694da0"/>
        <function-ref name="rand32" scoped="" ref="0x110693020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x110695940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x110695940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110694560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110695080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110695080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110695400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x11069daa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x11069daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x11069de20"/>
        <function-ref name="toIdle" scoped="" ref="0x110696020"/>
        <function-ref name="isState" scoped="" ref="0x1106961b0"/>
        <function-ref name="isIdle" scoped="" ref="0x110696340"/>
        <function-ref name="requestState" scoped="" ref="0x1106964d0"/>
        <function-ref name="forceState" scoped="" ref="0x110696660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1106ef020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1106ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1106ef3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1106ef530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1106ef6c0"/>
        <function-ref name="cancel" scoped="" ref="0x1106ef850"/>
        <function-ref name="sendDone" scoped="" ref="0x1106ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1106f0220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1106f0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1106f05a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1106f0730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1106f08c0"/>
        <function-ref name="cancel" scoped="" ref="0x1106f0a50"/>
        <function-ref name="sendDone" scoped="" ref="0x1106f0be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1106eae60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1106eae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1106e9210"/>
        <function-ref name="getPayload" scoped="" ref="0x1106e93a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1106e9530"/>
        <function-ref name="cancel" scoped="" ref="0x1106e96c0"/>
        <function-ref name="sendDone" scoped="" ref="0x1106e9850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1106eea10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1106eea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1106eed90"/>
        <function-ref name="getPayload" scoped="" ref="0x1106ea020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1106ea1b0"/>
        <function-ref name="cancel" scoped="" ref="0x1106ea340"/>
        <function-ref name="sendDone" scoped="" ref="0x1106ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x1106e88f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1106e88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1106e8c70"/>
        <function-ref name="rand32" scoped="" ref="0x1106e8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1106ea750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1106ea750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1106eaad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1106e7170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1106e7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1106e74f0"/>
        <function-ref name="getHeader" scoped="" ref="0x1106e7680"/>
        <function-ref name="getMetadata" scoped="" ref="0x1106e7810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x1106e9ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1106e9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1106e9e60"/>
        <function-ref name="toIdle" scoped="" ref="0x1106e8020"/>
        <function-ref name="isState" scoped="" ref="0x1106e81b0"/>
        <function-ref name="isIdle" scoped="" ref="0x1106e8340"/>
        <function-ref name="requestState" scoped="" ref="0x1106e84d0"/>
        <function-ref name="forceState" scoped="" ref="0x1106e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1106eb690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1106eb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1106eba10"/>
        <function-ref name="toIdle" scoped="" ref="0x1106ebba0"/>
        <function-ref name="isState" scoped="" ref="0x1106ebd30"/>
        <function-ref name="isIdle" scoped="" ref="0x1106d6020"/>
        <function-ref name="requestState" scoped="" ref="0x1106d61b0"/>
        <function-ref name="forceState" scoped="" ref="0x1106d6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1106d0950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1106d0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1106d0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1106d3aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1106d3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1106d3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1106d0200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1106d0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1106d0580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1106cb3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1106cb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1106cb770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1106ccb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1106ccb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1106cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1106cfe30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1106cfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1106cc1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1106cba70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1106cba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1106cbdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x1106c9020"/>
        <function-ref name="getMetadata" scoped="" ref="0x1106c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1106cc570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1106cc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1106cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x11070a020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x11070a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11070a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x11070a6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x11070a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11070aa30"/>
        <function-ref name="getPayload" scoped="" ref="0x11070abc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11070ad50"/>
        <function-ref name="cancel" scoped="" ref="0x110709020"/>
        <function-ref name="sendDone" scoped="" ref="0x1107091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11070f8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11070f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11070fc60"/>
        <function-ref name="getPayload" scoped="" ref="0x11070fdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11070d020"/>
        <function-ref name="cancel" scoped="" ref="0x11070d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x11070d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x11070dc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x11070dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11070c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x11070c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11070c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x11070c550"/>
        <function-ref name="sendDone" scoped="" ref="0x11070c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11070d5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11070d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11070d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x110710be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x110710be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11070f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11070f1b0"/>
        <function-ref name="request" scoped="" ref="0x11070f340"/>
        <function-ref name="granted" scoped="" ref="0x11070f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x11070f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x11070ca50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x11070ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11070cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x11070b170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x11070b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11070b4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x11070b680"/>
        <function-ref name="getPayload" scoped="" ref="0x11070b810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11070b9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x11070bb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x110700d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x110700d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1106ff180"/>
        <function-ref name="getPayload" scoped="" ref="0x1106ff310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1106ff4a0"/>
        <function-ref name="cancel" scoped="" ref="0x1106ff630"/>
        <function-ref name="sendDone" scoped="" ref="0x1106ff7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1106ffb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1106ffb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1106fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x110740db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x110740db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11073f180"/>
        <function-ref name="runTask" scoped="" ref="0x11073f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x1106fe2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1106fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1106fe670"/>
        <function-ref name="setNetwork" scoped="" ref="0x1106fe800"/>
        <function-ref name="getRssi" scoped="" ref="0x1106fe990"/>
        <function-ref name="getNetwork" scoped="" ref="0x1106feb20"/>
        <function-ref name="getPower" scoped="" ref="0x1106fecb0"/>
        <function-ref name="getLqi" scoped="" ref="0x1106fee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x110702a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x110702a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110702da0"/>
        <function-ref name="getPayload" scoped="" ref="0x110701020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1107011b0"/>
        <function-ref name="cancel" scoped="" ref="0x110701340"/>
        <function-ref name="sendDone" scoped="" ref="0x1107014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1106fdb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1106fdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1106fc020"/>
        <function-ref name="isEmpty" scoped="" ref="0x1106fc1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1106fc340"/>
        <function-ref name="dequeue" scoped="" ref="0x1106fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1106fd170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1106fd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1106fd4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x1106fd680"/>
        <function-ref name="getMetadata" scoped="" ref="0x1106fd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x110702370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x110702370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1107026f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1107057b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1107057b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x110705b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x110705cc0"/>
        <function-ref name="request" scoped="" ref="0x110705e50"/>
        <function-ref name="granted" scoped="" ref="0x110704020"/>
        <function-ref name="isOwner" scoped="" ref="0x1107041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x1107044d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x1107044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110704850"/>
        <function-ref name="getPayload" scoped="" ref="0x1107049e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110704b70"/>
        <function-ref name="cancel" scoped="" ref="0x110704d00"/>
        <function-ref name="sendDone" scoped="" ref="0x110702020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x110701840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x110701840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110701bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x110700020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x110700020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1107003a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x110700530"/>
        <function-ref name="getPayload" scoped="" ref="0x1107006c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110700850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1107009e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110790dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110790dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11078f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x11078f410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x11078f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x11078f790"/>
        <function-ref name="isEmpty" scoped="" ref="0x11078f920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x11078fab0"/>
        <function-ref name="dequeue" scoped="" ref="0x11078fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x110783b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x110783b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x110782020"/>
        <function-ref name="stopDone" scoped="" ref="0x1107821b0"/>
        <function-ref name="start" scoped="" ref="0x110782340"/>
        <function-ref name="stop" scoped="" ref="0x1107824d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x110781860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x110781860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110781be0"/>
        <function-ref name="getPayload" scoped="" ref="0x110781d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110780020"/>
        <function-ref name="cancel" scoped="" ref="0x1107801b0"/>
        <function-ref name="sendDone" scoped="" ref="0x110780340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x110780690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x110780690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110780a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110788ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110788ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1107840a0"/>
        <function-ref name="getPayload" scoped="" ref="0x110784230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1107843c0"/>
        <function-ref name="cancel" scoped="" ref="0x110784550"/>
        <function-ref name="sendDone" scoped="" ref="0x1107846e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x110783080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x110783080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x110783400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x110783590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x110783720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x1107838b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x110782800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x110782800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x110782b80"/>
        <function-ref name="toIdle" scoped="" ref="0x110782d10"/>
        <function-ref name="isState" scoped="" ref="0x110781020"/>
        <function-ref name="isIdle" scoped="" ref="0x1107811b0"/>
        <function-ref name="requestState" scoped="" ref="0x110781340"/>
        <function-ref name="forceState" scoped="" ref="0x1107814d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x110780d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x110780d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x11077f180"/>
        <function-ref name="stopDone" scoped="" ref="0x11077f310"/>
        <function-ref name="start" scoped="" ref="0x11077f4a0"/>
        <function-ref name="stop" scoped="" ref="0x11077f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x110784980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x110784980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110784d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x11077c2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x11077c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x11077c650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x11077c7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x11077c970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x11077cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x11077e580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x11077e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x11077e900"/>
        <function-ref name="toIdle" scoped="" ref="0x11077ea90"/>
        <function-ref name="isState" scoped="" ref="0x11077ec20"/>
        <function-ref name="isIdle" scoped="" ref="0x11077edb0"/>
        <function-ref name="requestState" scoped="" ref="0x11077d020"/>
        <function-ref name="forceState" scoped="" ref="0x11077d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x11076fd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x11076fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11076e180"/>
        <function-ref name="getPayload" scoped="" ref="0x11076e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11076e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x11076e630"/>
        <function-ref name="sendDone" scoped="" ref="0x11076e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110772350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110772350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1107726d0"/>
        <function-ref name="getPayload" scoped="" ref="0x110772860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1107729f0"/>
        <function-ref name="cancel" scoped="" ref="0x110772b80"/>
        <function-ref name="sendDone" scoped="" ref="0x110772d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x11076f020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x11076f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x11076f3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x11076f530"/>
        <function-ref name="getRetries" scoped="" ref="0x11076f6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x11076f850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x11076f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x11076a1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11076a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x11076a540"/>
        <function-ref name="noAck" scoped="" ref="0x11076a6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x11076a860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x11076d410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x11076d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x11076d790"/>
        <function-ref name="setRetries" scoped="" ref="0x11076d920"/>
        <function-ref name="getRetries" scoped="" ref="0x11076dab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x11076dc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x11076ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1107bb690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1107bb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1107bba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1107bc860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1107bc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1107bcbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x1107bcd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1107bb020"/>
        <function-ref name="cancel" scoped="" ref="0x1107bb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1107bb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x1107b9610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1107b9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x1107b9990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1107b9b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x1107b9cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x1107b9e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x1107b8020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1107b81b0"/>
        <function-ref name="setChannel" scoped="" ref="0x1107b8340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x1107b84d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1107b8660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x1107b87f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x1107b8980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1107b8b10"/>
        <function-ref name="sync" scoped="" ref="0x1107b8ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x1107b7020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1107b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1107bd8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1107bd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1107bdc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1107bddc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1107bc020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1107bc1b0"/>
        <function-ref name="setCca" scoped="" ref="0x1107bc340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1107bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1107bece0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1107bece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x1107bd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x1107b61f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x1107b61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1107b6570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1107b6700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1107b6890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1107b6a20"/>
        <function-ref name="setCca" scoped="" ref="0x1107b6bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1107b6d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1107bfa80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1107bfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1107bfe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x1107be020"/>
        <function-ref name="getPayload" scoped="" ref="0x1107be1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1107be340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1107be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1107c3020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1107c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1107c33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1107c3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1107c36c0"/>
        <function-ref name="cancel" scoped="" ref="0x1107c3850"/>
        <function-ref name="sendDone" scoped="" ref="0x1107c39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1107c2df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1107c2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1107c11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x1107bbce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1107bbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1107ba0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1107ba230"/>
        <function-ref name="getRssi" scoped="" ref="0x1107ba3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x1107ba550"/>
        <function-ref name="getPower" scoped="" ref="0x1107ba6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x1107ba870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x1107b74d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1107b74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1107b7950"/>
        <function-ref name="changed" scoped="" ref="0x1107b7ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x1107b7c70"/>
        <function-ref name="setAddress" scoped="" ref="0x1107b7e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1107bab70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1107bab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1107b9020"/>
        <function-ref name="getHeader" scoped="" ref="0x1107b91b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x1107b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1107c2210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1107c2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1107c2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1107b5d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1107b5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1107b40e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1107b4270"/>
        <function-ref name="led1On" scoped="" ref="0x1107b4400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1107b4590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1107b4720"/>
        <function-ref name="get" scoped="" ref="0x1107b48b0"/>
        <function-ref name="led1Off" scoped="" ref="0x1107b4a40"/>
        <function-ref name="led2Off" scoped="" ref="0x1107b31b0"/>
        <function-ref name="set" scoped="" ref="0x1107b4bd0"/>
        <function-ref name="led0On" scoped="" ref="0x1107b4d60"/>
        <function-ref name="led2On" scoped="" ref="0x1107b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1107c1470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1107c1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1107c17f0"/>
        <function-ref name="source" scoped="" ref="0x1107c1980"/>
        <function-ref name="address" scoped="" ref="0x1107c1b10"/>
        <function-ref name="destination" scoped="" ref="0x1107c1ca0"/>
        <function-ref name="setSource" scoped="" ref="0x1107c1e30"/>
        <function-ref name="setDestination" scoped="" ref="0x1107bf020"/>
        <function-ref name="type" scoped="" ref="0x1107bf1b0"/>
        <function-ref name="setType" scoped="" ref="0x1107bf340"/>
        <function-ref name="isForMe" scoped="" ref="0x1107bf4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x1107bf660"/>
        <function-ref name="localGroup" scoped="" ref="0x1107bf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x1107b50f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x1107b50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1107b5470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1107b5600"/>
        <function-ref name="request" scoped="" ref="0x1107b5790"/>
        <function-ref name="granted" scoped="" ref="0x1107b5920"/>
        <function-ref name="isOwner" scoped="" ref="0x1107b5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1108e9020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1108e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1108e93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1108e9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108e96c0"/>
        <function-ref name="cancel" scoped="" ref="0x1108e9850"/>
        <function-ref name="sendDone" scoped="" ref="0x1108e99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1108e9c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1108e9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1108e8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x1108e81b0"/>
        <function-ref name="getPayload" scoped="" ref="0x1108e8340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108e84d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1108e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1108e88b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1108e88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1108e8c30"/>
        <function-ref name="source" scoped="" ref="0x1108e8dc0"/>
        <function-ref name="address" scoped="" ref="0x1108e6020"/>
        <function-ref name="destination" scoped="" ref="0x1108e61b0"/>
        <function-ref name="setSource" scoped="" ref="0x1108e6340"/>
        <function-ref name="setDestination" scoped="" ref="0x1108e64d0"/>
        <function-ref name="type" scoped="" ref="0x1108e6660"/>
        <function-ref name="setType" scoped="" ref="0x1108e67f0"/>
        <function-ref name="isForMe" scoped="" ref="0x1108e6980"/>
        <function-ref name="setGroup" scoped="" ref="0x1108e6b10"/>
        <function-ref name="localGroup" scoped="" ref="0x1108e6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1108e5020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1108e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1108e53a0"/>
        <function-ref name="noAck" scoped="" ref="0x1108e5530"/>
        <function-ref name="wasAcked" scoped="" ref="0x1108e56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1113ebb60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1113ebb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1113ea020"/>
        <function-ref name="getPayload" scoped="" ref="0x1113ea1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1113ea340"/>
        <function-ref name="cancel" scoped="" ref="0x1113ea4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x1113ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1113ea8b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1113ea8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1113eac30"/>
        <function-ref name="payloadLength" scoped="" ref="0x1113eadc0"/>
        <function-ref name="getPayload" scoped="" ref="0x1113e9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1113e91b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1113e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1113e9590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1113e9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1113e9910"/>
        <function-ref name="source" scoped="" ref="0x1113e9aa0"/>
        <function-ref name="address" scoped="" ref="0x1113e9c30"/>
        <function-ref name="destination" scoped="" ref="0x1113e9dc0"/>
        <function-ref name="setSource" scoped="" ref="0x1113e8020"/>
        <function-ref name="setDestination" scoped="" ref="0x1113e81b0"/>
        <function-ref name="type" scoped="" ref="0x1113e8340"/>
        <function-ref name="setType" scoped="" ref="0x1113e84d0"/>
        <function-ref name="isForMe" scoped="" ref="0x1113e8660"/>
        <function-ref name="setGroup" scoped="" ref="0x1113e87f0"/>
        <function-ref name="localGroup" scoped="" ref="0x1113e8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1113e8c10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="transmitAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1113e8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1113e7020"/>
        <function-ref name="noAck" scoped="" ref="0x1113e71b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1113e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x11148c640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="transmitAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x11148c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11148c9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x11148cb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11148cce0"/>
        <function-ref name="cancel" scoped="" ref="0x11148ce70"/>
        <function-ref name="sendDone" scoped="" ref="0x11148a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x11148a2e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="transmitAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11148a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11148a660"/>
        <function-ref name="getPayload" scoped="" ref="0x11148a7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11148a980"/>
        <function-ref name="cancel" scoped="" ref="0x11148ab10"/>
        <function-ref name="sendDone" scoped="" ref="0x11148aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x111489020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="transmitAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x111489020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1114893a0"/>
        <function-ref name="source" scoped="" ref="0x111489530"/>
        <function-ref name="address" scoped="" ref="0x1114896c0"/>
        <function-ref name="destination" scoped="" ref="0x111489850"/>
        <function-ref name="setSource" scoped="" ref="0x1114899e0"/>
        <function-ref name="setDestination" scoped="" ref="0x111489b70"/>
        <function-ref name="type" scoped="" ref="0x111489d00"/>
        <function-ref name="setType" scoped="" ref="0x111488020"/>
        <function-ref name="isForMe" scoped="" ref="0x1114881b0"/>
        <function-ref name="setGroup" scoped="" ref="0x111488340"/>
        <function-ref name="localGroup" scoped="" ref="0x1114884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110862930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110862930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110862cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x110862e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11085f020"/>
        <function-ref name="cancel" scoped="" ref="0x11085f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x11085f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1108fd400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1108fd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1108fd7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1108fd930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108fdac0"/>
        <function-ref name="cancel" scoped="" ref="0x1108fdc50"/>
        <function-ref name="sendDone" scoped="" ref="0x1108fdde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1108894b0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1108894b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110889850"/>
        <function-ref name="getPayload" scoped="" ref="0x1108899e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110889b70"/>
        <function-ref name="cancel" scoped="" ref="0x110889d00"/>
        <function-ref name="sendDone" scoped="" ref="0x1108fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1108fb720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1108fb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1108fbaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1108fbc30"/>
        <function-ref name="getPayload" scoped="" ref="0x1108fbdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108fa020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1108fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x1108fa480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x1108fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1108fa800"/>
        <function-ref name="runTask" scoped="" ref="0x1108fa990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x1108fac60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x1108fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1108f9020"/>
        <function-ref name="runTask" scoped="" ref="0x1108f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1108fc060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1108fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1108fc3e0"/>
        <function-ref name="source" scoped="" ref="0x1108fc570"/>
        <function-ref name="address" scoped="" ref="0x1108fc700"/>
        <function-ref name="destination" scoped="" ref="0x1108fc890"/>
        <function-ref name="setSource" scoped="" ref="0x1108fca20"/>
        <function-ref name="setDestination" scoped="" ref="0x1108fcbb0"/>
        <function-ref name="type" scoped="" ref="0x1108fcd40"/>
        <function-ref name="setType" scoped="" ref="0x1108fb020"/>
        <function-ref name="isForMe" scoped="" ref="0x1108fb1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x1108fb340"/>
        <function-ref name="localGroup" scoped="" ref="0x1108fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1108dc020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="transmitAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1108dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1108dc3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1108dc530"/>
        <function-ref name="getPayload" scoped="" ref="0x1108dc6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108dc850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1108dc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1108e2910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="transmitAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1108e2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1108e2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1108dcc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="transmitAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1108dcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1108db020"/>
        <function-ref name="source" scoped="" ref="0x1108db1b0"/>
        <function-ref name="address" scoped="" ref="0x1108db340"/>
        <function-ref name="destination" scoped="" ref="0x1108db4d0"/>
        <function-ref name="setSource" scoped="" ref="0x1108db660"/>
        <function-ref name="setDestination" scoped="" ref="0x1108db7f0"/>
        <function-ref name="type" scoped="" ref="0x1108db980"/>
        <function-ref name="setType" scoped="" ref="0x1108dbb10"/>
        <function-ref name="isForMe" scoped="" ref="0x1108dbca0"/>
        <function-ref name="setGroup" scoped="" ref="0x1108dbe30"/>
        <function-ref name="localGroup" scoped="" ref="0x1108da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1108d98f0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1108d98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1108d9c70"/>
        <function-ref name="stopDone" scoped="" ref="0x1108d9e00"/>
        <function-ref name="start" scoped="" ref="0x1108d6020"/>
        <function-ref name="stop" scoped="" ref="0x1108d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1108d6980" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1108d6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1108d6d00"/>
        <function-ref name="getPayload" scoped="" ref="0x1108d4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108d41b0"/>
        <function-ref name="cancel" scoped="" ref="0x1108d4340"/>
        <function-ref name="sendDone" scoped="" ref="0x1108d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1108d3330" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1108d3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1108d36b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1108d3840"/>
        <function-ref name="getPayload" scoped="" ref="0x1108d39d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108d3b60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1108d3cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1108d4cb0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1108d4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1108d30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1108d0300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1108d0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1108d0680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1108d0810"/>
        <function-ref name="led1On" scoped="" ref="0x1108d09a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1108d0b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1108d0cc0"/>
        <function-ref name="get" scoped="" ref="0x1108d0e50"/>
        <function-ref name="led1Off" scoped="" ref="0x1108cf020"/>
        <function-ref name="led2Off" scoped="" ref="0x1108cf660"/>
        <function-ref name="set" scoped="" ref="0x1108cf1b0"/>
        <function-ref name="led0On" scoped="" ref="0x1108cf340"/>
        <function-ref name="led2On" scoped="" ref="0x1108cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1108d1800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1108d1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1108d1b80"/>
        <function-ref name="noAck" scoped="" ref="0x1108d1d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x1108d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1108d2020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1108d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1108d23a0"/>
        <function-ref name="source" scoped="" ref="0x1108d2530"/>
        <function-ref name="address" scoped="" ref="0x1108d26c0"/>
        <function-ref name="destination" scoped="" ref="0x1108d2850"/>
        <function-ref name="setSource" scoped="" ref="0x1108d29e0"/>
        <function-ref name="setDestination" scoped="" ref="0x1108d2b70"/>
        <function-ref name="type" scoped="" ref="0x1108d2d00"/>
        <function-ref name="setType" scoped="" ref="0x1108d1020"/>
        <function-ref name="isForMe" scoped="" ref="0x1108d11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x1108d1340"/>
        <function-ref name="localGroup" scoped="" ref="0x1108d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1109624a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1109624a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110962820"/>
        <function-ref name="getPayload" scoped="" ref="0x1109629b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110962b40"/>
        <function-ref name="cancel" scoped="" ref="0x110962cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x110962e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x110960120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x110960120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1109604a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1108cd300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1108cd300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1108cd6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1108cd830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1108cd9c0"/>
        <function-ref name="cancel" scoped="" ref="0x1108cdb50"/>
        <function-ref name="sendDone" scoped="" ref="0x1108cdce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x110964d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x110964d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110963180"/>
        <function-ref name="payloadLength" scoped="" ref="0x110963310"/>
        <function-ref name="getPayload" scoped="" ref="0x1109634a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110963630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1109637c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1109650d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1109650d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110965470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x110963a10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x110963a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x110963d90"/>
        <function-ref name="noAck" scoped="" ref="0x110962020"/>
        <function-ref name="wasAcked" scoped="" ref="0x1109621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1109656c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1109656c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x110965a40"/>
        <function-ref name="source" scoped="" ref="0x110965bd0"/>
        <function-ref name="address" scoped="" ref="0x110965d60"/>
        <function-ref name="destination" scoped="" ref="0x110964020"/>
        <function-ref name="setSource" scoped="" ref="0x1109641b0"/>
        <function-ref name="setDestination" scoped="" ref="0x110964340"/>
        <function-ref name="type" scoped="" ref="0x1109644d0"/>
        <function-ref name="setType" scoped="" ref="0x110964660"/>
        <function-ref name="isForMe" scoped="" ref="0x1109647f0"/>
        <function-ref name="setGroup" scoped="" ref="0x110964980"/>
        <function-ref name="localGroup" scoped="" ref="0x110964b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x11095eb90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x11095eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x11095b020"/>
        <function-ref name="stopDone" scoped="" ref="0x11095b1b0"/>
        <function-ref name="start" scoped="" ref="0x11095b340"/>
        <function-ref name="stop" scoped="" ref="0x11095b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11095a790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11095a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10f2ac850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11095ab10"/>
        <function-ref name="getPayload" scoped="" ref="0x11095aca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11095ae30"/>
        <function-ref name="cancel" scoped="" ref="0x110959020"/>
        <function-ref name="sendDone" scoped="" ref="0x1109591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11095e540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11095e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11095e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11095bc60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11095bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10f2ac850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11095a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1109582b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1109582b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110958630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1109587c0"/>
        <function-ref name="led1On" scoped="" ref="0x110958950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110958ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110958c70"/>
        <function-ref name="get" scoped="" ref="0x110958e00"/>
        <function-ref name="led1Off" scoped="" ref="0x110957020"/>
        <function-ref name="led2Off" scoped="" ref="0x110957660"/>
        <function-ref name="set" scoped="" ref="0x1109571b0"/>
        <function-ref name="led0On" scoped="" ref="0x110957340"/>
        <function-ref name="led2On" scoped="" ref="0x1109574d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x110953970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x110953970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10f2ac850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x110953cf0"/>
        <function-ref name="offset" scoped="" ref="0x110953e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x110958030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1109507c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1109507c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x110950b40"/>
        <function-ref name="stopDone" scoped="" ref="0x110950cd0"/>
        <function-ref name="start" scoped="" ref="0x110950e60"/>
        <function-ref name="stop" scoped="" ref="0x11094f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x1109da6e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x1109da6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1109daa60"/>
        <function-ref name="runTask" scoped="" ref="0x1109dabf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x11093e860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x11093e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11093ebe0"/>
        <function-ref name="stop" scoped="" ref="0x11093ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x1109984f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x1109984f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110998870"/>
        <function-ref name="runTask" scoped="" ref="0x110998a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110950170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110950170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1109504f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x110939480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x110939480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x110939800"/>
        <function-ref name="flush" scoped="" ref="0x110939990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x1109ddc70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x1109ddc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1109dc020"/>
        <function-ref name="runTask" scoped="" ref="0x1109dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x110947020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x110947020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x1109473a0"/>
        <function-ref name="resetSend" scoped="" ref="0x110947530"/>
        <function-ref name="dataReceived" scoped="" ref="0x1109476c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x110947850"/>
        <function-ref name="putData" scoped="" ref="0x1109479e0"/>
        <function-ref name="putDone" scoped="" ref="0x110947b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x110947d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110944020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110944020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1109443a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110944530"/>
        <function-ref name="led1On" scoped="" ref="0x1109446c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110944850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1109449e0"/>
        <function-ref name="get" scoped="" ref="0x110944b70"/>
        <function-ref name="led1Off" scoped="" ref="0x110944d00"/>
        <function-ref name="led2Off" scoped="" ref="0x11093e4d0"/>
        <function-ref name="set" scoped="" ref="0x11093e020"/>
        <function-ref name="led0On" scoped="" ref="0x11093e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x11093e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x1109d6a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x1109d6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1109d6d80"/>
        <function-ref name="runTask" scoped="" ref="0x1109d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x110948720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x110948720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x110948aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x110948c30"/>
        <function-ref name="startSend" scoped="" ref="0x110948dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x11094e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x110945c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x110945c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x11094c020"/>
        <function-ref name="byteReceived" scoped="" ref="0x11094c1b0"/>
        <function-ref name="endPacket" scoped="" ref="0x11094c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x110a7c020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x110a7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110a7c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x110a7c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x110a82de0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x110a82de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10f2ac850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110a811c0"/>
        <function-ref name="getPayload" scoped="" ref="0x110a81350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110a814e0"/>
        <function-ref name="cancel" scoped="" ref="0x110a81670"/>
        <function-ref name="sendDone" scoped="" ref="0x110a81800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x110a7c800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x110a7c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110a7cb80"/>
        <function-ref name="runTask" scoped="" ref="0x110a7cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x110a826c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x110a826c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10f2ac850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110a82a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x110a81c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x110a81c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10f2ac850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x110a7f020"/>
        <function-ref name="offset" scoped="" ref="0x110a7f1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x110a7f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110a7e920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110a7e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110a7eca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110a7ee30"/>
        <function-ref name="led1On" scoped="" ref="0x110a7d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110a7d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110a7d340"/>
        <function-ref name="get" scoped="" ref="0x110a7d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x110a7d660"/>
        <function-ref name="led2On" scoped="" ref="0x110a7dca0"/>
        <function-ref name="set" scoped="" ref="0x110a7d980"/>
        <function-ref name="led2Off" scoped="" ref="0x110a7d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x110a7db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x110a7fe80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x110a7fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x110a7e220"/>
        <function-ref name="nextByte" scoped="" ref="0x110a7e3b0"/>
        <function-ref name="startSend" scoped="" ref="0x110a7e540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x110a7e6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x110a7f590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x110a7f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x110a7f910"/>
        <function-ref name="byteReceived" scoped="" ref="0x110a7faa0"/>
        <function-ref name="endPacket" scoped="" ref="0x110a7fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x110a77e40" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x110a77e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110a761e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x110a76370"/>
        <function-ref name="receive" scoped="" ref="0x110a76500"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x110a76690"/>
        <function-ref name="receiveDone" scoped="" ref="0x110a76820"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x110a769b0"/>
        <function-ref name="sendDone" scoped="" ref="0x110a76b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x110a7ae00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x110a7ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x110a771c0"/>
        <function-ref name="resetSend" scoped="" ref="0x110a77350"/>
        <function-ref name="dataReceived" scoped="" ref="0x110a774e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x110a77670"/>
        <function-ref name="putData" scoped="" ref="0x110a77800"/>
        <function-ref name="putDone" scoped="" ref="0x110a77990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x110a77b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110a76dc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110a76dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110a75180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110a75310"/>
        <function-ref name="led1On" scoped="" ref="0x110a754a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110a75630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110a757c0"/>
        <function-ref name="get" scoped="" ref="0x110a75950"/>
        <function-ref name="led1Off" scoped="" ref="0x110a75ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x110a741b0"/>
        <function-ref name="set" scoped="" ref="0x110a75c70"/>
        <function-ref name="led0On" scoped="" ref="0x110a75e00"/>
        <function-ref name="led2On" scoped="" ref="0x110a74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x110ad16b0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x110ad16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x110ad1a30"/>
        <function-ref name="offset" scoped="" ref="0x110ad1bc0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x110ad1d50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10f240850" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x10f271020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10f273d30" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x10f270520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10f2702a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10f273350" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10f271870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x10f2e6040" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10f2ae140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2ccd90" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x10f2d0bc0" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2d0940" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x10f2d2020" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x10f2d2ae0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2d2860" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x10f2cd600" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2cd020" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10f2cd370" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x10f2ce020" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2cf9e0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10f2cfd30" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x10f2caae0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2ca860" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x10f2e8e60" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2e88b0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x10f2e8bd0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10f2afd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x10f2cb890" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2cb610" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x10f2e5600" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10f2ae140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10f2e5020" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x10f2e5370" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10f2ae140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x10f2e4490" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10f2ae140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10f2e02c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10f2be920" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10f2beca0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2e0020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10f2dc970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2dc370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2dc6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10f2dba60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10f2df630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2df3b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10f2deb80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2de5a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10f2de8f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10f2f63c0" loc="46:../../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x10f2f6140" loc="46:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x10f2f22b0" loc="56:../../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x10f2f6c30" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x10f2f2020" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x10f2bce80" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2bcc00" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x10f2d9020" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2bac90" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10f2d5490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2d7e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2d51c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10f2d7560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x10f2d85e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2d8020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2d8350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x10f2f79c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
              <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10f2f7060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x10f2f73b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2f76e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x10f25dba0" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10f25dba0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x10f278cc0" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x10f2784a0" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x10f276720" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10f25dba0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x10f2764a0" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10f25dba0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10f2f0400" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x10f2dae10" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2f0170" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x10f2eb0b0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x10f2eddb0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x10f2ebe80" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x10f2eb8b0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2ebbf0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x10f2eccd0" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x10f308760" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x10f309e00" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f308170" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10f3084c0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x10f2ed5e0" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10f2efcd0" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x10f2ef3a0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10f2ef6e0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10f2efa30" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10edca020" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10edca870" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x10f255020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x10f2557d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x10f254020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x10f253020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x10f2527d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10f250020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x10f2547b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10f250b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x10f250910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x10f258850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x10f253800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x10f252020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10f268020" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10f268020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10f262c50" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10f2665b0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x10f263360" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10f265d60" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10f2630d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x10f2655b0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10f261ca0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10f261420" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10f266d90" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10f268b90" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10f268910" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x10f2622f0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10f263d00" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10f262060" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10f267680" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10f267400" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10f267e80" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10f333020" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x10f36c020" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x10f36e270" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x10f36d840" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x10f36fb00" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x10f36e9e0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x10f351d10" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x10f36f420" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x10f36d120" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10f13f070" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10ee71670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x10f3a5020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10f3a6cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x10f3a9390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10f364b60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x10f363650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10f3a5890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x10f3a47b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x10f3a6560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10f3a4020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x10f3a9b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x10f3a8350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x10f3a8da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10f364b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10f363650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10f3a8b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10f364b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10f363650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10f3bb0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x10f3b9630" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x10f3b93b0" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10f3b82a0" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10f3b8020" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10f3babe0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10f3ba3e0" loc="63:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10f3bba90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10f3bb810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10f3c23e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x10f3c2d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10f3c2ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x10f3c1790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10f3c1510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x10f3c02a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10f3c0020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10f3c0990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10f3af810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x10f3ac2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x10f3ac020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10f3ad020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10f3b4aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10f3ad760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10f3b19b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10f3af120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10f3b1270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10f3b00e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x10f3b09f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10f3b0770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x10f3accb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x10f3aca30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10f3dd9f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x10f216670" loc="76:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x10eec8910" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10edb8020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10edc3020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10edb8770" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10f524e30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10f5225c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10f524020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10f521480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10f524720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10f522ce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10f525120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10f5257f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10f54b020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10f54b770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x10f5462e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10f546060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10f54e770" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10f54a780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x10f546bd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10f54a020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10f54d820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x10f548020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x10f54d020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10f5278c0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x10f549020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x10f5487c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x10f5497b0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10f54e020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x10f7862b0" loc="49:../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10f7862b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10f786b50" loc="55:../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10f7862b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10f77cc30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10f77c470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x10f77dce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x10f77d420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10f7753b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10f774e30" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10f776c00" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x10f774610" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x10f774390" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x10f776460" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x10f775bb0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10f8d3350" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10f8d3350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10f8d3c70" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10f8d0c70" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10f8d0c70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10f904020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10f901c50" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10f903ba0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x10f9012b0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10f902bd0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
          </variable>
          <variable name="dt" ref="0x10f901020" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10f9023b0" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10f8ff480" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10f904b80" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10f904900" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f904020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10f9033e0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10f942100" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10f942100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10f942340" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f942340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10f942c60" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10f942340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10f941d70" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10f941510" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10f97a500" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x10fa7a2b0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10fa7aac0" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x10fadf900" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10fadd270" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x10fada3f0" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10fac2a80"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x10fac1020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x10fae1120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x10fae2120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x10fae3770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x10fae2910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x10fae1b80" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x10fad49b0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x10fad4190" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x10fb0b2e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10fb0b060" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x10face890" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x10fb27af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x10faf1790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x10fafe390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa73a20"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x10fa722e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10fafe110" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa73a20"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x10fa722e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x10faf47b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x10fafc880" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa6ea50"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x10fa6d2e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10fafc600" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa6ea50"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x10fa6d2e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x10fb2ce70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x10fb28480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x10fafde00" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa71940"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x10fa6f180"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x10fafa0e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa6ea50"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x10fa6d2e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x10faf8dc0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x10faf8b40" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x10faf8420" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x10fb2c740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x10fafd610" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa71940"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x10fa6f180"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10fafd390" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa71940"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x10fa6f180"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x10faf9270" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x10fb2b5d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x10faf9c50" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x10faf99d0" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x10faf5730" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x10faf4020" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x10faec840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x10faef790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x10faf37e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x10fb2c020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x10faf0020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x10fb2bcf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10faf65f0" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x10fa78900"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x10fa740d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x10fb2a4c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x10fb27350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x10fafaa80" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x10fafa800" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x10fb264d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10fb26250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x10fafeb70" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10fa73a20"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x10fa722e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x10faf3020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x10faf0770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x10faec020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10fac2a80"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x10fac1020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10faeecf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10fac2a80"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x10fac1020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x10faee2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10fa96b90"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10fa95020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10faee020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10fa96b90"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10fa95020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x10fb26d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x10fb2acb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x10faf6e00" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x10fb28be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x10faef020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x10faf1020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x10fb79390" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10fb79be0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x10fc2dc70" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x10fc294f0" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10fc5dbb0" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x10fc41e00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x10fc3f020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x10fc41570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x10fc406d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10fc3f950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x10fc7a020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10fc80090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10fc7bd20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10fc80090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x10fc7c020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x10fc7cb20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10fc80090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10fc7c8a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x10fc80090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x10fc7b470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x10fc80090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x10fce3770" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x10fd26020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10fd26020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10fd26260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10fd26260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x10fd240b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10fd26260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd25e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x10fd222a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd22020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x10fd26e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd26ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10fd21610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10fd26260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd21020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x10fd21380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10fd26260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x10fd15680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd15060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x10fd153f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x10fd14850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd145d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x10fd16810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x10fd19d60" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x10fd19ae0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x10fd2b2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd2b060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x10fd2a510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd2a290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x10fd28680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd28400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x10fd806e0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd80460" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x10fd39940" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd396c0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x10fd3a020" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10fd3bd40" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x10fd3b4a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x10fd3b220" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x10fd3aa50" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x10fd3a7d0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x10fd37860" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd375e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x10fd73020" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x10fd758b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10fd75c30" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x10fd452b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd46c50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x10fd45020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x10fd41980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd41380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x10fd416f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x10fd45d90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10eb2b110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd45b10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x10fd42880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd42600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x10fd46450" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd461d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x10fd44990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd44710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x10fd79830" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd795b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x10fd7c8f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd7c2d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x10fd7c660" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x10fd7b810" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd7b590" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x10fd7ad20" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd7a700" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x10fd7aa90" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x10fd77810" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd77590" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x10fd3e3d0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd3e150" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10fd6ba70" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd6b4b0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10fd6b7e0" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10fd65160" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd66ae0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10fd66e10" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10fd66270" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10fd69d90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd69b10" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10fd68360" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd6ad10" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10fd680d0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10fd91900" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd91340" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x10fd91670" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10fd90c10" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x10fd8c410" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x10fd8d5e0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x10fd8de20" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10fd8c170" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10fd8fdc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x10fd8f7e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x10fd8fb30" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x10fd903d0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x10fd90150" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x10fd89820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x10fd89020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x10fd83ae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd83820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x10fd83020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x10f26c680"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x10f287020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd85be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x10fd82de0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x10f287b20"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x10f285440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10fd82ae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x10fd974c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x10fd95570" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x10fd96d50" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x10fd9cb70" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x10fd98be0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x10fd97d30" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x10fd96580" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x10fd98420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x10fdc7480" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x10fdc9a80" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x10fdc8c90" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x10fdc8a10" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x10fdc8270" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x10fdca730" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10fdca4b0" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x10fdc92a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10fdc9020" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x10fe03020" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x10fe059f0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x10fe05d40" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x10fe06960" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x10fe06020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x10fe07820" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x10fe07c00" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x10fe0c2a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10fe0c020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x10fe05270" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x10fe0ad70" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x10fe0aaf0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x10fe0b3e0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x10fe0b160" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x10fe02270" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x10fe07020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x10fe08c50" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x10fe03a20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x10fe0bb60" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x10fd18ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x10fd5a240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x10fe0a390" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x10fe0d850" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x10fe0c9f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x10fe08530" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x10fe01c50" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10fe01c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x10fdfe540" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10fdfd2b0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10fe01c50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x10fdfecc0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x10fdfd020" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10fe01c50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x10fe29a70" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10f274850"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10fe297f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10fe285c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10f274850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10fe28340" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x10fe3d640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x10fd18ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x10fd5a240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x10fe31420" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x10fe30390" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x10fe31c00" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10f2ae140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x10fe32b80" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10f2ae140"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x10fe325a0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10f2ae140"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10fe328f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10f2ae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x10fe24c50" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10f274850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x10fe2ec00" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10f274850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x10fe34d80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10fe2e610" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10fe2e960" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10fe2b3b0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10f274850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x10fe2c530" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x10fe2cda0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10fe2b110" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x10ff43bb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10ff42d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10ff425c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10ff42340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x10ff43350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x10ff670e0" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x10ff67930" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x10ff661f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x10ff92b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10ff92580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10ff928d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x10ff8ddd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10ff8d490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10ff8d7e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10ff8db30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10ff8e6b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10f274850"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10ff8e0d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10ff8e420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x10ff93730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x10f274850"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10ff93150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10ff934a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10ff902c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10ff91930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10ff91c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10ff90020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10ffc6cf0" loc="70:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x10ffc6380" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x10ffc6710" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10ffc6a50" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x10ffc43c0" loc="82:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x10ffc26a0" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x10ffc2a30" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10ffc2d70" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10ffc4110" loc="83:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x10ffcac90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x10ffcaa10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x1100ab120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x10fa96b90"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x10fa95020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x1100b3d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1100b3ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x1100ae2a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1100ae020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x1100af610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1100aed30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1100aeab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x1101649d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x110176420" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x11016a620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x11016a3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x11017faf0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x110168c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x11016f5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x110177540" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x1101752d0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x110178500" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x110178280" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x11017ba10" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x110172070" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x110169550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x110164270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x11016cc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x11015f350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x11015b9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x11017e980" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x1101738b0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x1101711f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x110178dc0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x1101808c0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x11016c460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x11016c1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x110180190" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x1101684d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x110163190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x11015eb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x11015b270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x110167b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x1101638c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x11016adb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x110160390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x11017c0e0" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x11016e7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x1101617b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x110165ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x110171de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x110171b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x11015c2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x11016da60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x110167420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x11017f390" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10faafa30"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x10faafe50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x11017f110" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x10faafa30"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x10faafe50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x110173190" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x11017b2a0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x11017b020" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x1101729d0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110172750" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x110160b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x11017ab50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x11017c850" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x11016d2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x11016d020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10eb2c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x11017e270" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x110161020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x110165350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x110169cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x11016e020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x11016fd30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x1101759f0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x110177c80" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x11015ca40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x11017a3c0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x11017a140" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x11015fb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x110176b50" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x11015e350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1103c45e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1103c4360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x110413b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x1104131c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x110413530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110413860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x110412880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1104122c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1104125f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1103f9530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1103f9530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1103f9770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1103f9770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x1103f82e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1103f9770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1103f8060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1103f9770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x11045c580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1104939e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x110493020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x110493750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x1104947f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x110494020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x110497d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10eb2c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x1104a83d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1104a8150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x1104a93d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10edbc090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1104a9150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1104a5350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1104a50d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1104a7390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1104a7110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x11069c5f0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x11069c5f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1106992a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x11069c5f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x110699020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x11069c5f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x110953020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110954960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x110954ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x110956020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x110954020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1109568b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10f2bfe00"/>
                <typename><typedef-ref name="message_t" ref="0x10f2bc450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x110956c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x110939190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x11093c9e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x110943270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x1109416c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x11093f390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x11093f110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x110940020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x110943de0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x110943b60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x11093fbf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x1109408d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x11094bc10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x110949590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x11094b2a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x11094b020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x1109482a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110948020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x110946020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x110946c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1109469c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10eb2c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x110945730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1109454b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10edbf980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
