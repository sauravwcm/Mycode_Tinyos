<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="14:ControllerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x110cd9ca0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x110da9110"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x110da9110"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x110f79590"/></to>
    </wire>
    <wire loc="15:ControllerAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110ce80d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x110daa590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110f90020"/></to>
    </wire>
    <wire loc="16:ControllerAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110cf31e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1114fd370"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1114fd370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x111365c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:ControllerAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x110d0fc40"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x11120c640"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x11120c640"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x111345270"/></to>
    </wire>
    <wire loc="30:ControllerAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x110d6a5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x112315c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x112315c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x112e188b0"/></to>
    </wire>
    <wire loc="31:ControllerAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x110d7a4e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1123148b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1123148b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x112e17590"/></to>
    </wire>
    <wire loc="32:ControllerAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x110d8f5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x112315020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x112315020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x112e19b60"/></to>
    </wire>
    <wire loc="33:ControllerAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x110d6b390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11179a970"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x11179a970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1117b1020"/></to>
    </wire>
    <wire loc="34:ControllerAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x110d8aa80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11230e910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x11230e910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x111796cb0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:ControllerAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x110d099a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1123058f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1123058f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11238ab90"/></to>
    </wire>
    <wire loc="37:ControllerAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x110d06a50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x1114f37c0"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x1114f37c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x1117aa060"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11238a540"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11214cdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1120f8b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1120a5750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1120c2080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111f94620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111e81c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1119357e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112cc7020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111aab020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1118a8cc0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112afbca0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11135d8c0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x110f79c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x11085c3a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x11085c3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x110cb4420"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x110f786c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110da84a0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110da84a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110da4690"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x110f78dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x110da4da0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x110dc7020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x110dc7020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110de6020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x110dc34e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110da3c10"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x110dc3bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110fb9c40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110de6020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110df2cb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x110ddf6c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x110df13d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x110bd8510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x110df0680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x110e365a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110ee26d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x110e48020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110f01b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x110e2d700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110ee8160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x110e59a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110f0dcb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x110e34aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110ee9480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x110e5f020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110f0d020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x110e56a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110f1ccb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x110e435a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110f2d220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x110e37b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110ea19d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x110e5ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110ef62f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x110e3d3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110ef7610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x110e475a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110ef9220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x110e2c700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110f067a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x110e58a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110f2b2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x110e46be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110f176d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x110e33890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110f07ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x110e24060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e8cc80"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x110e5fda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110f2c610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x110e1a0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110eea020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x110e42a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110f266d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x110e4b690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110ef0a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x110e5aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110f157a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x110e2fcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110ef1de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x110e601f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110f16ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x110e57a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110f237a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x110e440c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110f10b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x110e5eb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110f25ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x110e5ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x110effcb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x110e5da20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110f1c020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x110e3e570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x110eff020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x110e3f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x110f1eb30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x110e8ac20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110e8a5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x110e892f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x110f3ea90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x110e89940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x110f3b260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110eef930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e8cc80"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110eed020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110e8a5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110ee7020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e8cc80"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110ee67a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110e8a5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110f05610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e8cc80"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110f04c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110e8a5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x110ea6c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x110ea52f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x110f3b9f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x110ea5940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x110f39240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110efeb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110efc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110ef5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110f1a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110f14610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110f13c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110f0cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110f0a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110f2a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110f297a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110f22610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110f21c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x110f1bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x110f402f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x110ea65b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x110cb3320"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x110caf990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x1108bc760"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x110fb9c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x110f938d0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x110f877b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x110fbc360"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x110fbc360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1111d3020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x110f8e980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x110fbb6a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x110fbb6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1111f1b90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x110f8cca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x110fba9c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x110fba9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1111eb710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1111c22f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x111009200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x111009200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111129740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1111f0de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x111007200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x111007200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111124100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1111ea930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x111005200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x111005200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111120d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x110fcc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111084100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x110fe2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110add10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x111016560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110cdd10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x111049570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111158100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x111014580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110c8740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x110fde020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110d1100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x110ff3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110fee00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x111023200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111162d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x111039580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110edd10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x111029570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111145100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x111040580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111154d10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x110fc6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110a1100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x111037580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110e7740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x110fc2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111098740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x110fd8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110f1100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x110fed200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11111dd10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x111003200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11114a740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x11101c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111154d10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x110fd0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11108ed10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x110fe6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110b7860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x110ffb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110e2100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x111018580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110cdd10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x11104f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111137100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x111042570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111154d10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x11102f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11112fd10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x110ff7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111107a60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x11100d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111133100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x111027200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11113c740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x11104d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111162d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x111035570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11110fd10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x110fca020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110abd10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x110fe0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110d6740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x111001200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111145100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x110fdc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110cdd10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x110ff1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110f9740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x111020200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11115d740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x111031580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111133100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x110fb3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11106b6d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x110fc0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110c0100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x110fd6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110edd10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x110feb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111118740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x11102d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110e2100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x111053570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111141d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x111046570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111154d10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x111011200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11110fd10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x11102b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110ded10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x110fce020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111089740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x110fe4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110b1270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x110ff9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110ded10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x111033580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11110a740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x11104b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11115d740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x110ff5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111102460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x11100b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11112fd10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x111025200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111137100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x110fc8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110a6740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x110fff200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111141d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x110fc4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11109dd10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x110fda020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110c8740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x110fef200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110f3100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x11101e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111158100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x110fd2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111092100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x110fe8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110bcd10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x110ffe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110e7740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x111013200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111113100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x11103b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110f1100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x111051570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11113c740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x11103d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110f1100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x11100f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11110a740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x111044570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x111158100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x11106a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x11114a740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x11101a1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1110d1100"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x11120a300"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x111346020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x1113158f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x111200360"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x111200360"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x11130a490"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x111316660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x111208a90"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x111208a90"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x111311d70"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x111344e20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x11131ab10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x111341130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x111319ca0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x11130f020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x110fe0020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1112fd020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x11121c8a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x11121c8a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x11123b8a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x1111f6710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x111214710"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x11121d8a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x11123c8a0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x111224710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x111211710"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x111222710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x11120f710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x1111fd710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x111216710"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x11121f710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x11123f710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x1111f5710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x111213710"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x1111f8660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x1112186b0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x111221710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x11120e710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x1111f7710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x111215710"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x11121e8a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x11123d8a0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x1111f4710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x111212710"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x111223710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x111210710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x1111fe710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x111217710"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x111220710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x11120d710"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x111314480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x111365c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x11135a700"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x11135a700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1114e0150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11135d8c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x111468020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x1113531a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x1114d1790"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x111468020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1129a2020"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x1114da640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1114782f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x111473850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x111468870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x111468870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x11299da90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111505a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1113f6b50"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1113f6b50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x111413cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1129a2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112a29660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x112995210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1129a2870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1129a2870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112a28020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x112999e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1113f6b50"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112a24190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x112a2e340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112a2e340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112a23770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x112a2da80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112a2da80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x112a22a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x112a2cda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x112a2cda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x110e48020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x110e3e570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x110e46be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x110e601f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x110e440c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x110e5f020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x110e435a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x110e5fda0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x110e42a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x110e5eb80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x110e3f020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x110e5da20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x11142f0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1113f4b70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1113f4b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1113edb80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1113dfc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x11146f9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x1114d5a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x1117aa060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x11157e560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x111524660"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x1117630c0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x1117630c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x111581020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1114f4020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1117a8790"/></to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1117aa800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1117a5020"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1117a5690"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111765c00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111765c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1115844d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1117648f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x112a38c70"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x112a38c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1116cbbc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x11157b6c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1117aa800"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x112ac6d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1115821d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x11157d3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x112a38020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x112a38020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1116cc850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x111577c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112ac65d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112ac65d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1116cd980"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1115821d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1115fbdc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x11157e560"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x1115f9890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x111581020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x1115fa6d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1115844d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1115fb020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1115f7020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x11157b6c0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1115f8230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x11157d3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1115f2290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x111577c20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x1115f7690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x1116278b0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x1116278b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x11161d020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1115f2c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1116a0110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1116a0110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1113f4b70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1115efdd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1116213b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x111619dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x111627080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x111620710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x1116186d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x111033580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x111615670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x111031580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x111613670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x11102f580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x111611670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x11102b580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x11160f670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x11102d580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x112a37be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x1116278b0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x112a37440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1116c94b0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1116c94b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111750400"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1116c8280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x112ac6d70"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1116cbbc0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111751020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x111751020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x112af63a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x1116cd980"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1116c6b60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1116cc850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111752210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111752210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x112af7540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111750400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x112af58b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x1116c5c20"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1116213b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111750cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1116c8280"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1116f8a90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111750400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11177d9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1117517a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1117517a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112af6b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x11174bb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x111627080"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x112af4210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111750cd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x112af49d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x112afa330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x112af2c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x112b573a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x11174bb20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x112b57b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x11177d400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112b560f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11177d9d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x112b56d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x11177c720"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1117b1020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1117dfd80"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x111797990"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1117b0050"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1117b0050"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1121ef020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x111794900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1117afdf0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x1117afdf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x1121eedf0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x111793020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1117aca80"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1117aca80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1121eca80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x11178f310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x111fe0550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x111fe0550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x111fd2a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x1117be130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x1117ebe70"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x1117ebe70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x11180cb40"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x111796cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1117af210"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1117af210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1121ee210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x111790080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1117f4b20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1117f4b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11180d990"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x111793c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1117ae470"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1117ae470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1121ed470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1117c93f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x111fdc660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x111fdc660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x111fceaf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1117dfd80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1121afb80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x1117eb020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1121e98b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x1117e0020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x1121eace0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1117edc20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1118109e0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1118109e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x11180cb40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x1121af080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11180d990"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x111fe26e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x1117d80d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x11180b790"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x11180b790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x11219b020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1117eada0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x11180c4c0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x11180c4c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x111fe1a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x1121e10f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1117d2e60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1121e8860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x1118194e0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x1118194e0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x112139c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1121e7690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x111810390"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x111810390"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x112138a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1121e34d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x111daeb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1121e7ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x111fd7d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1121e6b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fd3640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x1121e5610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x1118ae550"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x1118ae550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x1118a30c0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x1121e21f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x111805020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x111805020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1118004c0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1121e1d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1121afb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x1121acd90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x111fe1a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x111fd2020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x11219b020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x112199410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x112139c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x11212ea20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x1121af080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x1121a82d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x1117d0020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1121395e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1121395e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x11212e370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x111fe26e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x111fd4c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1117d2e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11213cbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11213cbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1121317b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x11180f240"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11213b8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11213b8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x1121304d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x1117d06e0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x112137170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x112137170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x11212c020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x112138a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x11212d840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x1121acd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x111807020"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x111807020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x111804b80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1121366b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1120aa220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1120aa220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1120a8a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1120a9020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11219e350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11219e350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x11219bd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x11219bd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1121b4ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1121b4ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1121ad860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1121ad860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111807b10"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x111807b10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111801790"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x112136020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1121b0980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1121b0980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x1121ac690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1121ac690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1120ffaa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1120ffaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1120fbe30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1120fc950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x111806940"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x111806940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x111f307c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x111f307c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x111f91020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1117ff320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111870020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111870020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1118a4390"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x1117f7880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x11186e4b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x11186e4b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x1118a1020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x1117fdba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111e906c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x1117fdba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111f335c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x111f335c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111f94ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x111e906c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111e80320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x111838810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x111e8d020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x111e8d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x111e80bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x1117f6700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x111e8dcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x111e8dcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x111e7f970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x111836b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x11182d130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x111835b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1120c9a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1120c9a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1120c1a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x111828850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1120cbaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1120cbaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x111ab0280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111837470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x1118232a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x1118242a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x1118252b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x1118a9850"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x1118a0500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x11189e3a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x111932220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x111932220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x11192caf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1118995c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x11198de60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x11198de60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x111980b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x111897830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x1119896a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x1119896a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1119c1d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x111896b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x111987ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x111987ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1119b7710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x111894020"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x1119a1d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x1119a1d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1119d38a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1118cd0d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111d16e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111d16e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111a36950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1118cf120"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x111d137b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111d137b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1118cf830"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x111d12ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111d12ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1118ce940"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x111d14ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111d14ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1118ce020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x111d11160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111d11160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1118d49b0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x111d69870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111d69870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x11188e3c0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x111d67880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111d67880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x11188ec70"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x111d660a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x111d660a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1118d6570"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x111d0de50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111d0de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1118d6e40"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x111d6d670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111d6d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x111892200"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x111d59500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x111d59500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1118d7830"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x111d5ace0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111d5ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1118d2720"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x111d6ae50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111d6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x1118d1020"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x111d6de50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111d6de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1118d18d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x111d6ce50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111d6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x1118ccbd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111d47a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111d47a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111a36950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x1118cde40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111d7a9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111d7a9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111a36950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x11188f6b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x111daeb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x11189c970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x111dadd20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x111dadd20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x111df3310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x1118c0820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x1118c1940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1119357e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11192c260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11192c260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112b2e720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x11192caf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112b2d020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x112b2e720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112b27760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x112b2d020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112b201d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x112b27760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x112ba1340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x112b1ab90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112b26020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x112b26020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x112ba1bd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x112b1c690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x111966080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111966080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x111961cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112b9edd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x112ba8e70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x112ba8e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112b9b440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x112ba55d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x112ba55d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x112b9a760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x112ba48f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x112ba48f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x11195d0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1113f4b70"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x11198b090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x11197b710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x11198a390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1119c51d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x111933b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x111984020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x1119889b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1119bcb60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1119832f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x110fcc020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x11197fde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x110ff3200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x11197a930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x110fce020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1119c4480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x110fb3020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1119bf020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x110feb200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1119bbde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x110ff5200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1119b6930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x110fed200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x1119a1150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1119eca20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x1119a0a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1119d08b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1119da5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x110e475a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x1119d98f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x110e5ba20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x1119d87a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x110ff5200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1119d2480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x1111f6710"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1119cf480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x1111f8660"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111d13160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111d68880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111d600a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111d670a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x111d54500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111d57500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111d12490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111d5c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111d58500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111d62880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x111d630a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111d15a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111a33670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111a33670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111a2d920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111d11e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111d0f490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111d5bc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111d0fbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111d58ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111d5c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x111d6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111d5e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111d60880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111d5e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111d55ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111d57ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111d63880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111d5f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111d59ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111d66880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111d54ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111d14480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x111d0d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111d6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111d610a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111d61880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111d680a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111d0e2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111d0d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111d117b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111d5a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x111d55500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111d620a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111d5f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111d13e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x111d650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111d0e940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111d65880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111d5b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111d539b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x111a32630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a29bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x111a318c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a27020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x111a306f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a27db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111a36950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111a2a810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a25ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x111a21020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x111ab4770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x111ab4770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x111ab0280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x111a24400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111ae7c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111ae7c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x112c08770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x111a22080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x111ae68f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x111ae68f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x112c07be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x111a6c680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x111cda020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x111cda020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x112c05d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111a21df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x111a67120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x111ab0280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x111aabb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x112c05d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x111ad1850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x112c07be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x111ad2020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x112c08770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111ad4430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x112c07440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x112bfdd90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x112bfdd90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111c412c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x111ad2020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x111b21a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x112c052b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x111ad26a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x111ad26a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x111b20060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x111acfa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x112c045a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x112c915d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111ad36b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x111ad0690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x112bfd140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x112bfd140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111c42020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x111acd2a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112bf7760"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112bf7760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x111c444d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111ad36b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111b21250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x111ad1850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x111b20c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111ad4430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111b22470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x111b1e3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x111acfa40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x111b1f5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x111ad0690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x111b19480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x111acd2a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x111b1ea50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x111b65020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x111b65020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x111b5fc70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111b19c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x111b172f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x111b605e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x111b57150"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111b61d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x111b58780"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x111b82bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x111018580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x111b80b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x111014580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x111b7eb20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x11103d580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x111b7cb20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x111037580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x111b7ab20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x111039580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x111b87d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x111c22430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x112c98020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x111c433f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x112c98630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x111c2e540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x111c2e540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x111c22430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x112bfcd40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x111b65020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x112bfc5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111c41ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111c41ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111c36c30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111c3f8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x112c915d0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x111c412c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x111c38850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x111c38850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x112cc46c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x111c444d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x111c3d060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111c42020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111c39a80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111c39a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x112cc5850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x111c433f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x111c3d990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111c36c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x112cc2a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x111c35570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111c3f8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x111c3ce50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x111c36c30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x111c3c060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111b61d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x111c3c840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x111b605e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111c36020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112cc4e40"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x112cc1400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x111c35570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x112cc1bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x112cc7630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x112cbfde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x111c76250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x111b5fc70"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x111c72d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x111018580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x111c70cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x11103d580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111d9ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111d45da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111d9db50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111d98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111d90e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111d98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x111d842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111d862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111d42120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111d8c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111d872f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111d9cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111d9bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111d92670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x111d94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111d96670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111d46760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111a33670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111d41aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111d40120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111d8ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111d40870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111d87ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111d42dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111d8de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x111d9b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111d9c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111d45750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111d8ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111d8f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111d8d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111d85ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111d86ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111d93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111d8fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111d88ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111d95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111d84ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111d45100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x111d9d370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111d9a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111d92e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x111d96e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111d90670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111d99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111d43450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111d99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111d3f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111d3fcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x111d882f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111d8aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111d41450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111d8a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x111d852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111d93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111d8e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111d43aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111d42770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x111d95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111d3f670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111d94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111d8ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111d827a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111dcdc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111d78da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111d71b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111dcb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111dc4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111dcbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x111db72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111db92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111d76120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111dbf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111dbb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111d70c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111d6fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111dc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x111dc7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111dca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111d79760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111a33670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111d74aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111d73120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111dbea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111d73870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111dbbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111d76dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111dc0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x111d6f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111d70480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111d78750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111dc2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111dc3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111dc0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111db8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111db9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111dc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111dc3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111dbcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111dc9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111db7ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111d78100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x111d71370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111dcd480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111dc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x111dcae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111dc4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111dcc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111d77450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111dcce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111d72020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111d72cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x111dbc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111dbdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111d74450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111dbd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x111db82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111dc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111dc2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111d77aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111d76770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x111dc9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111d72670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111dc7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111dbfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111db67a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x111df0880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x111de6020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x111de6020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x111de0140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x111ddcbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x111de5c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x111de5c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x111e29150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x111ddf530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x111e42a20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x111e2d540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x111e2e590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x111e2e590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x111e409e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x111e24950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x111e2bca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x111e2bca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x111e00a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x111e299f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x111e2d540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x111e53020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111e4d530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111e4d530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x111e4ae50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x111e46020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x110e24060"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x111e3fc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x110fe6020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x111e88990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x111e7e900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x111e8a150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x111e7d0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x111e7dae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x111932220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x111e70500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x111933b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x111e6a820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x11198de60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x111e69b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x1119889b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x111e71880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x1119a1150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x111e67020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111efcc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x111efcc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111a36950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111e67d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111efb8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x111efb8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111a33670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111e636d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x111f612f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111f612f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111e63de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x111f60cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x111f60cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111e62530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x111f5f370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x111f5f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111e62c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x111f5ed00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x111f5ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111e65e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x111f58c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x111f58c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111e66780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x111f3f7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x111f3f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111e65550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111f442f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111f442f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111ec73e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x111f59480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x111f59480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111ec65e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x111f55e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111f55e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111ec5020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x111f54670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111f54670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111ec7e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x111f5b7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x111f5b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111ec49c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x111f41ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x111f41ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111ec5890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x111f422f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111f422f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111ec4130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x111f42ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111f42ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x111ebfd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x111f33df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x111f33df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x111f93550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x111e79d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x111e77bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x111e76950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x111fe0550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111e6bbe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111fd8480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111fd8480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111fca8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111ec26c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x111f56c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x111f60020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x111f5ac70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x111f4de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x111f54e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x111f402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x111f48670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x111f59c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x111f4e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x111f50e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x111f53670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111f5c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111f47a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x111f5cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111f44ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x111f5e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x111f49e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x111f58480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x111f61940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x111f4be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x111f4c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x111f49670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x111f4f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x111f4ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x111f45ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x111f52670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111f40ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x111f5a490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x111f56480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x111f4ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x111f53e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x111f4d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x111f55670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x111f60670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111f5b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x111f5be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x111f452f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x111f46ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111f5e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111f462f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x111f412f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x111f4fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x111f4b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x111f5f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x111f52e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x111f50670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x111f48e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x111f2f020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x111f917c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x111f7d150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x110daa590"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x111f90020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x11198de60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x111f8f380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x11198b090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x111f8e6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x11198a390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x111f8da50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x1119a0a20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x111f8c6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x11203d520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x11203d520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x111a36950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x111f8b530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x112085480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x112085480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x111f8aad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x112037060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x112037060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x111f8a3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x112037d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x112037d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x111f89330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x111f881e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x111f86d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x111fe0550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x111f88b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x1118ae550"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x111f813e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x11209b840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x11209b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x111f81cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x112099060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x112099060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x111f82b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x112036ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x112036ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x111f7f6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x112087c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x112087c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x111f80590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x112089c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x112089c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x111f80e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x112088480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x112088480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111f7e020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x112089480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x112089480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x111f7e8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x11203cc20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x11203cc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x111f719d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x112049020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x111966080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x1120323b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x11204ccf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x1120316e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x1113531a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1120450b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x111365c60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x11209c620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x11203a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x11209f620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x112092840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x112099840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x112039cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x11208e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11208ac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x11209e620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x11209d620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x112093060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x112096840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x112098060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x11203c2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x111a33670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1120376b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11208c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x112036490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1120389c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x11208f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x11209ee00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x11209fe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x11203a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x112090840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x112091060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x11208f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x112087480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x112095060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x112091840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x11208a480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x112097060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x112034e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x11209de00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x112093840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x112098840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x112092060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x11209b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x112039020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x1120347b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x11208bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x11208b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11208cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x112088c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x111a318c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x112095840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x112090060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x112039670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x112038370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x112097840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x112034160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x112096060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x11208e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x111a306f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x112084160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x111a32630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x1120c7920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x1120c2940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1120cd990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1120c2080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1120a5e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1120a9020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1120a4ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1120a6690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1120a6690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x111ab0280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1120a38f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x1120c9a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1120a2170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x1120fc200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x1120f8570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1120f73f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x1120fc950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1120f7a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x11212cd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1121366b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x11212bb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x112136020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x11212a2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x112129170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x112129b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x11214b410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x11216cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x1121ae800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1121aa580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1121aa580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x111ab0280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1121961c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11180d990"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x112e19b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x112e0c660"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x112e188b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x111793020"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x112e17590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x111793c90"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x112311020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x112e16c10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x112e16c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x111790080"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x112e0a460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x11228e930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x112e090e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x111793c90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x11228e930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1122b54b0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1122b4400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x111797990"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1122b3060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x111793c90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1122b2720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x111793020"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x1122b1480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x1122b1c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x112308020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x111793020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x112308c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x111793c90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x11238ab90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x11237b7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x112302980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1122f9300"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1122ff330"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x112319d60"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x112300cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x11231a0d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1122fd800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x112318a10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1122fe020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x11231a6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x11238a540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x11237b170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1123842b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1122fc300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1123174a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x112386790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x11238c120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x112387c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x11237f970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x1124fd6b0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x112386790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1124aede0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x112387c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1124ae6c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x1124adc20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x11237f970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x112370020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1123842b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1124aa920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1123842b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1124a2dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1123842b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x1124ab590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x112371c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x1124abe80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x112374720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x112373020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x1124a6e00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x11236a860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1114f4020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x1124a3e40"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x111524660"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x1124066e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x1123c44f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x112390c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x112402a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x1124a8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x1124a8800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="ControllerC" loc="8:ControllerC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:../../../tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):../../../tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:../../../tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ControllerAppC.TimerMilliC" loc="44(ControllerAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ControllerAppC.AMSenderC" loc="47(ControllerAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ControllerAppC.AMSenderC.SenderC" loc="47(ControllerAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ControllerAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(ControllerAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ControllerAppC.AMReceiverC" loc="43(ControllerAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x110e51230" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x110e515d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x110e51980" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x110e51d00" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x110e500d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x110e50440" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x110e507d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x110e50b60" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x110e72020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x110ea3950" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x110ea3d20" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x1110659f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x111065da0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x1110641a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x111064550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x1110648c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:../../../tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1113b83b0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1113b83b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1113efc80" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1113efc80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x111412570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x111412570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x111412d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x111412d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x111411160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x111411160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x111411940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x111411940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x111411d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x111410540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x111410540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1113c16d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1113c16d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x111428020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x111428020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x111428410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x111428410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x111428bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x111428bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x111427020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x111463cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x111463cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1114a6230" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1114a6230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x1114a6560" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1114d2dd0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1114d2dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x1116f35b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x1116e65b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x111713d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x111e61020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x111e61020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x111e617b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111e617b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x11223c660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x112233360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1122a10d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x112289c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x11230d330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x110d6b390" loc="25:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x110d6b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x110d6b710"/>
        <function-ref name="stopDone" scoped="" ref="0x110d6b8a0"/>
        <function-ref name="start" scoped="" ref="0x110d6ba30"/>
        <function-ref name="stop" scoped="" ref="0x110d6bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x110cd9ca0" loc="13:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x110cd9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x110cd80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x110d099a0" loc="18:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x110d099a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x110d09d20"/>
        <function-ref name="stopDone" scoped="" ref="0x110d0e020"/>
        <function-ref name="start" scoped="" ref="0x110d0e1b0"/>
        <function-ref name="stop" scoped="" ref="0x110d0e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x110d06a50" loc="19:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x110d06a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110d06dd0"/>
        <function-ref name="receive" scoped="" ref="0x110d0d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x110d6a5f0" loc="22:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x110d6a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110d6a970"/>
        <function-ref name="payloadLength" scoped="" ref="0x110d6ab00"/>
        <function-ref name="getPayload" scoped="" ref="0x110d6ac90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110d6ae20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x110d08020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x110d8f5a0" loc="24:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x110d8f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x110d8f920"/>
        <function-ref name="getPayload" scoped="" ref="0x110d8fab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x110d8fc40"/>
        <function-ref name="cancel" scoped="" ref="0x110d8fdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x110d6b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x110d0fc40" loc="16:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x110d0fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x110cda0c0"/>
            <typename><typedef-ref name="button_state_t" ref="0x110cda9e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x110d13ce0"/>
        <function-ref name="enable" scoped="" ref="0x110d13860"/>
        <function-ref name="notify" scoped="" ref="0x110d121e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x110d8aa80" loc="26:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x110d8aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x110d8ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x110ce80d0" loc="14:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110ce80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110ce8450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110ce85e0"/>
        <function-ref name="led1On" scoped="" ref="0x110ce8770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110ce8900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110ce8a90"/>
        <function-ref name="get" scoped="" ref="0x110ce8c20"/>
        <function-ref name="led1Off" scoped="" ref="0x110ce8db0"/>
        <function-ref name="led2Off" scoped="" ref="0x110cf54d0"/>
        <function-ref name="set" scoped="" ref="0x110cf5020"/>
        <function-ref name="led0On" scoped="" ref="0x110cf51b0"/>
        <function-ref name="led2On" scoped="" ref="0x110cf5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x110d7a4e0" loc="23:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x110d7a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x110d7a860"/>
        <function-ref name="source" scoped="" ref="0x110d7a9f0"/>
        <function-ref name="address" scoped="" ref="0x110d7ab80"/>
        <function-ref name="destination" scoped="" ref="0x110d7ad10"/>
        <function-ref name="setSource" scoped="" ref="0x110d05020"/>
        <function-ref name="setDestination" scoped="" ref="0x110d051b0"/>
        <function-ref name="type" scoped="" ref="0x110d05340"/>
        <function-ref name="setType" scoped="" ref="0x110d054d0"/>
        <function-ref name="isForMe" scoped="" ref="0x110d05660"/>
        <function-ref name="setGroup" scoped="" ref="0x110d057f0"/>
        <function-ref name="localGroup" scoped="" ref="0x110d05980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110cf31e0" loc="15:ControllerC.nc">
      <component-ref qname="ControllerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110cf31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x110cf7630"/>
        <function-ref name="fired" scoped="" ref="0x110ce7c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x110cf89d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x110cf8550"/>
        <function-ref name="getdt" scoped="" ref="0x110cf6020"/>
        <function-ref name="gett0" scoped="" ref="0x110cf7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x110cf80d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x110cf3dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x110cf7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x110ce72e0"/>
        <function-ref name="stop" scoped="" ref="0x110ce77b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x110da65d0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x110da65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110da6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x110da9110" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x110da9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x110da9490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110da84a0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110da84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110da8820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x110dc34e0" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x110dc34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110dc3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110da4690" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110da4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110da4a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x110da4da0" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x110da4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110dc3180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x110dc3bc0" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x110dc3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110dc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110da3c10" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110da3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110dbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x110dc7020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x110dc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110dc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x110ddf6c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x110ddf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x110de5660"/>
        <function-ref name="initTimerB" scoped="" ref="0x110ddfbd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x110ddfd60"/>
        <function-ref name="initTimerA" scoped="" ref="0x110de5020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x110ddfa40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x110de51b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x110de5340"/>
        <function-ref name="initClocks" scoped="" ref="0x110de54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110de6020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110de6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110de63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x110df13d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x110df13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x110df0340"/>
        <function-ref name="initTimerB" scoped="" ref="0x110df18e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x110df1a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x110df1c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x110df1750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x110df1d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x110df0020"/>
        <function-ref name="initClocks" scoped="" ref="0x110df01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x110df0680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x110df0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x110df0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110df2cb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110df2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110df10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x110e365a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x110e365a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e36920"/>
        <function-ref name="getControl" scoped="" ref="0x110e36ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e36c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e36dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e35020"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e351b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e35340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e354d0"/>
        <function-ref name="setControl" scoped="" ref="0x110e35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x110e48020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x110e48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e483a0"/>
        <function-ref name="getControl" scoped="" ref="0x110e48530"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e486c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e48850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e489e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e48b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e48d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e47020"/>
        <function-ref name="setControl" scoped="" ref="0x110e471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x110e2d700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x110e2d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e2da80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e2dc10"/>
        <function-ref name="captured" scoped="" ref="0x110e2dda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e2c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e2c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e2c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x110e59a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x110e59a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e59da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e58020"/>
        <function-ref name="captured" scoped="" ref="0x110e581b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e58340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e584d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e58660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x110e34aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x110e34aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e34e20"/>
        <function-ref name="setEvent" scoped="" ref="0x110e33020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e331b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e33340"/>
        <function-ref name="fired" scoped="" ref="0x110e334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x110e5f020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x110e5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e5f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x110e5f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e5f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e5f850"/>
        <function-ref name="fired" scoped="" ref="0x110e5f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x110e56a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x110e56a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e56da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e55020"/>
        <function-ref name="captured" scoped="" ref="0x110e551b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e55340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e554d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x110e435a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x110e435a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e43920"/>
        <function-ref name="getControl" scoped="" ref="0x110e43ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e43c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e43dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e42020"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e421b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e42340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e424d0"/>
        <function-ref name="setControl" scoped="" ref="0x110e42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x110e37b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x110e37b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e1b020"/>
        <function-ref name="getControl" scoped="" ref="0x110e1b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e1b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e1b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e1b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e1b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e1b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e1bb10"/>
        <function-ref name="setControl" scoped="" ref="0x110e1bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x110e5ba20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x110e5ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e5bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e5a020"/>
        <function-ref name="captured" scoped="" ref="0x110e5a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e5a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e5a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x110e3d3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x110e3d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e3d760"/>
        <function-ref name="setEvent" scoped="" ref="0x110e3d8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e3da80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e3dc10"/>
        <function-ref name="fired" scoped="" ref="0x110e3dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x110e475a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x110e475a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e47a20"/>
        <function-ref name="getControl" scoped="" ref="0x110e47bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e47d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e46020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e461b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e46340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e464d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e46660"/>
        <function-ref name="setControl" scoped="" ref="0x110e467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x110e2c700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x110e2c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e2ca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e2cc10"/>
        <function-ref name="captured" scoped="" ref="0x110e2cda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e4a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e4a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e4a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x110e58a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x110e58a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e58da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e57020"/>
        <function-ref name="captured" scoped="" ref="0x110e571b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e57340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e574d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x110e46be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x110e46be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e45020"/>
        <function-ref name="getControl" scoped="" ref="0x110e451b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e45340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e454d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e45660"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e457f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e45980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e45b10"/>
        <function-ref name="setControl" scoped="" ref="0x110e45ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x110e33890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x110e33890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e33c10"/>
        <function-ref name="setEvent" scoped="" ref="0x110e33da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e2e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e2e1b0"/>
        <function-ref name="fired" scoped="" ref="0x110e2e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x110e24060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x110e24060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110e243e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110e24570"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e24700"/>
        <function-ref name="get" scoped="" ref="0x110e24890"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e24a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e24bb0"/>
        <function-ref name="getMode" scoped="" ref="0x110e24d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e23020"/>
        <function-ref name="overflow" scoped="" ref="0x110e231b0"/>
        <function-ref name="setMode" scoped="" ref="0x110e23340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110e234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x110e5fda0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x110e5fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e5e180"/>
        <function-ref name="setEvent" scoped="" ref="0x110e5e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e5e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e5e630"/>
        <function-ref name="fired" scoped="" ref="0x110e5e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x110e1a0c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x110e1a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e1a440"/>
        <function-ref name="getControl" scoped="" ref="0x110e1a5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e1a760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e1a8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e1aa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e1ac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e1ada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e36020"/>
        <function-ref name="setControl" scoped="" ref="0x110e361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x110e42a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x110e42a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e42dd0"/>
        <function-ref name="getControl" scoped="" ref="0x110e41020"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e411b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e41340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e414d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e41660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e417f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e41980"/>
        <function-ref name="setControl" scoped="" ref="0x110e41b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x110e4b690" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x110e4b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e4ba10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e4bba0"/>
        <function-ref name="captured" scoped="" ref="0x110e4bd30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e2d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e2d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x110e5aa20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x110e5aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e5ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e59020"/>
        <function-ref name="captured" scoped="" ref="0x110e591b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e59340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e594d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e59660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x110e2fcf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x110e2fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e340a0"/>
        <function-ref name="setEvent" scoped="" ref="0x110e34230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e343c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e34550"/>
        <function-ref name="fired" scoped="" ref="0x110e346e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x110e601f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x110e601f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e60570"/>
        <function-ref name="setEvent" scoped="" ref="0x110e60700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e60890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e60a20"/>
        <function-ref name="fired" scoped="" ref="0x110e60bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x110e57a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x110e57a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e57da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e56020"/>
        <function-ref name="captured" scoped="" ref="0x110e561b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e56340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e564d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x110e440c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x110e440c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e44440"/>
        <function-ref name="getControl" scoped="" ref="0x110e445d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e44760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e448f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e44a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e44c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e44da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e43020"/>
        <function-ref name="setControl" scoped="" ref="0x110e431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x110e4a6c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x110e4a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110e4aa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x110e4abd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e4ad60"/>
        <function-ref name="get" scoped="" ref="0x110e49020"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e491b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e49340"/>
        <function-ref name="getMode" scoped="" ref="0x110e494d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e49660"/>
        <function-ref name="overflow" scoped="" ref="0x110e497f0"/>
        <function-ref name="setMode" scoped="" ref="0x110e49980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110e49b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x110e5eb80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x110e5eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e5d020"/>
        <function-ref name="setEvent" scoped="" ref="0x110e5d1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e5d340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e5d4d0"/>
        <function-ref name="fired" scoped="" ref="0x110e5d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x110e5ca20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x110e5ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e5cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110e5b020"/>
        <function-ref name="captured" scoped="" ref="0x110e5b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e5b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e5b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110e5b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x110e5da20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x110e5da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e5c020"/>
        <function-ref name="setEvent" scoped="" ref="0x110e5c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e5c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e5c4d0"/>
        <function-ref name="fired" scoped="" ref="0x110e5c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x110e3e570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x110e3e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110e3e8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x110e3ea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110e3ec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110e3eda0"/>
        <function-ref name="fired" scoped="" ref="0x110e3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x110e3f020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x110e3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110e3f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x110e3f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e3f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110e3f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110e3f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e3fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110e3fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110e3e020"/>
        <function-ref name="setControl" scoped="" ref="0x110e3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x110e892f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x110e892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110e89670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x110e8ac20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x110e8ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110e89020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x110e89940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x110e89940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110e89cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x110e8a5b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110e8a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110e8a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110e8cc80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110e8cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110e8b0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110e8b230"/>
        <function-ref name="enableEvents" scoped="" ref="0x110e8b3c0"/>
        <function-ref name="get" scoped="" ref="0x110e8b550"/>
        <function-ref name="disableEvents" scoped="" ref="0x110e8b6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110e8b870"/>
        <function-ref name="getMode" scoped="" ref="0x110e8ba00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110e8bb90"/>
        <function-ref name="overflow" scoped="" ref="0x110e8bd20"/>
        <function-ref name="setMode" scoped="" ref="0x110e8a020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110e8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x110ea52f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x110ea52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110ea5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x110ea6c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x110ea6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110ea5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x110ea5940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x110ea5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110ea5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x110ea65b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110ea65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110ea6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x110e85c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110e85c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110ea70a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110ea7230"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ea73c0"/>
        <function-ref name="get" scoped="" ref="0x110ea7550"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ea76e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110ea7870"/>
        <function-ref name="getMode" scoped="" ref="0x110ea7a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110ea7b90"/>
        <function-ref name="overflow" scoped="" ref="0x110ea7d20"/>
        <function-ref name="setMode" scoped="" ref="0x110ea6020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110ea61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110ef0a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110ef0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ef0e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110eef020"/>
        <function-ref name="captured" scoped="" ref="0x110eef1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110eef340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110eef4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x110eef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110ea19d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110ea19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110ea1d50"/>
        <function-ref name="getControl" scoped="" ref="0x110ef1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ef11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110ef1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110ef14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ef1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110ef17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110ef1980"/>
        <function-ref name="setControl" scoped="" ref="0x110ef1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110eed020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110eed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110eed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110ef1de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110ef1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ef0180"/>
        <function-ref name="setEvent" scoped="" ref="0x110ef0310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110ef04a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110ef0630"/>
        <function-ref name="fired" scoped="" ref="0x110ef07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110eef930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110eef930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110eefcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110eefe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x110eee020"/>
        <function-ref name="get" scoped="" ref="0x110eee1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110eee340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110eee4d0"/>
        <function-ref name="getMode" scoped="" ref="0x110eee660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110eee7f0"/>
        <function-ref name="overflow" scoped="" ref="0x110eee980"/>
        <function-ref name="setMode" scoped="" ref="0x110eeeb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110eeeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110ee8160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110ee8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ee84e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110ee8670"/>
        <function-ref name="captured" scoped="" ref="0x110ee8800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110ee8990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110ee8b20"/>
        <function-ref name="setEdge" scoped="" ref="0x110ee8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110eea020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110eea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110eea3a0"/>
        <function-ref name="getControl" scoped="" ref="0x110eea530"/>
        <function-ref name="enableEvents" scoped="" ref="0x110eea6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110eea850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110eea9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110eeab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110eead00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110ee9020"/>
        <function-ref name="setControl" scoped="" ref="0x110ee91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110ee67a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110ee67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110ee6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110ee9480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110ee9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ee9800"/>
        <function-ref name="setEvent" scoped="" ref="0x110ee9990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110ee9b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110ee9cb0"/>
        <function-ref name="fired" scoped="" ref="0x110ee9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110ee7020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110ee7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110ee73a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110ee7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ee76c0"/>
        <function-ref name="get" scoped="" ref="0x110ee7850"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ee79e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110ee7b70"/>
        <function-ref name="getMode" scoped="" ref="0x110ee7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110ee6020"/>
        <function-ref name="overflow" scoped="" ref="0x110ee61b0"/>
        <function-ref name="setMode" scoped="" ref="0x110ee6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110ee64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110f067a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110f067a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f06b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110f06cb0"/>
        <function-ref name="captured" scoped="" ref="0x110f06e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f05020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f051b0"/>
        <function-ref name="setEdge" scoped="" ref="0x110f05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110ee26d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110ee26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110ee2a50"/>
        <function-ref name="getControl" scoped="" ref="0x110ee2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ee2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110f07020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110f071b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f07340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110f074d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110f07660"/>
        <function-ref name="setControl" scoped="" ref="0x110f077f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110f04c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110f04c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110f07ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110f07ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f07e40"/>
        <function-ref name="setEvent" scoped="" ref="0x110f06020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110f061b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110f06340"/>
        <function-ref name="fired" scoped="" ref="0x110f064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110f05610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110f05610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110f05990"/>
        <function-ref name="setClockSource" scoped="" ref="0x110f05b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f05cb0"/>
        <function-ref name="get" scoped="" ref="0x110f05e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f04020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f041b0"/>
        <function-ref name="getMode" scoped="" ref="0x110f04340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f044d0"/>
        <function-ref name="overflow" scoped="" ref="0x110f04660"/>
        <function-ref name="setMode" scoped="" ref="0x110f047f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110f04980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110effcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110effcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110efe0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110efe230"/>
        <function-ref name="captured" scoped="" ref="0x110efe3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110efe550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110efe6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x110efe870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110f01b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110f01b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110f00020"/>
        <function-ref name="getControl" scoped="" ref="0x110f001b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f00340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110f004d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110f00660"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f007f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110f00980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110f00b10"/>
        <function-ref name="setControl" scoped="" ref="0x110f00ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110efc2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110efc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110efc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110eff020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110eff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110eff3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x110eff530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110eff6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110eff850"/>
        <function-ref name="fired" scoped="" ref="0x110eff9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110efeb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110efeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110efd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x110efd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110efd340"/>
        <function-ref name="get" scoped="" ref="0x110efd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110efd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110efd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x110efd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110efdb10"/>
        <function-ref name="overflow" scoped="" ref="0x110efdca0"/>
        <function-ref name="setMode" scoped="" ref="0x110efde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110efc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110ef62f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110ef62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ef6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110ef6800"/>
        <function-ref name="captured" scoped="" ref="0x110ef6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110ef6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110ef6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x110ef6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110ef9220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110ef9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110ef95a0"/>
        <function-ref name="getControl" scoped="" ref="0x110ef9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ef98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110ef9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110ef9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ef9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110ef7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110ef71b0"/>
        <function-ref name="setControl" scoped="" ref="0x110ef7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110f1a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110f1a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f1ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110ef7610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110ef7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110ef7990"/>
        <function-ref name="setEvent" scoped="" ref="0x110ef7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110ef7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110ef7e40"/>
        <function-ref name="fired" scoped="" ref="0x110ef6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110ef5160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110ef5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110ef54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110ef5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x110ef5800"/>
        <function-ref name="get" scoped="" ref="0x110ef5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x110ef5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110ef5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x110ef5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f1a020"/>
        <function-ref name="overflow" scoped="" ref="0x110f1a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x110f1a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110f1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110f157a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110f157a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f15b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110f15cb0"/>
        <function-ref name="captured" scoped="" ref="0x110f15e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f14020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f141b0"/>
        <function-ref name="setEdge" scoped="" ref="0x110f14340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110f176d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110f176d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110f17a50"/>
        <function-ref name="getControl" scoped="" ref="0x110f17be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f17d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110f16020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110f161b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f16340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110f164d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110f16660"/>
        <function-ref name="setControl" scoped="" ref="0x110f167f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110f13c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110f13c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110f16ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110f16ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f16e40"/>
        <function-ref name="setEvent" scoped="" ref="0x110f15020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110f151b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110f15340"/>
        <function-ref name="fired" scoped="" ref="0x110f154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110f14610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110f14610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110f14990"/>
        <function-ref name="setClockSource" scoped="" ref="0x110f14b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f14cb0"/>
        <function-ref name="get" scoped="" ref="0x110f14e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f13020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f131b0"/>
        <function-ref name="getMode" scoped="" ref="0x110f13340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f134d0"/>
        <function-ref name="overflow" scoped="" ref="0x110f13660"/>
        <function-ref name="setMode" scoped="" ref="0x110f137f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110f13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110f0dcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110f0dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f0c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110f0c230"/>
        <function-ref name="captured" scoped="" ref="0x110f0c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f0c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f0c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x110f0c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110f10b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110f10b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110f0e020"/>
        <function-ref name="getControl" scoped="" ref="0x110f0e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f0e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110f0e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110f0e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f0e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110f0e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110f0eb10"/>
        <function-ref name="setControl" scoped="" ref="0x110f0eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110f0a2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110f0a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f0a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110f0d020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110f0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f0d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x110f0d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110f0d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110f0d850"/>
        <function-ref name="fired" scoped="" ref="0x110f0d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110f0cb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110f0cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110f0b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x110f0b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f0b340"/>
        <function-ref name="get" scoped="" ref="0x110f0b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f0b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f0b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x110f0b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f0bb10"/>
        <function-ref name="overflow" scoped="" ref="0x110f0bca0"/>
        <function-ref name="setMode" scoped="" ref="0x110f0be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110f0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110f2b2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110f2b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f2b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110f2b800"/>
        <function-ref name="captured" scoped="" ref="0x110f2b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f2bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f2bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x110f2be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110f2d220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110f2d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110f2d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x110f2d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f2d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110f2da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110f2dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f2dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110f2c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110f2c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x110f2c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110f297a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110f297a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f29b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110f2c610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110f2c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f2c990"/>
        <function-ref name="setEvent" scoped="" ref="0x110f2cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110f2ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110f2ce40"/>
        <function-ref name="fired" scoped="" ref="0x110f2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110f2a160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110f2a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110f2a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x110f2a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f2a800"/>
        <function-ref name="get" scoped="" ref="0x110f2a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f2ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f2acb0"/>
        <function-ref name="getMode" scoped="" ref="0x110f2ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f29020"/>
        <function-ref name="overflow" scoped="" ref="0x110f291b0"/>
        <function-ref name="setMode" scoped="" ref="0x110f29340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110f294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110f237a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110f237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f23b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110f23cb0"/>
        <function-ref name="captured" scoped="" ref="0x110f23e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f22020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f221b0"/>
        <function-ref name="setEdge" scoped="" ref="0x110f22340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110f266d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110f266d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110f26a50"/>
        <function-ref name="getControl" scoped="" ref="0x110f26be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f26d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110f25020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110f251b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f25340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110f254d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110f25660"/>
        <function-ref name="setControl" scoped="" ref="0x110f257f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110f21c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110f21c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110f25ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110f25ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f25e40"/>
        <function-ref name="setEvent" scoped="" ref="0x110f23020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110f231b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110f23340"/>
        <function-ref name="fired" scoped="" ref="0x110f234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110f22610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110f22610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110f22990"/>
        <function-ref name="setClockSource" scoped="" ref="0x110f22b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f22cb0"/>
        <function-ref name="get" scoped="" ref="0x110f22e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f21020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f211b0"/>
        <function-ref name="getMode" scoped="" ref="0x110f21340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f214d0"/>
        <function-ref name="overflow" scoped="" ref="0x110f21660"/>
        <function-ref name="setMode" scoped="" ref="0x110f217f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110f21980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x110f1ccb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x110f1ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f1b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x110f1b230"/>
        <function-ref name="captured" scoped="" ref="0x110f1b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f1b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f1b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x110f1b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x110f1eb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x110f1eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x110f1d020"/>
        <function-ref name="getControl" scoped="" ref="0x110f1d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f1d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x110f1d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x110f1d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f1d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x110f1d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x110f1db10"/>
        <function-ref name="setControl" scoped="" ref="0x110f1dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x110f402f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x110f402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f40670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x110f1c020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x110f1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x110f1c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x110f1c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x110f1c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x110f1c850"/>
        <function-ref name="fired" scoped="" ref="0x110f1c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x110f1bb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x110f1bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x110f41020"/>
        <function-ref name="setClockSource" scoped="" ref="0x110f411b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x110f41340"/>
        <function-ref name="get" scoped="" ref="0x110f414d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x110f41660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x110f417f0"/>
        <function-ref name="getMode" scoped="" ref="0x110f41980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x110f41b10"/>
        <function-ref name="overflow" scoped="" ref="0x110f41ca0"/>
        <function-ref name="setMode" scoped="" ref="0x110f41e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x110f40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x110f39240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x110f39240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f395c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x110f3ea90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x110f3ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f3ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x110f3b260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x110f3b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f3b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x110f3b9f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x110f3b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x110f3bd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x110bd8510" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x110bd8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x110bd8890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x1108bc760" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1108bc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x1108bcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x110961cc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x110961cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1109f60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x110dc5b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x110dc5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x110f59b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x110f591b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x110f59340"/>
        <function-ref name="initTimerA" scoped="" ref="0x110f594d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x110f59020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x110f59660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x110f597f0"/>
        <function-ref name="initClocks" scoped="" ref="0x110f59980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x110f78dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x110f78dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110f77180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x110f79590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x110f79590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x110f79910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x110f786c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x110f786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110f78a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x110f79c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x110f79c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110f78020"/>
        <function-ref name="taskLoop" scoped="" ref="0x110f781b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x110f78340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x1107e81d0" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x1107e81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1107e8550"/>
        <function-ref name="runTask" scoped="" ref="0x1107e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x11085c3a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x11085c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11085c720"/>
        <function-ref name="taskLoop" scoped="" ref="0x11085c8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x11085ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x110cb3320" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x110cb3320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x110cb36a0"/>
        <function-ref name="runTask" scoped="" ref="0x110cb3830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x110caf990" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x110caf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x110cafd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x110cb4420" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x110cb4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110cb47a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x110cb4930"/>
        <function-ref name="runNextTask" scoped="" ref="0x110cb4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x110daa590" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110daa590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110daa910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110daaaa0"/>
        <function-ref name="led1On" scoped="" ref="0x110daac30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110daadc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110f95020"/>
        <function-ref name="get" scoped="" ref="0x110f951b0"/>
        <function-ref name="led1Off" scoped="" ref="0x110f95340"/>
        <function-ref name="led2Off" scoped="" ref="0x110f95980"/>
        <function-ref name="set" scoped="" ref="0x110f954d0"/>
        <function-ref name="led0On" scoped="" ref="0x110f95660"/>
        <function-ref name="led2On" scoped="" ref="0x110f957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x110f877b0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x110f877b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f87b30"/>
        <function-ref name="isInput" scoped="" ref="0x110f87cc0"/>
        <function-ref name="toggle" scoped="" ref="0x110f87e50"/>
        <function-ref name="isOutput" scoped="" ref="0x110f8e020"/>
        <function-ref name="get" scoped="" ref="0x110f8e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f8e340"/>
        <function-ref name="set" scoped="" ref="0x110f8e4d0"/>
        <function-ref name="clr" scoped="" ref="0x110f8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x110f938d0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110f938d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110f93c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x110f8e980" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x110f8e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f8ed00"/>
        <function-ref name="isInput" scoped="" ref="0x110f8c020"/>
        <function-ref name="toggle" scoped="" ref="0x110f8c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110f8c340"/>
        <function-ref name="get" scoped="" ref="0x110f8c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f8c660"/>
        <function-ref name="set" scoped="" ref="0x110f8c7f0"/>
        <function-ref name="clr" scoped="" ref="0x110f8c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x110f90020" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x110f90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x110f903a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x110f90530"/>
        <function-ref name="led1On" scoped="" ref="0x110f906c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x110f90850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x110f909e0"/>
        <function-ref name="get" scoped="" ref="0x110f90b70"/>
        <function-ref name="led1Off" scoped="" ref="0x110f90d00"/>
        <function-ref name="led2Off" scoped="" ref="0x110f8f4d0"/>
        <function-ref name="set" scoped="" ref="0x110f8f020"/>
        <function-ref name="led0On" scoped="" ref="0x110f8f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x110f8f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x110f8cca0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x110f8cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110f860a0"/>
        <function-ref name="isInput" scoped="" ref="0x110f86230"/>
        <function-ref name="toggle" scoped="" ref="0x110f863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x110f86550"/>
        <function-ref name="get" scoped="" ref="0x110f866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110f86870"/>
        <function-ref name="set" scoped="" ref="0x110f86a00"/>
        <function-ref name="clr" scoped="" ref="0x110f86b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x110fbc360" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x110fbc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fbc6e0"/>
        <function-ref name="isInput" scoped="" ref="0x110fbc870"/>
        <function-ref name="toggle" scoped="" ref="0x110fbca00"/>
        <function-ref name="isOutput" scoped="" ref="0x110fbcb90"/>
        <function-ref name="get" scoped="" ref="0x110fbcd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fbb020"/>
        <function-ref name="set" scoped="" ref="0x110fbb1b0"/>
        <function-ref name="clr" scoped="" ref="0x110fbb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x110fbb6a0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x110fbb6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fbba20"/>
        <function-ref name="isInput" scoped="" ref="0x110fbbbb0"/>
        <function-ref name="toggle" scoped="" ref="0x110fbbd40"/>
        <function-ref name="isOutput" scoped="" ref="0x110fba020"/>
        <function-ref name="get" scoped="" ref="0x110fba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fba340"/>
        <function-ref name="set" scoped="" ref="0x110fba4d0"/>
        <function-ref name="clr" scoped="" ref="0x110fba660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x110fb9c40" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x110fb9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x110fb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x110fba9c0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x110fba9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fbad40"/>
        <function-ref name="isInput" scoped="" ref="0x110fb9020"/>
        <function-ref name="toggle" scoped="" ref="0x110fb91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x110fb9340"/>
        <function-ref name="get" scoped="" ref="0x110fb94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fb9660"/>
        <function-ref name="set" scoped="" ref="0x110fb97f0"/>
        <function-ref name="clr" scoped="" ref="0x110fb9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x110fcc020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x110fcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fcc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fcc530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fcc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fcc850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fcc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fccb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fccd00"/>
        <function-ref name="get" scoped="" ref="0x110fcb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fcb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fcb340"/>
        <function-ref name="set" scoped="" ref="0x110fcb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fcb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fcb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fcba80"/>
        <function-ref name="clr" scoped="" ref="0x110fcbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x110fe2020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x110fe2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fe23a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fe2530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fe26c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fe2850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fe29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fe2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fe2d00"/>
        <function-ref name="get" scoped="" ref="0x110fe1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fe11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fe1340"/>
        <function-ref name="set" scoped="" ref="0x110fe14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fe1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fe17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fe1a80"/>
        <function-ref name="clr" scoped="" ref="0x110fe1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x111016560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x111016560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110168e0"/>
        <function-ref name="isInput" scoped="" ref="0x111016a70"/>
        <function-ref name="setResistor" scoped="" ref="0x111016c00"/>
        <function-ref name="toggle" scoped="" ref="0x111016d90"/>
        <function-ref name="isOutput" scoped="" ref="0x111015020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111015340"/>
        <function-ref name="get" scoped="" ref="0x1110154d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111015660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110157f0"/>
        <function-ref name="set" scoped="" ref="0x111015980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111015b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111015ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111014020"/>
        <function-ref name="clr" scoped="" ref="0x1110141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x111049570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x111049570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110498f0"/>
        <function-ref name="isInput" scoped="" ref="0x111049a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111049c10"/>
        <function-ref name="toggle" scoped="" ref="0x111049da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111047020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111047340"/>
        <function-ref name="get" scoped="" ref="0x1110474d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111047660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110477f0"/>
        <function-ref name="set" scoped="" ref="0x111047980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111047b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111047ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111046020"/>
        <function-ref name="clr" scoped="" ref="0x1110461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x111014580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x111014580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111014900"/>
        <function-ref name="isInput" scoped="" ref="0x111014a90"/>
        <function-ref name="setResistor" scoped="" ref="0x111014c20"/>
        <function-ref name="toggle" scoped="" ref="0x111014db0"/>
        <function-ref name="isOutput" scoped="" ref="0x11103e020"/>
        <function-ref name="getResistor" scoped="" ref="0x11103e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11103e340"/>
        <function-ref name="get" scoped="" ref="0x11103e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11103e660"/>
        <function-ref name="getRaw" scoped="" ref="0x11103e7f0"/>
        <function-ref name="set" scoped="" ref="0x11103e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11103eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11103eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11103d020"/>
        <function-ref name="clr" scoped="" ref="0x11103d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x110fde020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x110fde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fde3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fde530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fde6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fde850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fde9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fdeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fded00"/>
        <function-ref name="get" scoped="" ref="0x110fdd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fdd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fdd340"/>
        <function-ref name="set" scoped="" ref="0x110fdd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fdd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fdd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fdda80"/>
        <function-ref name="clr" scoped="" ref="0x110fddc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x110ff3200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x110ff3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ff3580"/>
        <function-ref name="isInput" scoped="" ref="0x110ff3710"/>
        <function-ref name="setResistor" scoped="" ref="0x110ff38a0"/>
        <function-ref name="toggle" scoped="" ref="0x110ff3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x110ff3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ff3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ff2020"/>
        <function-ref name="get" scoped="" ref="0x110ff21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ff2340"/>
        <function-ref name="getRaw" scoped="" ref="0x110ff24d0"/>
        <function-ref name="set" scoped="" ref="0x110ff2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ff27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ff2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ff2c10"/>
        <function-ref name="clr" scoped="" ref="0x110ff2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x111009200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x111009200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111009580"/>
        <function-ref name="isInput" scoped="" ref="0x111009710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110098a0"/>
        <function-ref name="toggle" scoped="" ref="0x111009a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111009bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111009d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111008020"/>
        <function-ref name="get" scoped="" ref="0x1110081b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111008340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110084d0"/>
        <function-ref name="set" scoped="" ref="0x111008660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110087f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111008980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111008c10"/>
        <function-ref name="clr" scoped="" ref="0x111008da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x111023200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x111023200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111023580"/>
        <function-ref name="isInput" scoped="" ref="0x111023710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110238a0"/>
        <function-ref name="toggle" scoped="" ref="0x111023a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111023bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111023d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111022020"/>
        <function-ref name="get" scoped="" ref="0x1110221b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111022340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110224d0"/>
        <function-ref name="set" scoped="" ref="0x111022660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110227f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111022980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111022c10"/>
        <function-ref name="clr" scoped="" ref="0x111022da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x111039580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x111039580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111039900"/>
        <function-ref name="isInput" scoped="" ref="0x111039a90"/>
        <function-ref name="setResistor" scoped="" ref="0x111039c20"/>
        <function-ref name="toggle" scoped="" ref="0x111039db0"/>
        <function-ref name="isOutput" scoped="" ref="0x111038020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111038340"/>
        <function-ref name="get" scoped="" ref="0x1110384d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111038660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110387f0"/>
        <function-ref name="set" scoped="" ref="0x111038980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111038b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111038ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111037020"/>
        <function-ref name="clr" scoped="" ref="0x1110371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x111029570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x111029570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110298f0"/>
        <function-ref name="isInput" scoped="" ref="0x111029a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111029c10"/>
        <function-ref name="toggle" scoped="" ref="0x111029da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111054020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111054340"/>
        <function-ref name="get" scoped="" ref="0x1110544d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111054660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110547f0"/>
        <function-ref name="set" scoped="" ref="0x111054980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111054b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111054ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111053020"/>
        <function-ref name="clr" scoped="" ref="0x1110531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x111040580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x111040580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111040900"/>
        <function-ref name="isInput" scoped="" ref="0x111040a90"/>
        <function-ref name="setResistor" scoped="" ref="0x111040c20"/>
        <function-ref name="toggle" scoped="" ref="0x111040db0"/>
        <function-ref name="isOutput" scoped="" ref="0x11103f020"/>
        <function-ref name="getResistor" scoped="" ref="0x11103f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11103f340"/>
        <function-ref name="get" scoped="" ref="0x11103f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11103f660"/>
        <function-ref name="getRaw" scoped="" ref="0x11103f7f0"/>
        <function-ref name="set" scoped="" ref="0x11103f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11103fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11103fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11106a020"/>
        <function-ref name="clr" scoped="" ref="0x11106a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x110fc6020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x110fc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fc63a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fc6530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fc66c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fc6850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fc69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fc6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc6d00"/>
        <function-ref name="get" scoped="" ref="0x110fc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fc51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fc5340"/>
        <function-ref name="set" scoped="" ref="0x110fc54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fc5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fc57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fc5a80"/>
        <function-ref name="clr" scoped="" ref="0x110fc5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x111037580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x111037580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111037900"/>
        <function-ref name="isInput" scoped="" ref="0x111037a90"/>
        <function-ref name="setResistor" scoped="" ref="0x111037c20"/>
        <function-ref name="toggle" scoped="" ref="0x111037db0"/>
        <function-ref name="isOutput" scoped="" ref="0x111036020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111036340"/>
        <function-ref name="get" scoped="" ref="0x1110364d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111036660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110367f0"/>
        <function-ref name="set" scoped="" ref="0x111036980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111036b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111036ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111035020"/>
        <function-ref name="clr" scoped="" ref="0x1110351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x110fc2020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x110fc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fc23a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fc2530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fc26c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fc2850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fc29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fc2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc2d00"/>
        <function-ref name="get" scoped="" ref="0x110fc1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fc11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fc1340"/>
        <function-ref name="set" scoped="" ref="0x110fc14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fc1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fc17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fc1a80"/>
        <function-ref name="clr" scoped="" ref="0x110fc1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x110fd8020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x110fd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd83a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fd8530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fd86c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fd8850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fd8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd8d00"/>
        <function-ref name="get" scoped="" ref="0x110fd7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fd71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fd7340"/>
        <function-ref name="set" scoped="" ref="0x110fd74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fd7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fd77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fd7a80"/>
        <function-ref name="clr" scoped="" ref="0x110fd7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x110fed200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x110fed200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fed580"/>
        <function-ref name="isInput" scoped="" ref="0x110fed710"/>
        <function-ref name="setResistor" scoped="" ref="0x110fed8a0"/>
        <function-ref name="toggle" scoped="" ref="0x110feda30"/>
        <function-ref name="isOutput" scoped="" ref="0x110fedbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fedd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fec020"/>
        <function-ref name="get" scoped="" ref="0x110fec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fec340"/>
        <function-ref name="getRaw" scoped="" ref="0x110fec4d0"/>
        <function-ref name="set" scoped="" ref="0x110fec660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fec7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fec980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fecc10"/>
        <function-ref name="clr" scoped="" ref="0x110fecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x111003200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x111003200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111003580"/>
        <function-ref name="isInput" scoped="" ref="0x111003710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110038a0"/>
        <function-ref name="toggle" scoped="" ref="0x111003a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111003bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111003d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111002020"/>
        <function-ref name="get" scoped="" ref="0x1110021b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111002340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110024d0"/>
        <function-ref name="set" scoped="" ref="0x111002660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110027f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111002980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111002c10"/>
        <function-ref name="clr" scoped="" ref="0x111002da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x11101c200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x11101c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11101c580"/>
        <function-ref name="isInput" scoped="" ref="0x11101c710"/>
        <function-ref name="setResistor" scoped="" ref="0x11101c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x11101ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x11101cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x11101cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11101b020"/>
        <function-ref name="get" scoped="" ref="0x11101b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11101b340"/>
        <function-ref name="getRaw" scoped="" ref="0x11101b4d0"/>
        <function-ref name="set" scoped="" ref="0x11101b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11101b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11101b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11101bc10"/>
        <function-ref name="clr" scoped="" ref="0x11101bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x110fd0020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x110fd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd03a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fd0530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fd06c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fd0850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fd0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd0d00"/>
        <function-ref name="get" scoped="" ref="0x110fcf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fcf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fcf340"/>
        <function-ref name="set" scoped="" ref="0x110fcf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fcf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fcf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fcfa80"/>
        <function-ref name="clr" scoped="" ref="0x110fcfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x110fe6020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x110fe6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fe64a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fe6630"/>
        <function-ref name="setResistor" scoped="" ref="0x110fe67c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fe6950"/>
        <function-ref name="isOutput" scoped="" ref="0x110fe6ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fe6c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fe6e00"/>
        <function-ref name="get" scoped="" ref="0x110fe5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fe51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fe5340"/>
        <function-ref name="set" scoped="" ref="0x110fe54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fe5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fe57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fe5a80"/>
        <function-ref name="clr" scoped="" ref="0x110fe5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x110ffb020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x110ffb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ffb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110ffb530"/>
        <function-ref name="setResistor" scoped="" ref="0x110ffb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110ffb850"/>
        <function-ref name="isOutput" scoped="" ref="0x110ffb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ffbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ffbd00"/>
        <function-ref name="get" scoped="" ref="0x110ffa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ffa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ffa340"/>
        <function-ref name="set" scoped="" ref="0x110ffa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ffa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ffa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ffaa80"/>
        <function-ref name="clr" scoped="" ref="0x110ffac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x111018580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x111018580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111018900"/>
        <function-ref name="isInput" scoped="" ref="0x111018a90"/>
        <function-ref name="setResistor" scoped="" ref="0x111018c20"/>
        <function-ref name="toggle" scoped="" ref="0x111018db0"/>
        <function-ref name="isOutput" scoped="" ref="0x111017020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111017340"/>
        <function-ref name="get" scoped="" ref="0x1110174d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111017660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110177f0"/>
        <function-ref name="set" scoped="" ref="0x111017980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111017b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111017ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111016020"/>
        <function-ref name="clr" scoped="" ref="0x1110161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x11104f570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x11104f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11104f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x11104fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x11104fc10"/>
        <function-ref name="toggle" scoped="" ref="0x11104fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x11104e020"/>
        <function-ref name="getResistor" scoped="" ref="0x11104e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11104e340"/>
        <function-ref name="get" scoped="" ref="0x11104e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11104e660"/>
        <function-ref name="getRaw" scoped="" ref="0x11104e7f0"/>
        <function-ref name="set" scoped="" ref="0x11104e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11104eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11104eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11104d020"/>
        <function-ref name="clr" scoped="" ref="0x11104d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x111042570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x111042570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110428f0"/>
        <function-ref name="isInput" scoped="" ref="0x111042a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111042c10"/>
        <function-ref name="toggle" scoped="" ref="0x111042da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111041020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111041340"/>
        <function-ref name="get" scoped="" ref="0x1110414d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111041660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110417f0"/>
        <function-ref name="set" scoped="" ref="0x111041980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111041b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111041ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111040020"/>
        <function-ref name="clr" scoped="" ref="0x1110401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x11102f580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x11102f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11102f900"/>
        <function-ref name="isInput" scoped="" ref="0x11102fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x11102fc20"/>
        <function-ref name="toggle" scoped="" ref="0x11102fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x11102e020"/>
        <function-ref name="getResistor" scoped="" ref="0x11102e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11102e340"/>
        <function-ref name="get" scoped="" ref="0x11102e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11102e660"/>
        <function-ref name="getRaw" scoped="" ref="0x11102e7f0"/>
        <function-ref name="set" scoped="" ref="0x11102e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11102eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11102eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11102d020"/>
        <function-ref name="clr" scoped="" ref="0x11102d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x110ff7020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x110ff7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ff75a0"/>
        <function-ref name="isInput" scoped="" ref="0x110ff7730"/>
        <function-ref name="setResistor" scoped="" ref="0x110ff78c0"/>
        <function-ref name="toggle" scoped="" ref="0x110ff7a50"/>
        <function-ref name="isOutput" scoped="" ref="0x110ff7be0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ff7d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ff6020"/>
        <function-ref name="get" scoped="" ref="0x110ff61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ff6340"/>
        <function-ref name="getRaw" scoped="" ref="0x110ff64d0"/>
        <function-ref name="set" scoped="" ref="0x110ff6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ff67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ff6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ff6c10"/>
        <function-ref name="clr" scoped="" ref="0x110ff6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x11100d200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x11100d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11100d580"/>
        <function-ref name="isInput" scoped="" ref="0x11100d710"/>
        <function-ref name="setResistor" scoped="" ref="0x11100d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x11100da30"/>
        <function-ref name="isOutput" scoped="" ref="0x11100dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x11100dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11100c020"/>
        <function-ref name="get" scoped="" ref="0x11100c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11100c340"/>
        <function-ref name="getRaw" scoped="" ref="0x11100c4d0"/>
        <function-ref name="set" scoped="" ref="0x11100c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11100c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11100c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11100cc10"/>
        <function-ref name="clr" scoped="" ref="0x11100cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x111027200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x111027200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111027580"/>
        <function-ref name="isInput" scoped="" ref="0x111027710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110278a0"/>
        <function-ref name="toggle" scoped="" ref="0x111027a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111027bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111027d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111026020"/>
        <function-ref name="get" scoped="" ref="0x1110261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111026340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110264d0"/>
        <function-ref name="set" scoped="" ref="0x111026660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110267f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111026980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111026c10"/>
        <function-ref name="clr" scoped="" ref="0x111026da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x11104d570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x11104d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11104d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x11104da80"/>
        <function-ref name="setResistor" scoped="" ref="0x11104dc10"/>
        <function-ref name="toggle" scoped="" ref="0x11104dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x11104c020"/>
        <function-ref name="getResistor" scoped="" ref="0x11104c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11104c340"/>
        <function-ref name="get" scoped="" ref="0x11104c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11104c660"/>
        <function-ref name="getRaw" scoped="" ref="0x11104c7f0"/>
        <function-ref name="set" scoped="" ref="0x11104c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11104cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11104cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11104b020"/>
        <function-ref name="clr" scoped="" ref="0x11104b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x111035570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x111035570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110358f0"/>
        <function-ref name="isInput" scoped="" ref="0x111035a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111035c10"/>
        <function-ref name="toggle" scoped="" ref="0x111035da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111034020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111034340"/>
        <function-ref name="get" scoped="" ref="0x1110344d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111034660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110347f0"/>
        <function-ref name="set" scoped="" ref="0x111034980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111034b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111034ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111033020"/>
        <function-ref name="clr" scoped="" ref="0x1110331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x110fca020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x110fca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fca530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fca6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fca850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fcab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fcad00"/>
        <function-ref name="get" scoped="" ref="0x110fc9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fc91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fc9340"/>
        <function-ref name="set" scoped="" ref="0x110fc94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fc9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fc97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fc9a80"/>
        <function-ref name="clr" scoped="" ref="0x110fc9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x110fe0020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x110fe0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fe03a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fe0530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fe06c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fe0850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fe09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fe0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fe0d00"/>
        <function-ref name="get" scoped="" ref="0x110fdf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fdf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fdf340"/>
        <function-ref name="set" scoped="" ref="0x110fdf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fdf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fdf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fdfa80"/>
        <function-ref name="clr" scoped="" ref="0x110fdfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x111001200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x111001200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111001580"/>
        <function-ref name="isInput" scoped="" ref="0x111001710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110018a0"/>
        <function-ref name="toggle" scoped="" ref="0x111001a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111001bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111001d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111000020"/>
        <function-ref name="get" scoped="" ref="0x1110001b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111000340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110004d0"/>
        <function-ref name="set" scoped="" ref="0x111000660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110007f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111000980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111000c10"/>
        <function-ref name="clr" scoped="" ref="0x111000da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x110fdc020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x110fdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fdc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fdc530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fdc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fdc850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fdc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fdcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fdcd00"/>
        <function-ref name="get" scoped="" ref="0x110fdb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fdb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fdb340"/>
        <function-ref name="set" scoped="" ref="0x110fdb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fdb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fdb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fdba80"/>
        <function-ref name="clr" scoped="" ref="0x110fdbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x110ff1200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x110ff1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ff1580"/>
        <function-ref name="isInput" scoped="" ref="0x110ff1710"/>
        <function-ref name="setResistor" scoped="" ref="0x110ff18a0"/>
        <function-ref name="toggle" scoped="" ref="0x110ff1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x110ff1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ff1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ff0020"/>
        <function-ref name="get" scoped="" ref="0x110ff01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ff0340"/>
        <function-ref name="getRaw" scoped="" ref="0x110ff04d0"/>
        <function-ref name="set" scoped="" ref="0x110ff0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ff07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ff0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ff0c10"/>
        <function-ref name="clr" scoped="" ref="0x110ff0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x111007200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x111007200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111007580"/>
        <function-ref name="isInput" scoped="" ref="0x111007710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110078a0"/>
        <function-ref name="toggle" scoped="" ref="0x111007a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111007bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111007d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111006020"/>
        <function-ref name="get" scoped="" ref="0x1110061b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111006340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110064d0"/>
        <function-ref name="set" scoped="" ref="0x111006660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110067f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111006980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111006c10"/>
        <function-ref name="clr" scoped="" ref="0x111006da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x111020200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x111020200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111020580"/>
        <function-ref name="isInput" scoped="" ref="0x111020710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110208a0"/>
        <function-ref name="toggle" scoped="" ref="0x111020a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111020bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111020d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11101f020"/>
        <function-ref name="get" scoped="" ref="0x11101f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11101f340"/>
        <function-ref name="getRaw" scoped="" ref="0x11101f4d0"/>
        <function-ref name="set" scoped="" ref="0x11101f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11101f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11101f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11101fc10"/>
        <function-ref name="clr" scoped="" ref="0x11101fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x111031580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x111031580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111031900"/>
        <function-ref name="isInput" scoped="" ref="0x111031a90"/>
        <function-ref name="setResistor" scoped="" ref="0x111031c20"/>
        <function-ref name="toggle" scoped="" ref="0x111031db0"/>
        <function-ref name="isOutput" scoped="" ref="0x111030020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111030340"/>
        <function-ref name="get" scoped="" ref="0x1110304d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111030660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110307f0"/>
        <function-ref name="set" scoped="" ref="0x111030980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111030b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111030ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11102f020"/>
        <function-ref name="clr" scoped="" ref="0x11102f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x110fb3020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x110fb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fb33a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fb3530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fb36c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fb3850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fb39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fb3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fb3d00"/>
        <function-ref name="get" scoped="" ref="0x110fb2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fb21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fb2340"/>
        <function-ref name="set" scoped="" ref="0x110fb24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fb2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fb27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fb2a80"/>
        <function-ref name="clr" scoped="" ref="0x110fb2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x110fc0020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x110fc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fc03a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fc0530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fc06c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fc0850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fc09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fc0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc0d00"/>
        <function-ref name="get" scoped="" ref="0x110fe9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fe91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fe9340"/>
        <function-ref name="set" scoped="" ref="0x110fe94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fe9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fe97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fe9a80"/>
        <function-ref name="clr" scoped="" ref="0x110fe9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x110fd6020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x110fd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd63a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fd6530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fd66c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fd6850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fd6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd6d00"/>
        <function-ref name="get" scoped="" ref="0x110fd5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fd51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fd5340"/>
        <function-ref name="set" scoped="" ref="0x110fd54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fd5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fd57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fd5a80"/>
        <function-ref name="clr" scoped="" ref="0x110fd5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x110feb200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x110feb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110feb580"/>
        <function-ref name="isInput" scoped="" ref="0x110feb710"/>
        <function-ref name="setResistor" scoped="" ref="0x110feb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x110feba30"/>
        <function-ref name="isOutput" scoped="" ref="0x110febbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x110febd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fea020"/>
        <function-ref name="get" scoped="" ref="0x110fea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fea340"/>
        <function-ref name="getRaw" scoped="" ref="0x110fea4d0"/>
        <function-ref name="set" scoped="" ref="0x110fea660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fea7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fea980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110feac10"/>
        <function-ref name="clr" scoped="" ref="0x110feada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x11102d580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x11102d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11102d900"/>
        <function-ref name="isInput" scoped="" ref="0x11102da90"/>
        <function-ref name="setResistor" scoped="" ref="0x11102dc20"/>
        <function-ref name="toggle" scoped="" ref="0x11102ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x11102c020"/>
        <function-ref name="getResistor" scoped="" ref="0x11102c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11102c340"/>
        <function-ref name="get" scoped="" ref="0x11102c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11102c660"/>
        <function-ref name="getRaw" scoped="" ref="0x11102c7f0"/>
        <function-ref name="set" scoped="" ref="0x11102c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11102cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11102cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11102b020"/>
        <function-ref name="clr" scoped="" ref="0x11102b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x111053570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x111053570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110538f0"/>
        <function-ref name="isInput" scoped="" ref="0x111053a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111053c10"/>
        <function-ref name="toggle" scoped="" ref="0x111053da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111052020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111052340"/>
        <function-ref name="get" scoped="" ref="0x1110524d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111052660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110527f0"/>
        <function-ref name="set" scoped="" ref="0x111052980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111052b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111052ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111051020"/>
        <function-ref name="clr" scoped="" ref="0x1110511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x111046570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x111046570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110468f0"/>
        <function-ref name="isInput" scoped="" ref="0x111046a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111046c10"/>
        <function-ref name="toggle" scoped="" ref="0x111046da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111045020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111045340"/>
        <function-ref name="get" scoped="" ref="0x1110454d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111045660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110457f0"/>
        <function-ref name="set" scoped="" ref="0x111045980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111045b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111045ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111044020"/>
        <function-ref name="clr" scoped="" ref="0x1110441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x111011200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x111011200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111011580"/>
        <function-ref name="isInput" scoped="" ref="0x111011710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110118a0"/>
        <function-ref name="toggle" scoped="" ref="0x111011a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111011bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111011d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111010020"/>
        <function-ref name="get" scoped="" ref="0x1110101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111010340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110104d0"/>
        <function-ref name="set" scoped="" ref="0x111010660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110107f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111010980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111010c10"/>
        <function-ref name="clr" scoped="" ref="0x111010da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x11102b580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x11102b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11102b900"/>
        <function-ref name="isInput" scoped="" ref="0x11102ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x11102bc20"/>
        <function-ref name="toggle" scoped="" ref="0x11102bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x11102a020"/>
        <function-ref name="getResistor" scoped="" ref="0x11102a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11102a340"/>
        <function-ref name="get" scoped="" ref="0x11102a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11102a660"/>
        <function-ref name="getRaw" scoped="" ref="0x11102a7f0"/>
        <function-ref name="set" scoped="" ref="0x11102a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11102ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11102aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111029020"/>
        <function-ref name="clr" scoped="" ref="0x1110291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x110fce020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x110fce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fce530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fce6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fce850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fce9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fceb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fced00"/>
        <function-ref name="get" scoped="" ref="0x110fcd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fcd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fcd340"/>
        <function-ref name="set" scoped="" ref="0x110fcd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fcd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fcd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fcda80"/>
        <function-ref name="clr" scoped="" ref="0x110fcdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x110fe4020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x110fe4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fe43a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fe4530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fe46c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fe4850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fe49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fe4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fe4d00"/>
        <function-ref name="get" scoped="" ref="0x110fe3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fe31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fe3340"/>
        <function-ref name="set" scoped="" ref="0x110fe34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fe3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fe37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fe3a80"/>
        <function-ref name="clr" scoped="" ref="0x110fe3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x110ff9020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x110ff9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ff93a0"/>
        <function-ref name="isInput" scoped="" ref="0x110ff9530"/>
        <function-ref name="setResistor" scoped="" ref="0x110ff96c0"/>
        <function-ref name="toggle" scoped="" ref="0x110ff9850"/>
        <function-ref name="isOutput" scoped="" ref="0x110ff99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ff9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ff9d00"/>
        <function-ref name="get" scoped="" ref="0x110ff8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ff81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ff8340"/>
        <function-ref name="set" scoped="" ref="0x110ff84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ff8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ff87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ff8a80"/>
        <function-ref name="clr" scoped="" ref="0x110ff8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x111033580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x111033580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111033900"/>
        <function-ref name="isInput" scoped="" ref="0x111033a90"/>
        <function-ref name="setResistor" scoped="" ref="0x111033c20"/>
        <function-ref name="toggle" scoped="" ref="0x111033db0"/>
        <function-ref name="isOutput" scoped="" ref="0x111032020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111032340"/>
        <function-ref name="get" scoped="" ref="0x1110324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111032660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110327f0"/>
        <function-ref name="set" scoped="" ref="0x111032980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111032b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111032ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111031020"/>
        <function-ref name="clr" scoped="" ref="0x1110311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x11104b570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x11104b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11104b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x11104ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x11104bc10"/>
        <function-ref name="toggle" scoped="" ref="0x11104bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x11104a020"/>
        <function-ref name="getResistor" scoped="" ref="0x11104a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11104a340"/>
        <function-ref name="get" scoped="" ref="0x11104a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11104a660"/>
        <function-ref name="getRaw" scoped="" ref="0x11104a7f0"/>
        <function-ref name="set" scoped="" ref="0x11104a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11104ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11104aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111049020"/>
        <function-ref name="clr" scoped="" ref="0x1110491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x110ff5200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x110ff5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ff5580"/>
        <function-ref name="isInput" scoped="" ref="0x110ff5710"/>
        <function-ref name="setResistor" scoped="" ref="0x110ff58a0"/>
        <function-ref name="toggle" scoped="" ref="0x110ff5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x110ff5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ff5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ff4020"/>
        <function-ref name="get" scoped="" ref="0x110ff41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ff4340"/>
        <function-ref name="getRaw" scoped="" ref="0x110ff44d0"/>
        <function-ref name="set" scoped="" ref="0x110ff4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ff47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ff4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ff4c10"/>
        <function-ref name="clr" scoped="" ref="0x110ff4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x11100b200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x11100b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11100b580"/>
        <function-ref name="isInput" scoped="" ref="0x11100b710"/>
        <function-ref name="setResistor" scoped="" ref="0x11100b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x11100ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x11100bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x11100bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11100a020"/>
        <function-ref name="get" scoped="" ref="0x11100a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11100a340"/>
        <function-ref name="getRaw" scoped="" ref="0x11100a4d0"/>
        <function-ref name="set" scoped="" ref="0x11100a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11100a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11100a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11100ac10"/>
        <function-ref name="clr" scoped="" ref="0x11100ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x111025200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x111025200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111025580"/>
        <function-ref name="isInput" scoped="" ref="0x111025710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110258a0"/>
        <function-ref name="toggle" scoped="" ref="0x111025a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111025bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111025d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111024020"/>
        <function-ref name="get" scoped="" ref="0x1110241b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111024340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110244d0"/>
        <function-ref name="set" scoped="" ref="0x111024660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110247f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111024980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111024c10"/>
        <function-ref name="clr" scoped="" ref="0x111024da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x110fc8020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x110fc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fc83a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fc8530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fc86c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fc8850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fc89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fc8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc8d00"/>
        <function-ref name="get" scoped="" ref="0x110fc7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fc71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fc7340"/>
        <function-ref name="set" scoped="" ref="0x110fc74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fc7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fc77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fc7a80"/>
        <function-ref name="clr" scoped="" ref="0x110fc7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x110fff200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x110fff200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fff580"/>
        <function-ref name="isInput" scoped="" ref="0x110fff710"/>
        <function-ref name="setResistor" scoped="" ref="0x110fff8a0"/>
        <function-ref name="toggle" scoped="" ref="0x110fffa30"/>
        <function-ref name="isOutput" scoped="" ref="0x110fffbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fffd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111028020"/>
        <function-ref name="get" scoped="" ref="0x1110281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111028340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110284d0"/>
        <function-ref name="set" scoped="" ref="0x111028660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111028980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111028c10"/>
        <function-ref name="clr" scoped="" ref="0x111028da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x110fc4020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x110fc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fc43a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fc4530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fc46c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fc4850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fc49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fc4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fc4d00"/>
        <function-ref name="get" scoped="" ref="0x110fc3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fc31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fc3340"/>
        <function-ref name="set" scoped="" ref="0x110fc34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fc3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fc37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fc3a80"/>
        <function-ref name="clr" scoped="" ref="0x110fc3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x110fda020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x110fda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fda3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fda530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fda6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fda850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fda9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fdab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fdad00"/>
        <function-ref name="get" scoped="" ref="0x110fd9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fd91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fd9340"/>
        <function-ref name="set" scoped="" ref="0x110fd94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fd9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fd97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fd9a80"/>
        <function-ref name="clr" scoped="" ref="0x110fd9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x110fef200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x110fef200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fef580"/>
        <function-ref name="isInput" scoped="" ref="0x110fef710"/>
        <function-ref name="setResistor" scoped="" ref="0x110fef8a0"/>
        <function-ref name="toggle" scoped="" ref="0x110fefa30"/>
        <function-ref name="isOutput" scoped="" ref="0x110fefbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fefd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fee020"/>
        <function-ref name="get" scoped="" ref="0x110fee1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fee340"/>
        <function-ref name="getRaw" scoped="" ref="0x110fee4d0"/>
        <function-ref name="set" scoped="" ref="0x110fee660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fee7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fee980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110feec10"/>
        <function-ref name="clr" scoped="" ref="0x110feeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x111005200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x111005200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111005580"/>
        <function-ref name="isInput" scoped="" ref="0x111005710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110058a0"/>
        <function-ref name="toggle" scoped="" ref="0x111005a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111005bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111005d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111004020"/>
        <function-ref name="get" scoped="" ref="0x1110041b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111004340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110044d0"/>
        <function-ref name="set" scoped="" ref="0x111004660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110047f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111004980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111004c10"/>
        <function-ref name="clr" scoped="" ref="0x111004da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x11101e200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x11101e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11101e580"/>
        <function-ref name="isInput" scoped="" ref="0x11101e710"/>
        <function-ref name="setResistor" scoped="" ref="0x11101e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x11101ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x11101ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x11101ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11101d020"/>
        <function-ref name="get" scoped="" ref="0x11101d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11101d340"/>
        <function-ref name="getRaw" scoped="" ref="0x11101d4d0"/>
        <function-ref name="set" scoped="" ref="0x11101d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11101d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11101d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11101dc10"/>
        <function-ref name="clr" scoped="" ref="0x11101dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x110fd2020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x110fd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fd23a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fd2530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fd26c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fd2850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fd29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fd2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fd2d00"/>
        <function-ref name="get" scoped="" ref="0x110fd1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fd11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fd1340"/>
        <function-ref name="set" scoped="" ref="0x110fd14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fd1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fd17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fd1a80"/>
        <function-ref name="clr" scoped="" ref="0x110fd1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x110fe8020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x110fe8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110fe83a0"/>
        <function-ref name="isInput" scoped="" ref="0x110fe8530"/>
        <function-ref name="setResistor" scoped="" ref="0x110fe86c0"/>
        <function-ref name="toggle" scoped="" ref="0x110fe8850"/>
        <function-ref name="isOutput" scoped="" ref="0x110fe89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110fe8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110fe8d00"/>
        <function-ref name="get" scoped="" ref="0x110fe7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110fe71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110fe7340"/>
        <function-ref name="set" scoped="" ref="0x110fe74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110fe7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110fe77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110fe7a80"/>
        <function-ref name="clr" scoped="" ref="0x110fe7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x110ffe020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x110ffe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x110ffe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x110ffe530"/>
        <function-ref name="setResistor" scoped="" ref="0x110ffe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x110ffe850"/>
        <function-ref name="isOutput" scoped="" ref="0x110ffe9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x110ffeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x110ffed00"/>
        <function-ref name="get" scoped="" ref="0x110ffd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x110ffd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x110ffd340"/>
        <function-ref name="set" scoped="" ref="0x110ffd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x110ffd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x110ffd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x110ffda80"/>
        <function-ref name="clr" scoped="" ref="0x110ffdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x111013200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x111013200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111013580"/>
        <function-ref name="isInput" scoped="" ref="0x111013710"/>
        <function-ref name="setResistor" scoped="" ref="0x1110138a0"/>
        <function-ref name="toggle" scoped="" ref="0x111013a30"/>
        <function-ref name="isOutput" scoped="" ref="0x111013bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x111013d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111012020"/>
        <function-ref name="get" scoped="" ref="0x1110121b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111012340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110124d0"/>
        <function-ref name="set" scoped="" ref="0x111012660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110127f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111012980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111012c10"/>
        <function-ref name="clr" scoped="" ref="0x111012da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x11103b560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x11103b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11103b8e0"/>
        <function-ref name="isInput" scoped="" ref="0x11103ba70"/>
        <function-ref name="setResistor" scoped="" ref="0x11103bc00"/>
        <function-ref name="toggle" scoped="" ref="0x11103bd90"/>
        <function-ref name="isOutput" scoped="" ref="0x11103a020"/>
        <function-ref name="getResistor" scoped="" ref="0x11103a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11103a340"/>
        <function-ref name="get" scoped="" ref="0x11103a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11103a660"/>
        <function-ref name="getRaw" scoped="" ref="0x11103a7f0"/>
        <function-ref name="set" scoped="" ref="0x11103a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11103ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11103aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111039020"/>
        <function-ref name="clr" scoped="" ref="0x1110391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x111051570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x111051570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110518f0"/>
        <function-ref name="isInput" scoped="" ref="0x111051a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111051c10"/>
        <function-ref name="toggle" scoped="" ref="0x111051da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111050020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111050340"/>
        <function-ref name="get" scoped="" ref="0x1110504d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111050660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110507f0"/>
        <function-ref name="set" scoped="" ref="0x111050980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111050b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111050ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11104f020"/>
        <function-ref name="clr" scoped="" ref="0x11104f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x11103d580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x11103d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11103d900"/>
        <function-ref name="isInput" scoped="" ref="0x11103da90"/>
        <function-ref name="setResistor" scoped="" ref="0x11103dc20"/>
        <function-ref name="toggle" scoped="" ref="0x11103ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x11103c020"/>
        <function-ref name="getResistor" scoped="" ref="0x11103c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11103c340"/>
        <function-ref name="get" scoped="" ref="0x11103c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11103c660"/>
        <function-ref name="getRaw" scoped="" ref="0x11103c7f0"/>
        <function-ref name="set" scoped="" ref="0x11103c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11103cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11103cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11103b020"/>
        <function-ref name="clr" scoped="" ref="0x11103b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x11100f200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x11100f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11100f580"/>
        <function-ref name="isInput" scoped="" ref="0x11100f710"/>
        <function-ref name="setResistor" scoped="" ref="0x11100f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x11100fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x11100fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x11100fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11100e020"/>
        <function-ref name="get" scoped="" ref="0x11100e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11100e340"/>
        <function-ref name="getRaw" scoped="" ref="0x11100e4d0"/>
        <function-ref name="set" scoped="" ref="0x11100e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11100e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11100e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11100ec10"/>
        <function-ref name="clr" scoped="" ref="0x11100eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x111044570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x111044570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110448f0"/>
        <function-ref name="isInput" scoped="" ref="0x111044a80"/>
        <function-ref name="setResistor" scoped="" ref="0x111044c10"/>
        <function-ref name="toggle" scoped="" ref="0x111044da0"/>
        <function-ref name="isOutput" scoped="" ref="0x111043020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111043340"/>
        <function-ref name="get" scoped="" ref="0x1110434d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111043660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110437f0"/>
        <function-ref name="set" scoped="" ref="0x111043980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111043b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111043ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111042020"/>
        <function-ref name="clr" scoped="" ref="0x1110421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x11106a580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x11106a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11106a900"/>
        <function-ref name="isInput" scoped="" ref="0x11106aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x11106ac20"/>
        <function-ref name="toggle" scoped="" ref="0x11106adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x111069020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111069340"/>
        <function-ref name="get" scoped="" ref="0x1110694d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111069660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110697f0"/>
        <function-ref name="set" scoped="" ref="0x111069980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111069b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111069ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111068020"/>
        <function-ref name="clr" scoped="" ref="0x1110681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x11101a1f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x11101a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11101a970"/>
        <function-ref name="isInput" scoped="" ref="0x11101ab00"/>
        <function-ref name="setResistor" scoped="" ref="0x11101ac90"/>
        <function-ref name="toggle" scoped="" ref="0x11101ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x111019020"/>
        <function-ref name="getResistor" scoped="" ref="0x1110191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111019340"/>
        <function-ref name="get" scoped="" ref="0x1110194d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111019660"/>
        <function-ref name="getRaw" scoped="" ref="0x1110197f0"/>
        <function-ref name="set" scoped="" ref="0x111019980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111019b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111019ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111018020"/>
        <function-ref name="clr" scoped="" ref="0x1110181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11106b6d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11106b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11106ba50"/>
        <function-ref name="isInput" scoped="" ref="0x11106bbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x11106bd70"/>
        <function-ref name="toggle" scoped="" ref="0x111096020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111096340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110964d0"/>
        <function-ref name="get" scoped="" ref="0x111096660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110967f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111096980"/>
        <function-ref name="set" scoped="" ref="0x111096b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111096ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111096e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111095120"/>
        <function-ref name="clr" scoped="" ref="0x1110952b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111092100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111092100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111092480"/>
        <function-ref name="isInput" scoped="" ref="0x111092610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110927a0"/>
        <function-ref name="toggle" scoped="" ref="0x111092930"/>
        <function-ref name="isOutput" scoped="" ref="0x111092ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111092c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111092de0"/>
        <function-ref name="get" scoped="" ref="0x111091020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111091340"/>
        <function-ref name="set" scoped="" ref="0x1110914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111091660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111091a80"/>
        <function-ref name="clr" scoped="" ref="0x111091c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11108ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11108ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11108d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11108d270"/>
        <function-ref name="setResistor" scoped="" ref="0x11108d400"/>
        <function-ref name="toggle" scoped="" ref="0x11108d590"/>
        <function-ref name="isOutput" scoped="" ref="0x11108d720"/>
        <function-ref name="getResistor" scoped="" ref="0x11108d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11108da40"/>
        <function-ref name="get" scoped="" ref="0x11108dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11108dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x11108c020"/>
        <function-ref name="set" scoped="" ref="0x11108c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11108c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11108c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11108c760"/>
        <function-ref name="clr" scoped="" ref="0x11108c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111089740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111089740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111089ac0"/>
        <function-ref name="isInput" scoped="" ref="0x111089c50"/>
        <function-ref name="setResistor" scoped="" ref="0x111089de0"/>
        <function-ref name="toggle" scoped="" ref="0x111088020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111088340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110884d0"/>
        <function-ref name="get" scoped="" ref="0x111088660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111088980"/>
        <function-ref name="set" scoped="" ref="0x111088b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111088ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111088e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111087120"/>
        <function-ref name="clr" scoped="" ref="0x1110872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111084100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111084100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111084480"/>
        <function-ref name="isInput" scoped="" ref="0x111084610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110847a0"/>
        <function-ref name="toggle" scoped="" ref="0x111084930"/>
        <function-ref name="isOutput" scoped="" ref="0x111084ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111084c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111084de0"/>
        <function-ref name="get" scoped="" ref="0x111083020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111083340"/>
        <function-ref name="set" scoped="" ref="0x1110834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111083660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111083a80"/>
        <function-ref name="clr" scoped="" ref="0x111083c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110abd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110abd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110aa0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1110aa270"/>
        <function-ref name="setResistor" scoped="" ref="0x1110aa400"/>
        <function-ref name="toggle" scoped="" ref="0x1110aa590"/>
        <function-ref name="isOutput" scoped="" ref="0x1110aa720"/>
        <function-ref name="getResistor" scoped="" ref="0x1110aa8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110aaa40"/>
        <function-ref name="get" scoped="" ref="0x1110aabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110aad60"/>
        <function-ref name="getRaw" scoped="" ref="0x1110a9020"/>
        <function-ref name="set" scoped="" ref="0x1110a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110a9760"/>
        <function-ref name="clr" scoped="" ref="0x1110a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110a6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110a6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110a6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1110a6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1110a6de0"/>
        <function-ref name="toggle" scoped="" ref="0x1110a5020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110a51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110a5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110a54d0"/>
        <function-ref name="get" scoped="" ref="0x1110a5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110a57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110a5980"/>
        <function-ref name="set" scoped="" ref="0x1110a5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110a5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110a5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110a4120"/>
        <function-ref name="clr" scoped="" ref="0x1110a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110a1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110a1480"/>
        <function-ref name="isInput" scoped="" ref="0x1110a1610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110a17a0"/>
        <function-ref name="toggle" scoped="" ref="0x1110a1930"/>
        <function-ref name="isOutput" scoped="" ref="0x1110a1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110a1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110a1de0"/>
        <function-ref name="get" scoped="" ref="0x1110a0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110a01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110a0340"/>
        <function-ref name="set" scoped="" ref="0x1110a04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110a0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110a07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110a0a80"/>
        <function-ref name="clr" scoped="" ref="0x1110a0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11109dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11109dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11109c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11109c270"/>
        <function-ref name="setResistor" scoped="" ref="0x11109c400"/>
        <function-ref name="toggle" scoped="" ref="0x11109c590"/>
        <function-ref name="isOutput" scoped="" ref="0x11109c720"/>
        <function-ref name="getResistor" scoped="" ref="0x11109c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11109ca40"/>
        <function-ref name="get" scoped="" ref="0x11109cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11109cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x11109b020"/>
        <function-ref name="set" scoped="" ref="0x11109b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11109b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11109b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11109b760"/>
        <function-ref name="clr" scoped="" ref="0x11109b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111098740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111098740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111098ac0"/>
        <function-ref name="isInput" scoped="" ref="0x111098c50"/>
        <function-ref name="setResistor" scoped="" ref="0x111098de0"/>
        <function-ref name="toggle" scoped="" ref="0x111097020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111097340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110974d0"/>
        <function-ref name="get" scoped="" ref="0x111097660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111097980"/>
        <function-ref name="set" scoped="" ref="0x111097b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111097ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111097e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110c3120"/>
        <function-ref name="clr" scoped="" ref="0x1110c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110c0100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110c0480"/>
        <function-ref name="isInput" scoped="" ref="0x1110c0610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110c07a0"/>
        <function-ref name="toggle" scoped="" ref="0x1110c0930"/>
        <function-ref name="isOutput" scoped="" ref="0x1110c0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110c0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110c0de0"/>
        <function-ref name="get" scoped="" ref="0x1110bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110bf340"/>
        <function-ref name="set" scoped="" ref="0x1110bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110bfa80"/>
        <function-ref name="clr" scoped="" ref="0x1110bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110bcd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1110bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x1110bb400"/>
        <function-ref name="toggle" scoped="" ref="0x1110bb590"/>
        <function-ref name="isOutput" scoped="" ref="0x1110bb720"/>
        <function-ref name="getResistor" scoped="" ref="0x1110bb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110bba40"/>
        <function-ref name="get" scoped="" ref="0x1110bbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110bbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x1110ba020"/>
        <function-ref name="set" scoped="" ref="0x1110ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110ba760"/>
        <function-ref name="clr" scoped="" ref="0x1110ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110b7860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110b7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110b7be0"/>
        <function-ref name="isInput" scoped="" ref="0x1110b7d70"/>
        <function-ref name="setResistor" scoped="" ref="0x1110b5020"/>
        <function-ref name="toggle" scoped="" ref="0x1110b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1110b5340"/>
        <function-ref name="getResistor" scoped="" ref="0x1110b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110b5660"/>
        <function-ref name="get" scoped="" ref="0x1110b57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110b5980"/>
        <function-ref name="getRaw" scoped="" ref="0x1110b5b10"/>
        <function-ref name="set" scoped="" ref="0x1110b5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110b5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110b4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110b42b0"/>
        <function-ref name="clr" scoped="" ref="0x1110b4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110b1270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110b1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110b15f0"/>
        <function-ref name="isInput" scoped="" ref="0x1110b1780"/>
        <function-ref name="setResistor" scoped="" ref="0x1110b1910"/>
        <function-ref name="toggle" scoped="" ref="0x1110b1aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x1110b1c30"/>
        <function-ref name="getResistor" scoped="" ref="0x1110b1dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110b0020"/>
        <function-ref name="get" scoped="" ref="0x1110b01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110b0340"/>
        <function-ref name="getRaw" scoped="" ref="0x1110b04d0"/>
        <function-ref name="set" scoped="" ref="0x1110b0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110b07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110b0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110b0c10"/>
        <function-ref name="clr" scoped="" ref="0x1110b0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110add10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110add10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110da0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1110da270"/>
        <function-ref name="setResistor" scoped="" ref="0x1110da400"/>
        <function-ref name="toggle" scoped="" ref="0x1110da590"/>
        <function-ref name="isOutput" scoped="" ref="0x1110da720"/>
        <function-ref name="getResistor" scoped="" ref="0x1110da8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110daa40"/>
        <function-ref name="get" scoped="" ref="0x1110dabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110dad60"/>
        <function-ref name="getRaw" scoped="" ref="0x1110d9020"/>
        <function-ref name="set" scoped="" ref="0x1110d91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110d9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110d94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110d9760"/>
        <function-ref name="clr" scoped="" ref="0x1110d98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110d6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110d6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110d6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1110d6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1110d6de0"/>
        <function-ref name="toggle" scoped="" ref="0x1110d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110d51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110d5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110d54d0"/>
        <function-ref name="get" scoped="" ref="0x1110d5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110d57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110d5980"/>
        <function-ref name="set" scoped="" ref="0x1110d5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110d5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110d5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110d4120"/>
        <function-ref name="clr" scoped="" ref="0x1110d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110d1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110d1480"/>
        <function-ref name="isInput" scoped="" ref="0x1110d1610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110d17a0"/>
        <function-ref name="toggle" scoped="" ref="0x1110d1930"/>
        <function-ref name="isOutput" scoped="" ref="0x1110d1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110d1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110d1de0"/>
        <function-ref name="get" scoped="" ref="0x1110d0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110d01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110d0340"/>
        <function-ref name="set" scoped="" ref="0x1110d04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110d0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110d07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110d0a80"/>
        <function-ref name="clr" scoped="" ref="0x1110d0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110cdd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110cdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110cc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1110cc270"/>
        <function-ref name="setResistor" scoped="" ref="0x1110cc400"/>
        <function-ref name="toggle" scoped="" ref="0x1110cc590"/>
        <function-ref name="isOutput" scoped="" ref="0x1110cc720"/>
        <function-ref name="getResistor" scoped="" ref="0x1110cc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110cca40"/>
        <function-ref name="get" scoped="" ref="0x1110ccbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110ccd60"/>
        <function-ref name="getRaw" scoped="" ref="0x1110cb020"/>
        <function-ref name="set" scoped="" ref="0x1110cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110cb760"/>
        <function-ref name="clr" scoped="" ref="0x1110cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110c8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110c8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110c8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1110c8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1110c8de0"/>
        <function-ref name="toggle" scoped="" ref="0x1110c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110c71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110c7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110c74d0"/>
        <function-ref name="get" scoped="" ref="0x1110c7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110c77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110c7980"/>
        <function-ref name="set" scoped="" ref="0x1110c7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110c7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110c7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110c6120"/>
        <function-ref name="clr" scoped="" ref="0x1110c62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110f1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110f1480"/>
        <function-ref name="isInput" scoped="" ref="0x1110f1610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110f17a0"/>
        <function-ref name="toggle" scoped="" ref="0x1110f1930"/>
        <function-ref name="isOutput" scoped="" ref="0x1110f1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110f1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110f1de0"/>
        <function-ref name="get" scoped="" ref="0x1110f0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110f01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110f0340"/>
        <function-ref name="set" scoped="" ref="0x1110f04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110f0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110f07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110f0a80"/>
        <function-ref name="clr" scoped="" ref="0x1110f0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110edd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110edd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110eb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1110eb270"/>
        <function-ref name="setResistor" scoped="" ref="0x1110eb400"/>
        <function-ref name="toggle" scoped="" ref="0x1110eb590"/>
        <function-ref name="isOutput" scoped="" ref="0x1110eb720"/>
        <function-ref name="getResistor" scoped="" ref="0x1110eb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110eba40"/>
        <function-ref name="get" scoped="" ref="0x1110ebbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110ebd60"/>
        <function-ref name="getRaw" scoped="" ref="0x1110ea020"/>
        <function-ref name="set" scoped="" ref="0x1110ea1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110ea340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110ea4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110ea760"/>
        <function-ref name="clr" scoped="" ref="0x1110ea8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110e7740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110e7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110e7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1110e7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1110e7de0"/>
        <function-ref name="toggle" scoped="" ref="0x1110e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110e61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110e6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110e64d0"/>
        <function-ref name="get" scoped="" ref="0x1110e6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110e67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110e6980"/>
        <function-ref name="set" scoped="" ref="0x1110e6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110e6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110e6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110e5120"/>
        <function-ref name="clr" scoped="" ref="0x1110e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110e2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110e2480"/>
        <function-ref name="isInput" scoped="" ref="0x1110e2610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110e27a0"/>
        <function-ref name="toggle" scoped="" ref="0x1110e2930"/>
        <function-ref name="isOutput" scoped="" ref="0x1110e2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110e2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110e2de0"/>
        <function-ref name="get" scoped="" ref="0x1110e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110e11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110e1340"/>
        <function-ref name="set" scoped="" ref="0x1110e14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110e1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110e17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110e1a80"/>
        <function-ref name="clr" scoped="" ref="0x1110e1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110ded10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110ded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110dd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1110dd270"/>
        <function-ref name="setResistor" scoped="" ref="0x1110dd400"/>
        <function-ref name="toggle" scoped="" ref="0x1110dd590"/>
        <function-ref name="isOutput" scoped="" ref="0x1110dd720"/>
        <function-ref name="getResistor" scoped="" ref="0x1110dd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110dda40"/>
        <function-ref name="get" scoped="" ref="0x1110ddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110ddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x1110dc020"/>
        <function-ref name="set" scoped="" ref="0x1110dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110dc760"/>
        <function-ref name="clr" scoped="" ref="0x1110dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111107a60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111107a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111107de0"/>
        <function-ref name="isInput" scoped="" ref="0x111106020"/>
        <function-ref name="setResistor" scoped="" ref="0x1111061b0"/>
        <function-ref name="toggle" scoped="" ref="0x111106340"/>
        <function-ref name="isOutput" scoped="" ref="0x1111064d0"/>
        <function-ref name="getResistor" scoped="" ref="0x111106660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111067f0"/>
        <function-ref name="get" scoped="" ref="0x111106980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111106b10"/>
        <function-ref name="getRaw" scoped="" ref="0x111106ca0"/>
        <function-ref name="set" scoped="" ref="0x111106e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111105020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111051b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111105440"/>
        <function-ref name="clr" scoped="" ref="0x1111055d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111102460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111102460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111027e0"/>
        <function-ref name="isInput" scoped="" ref="0x111102970"/>
        <function-ref name="setResistor" scoped="" ref="0x111102b00"/>
        <function-ref name="toggle" scoped="" ref="0x111102c90"/>
        <function-ref name="isOutput" scoped="" ref="0x111102e20"/>
        <function-ref name="getResistor" scoped="" ref="0x111101020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111011b0"/>
        <function-ref name="get" scoped="" ref="0x111101340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111014d0"/>
        <function-ref name="getRaw" scoped="" ref="0x111101660"/>
        <function-ref name="set" scoped="" ref="0x1111017f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111101980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111101b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111101da0"/>
        <function-ref name="clr" scoped="" ref="0x111100020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110fee00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110fee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110fd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x1110fd350"/>
        <function-ref name="setResistor" scoped="" ref="0x1110fd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x1110fd670"/>
        <function-ref name="isOutput" scoped="" ref="0x1110fd800"/>
        <function-ref name="getResistor" scoped="" ref="0x1110fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110fdb20"/>
        <function-ref name="get" scoped="" ref="0x1110fdcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110fde40"/>
        <function-ref name="getRaw" scoped="" ref="0x1110fc020"/>
        <function-ref name="set" scoped="" ref="0x1110fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110fc760"/>
        <function-ref name="clr" scoped="" ref="0x1110fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110f9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110f9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110f9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1110f9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1110f9de0"/>
        <function-ref name="toggle" scoped="" ref="0x1110f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x1110f81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110f8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110f84d0"/>
        <function-ref name="get" scoped="" ref="0x1110f8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110f8980"/>
        <function-ref name="set" scoped="" ref="0x1110f8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110f8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110f8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110f7120"/>
        <function-ref name="clr" scoped="" ref="0x1110f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1110f3100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1110f3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1110f3480"/>
        <function-ref name="isInput" scoped="" ref="0x1110f3610"/>
        <function-ref name="setResistor" scoped="" ref="0x1110f37a0"/>
        <function-ref name="toggle" scoped="" ref="0x1110f3930"/>
        <function-ref name="isOutput" scoped="" ref="0x1110f3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1110f3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1110f3de0"/>
        <function-ref name="get" scoped="" ref="0x1110f2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1110f21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1110f2340"/>
        <function-ref name="set" scoped="" ref="0x1110f24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1110f2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1110f27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1110f2a80"/>
        <function-ref name="clr" scoped="" ref="0x1110f2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11111dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11111dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11111c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11111c270"/>
        <function-ref name="setResistor" scoped="" ref="0x11111c400"/>
        <function-ref name="toggle" scoped="" ref="0x11111c590"/>
        <function-ref name="isOutput" scoped="" ref="0x11111c720"/>
        <function-ref name="getResistor" scoped="" ref="0x11111c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11111ca40"/>
        <function-ref name="get" scoped="" ref="0x11111cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11111cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x11111b020"/>
        <function-ref name="set" scoped="" ref="0x11111b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11111b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11111b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11111b760"/>
        <function-ref name="clr" scoped="" ref="0x11111b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111118740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111118740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111118ac0"/>
        <function-ref name="isInput" scoped="" ref="0x111118c50"/>
        <function-ref name="setResistor" scoped="" ref="0x111118de0"/>
        <function-ref name="toggle" scoped="" ref="0x111117020"/>
        <function-ref name="isOutput" scoped="" ref="0x1111171b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111117340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111174d0"/>
        <function-ref name="get" scoped="" ref="0x111117660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111177f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111117980"/>
        <function-ref name="set" scoped="" ref="0x111117b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111117ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111117e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111116120"/>
        <function-ref name="clr" scoped="" ref="0x1111162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111113100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111113100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111113480"/>
        <function-ref name="isInput" scoped="" ref="0x111113610"/>
        <function-ref name="setResistor" scoped="" ref="0x1111137a0"/>
        <function-ref name="toggle" scoped="" ref="0x111113930"/>
        <function-ref name="isOutput" scoped="" ref="0x111113ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111113c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111113de0"/>
        <function-ref name="get" scoped="" ref="0x111112020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111112340"/>
        <function-ref name="set" scoped="" ref="0x1111124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111112660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111112a80"/>
        <function-ref name="clr" scoped="" ref="0x111112c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11110fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11110fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11110e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11110e270"/>
        <function-ref name="setResistor" scoped="" ref="0x11110e400"/>
        <function-ref name="toggle" scoped="" ref="0x11110e590"/>
        <function-ref name="isOutput" scoped="" ref="0x11110e720"/>
        <function-ref name="getResistor" scoped="" ref="0x11110e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11110ea40"/>
        <function-ref name="get" scoped="" ref="0x11110ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11110ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x11110d020"/>
        <function-ref name="set" scoped="" ref="0x11110d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11110d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11110d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11110d760"/>
        <function-ref name="clr" scoped="" ref="0x11110d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11110a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11110a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11110aac0"/>
        <function-ref name="isInput" scoped="" ref="0x11110ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x11110ade0"/>
        <function-ref name="toggle" scoped="" ref="0x111109020"/>
        <function-ref name="isOutput" scoped="" ref="0x1111091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111109340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111094d0"/>
        <function-ref name="get" scoped="" ref="0x111109660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111109980"/>
        <function-ref name="set" scoped="" ref="0x111109b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111109ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111109e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111136120"/>
        <function-ref name="clr" scoped="" ref="0x1111362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111133100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111133100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111133480"/>
        <function-ref name="isInput" scoped="" ref="0x111133610"/>
        <function-ref name="setResistor" scoped="" ref="0x1111337a0"/>
        <function-ref name="toggle" scoped="" ref="0x111133930"/>
        <function-ref name="isOutput" scoped="" ref="0x111133ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111133c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111133de0"/>
        <function-ref name="get" scoped="" ref="0x111132020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111132340"/>
        <function-ref name="set" scoped="" ref="0x1111324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111132660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111132a80"/>
        <function-ref name="clr" scoped="" ref="0x111132c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11112fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11112fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11112d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11112d270"/>
        <function-ref name="setResistor" scoped="" ref="0x11112d400"/>
        <function-ref name="toggle" scoped="" ref="0x11112d590"/>
        <function-ref name="isOutput" scoped="" ref="0x11112d720"/>
        <function-ref name="getResistor" scoped="" ref="0x11112d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11112da40"/>
        <function-ref name="get" scoped="" ref="0x11112dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11112dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x11112c020"/>
        <function-ref name="set" scoped="" ref="0x11112c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11112c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11112c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11112c760"/>
        <function-ref name="clr" scoped="" ref="0x11112c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111129740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111129740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111129ac0"/>
        <function-ref name="isInput" scoped="" ref="0x111129c50"/>
        <function-ref name="setResistor" scoped="" ref="0x111129de0"/>
        <function-ref name="toggle" scoped="" ref="0x111128020"/>
        <function-ref name="isOutput" scoped="" ref="0x1111281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111128340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111284d0"/>
        <function-ref name="get" scoped="" ref="0x111128660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111128980"/>
        <function-ref name="set" scoped="" ref="0x111128b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111128ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111128e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111127120"/>
        <function-ref name="clr" scoped="" ref="0x1111272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111124100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111124100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111124480"/>
        <function-ref name="isInput" scoped="" ref="0x111124610"/>
        <function-ref name="setResistor" scoped="" ref="0x1111247a0"/>
        <function-ref name="toggle" scoped="" ref="0x111124930"/>
        <function-ref name="isOutput" scoped="" ref="0x111124ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111124c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111124de0"/>
        <function-ref name="get" scoped="" ref="0x111123020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111123340"/>
        <function-ref name="set" scoped="" ref="0x1111234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111123660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111123a80"/>
        <function-ref name="clr" scoped="" ref="0x111123c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111120d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111120d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11114e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x11114e270"/>
        <function-ref name="setResistor" scoped="" ref="0x11114e400"/>
        <function-ref name="toggle" scoped="" ref="0x11114e590"/>
        <function-ref name="isOutput" scoped="" ref="0x11114e720"/>
        <function-ref name="getResistor" scoped="" ref="0x11114e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11114ea40"/>
        <function-ref name="get" scoped="" ref="0x11114ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11114ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x11114d020"/>
        <function-ref name="set" scoped="" ref="0x11114d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11114d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11114d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11114d760"/>
        <function-ref name="clr" scoped="" ref="0x11114d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11114a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11114a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11114aac0"/>
        <function-ref name="isInput" scoped="" ref="0x11114ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x11114ade0"/>
        <function-ref name="toggle" scoped="" ref="0x111149020"/>
        <function-ref name="isOutput" scoped="" ref="0x1111491b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111149340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111494d0"/>
        <function-ref name="get" scoped="" ref="0x111149660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111497f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111149980"/>
        <function-ref name="set" scoped="" ref="0x111149b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111149ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111149e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111148120"/>
        <function-ref name="clr" scoped="" ref="0x1111482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111145100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111145100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111145480"/>
        <function-ref name="isInput" scoped="" ref="0x111145610"/>
        <function-ref name="setResistor" scoped="" ref="0x1111457a0"/>
        <function-ref name="toggle" scoped="" ref="0x111145930"/>
        <function-ref name="isOutput" scoped="" ref="0x111145ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111145c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111145de0"/>
        <function-ref name="get" scoped="" ref="0x111144020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111144340"/>
        <function-ref name="set" scoped="" ref="0x1111444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111144660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111144a80"/>
        <function-ref name="clr" scoped="" ref="0x111144c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111141d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111141d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111400e0"/>
        <function-ref name="isInput" scoped="" ref="0x111140270"/>
        <function-ref name="setResistor" scoped="" ref="0x111140400"/>
        <function-ref name="toggle" scoped="" ref="0x111140590"/>
        <function-ref name="isOutput" scoped="" ref="0x111140720"/>
        <function-ref name="getResistor" scoped="" ref="0x1111408b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111140a40"/>
        <function-ref name="get" scoped="" ref="0x111140bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111140d60"/>
        <function-ref name="getRaw" scoped="" ref="0x11113f020"/>
        <function-ref name="set" scoped="" ref="0x11113f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11113f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11113f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11113f760"/>
        <function-ref name="clr" scoped="" ref="0x11113f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11113c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11113c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11113cac0"/>
        <function-ref name="isInput" scoped="" ref="0x11113cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x11113cde0"/>
        <function-ref name="toggle" scoped="" ref="0x11113b020"/>
        <function-ref name="isOutput" scoped="" ref="0x11113b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x11113b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x11113b4d0"/>
        <function-ref name="get" scoped="" ref="0x11113b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11113b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x11113b980"/>
        <function-ref name="set" scoped="" ref="0x11113bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11113bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11113be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11113a120"/>
        <function-ref name="clr" scoped="" ref="0x11113a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111137100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111137100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111137480"/>
        <function-ref name="isInput" scoped="" ref="0x111137610"/>
        <function-ref name="setResistor" scoped="" ref="0x1111377a0"/>
        <function-ref name="toggle" scoped="" ref="0x111137930"/>
        <function-ref name="isOutput" scoped="" ref="0x111137ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111137c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111137de0"/>
        <function-ref name="get" scoped="" ref="0x111165020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111651b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111165340"/>
        <function-ref name="set" scoped="" ref="0x1111654d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111165660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111657f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111165a80"/>
        <function-ref name="clr" scoped="" ref="0x111165c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111162d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111162d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111610e0"/>
        <function-ref name="isInput" scoped="" ref="0x111161270"/>
        <function-ref name="setResistor" scoped="" ref="0x111161400"/>
        <function-ref name="toggle" scoped="" ref="0x111161590"/>
        <function-ref name="isOutput" scoped="" ref="0x111161720"/>
        <function-ref name="getResistor" scoped="" ref="0x1111618b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111161a40"/>
        <function-ref name="get" scoped="" ref="0x111161bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111161d60"/>
        <function-ref name="getRaw" scoped="" ref="0x111160020"/>
        <function-ref name="set" scoped="" ref="0x1111601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111160340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111160760"/>
        <function-ref name="clr" scoped="" ref="0x1111608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x11115d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x11115d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11115dac0"/>
        <function-ref name="isInput" scoped="" ref="0x11115dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x11115dde0"/>
        <function-ref name="toggle" scoped="" ref="0x11115c020"/>
        <function-ref name="isOutput" scoped="" ref="0x11115c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x11115c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x11115c4d0"/>
        <function-ref name="get" scoped="" ref="0x11115c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11115c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x11115c980"/>
        <function-ref name="set" scoped="" ref="0x11115cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11115cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11115ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11115b120"/>
        <function-ref name="clr" scoped="" ref="0x11115b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111158100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111158100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111158480"/>
        <function-ref name="isInput" scoped="" ref="0x111158610"/>
        <function-ref name="setResistor" scoped="" ref="0x1111587a0"/>
        <function-ref name="toggle" scoped="" ref="0x111158930"/>
        <function-ref name="isOutput" scoped="" ref="0x111158ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x111158c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111158de0"/>
        <function-ref name="get" scoped="" ref="0x111157020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x111157340"/>
        <function-ref name="set" scoped="" ref="0x1111574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111157660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111157a80"/>
        <function-ref name="clr" scoped="" ref="0x111157c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x111154d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x111154d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111530e0"/>
        <function-ref name="isInput" scoped="" ref="0x111153270"/>
        <function-ref name="setResistor" scoped="" ref="0x111153400"/>
        <function-ref name="toggle" scoped="" ref="0x111153590"/>
        <function-ref name="isOutput" scoped="" ref="0x111153720"/>
        <function-ref name="getResistor" scoped="" ref="0x1111538b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111153a40"/>
        <function-ref name="get" scoped="" ref="0x111153bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111153d60"/>
        <function-ref name="getRaw" scoped="" ref="0x111152020"/>
        <function-ref name="set" scoped="" ref="0x1111521b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111152340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111524d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111152760"/>
        <function-ref name="clr" scoped="" ref="0x1111528f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1111c22f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1111c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111c2670"/>
        <function-ref name="isInput" scoped="" ref="0x1111c2800"/>
        <function-ref name="setResistor" scoped="" ref="0x1111c2990"/>
        <function-ref name="toggle" scoped="" ref="0x1111c2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x1111c2cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x1111c2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111f3020"/>
        <function-ref name="get" scoped="" ref="0x1111f31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111f3340"/>
        <function-ref name="getRaw" scoped="" ref="0x1111f34d0"/>
        <function-ref name="set" scoped="" ref="0x1111f3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1111f37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111f3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1111f3c10"/>
        <function-ref name="clr" scoped="" ref="0x1111f3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1111d3020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1111d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111d33a0"/>
        <function-ref name="isInput" scoped="" ref="0x1111d3530"/>
        <function-ref name="toggle" scoped="" ref="0x1111d36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1111d3850"/>
        <function-ref name="get" scoped="" ref="0x1111d39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111d3b70"/>
        <function-ref name="set" scoped="" ref="0x1111d3d00"/>
        <function-ref name="clr" scoped="" ref="0x1111c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1111f0de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1111f0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111ee180"/>
        <function-ref name="isInput" scoped="" ref="0x1111ee310"/>
        <function-ref name="setResistor" scoped="" ref="0x1111ee4a0"/>
        <function-ref name="toggle" scoped="" ref="0x1111ee630"/>
        <function-ref name="isOutput" scoped="" ref="0x1111ee7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x1111ee950"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111eeae0"/>
        <function-ref name="get" scoped="" ref="0x1111eec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111eee00"/>
        <function-ref name="getRaw" scoped="" ref="0x1111ed020"/>
        <function-ref name="set" scoped="" ref="0x1111ed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1111ed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111ed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1111ed760"/>
        <function-ref name="clr" scoped="" ref="0x1111ed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1111f1b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1111f1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111f0020"/>
        <function-ref name="isInput" scoped="" ref="0x1111f01b0"/>
        <function-ref name="toggle" scoped="" ref="0x1111f0340"/>
        <function-ref name="isOutput" scoped="" ref="0x1111f04d0"/>
        <function-ref name="get" scoped="" ref="0x1111f0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111f07f0"/>
        <function-ref name="set" scoped="" ref="0x1111f0980"/>
        <function-ref name="clr" scoped="" ref="0x1111f0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1111ea930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1111ea930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111eacb0"/>
        <function-ref name="isInput" scoped="" ref="0x1111eae40"/>
        <function-ref name="setResistor" scoped="" ref="0x1111e9020"/>
        <function-ref name="toggle" scoped="" ref="0x1111e91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1111e9340"/>
        <function-ref name="getResistor" scoped="" ref="0x1111e94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111e9660"/>
        <function-ref name="get" scoped="" ref="0x1111e97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1111e9980"/>
        <function-ref name="getRaw" scoped="" ref="0x1111e9b10"/>
        <function-ref name="set" scoped="" ref="0x1111e9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1111e9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1111e8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1111e82b0"/>
        <function-ref name="clr" scoped="" ref="0x1111e8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1111eb710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1111eb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1111eba90"/>
        <function-ref name="isInput" scoped="" ref="0x1111ebc20"/>
        <function-ref name="toggle" scoped="" ref="0x1111ebdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1111ea020"/>
        <function-ref name="get" scoped="" ref="0x1111ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1111ea340"/>
        <function-ref name="set" scoped="" ref="0x1111ea4d0"/>
        <function-ref name="clr" scoped="" ref="0x1111ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x11120c640" loc="49:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x11120c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x110cda0c0"/>
            <typename><typedef-ref name="button_state_t" ref="0x110cda9e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x11120b810"/>
        <function-ref name="enable" scoped="" ref="0x11120b390"/>
        <function-ref name="notify" scoped="" ref="0x11120bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x11120a300" loc="48:../../../tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x11120a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x110cda0c0"/>
            <typename><typedef-ref name="button_state_t" ref="0x110cda9e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11120c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x111200360" loc="41:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x111200360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1112006e0"/>
        <function-ref name="disable" scoped="" ref="0x111200870"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x111200a00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x111200b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x111208a90" loc="40:../../../tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x111208a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111208e10"/>
        <function-ref name="isInput" scoped="" ref="0x111205020"/>
        <function-ref name="toggle" scoped="" ref="0x1112051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x111205340"/>
        <function-ref name="get" scoped="" ref="0x1112054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111205660"/>
        <function-ref name="set" scoped="" ref="0x1112057f0"/>
        <function-ref name="clr" scoped="" ref="0x111205980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x1111f6710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x1111f6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1111f6a90"/>
        <function-ref name="fired" scoped="" ref="0x1111f6c20"/>
        <function-ref name="disable" scoped="" ref="0x1111f6db0"/>
        <function-ref name="edge" scoped="" ref="0x1111f5020"/>
        <function-ref name="enable" scoped="" ref="0x1111f51b0"/>
        <function-ref name="getValue" scoped="" ref="0x1111f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x11121d8a0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x11121d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11121dc20"/>
        <function-ref name="fired" scoped="" ref="0x11121ddb0"/>
        <function-ref name="disable" scoped="" ref="0x11121c020"/>
        <function-ref name="edge" scoped="" ref="0x11121c1b0"/>
        <function-ref name="enable" scoped="" ref="0x11121c340"/>
        <function-ref name="getValue" scoped="" ref="0x11121c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x111224710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x111224710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111224a90"/>
        <function-ref name="fired" scoped="" ref="0x111224c20"/>
        <function-ref name="disable" scoped="" ref="0x111224db0"/>
        <function-ref name="edge" scoped="" ref="0x111223020"/>
        <function-ref name="enable" scoped="" ref="0x1112231b0"/>
        <function-ref name="getValue" scoped="" ref="0x111223340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x111222710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x111222710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111222a90"/>
        <function-ref name="fired" scoped="" ref="0x111222c20"/>
        <function-ref name="disable" scoped="" ref="0x111222db0"/>
        <function-ref name="edge" scoped="" ref="0x111221020"/>
        <function-ref name="enable" scoped="" ref="0x1112211b0"/>
        <function-ref name="getValue" scoped="" ref="0x111221340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x1111fd710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x1111fd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1111fda90"/>
        <function-ref name="fired" scoped="" ref="0x1111fdc20"/>
        <function-ref name="disable" scoped="" ref="0x1111fddb0"/>
        <function-ref name="edge" scoped="" ref="0x1111f7020"/>
        <function-ref name="enable" scoped="" ref="0x1111f71b0"/>
        <function-ref name="getValue" scoped="" ref="0x1111f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x11121f710" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x11121f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11121fb90"/>
        <function-ref name="fired" scoped="" ref="0x11121fd20"/>
        <function-ref name="disable" scoped="" ref="0x11121e020"/>
        <function-ref name="edge" scoped="" ref="0x11121e1b0"/>
        <function-ref name="enable" scoped="" ref="0x11121e340"/>
        <function-ref name="getValue" scoped="" ref="0x11121e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x1111f5710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x1111f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1111f5a90"/>
        <function-ref name="fired" scoped="" ref="0x1111f5c20"/>
        <function-ref name="disable" scoped="" ref="0x1111f5db0"/>
        <function-ref name="edge" scoped="" ref="0x1111f4020"/>
        <function-ref name="enable" scoped="" ref="0x1111f41b0"/>
        <function-ref name="getValue" scoped="" ref="0x1111f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x11121c8a0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x11121c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11121cc20"/>
        <function-ref name="fired" scoped="" ref="0x11121cdb0"/>
        <function-ref name="disable" scoped="" ref="0x11121b020"/>
        <function-ref name="edge" scoped="" ref="0x11121b1b0"/>
        <function-ref name="enable" scoped="" ref="0x11121b340"/>
        <function-ref name="getValue" scoped="" ref="0x11121b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x1111f8660" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x1111f8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1111f89e0"/>
        <function-ref name="fired" scoped="" ref="0x1111f8b70"/>
        <function-ref name="disable" scoped="" ref="0x1111f8d00"/>
        <function-ref name="edge" scoped="" ref="0x1111fe020"/>
        <function-ref name="enable" scoped="" ref="0x1111fe1b0"/>
        <function-ref name="getValue" scoped="" ref="0x1111fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x111221710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x111221710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111221a90"/>
        <function-ref name="fired" scoped="" ref="0x111221c20"/>
        <function-ref name="disable" scoped="" ref="0x111221db0"/>
        <function-ref name="edge" scoped="" ref="0x111220020"/>
        <function-ref name="enable" scoped="" ref="0x1112201b0"/>
        <function-ref name="getValue" scoped="" ref="0x111220340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x1111f7710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x1111f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1111f7a90"/>
        <function-ref name="fired" scoped="" ref="0x1111f7c20"/>
        <function-ref name="disable" scoped="" ref="0x1111f7db0"/>
        <function-ref name="edge" scoped="" ref="0x1111f6020"/>
        <function-ref name="enable" scoped="" ref="0x1111f61b0"/>
        <function-ref name="getValue" scoped="" ref="0x1111f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x11121e8a0" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x11121e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11121ec20"/>
        <function-ref name="fired" scoped="" ref="0x11121edb0"/>
        <function-ref name="disable" scoped="" ref="0x11121d020"/>
        <function-ref name="edge" scoped="" ref="0x11121d1b0"/>
        <function-ref name="enable" scoped="" ref="0x11121d340"/>
        <function-ref name="getValue" scoped="" ref="0x11121d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x1111f4710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x1111f4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1111f4a90"/>
        <function-ref name="fired" scoped="" ref="0x1111f4c20"/>
        <function-ref name="disable" scoped="" ref="0x1111f4db0"/>
        <function-ref name="edge" scoped="" ref="0x111224020"/>
        <function-ref name="enable" scoped="" ref="0x1112241b0"/>
        <function-ref name="getValue" scoped="" ref="0x111224340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x111223710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x111223710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111223a90"/>
        <function-ref name="fired" scoped="" ref="0x111223c20"/>
        <function-ref name="disable" scoped="" ref="0x111223db0"/>
        <function-ref name="edge" scoped="" ref="0x111222020"/>
        <function-ref name="enable" scoped="" ref="0x1112221b0"/>
        <function-ref name="getValue" scoped="" ref="0x111222340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x1111fe710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x1111fe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1111fea90"/>
        <function-ref name="fired" scoped="" ref="0x1111fec20"/>
        <function-ref name="disable" scoped="" ref="0x1111fedb0"/>
        <function-ref name="edge" scoped="" ref="0x1111fd020"/>
        <function-ref name="enable" scoped="" ref="0x1111fd1b0"/>
        <function-ref name="getValue" scoped="" ref="0x1111fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x111220710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x111220710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111220a90"/>
        <function-ref name="fired" scoped="" ref="0x111220c20"/>
        <function-ref name="disable" scoped="" ref="0x111220db0"/>
        <function-ref name="edge" scoped="" ref="0x11121f020"/>
        <function-ref name="enable" scoped="" ref="0x11121f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x11121f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x111214710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x111214710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111214a90"/>
        <function-ref name="fired" scoped="" ref="0x111214c20"/>
        <function-ref name="disable" scoped="" ref="0x111214db0"/>
        <function-ref name="edge" scoped="" ref="0x111213020"/>
        <function-ref name="enable" scoped="" ref="0x1112131b0"/>
        <function-ref name="getValue" scoped="" ref="0x111213340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x11123c8a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x11123c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11123cc20"/>
        <function-ref name="fired" scoped="" ref="0x11123cdb0"/>
        <function-ref name="disable" scoped="" ref="0x11123b020"/>
        <function-ref name="edge" scoped="" ref="0x11123b1b0"/>
        <function-ref name="enable" scoped="" ref="0x11123b340"/>
        <function-ref name="getValue" scoped="" ref="0x11123b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x111211710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x111211710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111211a90"/>
        <function-ref name="fired" scoped="" ref="0x111211c20"/>
        <function-ref name="disable" scoped="" ref="0x111211db0"/>
        <function-ref name="edge" scoped="" ref="0x111210020"/>
        <function-ref name="enable" scoped="" ref="0x1112101b0"/>
        <function-ref name="getValue" scoped="" ref="0x111210340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x11120f710" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x11120f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11120fa90"/>
        <function-ref name="fired" scoped="" ref="0x11120fc20"/>
        <function-ref name="disable" scoped="" ref="0x11120fdb0"/>
        <function-ref name="edge" scoped="" ref="0x11120e020"/>
        <function-ref name="enable" scoped="" ref="0x11120e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x11120e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x111216710" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x111216710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111216a90"/>
        <function-ref name="fired" scoped="" ref="0x111216c20"/>
        <function-ref name="disable" scoped="" ref="0x111216db0"/>
        <function-ref name="edge" scoped="" ref="0x111215020"/>
        <function-ref name="enable" scoped="" ref="0x1112151b0"/>
        <function-ref name="getValue" scoped="" ref="0x111215340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x11123f710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x11123f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11123fb90"/>
        <function-ref name="fired" scoped="" ref="0x11123fd20"/>
        <function-ref name="disable" scoped="" ref="0x11123d020"/>
        <function-ref name="edge" scoped="" ref="0x11123d1b0"/>
        <function-ref name="enable" scoped="" ref="0x11123d340"/>
        <function-ref name="getValue" scoped="" ref="0x11123d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x111213710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x111213710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111213a90"/>
        <function-ref name="fired" scoped="" ref="0x111213c20"/>
        <function-ref name="disable" scoped="" ref="0x111213db0"/>
        <function-ref name="edge" scoped="" ref="0x111212020"/>
        <function-ref name="enable" scoped="" ref="0x1112121b0"/>
        <function-ref name="getValue" scoped="" ref="0x111212340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x11123b8a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x11123b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11123bc20"/>
        <function-ref name="fired" scoped="" ref="0x11123bdb0"/>
        <function-ref name="disable" scoped="" ref="0x11123a020"/>
        <function-ref name="edge" scoped="" ref="0x11123a1b0"/>
        <function-ref name="enable" scoped="" ref="0x11123a340"/>
        <function-ref name="getValue" scoped="" ref="0x11123a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x1112186b0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x1112186b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111218a30"/>
        <function-ref name="fired" scoped="" ref="0x111218bc0"/>
        <function-ref name="disable" scoped="" ref="0x111218d50"/>
        <function-ref name="edge" scoped="" ref="0x111217020"/>
        <function-ref name="enable" scoped="" ref="0x1112171b0"/>
        <function-ref name="getValue" scoped="" ref="0x111217340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x11120e710" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x11120e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11120ea90"/>
        <function-ref name="fired" scoped="" ref="0x11120ec20"/>
        <function-ref name="disable" scoped="" ref="0x11120edb0"/>
        <function-ref name="edge" scoped="" ref="0x11120d020"/>
        <function-ref name="enable" scoped="" ref="0x11120d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x11120d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x111215710" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x111215710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111215a90"/>
        <function-ref name="fired" scoped="" ref="0x111215c20"/>
        <function-ref name="disable" scoped="" ref="0x111215db0"/>
        <function-ref name="edge" scoped="" ref="0x111214020"/>
        <function-ref name="enable" scoped="" ref="0x1112141b0"/>
        <function-ref name="getValue" scoped="" ref="0x111214340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x11123d8a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x11123d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11123dc20"/>
        <function-ref name="fired" scoped="" ref="0x11123ddb0"/>
        <function-ref name="disable" scoped="" ref="0x11123c020"/>
        <function-ref name="edge" scoped="" ref="0x11123c1b0"/>
        <function-ref name="enable" scoped="" ref="0x11123c340"/>
        <function-ref name="getValue" scoped="" ref="0x11123c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x111212710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x111212710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111212a90"/>
        <function-ref name="fired" scoped="" ref="0x111212c20"/>
        <function-ref name="disable" scoped="" ref="0x111212db0"/>
        <function-ref name="edge" scoped="" ref="0x111211020"/>
        <function-ref name="enable" scoped="" ref="0x1112111b0"/>
        <function-ref name="getValue" scoped="" ref="0x111211340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x111210710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x111210710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111210a90"/>
        <function-ref name="fired" scoped="" ref="0x111210c20"/>
        <function-ref name="disable" scoped="" ref="0x111210db0"/>
        <function-ref name="edge" scoped="" ref="0x11120f020"/>
        <function-ref name="enable" scoped="" ref="0x11120f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x11120f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x111217710" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x111217710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111217a90"/>
        <function-ref name="fired" scoped="" ref="0x111217c20"/>
        <function-ref name="disable" scoped="" ref="0x111217db0"/>
        <function-ref name="edge" scoped="" ref="0x111216020"/>
        <function-ref name="enable" scoped="" ref="0x1112161b0"/>
        <function-ref name="getValue" scoped="" ref="0x111216340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x11120d710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x11120d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11120da90"/>
        <function-ref name="fired" scoped="" ref="0x11120dc20"/>
        <function-ref name="disable" scoped="" ref="0x11120ddb0"/>
        <function-ref name="edge" scoped="" ref="0x11123f020"/>
        <function-ref name="enable" scoped="" ref="0x11123f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x11123f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x11130f020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x11130f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11130f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x11130f530"/>
        <function-ref name="setResistor" scoped="" ref="0x11130f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x11130f850"/>
        <function-ref name="isOutput" scoped="" ref="0x11130f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x11130fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x11130fd00"/>
        <function-ref name="get" scoped="" ref="0x11130e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11130e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x11130e340"/>
        <function-ref name="set" scoped="" ref="0x11130e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11130e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11130e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11130ea80"/>
        <function-ref name="clr" scoped="" ref="0x11130ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x111311d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x111311d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111310180"/>
        <function-ref name="isInput" scoped="" ref="0x111310310"/>
        <function-ref name="toggle" scoped="" ref="0x1113104a0"/>
        <function-ref name="isOutput" scoped="" ref="0x111310630"/>
        <function-ref name="get" scoped="" ref="0x1113107c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111310950"/>
        <function-ref name="set" scoped="" ref="0x111310ae0"/>
        <function-ref name="clr" scoped="" ref="0x111310c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1112fd020" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1112fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1112fd3a0"/>
        <function-ref name="fired" scoped="" ref="0x1112fd530"/>
        <function-ref name="disable" scoped="" ref="0x1112fd6c0"/>
        <function-ref name="edge" scoped="" ref="0x1112fd850"/>
        <function-ref name="enable" scoped="" ref="0x1112fd9e0"/>
        <function-ref name="getValue" scoped="" ref="0x1112fdb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x11130a490" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x11130a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x11130a810"/>
        <function-ref name="disable" scoped="" ref="0x11130a9a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x11130ab30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x11130acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x111314480" loc="51:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x111314480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111314800"/>
        <function-ref name="runTask" scoped="" ref="0x111314990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x1113158f0" loc="46:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x1113158f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111315c70"/>
        <function-ref name="disable" scoped="" ref="0x111315e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x111314020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1113141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x111319ca0" loc="43:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x111319ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x111318d40"/>
        <function-ref name="enable" scoped="" ref="0x1113188c0"/>
        <function-ref name="notify" scoped="" ref="0x1113161e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x11131ab10" loc="42:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x11131ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111319750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x111316660" loc="45:../../../tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x111316660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1113169e0"/>
        <function-ref name="isInput" scoped="" ref="0x111316b70"/>
        <function-ref name="toggle" scoped="" ref="0x111316d00"/>
        <function-ref name="isOutput" scoped="" ref="0x111315020"/>
        <function-ref name="get" scoped="" ref="0x1113151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111315340"/>
        <function-ref name="set" scoped="" ref="0x1113154d0"/>
        <function-ref name="clr" scoped="" ref="0x111315660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x111344e20" loc="45:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x111344e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111342a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x111345270" loc="43:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x111345270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x110cda0c0"/>
            <typename><typedef-ref name="button_state_t" ref="0x110cda9e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x111344310"/>
        <function-ref name="enable" scoped="" ref="0x111345e60"/>
        <function-ref name="notify" scoped="" ref="0x111344790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x111341130" loc="46:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x111341130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x1113401e0"/>
        <function-ref name="enable" scoped="" ref="0x111341d20"/>
        <function-ref name="notify" scoped="" ref="0x111340660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x111346020" loc="42:../../../tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x111346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x110cda0c0"/>
            <typename><typedef-ref name="button_state_t" ref="0x110cda9e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111346c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1114fd370" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="ControllerAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1114fd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1114f9870"/>
        <function-ref name="fired" scoped="" ref="0x1114fce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1114fbc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x1114fb780"/>
        <function-ref name="getdt" scoped="" ref="0x1114f81e0"/>
        <function-ref name="gett0" scoped="" ref="0x1114f9cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x1114fb300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1114fc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1114f9260"/>
        <function-ref name="startOneShot" scoped="" ref="0x1114fc4f0"/>
        <function-ref name="stop" scoped="" ref="0x1114fc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x111365c60" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x111365c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11135f170"/>
        <function-ref name="fired" scoped="" ref="0x111361720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111360510"/>
        <function-ref name="isOneShot" scoped="" ref="0x111360090"/>
        <function-ref name="getdt" scoped="" ref="0x11135fa70"/>
        <function-ref name="gett0" scoped="" ref="0x11135f5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x111361ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1113628a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111360b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x111362d70"/>
        <function-ref name="stop" scoped="" ref="0x1113612a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x11135a700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x11135a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111356c40"/>
        <function-ref name="fired" scoped="" ref="0x1113571e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111356020"/>
        <function-ref name="isOneShot" scoped="" ref="0x111357ae0"/>
        <function-ref name="getdt" scoped="" ref="0x111355590"/>
        <function-ref name="gett0" scoped="" ref="0x111355110"/>
        <function-ref name="isRunning" scoped="" ref="0x111357660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111359390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111356630"/>
        <function-ref name="startOneShot" scoped="" ref="0x111359860"/>
        <function-ref name="stop" scoped="" ref="0x111359d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1113531a0" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1113531a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111353dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11135d8c0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11135d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11135dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x111468870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111468870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111465090"/>
        <function-ref name="fired" scoped="" ref="0x111466090"/>
        <function-ref name="startAt" scoped="" ref="0x111466a10"/>
        <function-ref name="isRunning" scoped="" ref="0x111466550"/>
        <function-ref name="getAlarm" scoped="" ref="0x111465550"/>
        <function-ref name="start" scoped="" ref="0x1114676a0"/>
        <function-ref name="stop" scoped="" ref="0x111467bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111468020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111468020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1114683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1129a2870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1129a2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11299f090"/>
        <function-ref name="fired" scoped="" ref="0x1129a0090"/>
        <function-ref name="startAt" scoped="" ref="0x1129a0a10"/>
        <function-ref name="isRunning" scoped="" ref="0x1129a0550"/>
        <function-ref name="getAlarm" scoped="" ref="0x11299f550"/>
        <function-ref name="start" scoped="" ref="0x1129a16a0"/>
        <function-ref name="stop" scoped="" ref="0x1129a1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1129a2020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1129a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1129a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x112a2cda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x112a2cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112a2b180"/>
        <function-ref name="setEvent" scoped="" ref="0x112a2b310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x112a2b4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112a2b630"/>
        <function-ref name="fired" scoped="" ref="0x112a2b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x112a2e340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112a2e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112a2e6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x112a2e850"/>
        <function-ref name="enableEvents" scoped="" ref="0x112a2e9e0"/>
        <function-ref name="get" scoped="" ref="0x112a2eb70"/>
        <function-ref name="disableEvents" scoped="" ref="0x112a2ed00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112a2d020"/>
        <function-ref name="getMode" scoped="" ref="0x112a2d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112a2d340"/>
        <function-ref name="overflow" scoped="" ref="0x112a2d4d0"/>
        <function-ref name="setMode" scoped="" ref="0x112a2d660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112a2d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x112a2da80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112a2da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112a2de00"/>
        <function-ref name="getControl" scoped="" ref="0x112a2c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x112a2c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112a2c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x112a2c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112a2c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112a2c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112a2c980"/>
        <function-ref name="setControl" scoped="" ref="0x112a2cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x11139d210" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x11139d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x11139d590"/>
        <function-ref name="setEvent" scoped="" ref="0x11139d720"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x11139d8b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x11139da40"/>
        <function-ref name="fired" scoped="" ref="0x11139dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x11136cbf0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x11136cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111369020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1113691b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x111369340"/>
        <function-ref name="get" scoped="" ref="0x1113694d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x111369660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1113697f0"/>
        <function-ref name="getMode" scoped="" ref="0x111369980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111369b10"/>
        <function-ref name="overflow" scoped="" ref="0x111369ca0"/>
        <function-ref name="setMode" scoped="" ref="0x111369e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x111368020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1113688b0" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1113688b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x111368c30"/>
        <function-ref name="getControl" scoped="" ref="0x111368dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x111367020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1113671b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x111367340"/>
        <function-ref name="disableEvents" scoped="" ref="0x1113674d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x111367660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1113677f0"/>
        <function-ref name="setControl" scoped="" ref="0x111367980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x112a22a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x112a22a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112a22e00"/>
        <function-ref name="setEvent" scoped="" ref="0x112a21020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x112a211b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112a21340"/>
        <function-ref name="fired" scoped="" ref="0x112a214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x112a24190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112a24190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112a24510"/>
        <function-ref name="setClockSource" scoped="" ref="0x112a246a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x112a24830"/>
        <function-ref name="get" scoped="" ref="0x112a249c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112a24b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112a24ce0"/>
        <function-ref name="getMode" scoped="" ref="0x112a24e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112a23030"/>
        <function-ref name="overflow" scoped="" ref="0x112a231c0"/>
        <function-ref name="setMode" scoped="" ref="0x112a23350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112a234e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112a28020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112a28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112a25870"/>
        <function-ref name="fired" scoped="" ref="0x112a27840"/>
        <function-ref name="startAt" scoped="" ref="0x112a25220"/>
        <function-ref name="isRunning" scoped="" ref="0x112a27d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x112a25d30"/>
        <function-ref name="start" scoped="" ref="0x112a28e30"/>
        <function-ref name="stop" scoped="" ref="0x112a27380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112a29660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112a29660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112a299e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x112a23770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112a23770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112a23af0"/>
        <function-ref name="getControl" scoped="" ref="0x112a23c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x112a23e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112a22020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x112a221b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112a22340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112a224d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112a22660"/>
        <function-ref name="setControl" scoped="" ref="0x112a227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1113f6b50" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1113f6b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113c09b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1113f5360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1113c0e70"/>
        <function-ref name="overflow" scoped="" ref="0x1113f5820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x1113f4b70" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1113f4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113f19b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1113f0360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1113f1e70"/>
        <function-ref name="overflow" scoped="" ref="0x1113f0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1113dfc50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1113dfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1113de020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1113de1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1113de340"/>
        <function-ref name="get" scoped="" ref="0x1113de4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1113de660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1113de7f0"/>
        <function-ref name="getMode" scoped="" ref="0x1113de980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1113deb10"/>
        <function-ref name="overflow" scoped="" ref="0x1113deca0"/>
        <function-ref name="setMode" scoped="" ref="0x1113dee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1113dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1113edb80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1113edb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113ec9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1113df360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1113ece70"/>
        <function-ref name="overflow" scoped="" ref="0x1113df820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x11142f0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x11142f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11142e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11142e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11142e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x11142ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x111413cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111413cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1113f8b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1113f7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1113f7090"/>
        <function-ref name="overflow" scoped="" ref="0x1113f7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x11299da90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x11299da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1129992e0"/>
        <function-ref name="fired" scoped="" ref="0x11299a2e0"/>
        <function-ref name="startAt" scoped="" ref="0x11299ac60"/>
        <function-ref name="isRunning" scoped="" ref="0x11299a7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1129997a0"/>
        <function-ref name="start" scoped="" ref="0x11299c8d0"/>
        <function-ref name="stop" scoped="" ref="0x11299cde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x112995210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x112995210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112993b30"/>
        <function-ref name="fired" scoped="" ref="0x112994a60"/>
        <function-ref name="startAt" scoped="" ref="0x1129934e0"/>
        <function-ref name="isRunning" scoped="" ref="0x112993020"/>
        <function-ref name="getAlarm" scoped="" ref="0x112992020"/>
        <function-ref name="start" scoped="" ref="0x112994090"/>
        <function-ref name="stop" scoped="" ref="0x1129945a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x112999e10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x112999e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112998ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112997670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1129971b0"/>
        <function-ref name="overflow" scoped="" ref="0x112997b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x11146f9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x11146f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11146fd40"/>
        <function-ref name="runTask" scoped="" ref="0x11146e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x111473850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x111473850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11146f090"/>
        <function-ref name="fired" scoped="" ref="0x111470090"/>
        <function-ref name="startAt" scoped="" ref="0x111470a10"/>
        <function-ref name="isRunning" scoped="" ref="0x111470550"/>
        <function-ref name="getAlarm" scoped="" ref="0x11146f550"/>
        <function-ref name="start" scoped="" ref="0x1114726a0"/>
        <function-ref name="stop" scoped="" ref="0x111472bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1114782f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1114782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111474870"/>
        <function-ref name="fired" scoped="" ref="0x111477e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x111475c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x111475780"/>
        <function-ref name="getdt" scoped="" ref="0x1114731e0"/>
        <function-ref name="gett0" scoped="" ref="0x111474cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x111475300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x111477020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x111474260"/>
        <function-ref name="startOneShot" scoped="" ref="0x1114774f0"/>
        <function-ref name="stop" scoped="" ref="0x1114779c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x1114d5a00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x1114d5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1114d5d80"/>
        <function-ref name="runTask" scoped="" ref="0x1114d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x1114da640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x1114da640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1114d6c40"/>
        <function-ref name="fired" scoped="" ref="0x1114d71e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1114d6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x1114d7ae0"/>
        <function-ref name="getdt" scoped="" ref="0x1114d5590"/>
        <function-ref name="gett0" scoped="" ref="0x1114d5110"/>
        <function-ref name="isRunning" scoped="" ref="0x1114d7660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1114d9390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1114d6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x1114d9860"/>
        <function-ref name="stop" scoped="" ref="0x1114d9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1114e0150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1114e0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1114db700"/>
        <function-ref name="fired" scoped="" ref="0x1114dec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x1114dda50"/>
        <function-ref name="isOneShot" scoped="" ref="0x1114dd5b0"/>
        <function-ref name="getdt" scoped="" ref="0x1114da090"/>
        <function-ref name="gett0" scoped="" ref="0x1114dbba0"/>
        <function-ref name="isRunning" scoped="" ref="0x1114dd110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1114e0d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x1114db0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x1114de2a0"/>
        <function-ref name="stop" scoped="" ref="0x1114de790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1114d1790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1114d1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1115053f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x111505a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111505a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111504890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111503260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111504d50"/>
        <function-ref name="overflow" scoped="" ref="0x111503720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1114f37c0" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x1114f37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1114f3b40"/>
        <function-ref name="receive" scoped="" ref="0x1114f3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x111524660" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x111524660"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115249e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x111524b70"/>
        <function-ref name="receive" scoped="" ref="0x111524d00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1114f3020"/>
        <function-ref name="receiveDone" scoped="" ref="0x1114f31b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1114f3340"/>
        <function-ref name="sendDone" scoped="" ref="0x1114f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1114f4020" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1114f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1114f43a0"/>
        <function-ref name="stop" scoped="" ref="0x1114f4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1117648f0" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1117648f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111764c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111764e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1117aa060" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x1117aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1117aa3e0"/>
        <function-ref name="receive" scoped="" ref="0x1117aa570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x1117aa800" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1117aa800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1117aab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x1117630c0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x1117630c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111763440"/>
        <function-ref name="receivedByte" scoped="" ref="0x1117635d0"/>
        <function-ref name="receive" scoped="" ref="0x111763760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1117638f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x111763a80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x111763c10"/>
        <function-ref name="sendDone" scoped="" ref="0x111763da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111765c00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111765c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111764020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1117641b0"/>
        <function-ref name="request" scoped="" ref="0x111764340"/>
        <function-ref name="granted" scoped="" ref="0x1117644d0"/>
        <function-ref name="isOwner" scoped="" ref="0x111764660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1115821d0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1115821d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111582550"/>
        <function-ref name="configure" scoped="" ref="0x1115826e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x11157e560" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x11157e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11157e8e0"/>
        <function-ref name="receive" scoped="" ref="0x11157ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x11157b6c0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x11157b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x11157ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x111581020" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x111581020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115813a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x111581530"/>
        <function-ref name="receive" scoped="" ref="0x1115816c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x111581850"/>
        <function-ref name="receiveDone" scoped="" ref="0x1115819e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x111581b70"/>
        <function-ref name="sendDone" scoped="" ref="0x111581d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x11157d3f0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x11157d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11157d770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11157d900"/>
        <function-ref name="request" scoped="" ref="0x11157da90"/>
        <function-ref name="granted" scoped="" ref="0x11157dc20"/>
        <function-ref name="isOwner" scoped="" ref="0x11157ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1115844d0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1115844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111584850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1115849e0"/>
        <function-ref name="request" scoped="" ref="0x111584b70"/>
        <function-ref name="granted" scoped="" ref="0x111584d00"/>
        <function-ref name="isOwner" scoped="" ref="0x111583020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x111577c20" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x111577c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111579020"/>
        <function-ref name="txDone" scoped="" ref="0x1115791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1115fbdc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1115fbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1115fa180"/>
        <function-ref name="configure" scoped="" ref="0x1115fa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x1115f9890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x1115f9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115f9c30"/>
        <function-ref name="receive" scoped="" ref="0x1115f9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x1115f7020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1115f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1115f73c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x1115f7690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x1115f7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1115f7a10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1115f7ba0"/>
        <function-ref name="setUctl" scoped="" ref="0x1115f7d30"/>
        <function-ref name="enableUart" scoped="" ref="0x1115f6020"/>
        <function-ref name="setUrctl" scoped="" ref="0x1115f61b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1115f6340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1115f64d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x1115f6660"/>
        <function-ref name="getUrctl" scoped="" ref="0x1115f67f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x1115f6980"/>
        <function-ref name="getUmctl" scoped="" ref="0x1115f6b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x1115f6ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x1115f6e30"/>
        <function-ref name="getUbr" scoped="" ref="0x1115f5120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1115f52b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x1115f5440"/>
        <function-ref name="isUartRx" scoped="" ref="0x1115f55d0"/>
        <function-ref name="isUart" scoped="" ref="0x1115f5760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1115f58f0"/>
        <function-ref name="isSpi" scoped="" ref="0x1115f5a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1115f5c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1115f5da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1115f4020"/>
        <function-ref name="enableIntr" scoped="" ref="0x1115f41b0"/>
        <function-ref name="getMode" scoped="" ref="0x1115f4340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1115f46d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x1115f4860"/>
        <function-ref name="setUbr" scoped="" ref="0x1115f49f0"/>
        <function-ref name="tx" scoped="" ref="0x1115f4b80"/>
        <function-ref name="getUctl" scoped="" ref="0x1115f4d10"/>
        <function-ref name="disableUart" scoped="" ref="0x1115f3020"/>
        <function-ref name="enableSpi" scoped="" ref="0x1115f31b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x1115f3340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1115f34d0"/>
        <function-ref name="rx" scoped="" ref="0x1115f3660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1115f37f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x1115f3980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1115f3b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x1115f3ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1115f3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x1115fa6d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x1115fa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1115faa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x1115fac00"/>
        <function-ref name="receive" scoped="" ref="0x1115fad90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1115f9020"/>
        <function-ref name="receiveDone" scoped="" ref="0x1115f91b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1115f9340"/>
        <function-ref name="sendDone" scoped="" ref="0x1115f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1115f2c90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1115f2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1115f0ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1115ef4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1115ef020"/>
        <function-ref name="overflow" scoped="" ref="0x1115ef9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1115f8230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1115f8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1115f85d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1115f8760"/>
        <function-ref name="request" scoped="" ref="0x1115f88f0"/>
        <function-ref name="granted" scoped="" ref="0x1115f8a80"/>
        <function-ref name="isOwner" scoped="" ref="0x1115f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1115fb020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1115fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1115fb3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1115fb550"/>
        <function-ref name="request" scoped="" ref="0x1115fb6e0"/>
        <function-ref name="granted" scoped="" ref="0x1115fb870"/>
        <function-ref name="isOwner" scoped="" ref="0x1115fba00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1115f2290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1115f2290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1115f2630"/>
        <function-ref name="txDone" scoped="" ref="0x1115f27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1115efdd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1115efdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1115ee180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1115ee310"/>
        <function-ref name="led1On" scoped="" ref="0x1115ee4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1115ee630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1115ee7c0"/>
        <function-ref name="get" scoped="" ref="0x1115ee950"/>
        <function-ref name="led1Off" scoped="" ref="0x1115eeae0"/>
        <function-ref name="led2On" scoped="" ref="0x1115ed1b0"/>
        <function-ref name="set" scoped="" ref="0x1115eee00"/>
        <function-ref name="led2Off" scoped="" ref="0x1115eec70"/>
        <function-ref name="led0On" scoped="" ref="0x1115ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x1116213b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1116213b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111621730"/>
        <function-ref name="txDone" scoped="" ref="0x1116218c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x111627080" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x111627080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111627400"/>
        <function-ref name="stop" scoped="" ref="0x111627590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x1116278b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x1116278b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x111627c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x111627dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x111626020"/>
        <function-ref name="enableUart" scoped="" ref="0x1116261b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x111626340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1116264d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111626660"/>
        <function-ref name="getUtctl" scoped="" ref="0x1116267f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x111626980"/>
        <function-ref name="resetUsart" scoped="" ref="0x111626b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x111626ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x111626e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x111624020"/>
        <function-ref name="getUbr" scoped="" ref="0x1116242b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111624440"/>
        <function-ref name="setUmctl" scoped="" ref="0x1116245d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x111624760"/>
        <function-ref name="isUart" scoped="" ref="0x1116248f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x111624a80"/>
        <function-ref name="isSpi" scoped="" ref="0x111624c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x111624da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111623020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1116231b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x111623340"/>
        <function-ref name="getMode" scoped="" ref="0x1116234d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111623860"/>
        <function-ref name="clrIntr" scoped="" ref="0x1116239f0"/>
        <function-ref name="setUbr" scoped="" ref="0x111623b80"/>
        <function-ref name="tx" scoped="" ref="0x111623d10"/>
        <function-ref name="getUctl" scoped="" ref="0x111622020"/>
        <function-ref name="disableUart" scoped="" ref="0x1116221b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x111622340"/>
        <function-ref name="setModeUart" scoped="" ref="0x1116224d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111622660"/>
        <function-ref name="rx" scoped="" ref="0x1116227f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111622980"/>
        <function-ref name="isUartTx" scoped="" ref="0x111622b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111622ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x111622e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111621020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x111613670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x111613670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1116139f0"/>
        <function-ref name="isInput" scoped="" ref="0x111613b80"/>
        <function-ref name="setResistor" scoped="" ref="0x111613d10"/>
        <function-ref name="toggle" scoped="" ref="0x111612020"/>
        <function-ref name="isOutput" scoped="" ref="0x1116121b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111612340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116124d0"/>
        <function-ref name="get" scoped="" ref="0x111612660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116127f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111612980"/>
        <function-ref name="set" scoped="" ref="0x111612b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111612ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111612e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111611120"/>
        <function-ref name="clr" scoped="" ref="0x1116112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x111619dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x111619dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111618180"/>
        <function-ref name="txDone" scoped="" ref="0x111618310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x111611670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x111611670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1116119f0"/>
        <function-ref name="isInput" scoped="" ref="0x111611b80"/>
        <function-ref name="setResistor" scoped="" ref="0x111611d10"/>
        <function-ref name="toggle" scoped="" ref="0x111610020"/>
        <function-ref name="isOutput" scoped="" ref="0x1116101b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111610340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116104d0"/>
        <function-ref name="get" scoped="" ref="0x111610660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116107f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111610980"/>
        <function-ref name="set" scoped="" ref="0x111610b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111610ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111610e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11160f120"/>
        <function-ref name="clr" scoped="" ref="0x11160f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x11160f670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x11160f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11160f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x11160fb80"/>
        <function-ref name="setResistor" scoped="" ref="0x11160fd10"/>
        <function-ref name="toggle" scoped="" ref="0x11160e020"/>
        <function-ref name="isOutput" scoped="" ref="0x11160e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x11160e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x11160e4d0"/>
        <function-ref name="get" scoped="" ref="0x11160e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11160e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x11160e980"/>
        <function-ref name="set" scoped="" ref="0x11160eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11160eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11160ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11160d120"/>
        <function-ref name="clr" scoped="" ref="0x11160d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x11161d020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x11161d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x11161d3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x11161d530"/>
        <function-ref name="setUctl" scoped="" ref="0x11161d6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x11161d850"/>
        <function-ref name="setUrctl" scoped="" ref="0x11161d9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x11161db70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x11161dd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x11161c020"/>
        <function-ref name="getUrctl" scoped="" ref="0x11161c1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x11161c340"/>
        <function-ref name="getUmctl" scoped="" ref="0x11161c4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x11161c660"/>
        <function-ref name="setUtctl" scoped="" ref="0x11161c7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x11161ca80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x11161cc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x11161cda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x11161b020"/>
        <function-ref name="isUart" scoped="" ref="0x11161b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x11161b340"/>
        <function-ref name="isSpi" scoped="" ref="0x11161b4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x11161b660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x11161b7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x11161b980"/>
        <function-ref name="enableIntr" scoped="" ref="0x11161bb10"/>
        <function-ref name="getMode" scoped="" ref="0x11161bca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x11161a220"/>
        <function-ref name="clrIntr" scoped="" ref="0x11161a3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x11161a540"/>
        <function-ref name="tx" scoped="" ref="0x11161a6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x11161a860"/>
        <function-ref name="disableUart" scoped="" ref="0x11161a9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x11161ab80"/>
        <function-ref name="setModeUart" scoped="" ref="0x11161ad10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111619020"/>
        <function-ref name="rx" scoped="" ref="0x1116191b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111619340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1116194d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111619660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1116197f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111619980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x111620710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x111620710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111620a90"/>
        <function-ref name="stop" scoped="" ref="0x111620c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x111615670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x111615670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1116159f0"/>
        <function-ref name="isInput" scoped="" ref="0x111615b80"/>
        <function-ref name="setResistor" scoped="" ref="0x111615d10"/>
        <function-ref name="toggle" scoped="" ref="0x111614020"/>
        <function-ref name="isOutput" scoped="" ref="0x1116141b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111614340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116144d0"/>
        <function-ref name="get" scoped="" ref="0x111614660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111614980"/>
        <function-ref name="set" scoped="" ref="0x111614b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111614ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111614e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111613120"/>
        <function-ref name="clr" scoped="" ref="0x1116132b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x1116186d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x1116186d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111618a50"/>
        <function-ref name="isInput" scoped="" ref="0x111618be0"/>
        <function-ref name="setResistor" scoped="" ref="0x111618d70"/>
        <function-ref name="toggle" scoped="" ref="0x111616020"/>
        <function-ref name="isOutput" scoped="" ref="0x1116161b0"/>
        <function-ref name="getResistor" scoped="" ref="0x111616340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1116164d0"/>
        <function-ref name="get" scoped="" ref="0x111616660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1116167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x111616980"/>
        <function-ref name="set" scoped="" ref="0x111616b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111616ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111616e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111615120"/>
        <function-ref name="clr" scoped="" ref="0x1116152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1116a0110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1116a0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11169f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11169f9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11169f4e0"/>
        <function-ref name="overflow" scoped="" ref="0x11169fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112a38c70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112a38c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112a37020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112a371b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x112ac6d70" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x112ac6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x112ac5180"/>
        <function-ref name="configure" scoped="" ref="0x112ac5310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x112ac65d0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112ac65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x112ac6950"/>
        <function-ref name="txDone" scoped="" ref="0x112ac6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112a38020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112a38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112a383a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112a38530"/>
        <function-ref name="request" scoped="" ref="0x112a386c0"/>
        <function-ref name="granted" scoped="" ref="0x112a38850"/>
        <function-ref name="isOwner" scoped="" ref="0x112a389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x112a37be0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x112a37be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x112a36020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x112a361b0"/>
        <function-ref name="setUctl" scoped="" ref="0x112a36340"/>
        <function-ref name="enableUart" scoped="" ref="0x112a364d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x112a36660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x112a367f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x112a36980"/>
        <function-ref name="getUtctl" scoped="" ref="0x112a36b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x112a36ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x112a36e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x112a35020"/>
        <function-ref name="disableIntr" scoped="" ref="0x112a351b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x112a35340"/>
        <function-ref name="getUbr" scoped="" ref="0x112a355d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x112a35760"/>
        <function-ref name="setUmctl" scoped="" ref="0x112a358f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x112a35a80"/>
        <function-ref name="isUart" scoped="" ref="0x112a35c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x112a35da0"/>
        <function-ref name="isSpi" scoped="" ref="0x112a34020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x112a341b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x112a34340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x112a344d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x112a34660"/>
        <function-ref name="getMode" scoped="" ref="0x112a347f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x112a34b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x112a34d10"/>
        <function-ref name="setUbr" scoped="" ref="0x112ac7020"/>
        <function-ref name="tx" scoped="" ref="0x112ac71b0"/>
        <function-ref name="getUctl" scoped="" ref="0x112ac7340"/>
        <function-ref name="disableUart" scoped="" ref="0x112ac74d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x112ac7660"/>
        <function-ref name="setModeUart" scoped="" ref="0x112ac77f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x112ac7980"/>
        <function-ref name="rx" scoped="" ref="0x112ac7b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x112ac7ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x112ac7e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x112ac6020"/>
        <function-ref name="disableSpi" scoped="" ref="0x112ac61b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x112ac6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x112a37440" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112a37440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x112a377c0"/>
        <function-ref name="userId" scoped="" ref="0x112a37950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1116cbbc0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1116cbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1116c9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1116c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1116c8280" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1116c8280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1116c8600"/>
        <function-ref name="configure" scoped="" ref="0x1116c8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1116cd980" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1116cd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1116cdd00"/>
        <function-ref name="txDone" scoped="" ref="0x1116cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1116cc850" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1116cc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1116ccbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1116ccd60"/>
        <function-ref name="request" scoped="" ref="0x1116cb020"/>
        <function-ref name="granted" scoped="" ref="0x1116cb1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x1116cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1116c94b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1116c94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1116c9830"/>
        <function-ref name="userId" scoped="" ref="0x1116c99c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1116f8a90" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1116f8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1116f8e10"/>
        <function-ref name="userId" scoped="" ref="0x1116f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1116c6b60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1116c6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1116c5020"/>
        <function-ref name="txDone" scoped="" ref="0x1116c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x1116f8480" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x1116f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1116f8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1116c55b0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1116c55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1116c5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x1116c5c20" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x1116c5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1116f8020"/>
        <function-ref name="txDone" scoped="" ref="0x1116f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111751020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111751020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1117513c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111751550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111750cd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111750cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x11174f0a0"/>
        <function-ref name="configure" scoped="" ref="0x11174f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1117517a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1117517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111751b20"/>
        <function-ref name="requested" scoped="" ref="0x111751cb0"/>
        <function-ref name="granted" scoped="" ref="0x111751e40"/>
        <function-ref name="isOwner" scoped="" ref="0x111750020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1117501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111752210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111752210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1117525b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111752740"/>
        <function-ref name="request" scoped="" ref="0x1117528d0"/>
        <function-ref name="granted" scoped="" ref="0x111752a60"/>
        <function-ref name="isOwner" scoped="" ref="0x111752bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x111750400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111750400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111750780"/>
        <function-ref name="userId" scoped="" ref="0x111750910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112afbca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112afbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112afa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x112afa330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x112afa330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x112afa6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x112afa840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x112afa9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x112afab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112af63a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112af63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112af6740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112af68d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x112af4210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x112af4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x112af45b0"/>
        <function-ref name="configure" scoped="" ref="0x112af4740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x112af49d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x112af49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x112af4d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x112af3020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x112af31b0"/>
        <function-ref name="dequeue" scoped="" ref="0x112af3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x112af6b20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112af6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112af5020"/>
        <function-ref name="requested" scoped="" ref="0x112af51b0"/>
        <function-ref name="granted" scoped="" ref="0x112af5340"/>
        <function-ref name="isOwner" scoped="" ref="0x112af54d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112af5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x112af3590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x112af3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x112af3910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x112af3aa0"/>
        <function-ref name="led1On" scoped="" ref="0x112af3c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x112af3dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x112af2020"/>
        <function-ref name="get" scoped="" ref="0x112af21b0"/>
        <function-ref name="led1Off" scoped="" ref="0x112af2340"/>
        <function-ref name="led0On" scoped="" ref="0x112af2980"/>
        <function-ref name="set" scoped="" ref="0x112af2660"/>
        <function-ref name="led2On" scoped="" ref="0x112af24d0"/>
        <function-ref name="led2Off" scoped="" ref="0x112af27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112af7540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112af7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112af78e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112af7a70"/>
        <function-ref name="request" scoped="" ref="0x112af7c00"/>
        <function-ref name="granted" scoped="" ref="0x112af7d90"/>
        <function-ref name="isOwner" scoped="" ref="0x112af6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x112af58b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112af58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x112af5c30"/>
        <function-ref name="userId" scoped="" ref="0x112af5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x112af2c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x112af2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x112af1020"/>
        <function-ref name="runTask" scoped="" ref="0x112af11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x11177d400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x11177d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x11177d780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x11177d9d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x11177d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11177dd50"/>
        <function-ref name="requested" scoped="" ref="0x11177c020"/>
        <function-ref name="granted" scoped="" ref="0x11177c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x11177c340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x11177c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x11174bb20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x11174bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11177d020"/>
        <function-ref name="stop" scoped="" ref="0x11177d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x11177c720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x11177c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x11177caa0"/>
        <function-ref name="userId" scoped="" ref="0x11177cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x112b57b00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x112b57b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x112b57e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x112b560f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112b560f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112b56470"/>
        <function-ref name="requested" scoped="" ref="0x112b56600"/>
        <function-ref name="granted" scoped="" ref="0x112b56790"/>
        <function-ref name="isOwner" scoped="" ref="0x112b56920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112b56ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x112b573a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x112b573a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x112b57720"/>
        <function-ref name="stop" scoped="" ref="0x112b578b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x112b56d00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112b56d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x112b550a0"/>
        <function-ref name="userId" scoped="" ref="0x112b55230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x1117a5020" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x1117a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1117a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x1117a5690" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1117a5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1117a5a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1117a5ba0"/>
        <function-ref name="request" scoped="" ref="0x1117a5d30"/>
        <function-ref name="granted" scoped="" ref="0x1117a4020"/>
        <function-ref name="isOwner" scoped="" ref="0x1117a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1117a8790" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1117a8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1117a8b10"/>
        <function-ref name="stop" scoped="" ref="0x1117a8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x11179a970" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x11179a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x11179acf0"/>
        <function-ref name="stopDone" scoped="" ref="0x11179ae80"/>
        <function-ref name="start" scoped="" ref="0x111797030"/>
        <function-ref name="stop" scoped="" ref="0x1117971c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x111797990" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x111797990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111797d10"/>
        <function-ref name="getPayload" scoped="" ref="0x111796020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1117961b0"/>
        <function-ref name="cancel" scoped="" ref="0x111796340"/>
        <function-ref name="sendDone" scoped="" ref="0x1117964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x111794900" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x111794900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111794c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x111793020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x111793020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1117933a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x111793530"/>
        <function-ref name="getPayload" scoped="" ref="0x1117936c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111793850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1117939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x11178f310" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x11178f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x11178a880"/>
        <function-ref name="clear" scoped="" ref="0x1117cb020"/>
        <function-ref name="isValid" scoped="" ref="0x11178a150"/>
        <function-ref name="set" scoped="" ref="0x1117cb750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x1117be130" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x1117be130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x1117be4b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x1117be640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x1117be7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x1117be960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x111796cb0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x111796cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1117940a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x111790080" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x111790080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111790400"/>
        <function-ref name="noAck" scoped="" ref="0x111790590"/>
        <function-ref name="wasAcked" scoped="" ref="0x111790720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x111793c90" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x111793c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1117920a0"/>
        <function-ref name="source" scoped="" ref="0x111792230"/>
        <function-ref name="address" scoped="" ref="0x1117923c0"/>
        <function-ref name="destination" scoped="" ref="0x111792550"/>
        <function-ref name="setSource" scoped="" ref="0x1117926e0"/>
        <function-ref name="setDestination" scoped="" ref="0x111792870"/>
        <function-ref name="type" scoped="" ref="0x111792a00"/>
        <function-ref name="setType" scoped="" ref="0x111792b90"/>
        <function-ref name="isForMe" scoped="" ref="0x111792d20"/>
        <function-ref name="setGroup" scoped="" ref="0x111791020"/>
        <function-ref name="localGroup" scoped="" ref="0x1117911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x1117c93f0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1117c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1117c8970"/>
        <function-ref name="clear" scoped="" ref="0x1117c70d0"/>
        <function-ref name="isValid" scoped="" ref="0x1117c8240"/>
        <function-ref name="set" scoped="" ref="0x1117c7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1117b1020" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1117b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1117b13a0"/>
        <function-ref name="stopDone" scoped="" ref="0x1117b1530"/>
        <function-ref name="start" scoped="" ref="0x1117b16c0"/>
        <function-ref name="stop" scoped="" ref="0x1117b1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1117eb020" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1117eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1117eb3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1117eb530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1117eb6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1117eb850"/>
        <function-ref name="setCca" scoped="" ref="0x1117eb9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1117ebb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1117e0020" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1117e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x1117e04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1117aca80" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1117aca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1117ace00"/>
        <function-ref name="payloadLength" scoped="" ref="0x1117ab020"/>
        <function-ref name="getPayload" scoped="" ref="0x1117ab1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1117ab340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1117ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1117b0050" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1117b0050"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1117b03d0"/>
        <function-ref name="getPayload" scoped="" ref="0x1117b0560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1117b06f0"/>
        <function-ref name="cancel" scoped="" ref="0x1117b0880"/>
        <function-ref name="sendDone" scoped="" ref="0x1117b0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1117afdf0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1117afdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1117ae1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1117edc20" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1117edc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1117f4020"/>
        <function-ref name="setNetwork" scoped="" ref="0x1117f41b0"/>
        <function-ref name="getRssi" scoped="" ref="0x1117f4340"/>
        <function-ref name="getNetwork" scoped="" ref="0x1117f44d0"/>
        <function-ref name="getPower" scoped="" ref="0x1117f4660"/>
        <function-ref name="getLqi" scoped="" ref="0x1117f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x1117ebe70" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x1117ebe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x1117e9220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x1117e93b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x1117e9540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x1117e96d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1117af210" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1117af210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1117af590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1117f4b20" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1117f4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1117f3020"/>
        <function-ref name="noAck" scoped="" ref="0x1117f31b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1117f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x1117d80d0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x1117d80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x1117d8450"/>
        <function-ref name="setRetries" scoped="" ref="0x1117d85e0"/>
        <function-ref name="getRetries" scoped="" ref="0x1117d8770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x1117d8900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x1117d8a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1117ae470" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1117ae470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1117ae7f0"/>
        <function-ref name="source" scoped="" ref="0x1117ae980"/>
        <function-ref name="address" scoped="" ref="0x1117aeb10"/>
        <function-ref name="destination" scoped="" ref="0x1117aeca0"/>
        <function-ref name="setSource" scoped="" ref="0x1117aee30"/>
        <function-ref name="setDestination" scoped="" ref="0x1117ac020"/>
        <function-ref name="type" scoped="" ref="0x1117ac1b0"/>
        <function-ref name="setType" scoped="" ref="0x1117ac340"/>
        <function-ref name="isForMe" scoped="" ref="0x1117ac4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x1117ac660"/>
        <function-ref name="localGroup" scoped="" ref="0x1117ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1117eada0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1117eada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1117ec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1117dfd80" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1117dfd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1117d2180"/>
        <function-ref name="stopDone" scoped="" ref="0x1117d2310"/>
        <function-ref name="start" scoped="" ref="0x1117d24a0"/>
        <function-ref name="stop" scoped="" ref="0x1117d2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x11180c4c0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x11180c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x11180c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x11180b790" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x11180b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x11180bb10"/>
        <function-ref name="setRetries" scoped="" ref="0x11180bca0"/>
        <function-ref name="getRetries" scoped="" ref="0x11180be30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x11180a020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x11180a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1118109e0" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1118109e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111810d60"/>
        <function-ref name="setNetwork" scoped="" ref="0x11180d020"/>
        <function-ref name="getRssi" scoped="" ref="0x11180d1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x11180d340"/>
        <function-ref name="getPower" scoped="" ref="0x11180d4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x11180d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x1118194e0" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x1118194e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111819860"/>
        <function-ref name="getPayload" scoped="" ref="0x1118199f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111819b80"/>
        <function-ref name="cancel" scoped="" ref="0x111819d10"/>
        <function-ref name="sendDone" scoped="" ref="0x111810020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x11180cb40" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x11180cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x11180b020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x11180b1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x11180b340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x11180b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x1117d0020" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x1117d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1117d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x11180d990" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x11180d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x11180dd10"/>
        <function-ref name="noAck" scoped="" ref="0x11180c020"/>
        <function-ref name="wasAcked" scoped="" ref="0x11180c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1117d2e60" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1117d2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1117d1210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1117d13a0"/>
        <function-ref name="request" scoped="" ref="0x1117d1530"/>
        <function-ref name="granted" scoped="" ref="0x1117d16c0"/>
        <function-ref name="isOwner" scoped="" ref="0x1117d1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x11180f240" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x11180f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11180f5c0"/>
        <function-ref name="getPayload" scoped="" ref="0x11180f750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11180f8e0"/>
        <function-ref name="cancel" scoped="" ref="0x11180fa70"/>
        <function-ref name="sendDone" scoped="" ref="0x11180fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x1117d06e0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x1117d06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1117d0a60"/>
        <function-ref name="payloadLength" scoped="" ref="0x1117d0bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x1117d0d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111819020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1118191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x111810390" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x111810390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111810710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x111807020" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x111807020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1118073a0"/>
        <function-ref name="stopDone" scoped="" ref="0x111807530"/>
        <function-ref name="start" scoped="" ref="0x1118076c0"/>
        <function-ref name="stop" scoped="" ref="0x111807850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x111805020" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x111805020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1118053a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x111805530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1118056c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x111805850"/>
        <function-ref name="setCca" scoped="" ref="0x1118059e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x111805b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111807b10" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111807b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111806020"/>
        <function-ref name="getPayload" scoped="" ref="0x1118061b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111806340"/>
        <function-ref name="cancel" scoped="" ref="0x1118064d0"/>
        <function-ref name="sendDone" scoped="" ref="0x111806660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x111806940" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x111806940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111806cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x111804b80" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x111804b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x111801020"/>
        <function-ref name="stopDone" scoped="" ref="0x1118011b0"/>
        <function-ref name="start" scoped="" ref="0x111801340"/>
        <function-ref name="stop" scoped="" ref="0x1118014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1118004c0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1118004c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x111800840"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1118009d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x111800b60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x111800cf0"/>
        <function-ref name="setCca" scoped="" ref="0x111800e80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1117ff030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x1117f6700" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x1117f6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1117f6a80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1117f6c10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1117f6da0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1117f5020"/>
        <function-ref name="setCca" scoped="" ref="0x1117f51b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1117f5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x111836b00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111836b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111836e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x111834030"/>
        <function-ref name="getRssi" scoped="" ref="0x1118341c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x111834350"/>
        <function-ref name="getPower" scoped="" ref="0x1118344e0"/>
        <function-ref name="getLqi" scoped="" ref="0x111834670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x111838810" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x111838810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111838b90"/>
        <function-ref name="cancel" scoped="" ref="0x111838d20"/>
        <function-ref name="modify" scoped="" ref="0x1117f6020"/>
        <function-ref name="sendDone" scoped="" ref="0x1117f61b0"/>
        <function-ref name="resend" scoped="" ref="0x1117f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111801790" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111801790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111801b10"/>
        <function-ref name="getPayload" scoped="" ref="0x111801ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x111801e30"/>
        <function-ref name="cancel" scoped="" ref="0x111800020"/>
        <function-ref name="sendDone" scoped="" ref="0x1118001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x111835b60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x111835b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x111837020"/>
        <function-ref name="rand32" scoped="" ref="0x1118371b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x1117fdba0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x1117fdba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1117fc020"/>
        <function-ref name="stop" scoped="" ref="0x1117fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x11182d130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x11182d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x11182d4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x11182d640"/>
        <function-ref name="getMetadata" scoped="" ref="0x11182d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x1117f7880" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x1117f7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1117f7c00"/>
        <function-ref name="rfOff" scoped="" ref="0x1117f7d90"/>
        <function-ref name="rxOn" scoped="" ref="0x1117fd020"/>
        <function-ref name="startVReg" scoped="" ref="0x1117fd1b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x1117fd340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1117fd4d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1117fd660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1117fd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111837470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111837470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1118377f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111837980"/>
        <function-ref name="led1On" scoped="" ref="0x111837b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111837ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111837e30"/>
        <function-ref name="get" scoped="" ref="0x111836020"/>
        <function-ref name="led1Off" scoped="" ref="0x1118361b0"/>
        <function-ref name="led2Off" scoped="" ref="0x1118367f0"/>
        <function-ref name="set" scoped="" ref="0x111836340"/>
        <function-ref name="led0On" scoped="" ref="0x1118364d0"/>
        <function-ref name="led2On" scoped="" ref="0x111836660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x1117ff320" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1117ff320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1117ff6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1117ff830"/>
        <function-ref name="request" scoped="" ref="0x1117ff9c0"/>
        <function-ref name="granted" scoped="" ref="0x1117ffb50"/>
        <function-ref name="isOwner" scoped="" ref="0x1117ffce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x111828850" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x111828850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x111828cd0"/>
        <function-ref name="toIdle" scoped="" ref="0x111828e60"/>
        <function-ref name="isState" scoped="" ref="0x111832020"/>
        <function-ref name="isIdle" scoped="" ref="0x1118321b0"/>
        <function-ref name="requestState" scoped="" ref="0x111832340"/>
        <function-ref name="forceState" scoped="" ref="0x1118324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x1118232a0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x1118232a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111823620"/>
        <function-ref name="runTask" scoped="" ref="0x1118237b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x1118242a0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x1118242a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111824620"/>
        <function-ref name="runTask" scoped="" ref="0x1118247b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x1118252b0" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x1118252b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111825630"/>
        <function-ref name="runTask" scoped="" ref="0x1118257c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x1118ae550" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1118ae550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x1118ae8d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1118aea60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x1118aebf0"/>
        <function-ref name="syncDone" scoped="" ref="0x1118aed80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x11186f020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x11186f1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x11186f340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x11186f4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x11186f660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x11186f7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x11186f980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x11186fb10"/>
        <function-ref name="sync" scoped="" ref="0x11186fca0"/>
        <function-ref name="getChannel" scoped="" ref="0x11186e020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x11186e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x1118a9850" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x1118a9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118ac480"/>
        <function-ref name="readDone" scoped="" ref="0x1118ac900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x11186e4b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x11186e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x11186e830"/>
        <function-ref name="rfOff" scoped="" ref="0x11186e9c0"/>
        <function-ref name="rxOn" scoped="" ref="0x11186eb50"/>
        <function-ref name="startVReg" scoped="" ref="0x11186ece0"/>
        <function-ref name="stopVReg" scoped="" ref="0x11186ee70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1118ad030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1118ad1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1118ad350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111870020" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111870020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1118703a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111870530"/>
        <function-ref name="request" scoped="" ref="0x1118706c0"/>
        <function-ref name="granted" scoped="" ref="0x111870850"/>
        <function-ref name="isOwner" scoped="" ref="0x1118709e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x1118a30c0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1118a30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x1118a3440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1118a35d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x1118a3760"/>
        <function-ref name="syncDone" scoped="" ref="0x1118a38f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x1118a3a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1118a3c10"/>
        <function-ref name="setChannel" scoped="" ref="0x1118a3da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x1118a2020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1118a21b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x1118a2340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x1118a24d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1118a2660"/>
        <function-ref name="sync" scoped="" ref="0x1118a27f0"/>
        <function-ref name="getChannel" scoped="" ref="0x1118a2a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1118a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x1118d2720" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1118d2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d2aa0"/>
        <function-ref name="write" scoped="" ref="0x1118d2c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x11189c970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x11189c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x11189ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x11189e3a0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x11189e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x11189abe0"/>
        <function-ref name="fired" scoped="" ref="0x11189bbc0"/>
        <function-ref name="startAt" scoped="" ref="0x11189a590"/>
        <function-ref name="isRunning" scoped="" ref="0x11189a0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1118990d0"/>
        <function-ref name="start" scoped="" ref="0x11189b1f0"/>
        <function-ref name="stop" scoped="" ref="0x11189b700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x1118d6570" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x1118d6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d68f0"/>
        <function-ref name="write" scoped="" ref="0x1118d6a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x111897830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x111897830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111897bb0"/>
        <function-ref name="isInput" scoped="" ref="0x111897d40"/>
        <function-ref name="toggle" scoped="" ref="0x111896020"/>
        <function-ref name="isOutput" scoped="" ref="0x1118961b0"/>
        <function-ref name="get" scoped="" ref="0x111896340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1118964d0"/>
        <function-ref name="set" scoped="" ref="0x111896660"/>
        <function-ref name="clr" scoped="" ref="0x1118967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x1118a0500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x1118a0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11189f130"/>
        <function-ref name="readDone" scoped="" ref="0x11189f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x1118c0820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x1118c0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1118c0ba0"/>
        <function-ref name="runTask" scoped="" ref="0x1118c0d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x1118d1020" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x1118d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d13a0"/>
        <function-ref name="write" scoped="" ref="0x1118d1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x1118d18d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x1118d18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d1c50"/>
        <function-ref name="write" scoped="" ref="0x1118d1de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x11188e3c0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x11188e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11188e740"/>
        <function-ref name="write" scoped="" ref="0x11188e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x11188f6b0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x11188f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x11188fa30"/>
        <function-ref name="changed" scoped="" ref="0x11188fbc0"/>
        <function-ref name="amGroup" scoped="" ref="0x11188fd50"/>
        <function-ref name="setAddress" scoped="" ref="0x111893020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x1118995c0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x1118995c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111899940"/>
        <function-ref name="isInput" scoped="" ref="0x111899ad0"/>
        <function-ref name="toggle" scoped="" ref="0x111899c60"/>
        <function-ref name="isOutput" scoped="" ref="0x111899df0"/>
        <function-ref name="get" scoped="" ref="0x111897020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1118971b0"/>
        <function-ref name="set" scoped="" ref="0x111897340"/>
        <function-ref name="clr" scoped="" ref="0x1118974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x1118ce020" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1118ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1118ce5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x111896b50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x111896b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111895020"/>
        <function-ref name="isInput" scoped="" ref="0x1118951b0"/>
        <function-ref name="toggle" scoped="" ref="0x111895340"/>
        <function-ref name="isOutput" scoped="" ref="0x1118954d0"/>
        <function-ref name="get" scoped="" ref="0x111895660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1118957f0"/>
        <function-ref name="set" scoped="" ref="0x111895980"/>
        <function-ref name="clr" scoped="" ref="0x111895b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1118a8cc0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1118a8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1118a40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x1118d6e40" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1118d6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d21e0"/>
        <function-ref name="write" scoped="" ref="0x1118d2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x1118ce940" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1118ce940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1118cecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1118cd0d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1118cd0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1118cd450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1118cd5e0"/>
        <function-ref name="request" scoped="" ref="0x1118cd770"/>
        <function-ref name="granted" scoped="" ref="0x1118cd900"/>
        <function-ref name="isOwner" scoped="" ref="0x1118cda90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x1118ccbd0" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x1118ccbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1118cb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1118cb1b0"/>
        <function-ref name="request" scoped="" ref="0x1118cb340"/>
        <function-ref name="granted" scoped="" ref="0x1118cb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x1118cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x1118a1020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x1118a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1118a13a0"/>
        <function-ref name="rfOff" scoped="" ref="0x1118a1530"/>
        <function-ref name="rxOn" scoped="" ref="0x1118a16c0"/>
        <function-ref name="startVReg" scoped="" ref="0x1118a1850"/>
        <function-ref name="stopVReg" scoped="" ref="0x1118a19e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x1118a1b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x1118a1d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x1118a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x11188ec70" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x11188ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d6020"/>
        <function-ref name="write" scoped="" ref="0x1118d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x1118d49b0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1118d49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d4d30"/>
        <function-ref name="write" scoped="" ref="0x11188e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x1118cf120" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1118cf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1118cf4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1118cb920" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1118cb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1118cbca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1118cbe30"/>
        <function-ref name="led1On" scoped="" ref="0x1118ca020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1118ca1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1118ca340"/>
        <function-ref name="get" scoped="" ref="0x1118ca4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x1118ca660"/>
        <function-ref name="led2Off" scoped="" ref="0x1118caca0"/>
        <function-ref name="set" scoped="" ref="0x1118ca7f0"/>
        <function-ref name="led0On" scoped="" ref="0x1118ca980"/>
        <function-ref name="led2On" scoped="" ref="0x1118cab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x1118c1940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x1118c1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1118c1cc0"/>
        <function-ref name="runTask" scoped="" ref="0x1118c1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1118a4390" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1118a4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1118a4710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1118a48a0"/>
        <function-ref name="request" scoped="" ref="0x1118a4a30"/>
        <function-ref name="granted" scoped="" ref="0x1118a4bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x1118a4d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x111892200" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x111892200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111892580"/>
        <function-ref name="write" scoped="" ref="0x111892710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x1118d7830" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1118d7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1118d7cb0"/>
        <function-ref name="write" scoped="" ref="0x1118d7e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x111894020" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x111894020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1118943a0"/>
        <function-ref name="disable" scoped="" ref="0x111894530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1118946c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x111894850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x1118cde40" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x1118cde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1118cc1e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1118cc370"/>
        <function-ref name="request" scoped="" ref="0x1118cc500"/>
        <function-ref name="granted" scoped="" ref="0x1118cc690"/>
        <function-ref name="isOwner" scoped="" ref="0x1118cc820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x1118cf830" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1118cf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1118cfbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1119357e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1119357e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111935b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x111932220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x111932220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111930b30"/>
        <function-ref name="fired" scoped="" ref="0x111931a60"/>
        <function-ref name="startAt" scoped="" ref="0x1119304e0"/>
        <function-ref name="isRunning" scoped="" ref="0x111930020"/>
        <function-ref name="getAlarm" scoped="" ref="0x11192e020"/>
        <function-ref name="start" scoped="" ref="0x111931090"/>
        <function-ref name="stop" scoped="" ref="0x1119315a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11192c260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11192c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11192c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x11192caf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x11192caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111992390"/>
        <function-ref name="fired" scoped="" ref="0x111993360"/>
        <function-ref name="startAt" scoped="" ref="0x111993ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x111993820"/>
        <function-ref name="getAlarm" scoped="" ref="0x111992850"/>
        <function-ref name="start" scoped="" ref="0x111994970"/>
        <function-ref name="stop" scoped="" ref="0x111994e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112b2d020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112b2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112b2b870"/>
        <function-ref name="fired" scoped="" ref="0x112b2c840"/>
        <function-ref name="startAt" scoped="" ref="0x112b2b220"/>
        <function-ref name="isRunning" scoped="" ref="0x112b2cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x112b2bd30"/>
        <function-ref name="start" scoped="" ref="0x112b2de30"/>
        <function-ref name="stop" scoped="" ref="0x112b2c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112b2e720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112b2e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112b2eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112b26020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112b26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112b23870"/>
        <function-ref name="fired" scoped="" ref="0x112b24840"/>
        <function-ref name="startAt" scoped="" ref="0x112b23220"/>
        <function-ref name="isRunning" scoped="" ref="0x112b24d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x112b23d30"/>
        <function-ref name="start" scoped="" ref="0x112b26e30"/>
        <function-ref name="stop" scoped="" ref="0x112b24380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112b27760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112b27760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112b27ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x112ba48f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x112ba48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112ba4c70"/>
        <function-ref name="setEvent" scoped="" ref="0x112ba4e00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x112ba3020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112ba31b0"/>
        <function-ref name="fired" scoped="" ref="0x112ba3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x112ba8e70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112ba8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112ba6220"/>
        <function-ref name="setClockSource" scoped="" ref="0x112ba63b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x112ba6540"/>
        <function-ref name="get" scoped="" ref="0x112ba66d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x112ba6860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112ba69f0"/>
        <function-ref name="getMode" scoped="" ref="0x112ba6b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112ba6d10"/>
        <function-ref name="overflow" scoped="" ref="0x112ba5020"/>
        <function-ref name="setMode" scoped="" ref="0x112ba51b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112ba5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x112ba55d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112ba55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112ba5950"/>
        <function-ref name="getControl" scoped="" ref="0x112ba5ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x112ba5c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112ba5e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x112ba4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x112ba41b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112ba4340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112ba44d0"/>
        <function-ref name="setControl" scoped="" ref="0x112ba4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x112b9a760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x112b9a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x112b9aae0"/>
        <function-ref name="setEvent" scoped="" ref="0x112b9ac70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x112b9ae00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x112b99020"/>
        <function-ref name="fired" scoped="" ref="0x112b991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x112b9edd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x112b9edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112b9c180"/>
        <function-ref name="setClockSource" scoped="" ref="0x112b9c310"/>
        <function-ref name="enableEvents" scoped="" ref="0x112b9c4a0"/>
        <function-ref name="get" scoped="" ref="0x112b9c630"/>
        <function-ref name="disableEvents" scoped="" ref="0x112b9c7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112b9c950"/>
        <function-ref name="getMode" scoped="" ref="0x112b9cae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112b9cc70"/>
        <function-ref name="overflow" scoped="" ref="0x112b9ce00"/>
        <function-ref name="setMode" scoped="" ref="0x112b9b020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x112b9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112ba1bd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112ba1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112b9e4e0"/>
        <function-ref name="fired" scoped="" ref="0x112b9f4e0"/>
        <function-ref name="startAt" scoped="" ref="0x112b9fe60"/>
        <function-ref name="isRunning" scoped="" ref="0x112b9f9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x112b9e9a0"/>
        <function-ref name="start" scoped="" ref="0x112ba0a80"/>
        <function-ref name="stop" scoped="" ref="0x112b9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112ba1340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112ba1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112ba16c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x112b9b440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x112b9b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x112b9b7c0"/>
        <function-ref name="getControl" scoped="" ref="0x112b9b950"/>
        <function-ref name="enableEvents" scoped="" ref="0x112b9bae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x112b9bc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x112b9be00"/>
        <function-ref name="disableEvents" scoped="" ref="0x112b9a020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x112b9a1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x112b9a340"/>
        <function-ref name="setControl" scoped="" ref="0x112b9a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x111966080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111966080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111965020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1119659a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1119654e0"/>
        <function-ref name="overflow" scoped="" ref="0x111965e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x11195d0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x11195d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11195c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11195c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11195c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x11195ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x111961cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111961cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111960b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x11195f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x11195f090"/>
        <function-ref name="overflow" scoped="" ref="0x11195fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x112b201d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x112b201d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112b1eb30"/>
        <function-ref name="fired" scoped="" ref="0x112b1f9f0"/>
        <function-ref name="startAt" scoped="" ref="0x112b1e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x112b1e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x112b1c020"/>
        <function-ref name="start" scoped="" ref="0x112b1f020"/>
        <function-ref name="stop" scoped="" ref="0x112b1f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x112b1ab90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x112b1ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112b164e0"/>
        <function-ref name="fired" scoped="" ref="0x112b184e0"/>
        <function-ref name="startAt" scoped="" ref="0x112b18e60"/>
        <function-ref name="isRunning" scoped="" ref="0x112b189a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x112b169a0"/>
        <function-ref name="start" scoped="" ref="0x112b199d0"/>
        <function-ref name="stop" scoped="" ref="0x112b18020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x112b1c690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x112b1c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112b1b5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112b1a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112b1ba70"/>
        <function-ref name="overflow" scoped="" ref="0x112b1a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x11198b090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x11198b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11198b410"/>
        <function-ref name="isInput" scoped="" ref="0x11198b5a0"/>
        <function-ref name="toggle" scoped="" ref="0x11198b730"/>
        <function-ref name="isOutput" scoped="" ref="0x11198b8c0"/>
        <function-ref name="get" scoped="" ref="0x11198ba50"/>
        <function-ref name="makeOutput" scoped="" ref="0x11198bbe0"/>
        <function-ref name="set" scoped="" ref="0x11198bd70"/>
        <function-ref name="clr" scoped="" ref="0x11198a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x11198a390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x11198a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11198a710"/>
        <function-ref name="isInput" scoped="" ref="0x11198a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x11198aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x11198abc0"/>
        <function-ref name="get" scoped="" ref="0x11198ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x111989020"/>
        <function-ref name="set" scoped="" ref="0x1119891b0"/>
        <function-ref name="clr" scoped="" ref="0x111989340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x1119896a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x1119896a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111989a20"/>
        <function-ref name="isInput" scoped="" ref="0x111989bb0"/>
        <function-ref name="toggle" scoped="" ref="0x111989d40"/>
        <function-ref name="isOutput" scoped="" ref="0x111988020"/>
        <function-ref name="get" scoped="" ref="0x1119881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111988340"/>
        <function-ref name="set" scoped="" ref="0x1119884d0"/>
        <function-ref name="clr" scoped="" ref="0x111988660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x11198de60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x11198de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11198c210"/>
        <function-ref name="isInput" scoped="" ref="0x11198c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x11198c530"/>
        <function-ref name="isOutput" scoped="" ref="0x11198c6c0"/>
        <function-ref name="get" scoped="" ref="0x11198c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x11198c9e0"/>
        <function-ref name="set" scoped="" ref="0x11198cb70"/>
        <function-ref name="clr" scoped="" ref="0x11198cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x111987ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x111987ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119860a0"/>
        <function-ref name="isInput" scoped="" ref="0x111986230"/>
        <function-ref name="toggle" scoped="" ref="0x1119863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x111986550"/>
        <function-ref name="get" scoped="" ref="0x1119866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111986870"/>
        <function-ref name="set" scoped="" ref="0x111986a00"/>
        <function-ref name="clr" scoped="" ref="0x111986b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x111933b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x111933b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11198d020"/>
        <function-ref name="isInput" scoped="" ref="0x11198d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x11198d340"/>
        <function-ref name="isOutput" scoped="" ref="0x11198d4d0"/>
        <function-ref name="get" scoped="" ref="0x11198d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x11198d7f0"/>
        <function-ref name="set" scoped="" ref="0x11198d980"/>
        <function-ref name="clr" scoped="" ref="0x11198db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x1119889b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x1119889b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111988d30"/>
        <function-ref name="isInput" scoped="" ref="0x111987020"/>
        <function-ref name="toggle" scoped="" ref="0x1119871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x111987340"/>
        <function-ref name="get" scoped="" ref="0x1119874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111987660"/>
        <function-ref name="set" scoped="" ref="0x1119877f0"/>
        <function-ref name="clr" scoped="" ref="0x111987980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1119832f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1119832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111983670"/>
        <function-ref name="isInput" scoped="" ref="0x111983800"/>
        <function-ref name="setResistor" scoped="" ref="0x111983990"/>
        <function-ref name="toggle" scoped="" ref="0x111983b20"/>
        <function-ref name="isOutput" scoped="" ref="0x111983cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x111983e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x111982020"/>
        <function-ref name="get" scoped="" ref="0x1119821b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111982340"/>
        <function-ref name="getRaw" scoped="" ref="0x1119824d0"/>
        <function-ref name="set" scoped="" ref="0x111982660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1119827f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111982980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111982c10"/>
        <function-ref name="clr" scoped="" ref="0x111982da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x111984020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x111984020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119843a0"/>
        <function-ref name="isInput" scoped="" ref="0x111984530"/>
        <function-ref name="toggle" scoped="" ref="0x1119846c0"/>
        <function-ref name="isOutput" scoped="" ref="0x111984850"/>
        <function-ref name="get" scoped="" ref="0x1119849e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111984b70"/>
        <function-ref name="set" scoped="" ref="0x111984d00"/>
        <function-ref name="clr" scoped="" ref="0x111983020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x11197fde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x11197fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11197e180"/>
        <function-ref name="isInput" scoped="" ref="0x11197e310"/>
        <function-ref name="setResistor" scoped="" ref="0x11197e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x11197e630"/>
        <function-ref name="isOutput" scoped="" ref="0x11197e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x11197e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x11197eae0"/>
        <function-ref name="get" scoped="" ref="0x11197ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x11197ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x11197d020"/>
        <function-ref name="set" scoped="" ref="0x11197d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x11197d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x11197d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x11197d760"/>
        <function-ref name="clr" scoped="" ref="0x11197d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x111980b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x111980b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11197f020"/>
        <function-ref name="isInput" scoped="" ref="0x11197f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x11197f340"/>
        <function-ref name="isOutput" scoped="" ref="0x11197f4d0"/>
        <function-ref name="get" scoped="" ref="0x11197f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x11197f7f0"/>
        <function-ref name="set" scoped="" ref="0x11197f980"/>
        <function-ref name="clr" scoped="" ref="0x11197fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x11197a930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x11197a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11197acb0"/>
        <function-ref name="isInput" scoped="" ref="0x11197ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x111978020"/>
        <function-ref name="toggle" scoped="" ref="0x1119781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x111978340"/>
        <function-ref name="getResistor" scoped="" ref="0x1119784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111978660"/>
        <function-ref name="get" scoped="" ref="0x1119787f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111978980"/>
        <function-ref name="getRaw" scoped="" ref="0x111978b10"/>
        <function-ref name="set" scoped="" ref="0x111978ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111978e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111977020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1119772b0"/>
        <function-ref name="clr" scoped="" ref="0x111977440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x11197b710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x11197b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x11197ba90"/>
        <function-ref name="isInput" scoped="" ref="0x11197bc20"/>
        <function-ref name="toggle" scoped="" ref="0x11197bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x11197a020"/>
        <function-ref name="get" scoped="" ref="0x11197a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x11197a340"/>
        <function-ref name="set" scoped="" ref="0x11197a4d0"/>
        <function-ref name="clr" scoped="" ref="0x11197a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1119c4480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1119c4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119c4800"/>
        <function-ref name="isInput" scoped="" ref="0x1119c4990"/>
        <function-ref name="setResistor" scoped="" ref="0x1119c4b20"/>
        <function-ref name="toggle" scoped="" ref="0x1119c4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1119c4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x1119c3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119c31b0"/>
        <function-ref name="get" scoped="" ref="0x1119c3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1119c34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x1119c3660"/>
        <function-ref name="set" scoped="" ref="0x1119c37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1119c3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1119c3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1119c3da0"/>
        <function-ref name="clr" scoped="" ref="0x1119c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1119c51d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1119c51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119c5550"/>
        <function-ref name="isInput" scoped="" ref="0x1119c56e0"/>
        <function-ref name="toggle" scoped="" ref="0x1119c5870"/>
        <function-ref name="isOutput" scoped="" ref="0x1119c5a00"/>
        <function-ref name="get" scoped="" ref="0x1119c5b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119c5d20"/>
        <function-ref name="set" scoped="" ref="0x1119c4020"/>
        <function-ref name="clr" scoped="" ref="0x1119c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1119bf020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1119bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119bf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1119bf530"/>
        <function-ref name="setResistor" scoped="" ref="0x1119bf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1119bf850"/>
        <function-ref name="isOutput" scoped="" ref="0x1119bf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1119bfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119bfd00"/>
        <function-ref name="get" scoped="" ref="0x1119be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1119be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1119be340"/>
        <function-ref name="set" scoped="" ref="0x1119be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1119be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1119be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1119bea80"/>
        <function-ref name="clr" scoped="" ref="0x1119bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1119c1d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1119c1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119c0180"/>
        <function-ref name="isInput" scoped="" ref="0x1119c0310"/>
        <function-ref name="toggle" scoped="" ref="0x1119c04a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1119c0630"/>
        <function-ref name="get" scoped="" ref="0x1119c07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119c0950"/>
        <function-ref name="set" scoped="" ref="0x1119c0ae0"/>
        <function-ref name="clr" scoped="" ref="0x1119c0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1119bbde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1119bbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119ba180"/>
        <function-ref name="isInput" scoped="" ref="0x1119ba310"/>
        <function-ref name="setResistor" scoped="" ref="0x1119ba4a0"/>
        <function-ref name="toggle" scoped="" ref="0x1119ba630"/>
        <function-ref name="isOutput" scoped="" ref="0x1119ba7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x1119ba950"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119baae0"/>
        <function-ref name="get" scoped="" ref="0x1119bac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1119bae00"/>
        <function-ref name="getRaw" scoped="" ref="0x1119b9020"/>
        <function-ref name="set" scoped="" ref="0x1119b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1119b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1119b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1119b9760"/>
        <function-ref name="clr" scoped="" ref="0x1119b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1119bcb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1119bcb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119bb020"/>
        <function-ref name="isInput" scoped="" ref="0x1119bb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x1119bb340"/>
        <function-ref name="isOutput" scoped="" ref="0x1119bb4d0"/>
        <function-ref name="get" scoped="" ref="0x1119bb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119bb7f0"/>
        <function-ref name="set" scoped="" ref="0x1119bb980"/>
        <function-ref name="clr" scoped="" ref="0x1119bbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1119b6930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1119b6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119b6cb0"/>
        <function-ref name="isInput" scoped="" ref="0x1119b6e40"/>
        <function-ref name="setResistor" scoped="" ref="0x1119b5020"/>
        <function-ref name="toggle" scoped="" ref="0x1119b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1119b5340"/>
        <function-ref name="getResistor" scoped="" ref="0x1119b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119b5660"/>
        <function-ref name="get" scoped="" ref="0x1119b57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1119b5980"/>
        <function-ref name="getRaw" scoped="" ref="0x1119b5b10"/>
        <function-ref name="set" scoped="" ref="0x1119b5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1119b5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1119b4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1119b42b0"/>
        <function-ref name="clr" scoped="" ref="0x1119b4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1119b7710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1119b7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119b7a90"/>
        <function-ref name="isInput" scoped="" ref="0x1119b7c20"/>
        <function-ref name="toggle" scoped="" ref="0x1119b7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1119b6020"/>
        <function-ref name="get" scoped="" ref="0x1119b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119b6340"/>
        <function-ref name="set" scoped="" ref="0x1119b64d0"/>
        <function-ref name="clr" scoped="" ref="0x1119b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x1119a1150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x1119a1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1119a14d0"/>
        <function-ref name="disable" scoped="" ref="0x1119a1660"/>
        <function-ref name="captured" scoped="" ref="0x1119a17f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1119a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x1119a1d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x1119a1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1119a0180"/>
        <function-ref name="disable" scoped="" ref="0x1119a0310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1119a04a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1119a0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x1119a0a20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x1119a0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1119a0da0"/>
        <function-ref name="disable" scoped="" ref="0x1119ef020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1119ef1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1119ef340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x1119d98f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x1119d98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1119d9c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1119d9e00"/>
        <function-ref name="captured" scoped="" ref="0x1119d8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1119d81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1119d8340"/>
        <function-ref name="setEdge" scoped="" ref="0x1119d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1119eca20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1119eca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x1119ecda0"/>
        <function-ref name="disable" scoped="" ref="0x1119da020"/>
        <function-ref name="captured" scoped="" ref="0x1119da1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1119da340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x1119da5d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1119da5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1119da950"/>
        <function-ref name="getControl" scoped="" ref="0x1119daae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1119dac70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1119dae00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1119d9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1119d91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1119d9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1119d94d0"/>
        <function-ref name="setControl" scoped="" ref="0x1119d9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x1119d87a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1119d87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1119d8b20"/>
        <function-ref name="isInput" scoped="" ref="0x1119d8cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x1119d8e40"/>
        <function-ref name="toggle" scoped="" ref="0x1119d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x1119d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1119d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1119d74d0"/>
        <function-ref name="get" scoped="" ref="0x1119d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1119d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1119d7980"/>
        <function-ref name="set" scoped="" ref="0x1119d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1119d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1119d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1119d6120"/>
        <function-ref name="clr" scoped="" ref="0x1119d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1119d2480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1119d2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1119d2800"/>
        <function-ref name="fired" scoped="" ref="0x1119d2990"/>
        <function-ref name="disable" scoped="" ref="0x1119d2b20"/>
        <function-ref name="edge" scoped="" ref="0x1119d2cb0"/>
        <function-ref name="enable" scoped="" ref="0x1119d2e40"/>
        <function-ref name="getValue" scoped="" ref="0x1119d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1119d38a0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x1119d38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1119d3c20"/>
        <function-ref name="disable" scoped="" ref="0x1119d3db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1119d2020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1119d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1119cf480" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1119cf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1119cf800"/>
        <function-ref name="fired" scoped="" ref="0x1119cf990"/>
        <function-ref name="disable" scoped="" ref="0x1119cfb20"/>
        <function-ref name="edge" scoped="" ref="0x1119cfcb0"/>
        <function-ref name="enable" scoped="" ref="0x1119cfe40"/>
        <function-ref name="getValue" scoped="" ref="0x1119ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1119d08b0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x1119d08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1119d0c30"/>
        <function-ref name="disable" scoped="" ref="0x1119d0dc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1119cf020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1119cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111d6ae50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111d6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d69410"/>
        <function-ref name="write" scoped="" ref="0x111d695a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111d13160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111d13160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d134e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111d0de50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111d0de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6d210"/>
        <function-ref name="write" scoped="" ref="0x111d6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111d68880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111d68880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d68c00"/>
        <function-ref name="write" scoped="" ref="0x111d68d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111d600a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111d600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d60420"/>
        <function-ref name="write" scoped="" ref="0x111d605b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111d670a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111d670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d67420"/>
        <function-ref name="write" scoped="" ref="0x111d675b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x111d54500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x111d54500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d54880"/>
        <function-ref name="write" scoped="" ref="0x111d54a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x111d57500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111d57500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d57880"/>
        <function-ref name="write" scoped="" ref="0x111d57a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111d12490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111d12490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d12810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111d5c880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111d5c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5cc00"/>
        <function-ref name="write" scoped="" ref="0x111d5cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x111d58500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111d58500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d58880"/>
        <function-ref name="write" scoped="" ref="0x111d58a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111d6de50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111d6de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6c210"/>
        <function-ref name="write" scoped="" ref="0x111d6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111d6ce50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111d6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6a210"/>
        <function-ref name="write" scoped="" ref="0x111d6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111d62880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111d62880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d62c00"/>
        <function-ref name="write" scoped="" ref="0x111d62d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x111d630a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x111d630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d63420"/>
        <function-ref name="write" scoped="" ref="0x111d635b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111d67880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111d67880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d67c00"/>
        <function-ref name="write" scoped="" ref="0x111d67d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111d15a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111d15a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111d15e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x111d14020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111d141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111d11e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111d11e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d0f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111d0f490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111d0f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d0f910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111d5bc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111d5bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5a0a0"/>
        <function-ref name="write" scoped="" ref="0x111d5a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111d0fbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111d0fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111d58ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111d58ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d570a0"/>
        <function-ref name="write" scoped="" ref="0x111d57230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111d11160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111d11160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d114e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111d5c0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111d5c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5c420"/>
        <function-ref name="write" scoped="" ref="0x111d5c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x111d6c670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x111d6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6c9f0"/>
        <function-ref name="write" scoped="" ref="0x111d6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x111d6d670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111d6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6d9f0"/>
        <function-ref name="write" scoped="" ref="0x111d6db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111d14ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111d14ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d14e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111d5e0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111d5e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5e420"/>
        <function-ref name="write" scoped="" ref="0x111d5e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111d60880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111d60880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d60c00"/>
        <function-ref name="write" scoped="" ref="0x111d60d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111d5e880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111d5e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5ec00"/>
        <function-ref name="write" scoped="" ref="0x111d5ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111d55ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111d55ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d540a0"/>
        <function-ref name="write" scoped="" ref="0x111d54230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111d57ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111d57ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d550a0"/>
        <function-ref name="write" scoped="" ref="0x111d55230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111d63880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111d63880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d63c00"/>
        <function-ref name="write" scoped="" ref="0x111d63d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111d5f0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111d5f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5f420"/>
        <function-ref name="write" scoped="" ref="0x111d5f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111d59ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111d59ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d580a0"/>
        <function-ref name="write" scoped="" ref="0x111d58230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111d66880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111d66880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d66c00"/>
        <function-ref name="write" scoped="" ref="0x111d66d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111d54ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111d54ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111d530a0"/>
        <function-ref name="writeDone" scoped="" ref="0x111d53230"/>
        <function-ref name="write" scoped="" ref="0x111d533c0"/>
        <function-ref name="beginRead" scoped="" ref="0x111d53550"/>
        <function-ref name="readDone" scoped="" ref="0x111d536e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111d14480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111d14480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d14800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x111d0d670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x111d0d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d0d9f0"/>
        <function-ref name="write" scoped="" ref="0x111d0db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111d6a670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111d6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6a9f0"/>
        <function-ref name="write" scoped="" ref="0x111d6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111d610a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111d610a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d61420"/>
        <function-ref name="write" scoped="" ref="0x111d615b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x111d660a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x111d660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d66420"/>
        <function-ref name="write" scoped="" ref="0x111d665b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111d61880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111d61880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d61c00"/>
        <function-ref name="write" scoped="" ref="0x111d61d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111d69870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111d69870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d69bf0"/>
        <function-ref name="write" scoped="" ref="0x111d69d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111d137b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111d137b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d13b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x111d680a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111d680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d68420"/>
        <function-ref name="write" scoped="" ref="0x111d685b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111d16e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111d16e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111d151c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111d15350"/>
        <function-ref name="request" scoped="" ref="0x111d154e0"/>
        <function-ref name="granted" scoped="" ref="0x111d15670"/>
        <function-ref name="isOwner" scoped="" ref="0x111d15800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111d0e2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111d0e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d0e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111d0d020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111d0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x111d59500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x111d59500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d59880"/>
        <function-ref name="write" scoped="" ref="0x111d59a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111d5ace0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111d5ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d590a0"/>
        <function-ref name="write" scoped="" ref="0x111d59230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111d117b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111d117b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d11b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x111d5a500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111d5a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5a880"/>
        <function-ref name="write" scoped="" ref="0x111d5aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x111d55500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x111d55500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d55880"/>
        <function-ref name="write" scoped="" ref="0x111d55a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111d620a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111d620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d62420"/>
        <function-ref name="write" scoped="" ref="0x111d625b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111d5f880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111d5f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5fc00"/>
        <function-ref name="write" scoped="" ref="0x111d5fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111d13e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111d13e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d121c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111d12ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111d12ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d12e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x111d650a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x111d650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d65420"/>
        <function-ref name="write" scoped="" ref="0x111d655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111d0e940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111d0e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d0ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111d65880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111d65880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d65c00"/>
        <function-ref name="write" scoped="" ref="0x111d65d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111d5b0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111d5b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d5b820"/>
        <function-ref name="write" scoped="" ref="0x111d5b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111d539b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111d539b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111d53d30"/>
        <function-ref name="writeDone" scoped="" ref="0x111d52020"/>
        <function-ref name="write" scoped="" ref="0x111d521b0"/>
        <function-ref name="beginRead" scoped="" ref="0x111d52340"/>
        <function-ref name="readDone" scoped="" ref="0x111d524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x111a32630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x111a32630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111a329b0"/>
        <function-ref name="writeDone" scoped="" ref="0x111a32b40"/>
        <function-ref name="write" scoped="" ref="0x111a32cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x111a32e60"/>
        <function-ref name="readDone" scoped="" ref="0x111a31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111a33670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111a33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111a339f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111a33b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111a33d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x111a318c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x111a318c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111a31c40"/>
        <function-ref name="write" scoped="" ref="0x111a31dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x111a306f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x111a306f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111a30a70"/>
        <function-ref name="write" scoped="" ref="0x111a30c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111a36950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111a36950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111a36cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111a36e60"/>
        <function-ref name="request" scoped="" ref="0x111a33020"/>
        <function-ref name="granted" scoped="" ref="0x111a331b0"/>
        <function-ref name="isOwner" scoped="" ref="0x111a33340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x111a2e510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x111a2e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111a2e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x111a6c680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x111a6c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111a6ca00"/>
        <function-ref name="sendDone" scoped="" ref="0x111a6cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x111a29bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x111a29bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111a28020"/>
        <function-ref name="writeDone" scoped="" ref="0x111a281b0"/>
        <function-ref name="write" scoped="" ref="0x111a28340"/>
        <function-ref name="beginRead" scoped="" ref="0x111a284d0"/>
        <function-ref name="readDone" scoped="" ref="0x111a28660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111a2d920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111a2d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111a2dca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111a2de30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111a2a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x111a22080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x111a22080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x111a22400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x111a21020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x111a21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x111a213a0"/>
        <function-ref name="toIdle" scoped="" ref="0x111a21530"/>
        <function-ref name="isState" scoped="" ref="0x111a216c0"/>
        <function-ref name="isIdle" scoped="" ref="0x111a21850"/>
        <function-ref name="requestState" scoped="" ref="0x111a219e0"/>
        <function-ref name="forceState" scoped="" ref="0x111a21b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x111a24400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x111a24400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111a24780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111a24910"/>
        <function-ref name="request" scoped="" ref="0x111a24aa0"/>
        <function-ref name="granted" scoped="" ref="0x111a24c30"/>
        <function-ref name="isOwner" scoped="" ref="0x111a24dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x111a27020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x111a27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111a273a0"/>
        <function-ref name="write" scoped="" ref="0x111a27530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x111a27db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x111a27db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111a25180"/>
        <function-ref name="write" scoped="" ref="0x111a25310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111a21df0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111a21df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111a201c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111a20350"/>
        <function-ref name="led1On" scoped="" ref="0x111a204e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111a20670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111a20800"/>
        <function-ref name="get" scoped="" ref="0x111a20990"/>
        <function-ref name="led1Off" scoped="" ref="0x111a20b20"/>
        <function-ref name="led2Off" scoped="" ref="0x111a1a1b0"/>
        <function-ref name="set" scoped="" ref="0x111a20cb0"/>
        <function-ref name="led0On" scoped="" ref="0x111a20e40"/>
        <function-ref name="led2On" scoped="" ref="0x111a1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111a2a810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111a2a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111a2ab90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111a2ad20"/>
        <function-ref name="request" scoped="" ref="0x111a29020"/>
        <function-ref name="granted" scoped="" ref="0x111a291b0"/>
        <function-ref name="isOwner" scoped="" ref="0x111a29340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x111a67120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x111a67120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111a674a0"/>
        <function-ref name="runTask" scoped="" ref="0x111a67630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x111a25ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x111a25ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111a24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x111ab4770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x111ab4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x111ab4af0"/>
        <function-ref name="toIdle" scoped="" ref="0x111ab4c80"/>
        <function-ref name="isState" scoped="" ref="0x111ab4e10"/>
        <function-ref name="isIdle" scoped="" ref="0x111ab1020"/>
        <function-ref name="requestState" scoped="" ref="0x111ab11b0"/>
        <function-ref name="forceState" scoped="" ref="0x111ab1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x111ab0280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x111ab0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x111ab0600"/>
        <function-ref name="toIdle" scoped="" ref="0x111ab0790"/>
        <function-ref name="isState" scoped="" ref="0x111ab0920"/>
        <function-ref name="isIdle" scoped="" ref="0x111ab0ab0"/>
        <function-ref name="requestState" scoped="" ref="0x111ab0c40"/>
        <function-ref name="forceState" scoped="" ref="0x111ab0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111aab020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111aab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111aab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x111aabb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x111aabb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x111aaa020"/>
        <function-ref name="toIdle" scoped="" ref="0x111aaa1b0"/>
        <function-ref name="isState" scoped="" ref="0x111aaa340"/>
        <function-ref name="isIdle" scoped="" ref="0x111aaa4d0"/>
        <function-ref name="requestState" scoped="" ref="0x111aaa660"/>
        <function-ref name="forceState" scoped="" ref="0x111aaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x111cda020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x111cda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111cda3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x111cda530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x111ae68f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x111ae68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x111ae6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111ae7c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111ae7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111ae6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111ae61b0"/>
        <function-ref name="request" scoped="" ref="0x111ae6340"/>
        <function-ref name="granted" scoped="" ref="0x111ae64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x111ae6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112c07440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112c07440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112c077c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112c07950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x112c05d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x112c05d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112c04180"/>
        <function-ref name="sendDone" scoped="" ref="0x112c04310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x112c045a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x112c045a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x112c04920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x112c07be0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x112c07be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x112c05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112c08770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112c08770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112c08af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112c08c80"/>
        <function-ref name="request" scoped="" ref="0x112c08e10"/>
        <function-ref name="granted" scoped="" ref="0x112c07020"/>
        <function-ref name="isOwner" scoped="" ref="0x112c071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x112c052b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x112c052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x112c05630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x112c057c0"/>
        <function-ref name="splitRead" scoped="" ref="0x112c05950"/>
        <function-ref name="write" scoped="" ref="0x112c05ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x111ad36b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111ad36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111ad3a30"/>
        <function-ref name="configure" scoped="" ref="0x111ad3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x111ad1850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x111ad1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111ad1bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x111ad1d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x111acfa40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x111acfa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x111acfdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x111ad2020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x111ad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x111ad23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x111ad0690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x111ad0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111ad0a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111ad0ba0"/>
        <function-ref name="request" scoped="" ref="0x111ad0d30"/>
        <function-ref name="granted" scoped="" ref="0x111acf020"/>
        <function-ref name="isOwner" scoped="" ref="0x111acf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111ad4430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111ad4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111ad47b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111ad4940"/>
        <function-ref name="request" scoped="" ref="0x111ad4ad0"/>
        <function-ref name="granted" scoped="" ref="0x111ad4c60"/>
        <function-ref name="isOwner" scoped="" ref="0x111ad4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x111ad26a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x111ad26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x111ad2a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x111ad2bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x111ad2d40"/>
        <function-ref name="write" scoped="" ref="0x111ad1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x111acd2a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x111acd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111acd620"/>
        <function-ref name="txDone" scoped="" ref="0x111acd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x111b21250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111b21250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111b215f0"/>
        <function-ref name="configure" scoped="" ref="0x111b21780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x111b20c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x111b20c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111b1f020"/>
        <function-ref name="sendDone" scoped="" ref="0x111b1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x111b1e3e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x111b1e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x111b1e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x111b21a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x111b21a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x111b21d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x111b1ea50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x111b1ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x111b1edd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x111b1d020"/>
        <function-ref name="setUctl" scoped="" ref="0x111b1d1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x111b1d340"/>
        <function-ref name="setUrctl" scoped="" ref="0x111b1d4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x111b1d660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111b1d7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x111b1d980"/>
        <function-ref name="getUrctl" scoped="" ref="0x111b1db10"/>
        <function-ref name="resetUsart" scoped="" ref="0x111b1dca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x111b1de30"/>
        <function-ref name="disableIntr" scoped="" ref="0x111b1c020"/>
        <function-ref name="setUtctl" scoped="" ref="0x111b1c1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x111b1c440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111b1c5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x111b1c760"/>
        <function-ref name="isUartRx" scoped="" ref="0x111b1c8f0"/>
        <function-ref name="isUart" scoped="" ref="0x111b1ca80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x111b1cc10"/>
        <function-ref name="isSpi" scoped="" ref="0x111b1cda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x111b1b020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111b1b1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x111b1b340"/>
        <function-ref name="enableIntr" scoped="" ref="0x111b1b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x111b1b660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111b1b9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x111b1bb80"/>
        <function-ref name="setUbr" scoped="" ref="0x111b1bd10"/>
        <function-ref name="tx" scoped="" ref="0x111b1a020"/>
        <function-ref name="getUctl" scoped="" ref="0x111b1a1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x111b1a340"/>
        <function-ref name="enableSpi" scoped="" ref="0x111b1a4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x111b1a660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111b1a7f0"/>
        <function-ref name="rx" scoped="" ref="0x111b1a980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111b1ab10"/>
        <function-ref name="isUartTx" scoped="" ref="0x111b1aca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111b1ae30"/>
        <function-ref name="disableSpi" scoped="" ref="0x111b19020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111b191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111b19c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111b19c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111b18020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111b181b0"/>
        <function-ref name="led1On" scoped="" ref="0x111b18340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111b184d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111b18660"/>
        <function-ref name="get" scoped="" ref="0x111b187f0"/>
        <function-ref name="led1Off" scoped="" ref="0x111b18980"/>
        <function-ref name="led2On" scoped="" ref="0x111b17020"/>
        <function-ref name="set" scoped="" ref="0x111b18ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x111b18b10"/>
        <function-ref name="led0On" scoped="" ref="0x111b18e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x111b1f5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x111b1f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111b1f950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111b1fae0"/>
        <function-ref name="request" scoped="" ref="0x111b1fc70"/>
        <function-ref name="granted" scoped="" ref="0x111b1fe00"/>
        <function-ref name="isOwner" scoped="" ref="0x111b1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111b22470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111b22470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111b22810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111b229a0"/>
        <function-ref name="request" scoped="" ref="0x111b22b30"/>
        <function-ref name="granted" scoped="" ref="0x111b22cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x111b22e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x111b20060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x111b20060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x111b203e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x111b20570"/>
        <function-ref name="splitRead" scoped="" ref="0x111b20700"/>
        <function-ref name="write" scoped="" ref="0x111b20890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x111b19480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x111b19480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111b19800"/>
        <function-ref name="txDone" scoped="" ref="0x111b19990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x111b172f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x111b172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111b17670"/>
        <function-ref name="runTask" scoped="" ref="0x111b17800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x111b605e0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x111b605e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111b60960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x111b61d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x111b61d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111b600e0"/>
        <function-ref name="txDone" scoped="" ref="0x111b60270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x111b65020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x111b65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x111b653a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x111b65530"/>
        <function-ref name="setUctl" scoped="" ref="0x111b656c0"/>
        <function-ref name="enableUart" scoped="" ref="0x111b65850"/>
        <function-ref name="setUrctl" scoped="" ref="0x111b659e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x111b65b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111b65d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x111b64020"/>
        <function-ref name="getUrctl" scoped="" ref="0x111b641b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x111b64340"/>
        <function-ref name="getUmctl" scoped="" ref="0x111b644d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x111b64660"/>
        <function-ref name="setUtctl" scoped="" ref="0x111b647f0"/>
        <function-ref name="getUbr" scoped="" ref="0x111b64a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111b64c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x111b64da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x111b63020"/>
        <function-ref name="isUart" scoped="" ref="0x111b631b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x111b63340"/>
        <function-ref name="isSpi" scoped="" ref="0x111b634d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x111b63660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111b637f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x111b63980"/>
        <function-ref name="enableIntr" scoped="" ref="0x111b63b10"/>
        <function-ref name="getMode" scoped="" ref="0x111b63ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111b62220"/>
        <function-ref name="clrIntr" scoped="" ref="0x111b623b0"/>
        <function-ref name="setUbr" scoped="" ref="0x111b62540"/>
        <function-ref name="tx" scoped="" ref="0x111b626d0"/>
        <function-ref name="getUctl" scoped="" ref="0x111b62860"/>
        <function-ref name="disableUart" scoped="" ref="0x111b629f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x111b62b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x111b62d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111b61020"/>
        <function-ref name="rx" scoped="" ref="0x111b611b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111b61340"/>
        <function-ref name="isUartTx" scoped="" ref="0x111b614d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111b61660"/>
        <function-ref name="disableSpi" scoped="" ref="0x111b617f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111b61980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x111b7eb20" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x111b7eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111b7d020"/>
        <function-ref name="isInput" scoped="" ref="0x111b7d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x111b7d340"/>
        <function-ref name="toggle" scoped="" ref="0x111b7d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x111b7d660"/>
        <function-ref name="getResistor" scoped="" ref="0x111b7d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111b7d980"/>
        <function-ref name="get" scoped="" ref="0x111b7db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111b7dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x111b7de30"/>
        <function-ref name="set" scoped="" ref="0x111b7c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111b7c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111b7c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111b7c5d0"/>
        <function-ref name="clr" scoped="" ref="0x111b7c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x111b58780" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x111b58780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111b58b00"/>
        <function-ref name="txDone" scoped="" ref="0x111b58c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x111b7cb20" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x111b7cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111b7b020"/>
        <function-ref name="isInput" scoped="" ref="0x111b7b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x111b7b340"/>
        <function-ref name="toggle" scoped="" ref="0x111b7b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x111b7b660"/>
        <function-ref name="getResistor" scoped="" ref="0x111b7b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111b7b980"/>
        <function-ref name="get" scoped="" ref="0x111b7bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111b7bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x111b7be30"/>
        <function-ref name="set" scoped="" ref="0x111b7a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111b7a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111b7a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111b7a5d0"/>
        <function-ref name="clr" scoped="" ref="0x111b7a760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x111b7ab20" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x111b7ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111b79020"/>
        <function-ref name="isInput" scoped="" ref="0x111b791b0"/>
        <function-ref name="setResistor" scoped="" ref="0x111b79340"/>
        <function-ref name="toggle" scoped="" ref="0x111b794d0"/>
        <function-ref name="isOutput" scoped="" ref="0x111b79660"/>
        <function-ref name="getResistor" scoped="" ref="0x111b797f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111b79980"/>
        <function-ref name="get" scoped="" ref="0x111b79b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111b79ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x111b79e30"/>
        <function-ref name="set" scoped="" ref="0x111b78020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111b781b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111b78340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111b785d0"/>
        <function-ref name="clr" scoped="" ref="0x111b78760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x111b5fc70" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x111b5fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x111b5c020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x111b5c1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x111b5c340"/>
        <function-ref name="enableUart" scoped="" ref="0x111b5c4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x111b5c660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x111b5c7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111b5c980"/>
        <function-ref name="getUtctl" scoped="" ref="0x111b5cb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x111b5cca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x111b5ce30"/>
        <function-ref name="getUmctl" scoped="" ref="0x111b5b020"/>
        <function-ref name="disableIntr" scoped="" ref="0x111b5b1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x111b5b340"/>
        <function-ref name="getUbr" scoped="" ref="0x111b5b5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111b5b760"/>
        <function-ref name="setUmctl" scoped="" ref="0x111b5b8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x111b5ba80"/>
        <function-ref name="isUart" scoped="" ref="0x111b5bc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x111b5bda0"/>
        <function-ref name="isSpi" scoped="" ref="0x111b5a020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x111b5a1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111b5a340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x111b5a4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x111b5a660"/>
        <function-ref name="getMode" scoped="" ref="0x111b5a7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111b5ab80"/>
        <function-ref name="clrIntr" scoped="" ref="0x111b5ad10"/>
        <function-ref name="setUbr" scoped="" ref="0x111b59020"/>
        <function-ref name="tx" scoped="" ref="0x111b591b0"/>
        <function-ref name="getUctl" scoped="" ref="0x111b59340"/>
        <function-ref name="disableUart" scoped="" ref="0x111b594d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x111b59660"/>
        <function-ref name="setModeUart" scoped="" ref="0x111b597f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111b59980"/>
        <function-ref name="rx" scoped="" ref="0x111b59b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111b59ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x111b59e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111b58020"/>
        <function-ref name="disableSpi" scoped="" ref="0x111b581b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111b58340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x111b87d10" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x111b87d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x111b560e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x111b56270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x111b56400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x111b56590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x111b56720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x111b568b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x111b56a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x111b56bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x111b56d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111b55020"/>
        <function-ref name="getData" scoped="" ref="0x111b551b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111b55340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111b554d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x111b55760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x111b558f0"/>
        <function-ref name="getIV" scoped="" ref="0x111b55a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x111b55c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x111b55da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111b86020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x111b861b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x111b86340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111b864d0"/>
        <function-ref name="isI2C" scoped="" ref="0x111b86660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111b867f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x111b86980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x111b86d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x111b85020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x111b851b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x111b85340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x111b854d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x111b85660"/>
        <function-ref name="disableI2C" scoped="" ref="0x111b857f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x111b85980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x111b85b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x111b85ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x111b85e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x111b84020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x111b841b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x111b84340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x111b844d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x111b84660"/>
        <function-ref name="setWordMode" scoped="" ref="0x111b847f0"/>
        <function-ref name="setData" scoped="" ref="0x111b84980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x111b84b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x111b84ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x111b84e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x111b83020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x111b831b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x111b83340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x111b838d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x111b83a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x111b83bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x111b83d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x111b82020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x111b821b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x111b82340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x111b824d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x111b82660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x111b827f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x111b80b20" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x111b80b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111b7f020"/>
        <function-ref name="isInput" scoped="" ref="0x111b7f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x111b7f340"/>
        <function-ref name="toggle" scoped="" ref="0x111b7f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x111b7f660"/>
        <function-ref name="getResistor" scoped="" ref="0x111b7f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111b7f980"/>
        <function-ref name="get" scoped="" ref="0x111b7fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111b7fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x111b7fe30"/>
        <function-ref name="set" scoped="" ref="0x111b7e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111b7e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111b7e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111b7e5d0"/>
        <function-ref name="clr" scoped="" ref="0x111b7e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x111b57150" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x111b57150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111b574d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x111b82bb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x111b82bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111b81020"/>
        <function-ref name="isInput" scoped="" ref="0x111b811b0"/>
        <function-ref name="setResistor" scoped="" ref="0x111b81340"/>
        <function-ref name="toggle" scoped="" ref="0x111b814d0"/>
        <function-ref name="isOutput" scoped="" ref="0x111b81660"/>
        <function-ref name="getResistor" scoped="" ref="0x111b817f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111b81980"/>
        <function-ref name="get" scoped="" ref="0x111b81b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111b81ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x111b81e30"/>
        <function-ref name="set" scoped="" ref="0x111b80020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111b801b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111b80340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111b805d0"/>
        <function-ref name="clr" scoped="" ref="0x111b80760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112bfdd90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112bfdd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112bfc180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112bfc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x112c98020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x112c98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x112c983a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x112c915d0" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x112c915d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x112c91950"/>
        <function-ref name="configure" scoped="" ref="0x112c91ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x112c98630" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x112c98630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x112c989b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x112c98b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x112c98cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x112c98e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x112c97020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x112c971b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x112c97340"/>
        <function-ref name="getStopBit" scoped="" ref="0x112c974d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x112c97660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x112c977f0"/>
        <function-ref name="getData" scoped="" ref="0x112c97980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x112c97b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x112c97ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x112c96020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x112c961b0"/>
        <function-ref name="getIV" scoped="" ref="0x112c96340"/>
        <function-ref name="enableI2C" scoped="" ref="0x112c964d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x112c96660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x112c967f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x112c96980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x112c96b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x112c96ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x112c96e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x112c95020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x112c951b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x112c95540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x112c956d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x112c95860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x112c959f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x112c95b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x112c95d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x112c94020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x112c941b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x112c94340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x112c944d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x112c94660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x112c947f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x112c94980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x112c94b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x112c94ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x112c94e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x112c93020"/>
        <function-ref name="setData" scoped="" ref="0x112c931b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x112c93340"/>
        <function-ref name="getClockSource" scoped="" ref="0x112c934d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x112c93660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x112c937f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x112c93980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x112c93b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x112c92420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x112c925b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x112c92740"/>
        <function-ref name="setStopBit" scoped="" ref="0x112c928d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x112c92a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x112c92bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x112c92d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x112c91020"/>
        <function-ref name="setStartByte" scoped="" ref="0x112c911b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x112c91340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x112bf7760" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x112bf7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x112bf7ae0"/>
        <function-ref name="txDone" scoped="" ref="0x112bf7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112bfd140" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112bfd140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112bfd4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112bfd650"/>
        <function-ref name="request" scoped="" ref="0x112bfd7e0"/>
        <function-ref name="granted" scoped="" ref="0x112bfd970"/>
        <function-ref name="isOwner" scoped="" ref="0x112bfdb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x112bfcd40" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x112bfcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x112bfb0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x112bfb270"/>
        <function-ref name="setUctl" scoped="" ref="0x112bfb400"/>
        <function-ref name="enableUart" scoped="" ref="0x112bfb590"/>
        <function-ref name="setUrctl" scoped="" ref="0x112bfb720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x112bfb8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x112bfba40"/>
        <function-ref name="getUtctl" scoped="" ref="0x112bfbbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x112bfbd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x112bfa020"/>
        <function-ref name="getUmctl" scoped="" ref="0x112bfa1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x112bfa340"/>
        <function-ref name="setUtctl" scoped="" ref="0x112bfa4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x112bfa760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x112bfa8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x112bfaa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x112bfac10"/>
        <function-ref name="isUart" scoped="" ref="0x112bfada0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x112bf9020"/>
        <function-ref name="isSpi" scoped="" ref="0x112bf91b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x112bf9340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x112bf94d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x112bf9660"/>
        <function-ref name="enableIntr" scoped="" ref="0x112bf97f0"/>
        <function-ref name="getMode" scoped="" ref="0x112bf9980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x112bf9d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x112bf8020"/>
        <function-ref name="setUbr" scoped="" ref="0x112bf81b0"/>
        <function-ref name="tx" scoped="" ref="0x112bf8340"/>
        <function-ref name="getUctl" scoped="" ref="0x112bf84d0"/>
        <function-ref name="disableUart" scoped="" ref="0x112bf8660"/>
        <function-ref name="enableSpi" scoped="" ref="0x112bf87f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x112bf8980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x112bf8b10"/>
        <function-ref name="rx" scoped="" ref="0x112bf8ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x112bf8e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x112bf7020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x112bf71b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x112bf7340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x112bf74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x112bfc5a0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112bfc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x112bfc920"/>
        <function-ref name="userId" scoped="" ref="0x112bfcab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111c412c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111c412c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111c41640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111c417d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111c3f8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111c3f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111c3fc20"/>
        <function-ref name="configure" scoped="" ref="0x111c3fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x111c444d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x111c444d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111c44850"/>
        <function-ref name="txDone" scoped="" ref="0x111c449e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111c42020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111c42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111c423a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111c42530"/>
        <function-ref name="request" scoped="" ref="0x111c426c0"/>
        <function-ref name="granted" scoped="" ref="0x111c42850"/>
        <function-ref name="isOwner" scoped="" ref="0x111c429e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x111c433f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x111c433f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111c43770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x111c41ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111c41ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111c41e50"/>
        <function-ref name="userId" scoped="" ref="0x111c3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x111c3ce50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111c3ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111c3b210"/>
        <function-ref name="userId" scoped="" ref="0x111c3b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x111c3d060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x111c3d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111c3d400"/>
        <function-ref name="txDone" scoped="" ref="0x111c3d590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x111c3c840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x111c3c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111c3cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x111c3d990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x111c3d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111c3dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x111c3c060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x111c3c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x111c3c3e0"/>
        <function-ref name="txDone" scoped="" ref="0x111c3c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x111c38850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x111c38850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x111c38bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111c38d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x111c35570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x111c35570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x111c35910"/>
        <function-ref name="configure" scoped="" ref="0x111c35aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x111c36020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x111c36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111c363a0"/>
        <function-ref name="requested" scoped="" ref="0x111c36530"/>
        <function-ref name="granted" scoped="" ref="0x111c366c0"/>
        <function-ref name="isOwner" scoped="" ref="0x111c36850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x111c369e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111c39a80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111c39a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111c39e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111c38020"/>
        <function-ref name="request" scoped="" ref="0x111c381b0"/>
        <function-ref name="granted" scoped="" ref="0x111c38340"/>
        <function-ref name="isOwner" scoped="" ref="0x111c384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x111c36c30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x111c36c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x111c35020"/>
        <function-ref name="userId" scoped="" ref="0x111c351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x112cc7020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x112cc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x112cc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x112cc7630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x112cc7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x112cc79b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x112cc7b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x112cc7cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x112cc7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x112cc46c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x112cc46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x112cc4a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112cc4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x112cc1400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x112cc1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x112cc17a0"/>
        <function-ref name="configure" scoped="" ref="0x112cc1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x112cc1bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x112cc1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x112cc0020"/>
        <function-ref name="isEmpty" scoped="" ref="0x112cc01b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x112cc0340"/>
        <function-ref name="dequeue" scoped="" ref="0x112cc04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x112cc4e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x112cc4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112cc21e0"/>
        <function-ref name="requested" scoped="" ref="0x112cc2370"/>
        <function-ref name="granted" scoped="" ref="0x112cc2500"/>
        <function-ref name="isOwner" scoped="" ref="0x112cc2690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x112cc2820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x112cc0720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x112cc0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x112cc0aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x112cc0c30"/>
        <function-ref name="led1On" scoped="" ref="0x112cc0dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x112cbf020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x112cbf1b0"/>
        <function-ref name="get" scoped="" ref="0x112cbf340"/>
        <function-ref name="led1Off" scoped="" ref="0x112cbf4d0"/>
        <function-ref name="led0On" scoped="" ref="0x112cbfb10"/>
        <function-ref name="set" scoped="" ref="0x112cbf7f0"/>
        <function-ref name="led2On" scoped="" ref="0x112cbf660"/>
        <function-ref name="led2Off" scoped="" ref="0x112cbf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x112cc5850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x112cc5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112cc5bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112cc5d80"/>
        <function-ref name="request" scoped="" ref="0x112cc4020"/>
        <function-ref name="granted" scoped="" ref="0x112cc41b0"/>
        <function-ref name="isOwner" scoped="" ref="0x112cc4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x112cc2a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x112cc2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x112cc2df0"/>
        <function-ref name="userId" scoped="" ref="0x112cc1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x112cbfde0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x112cbfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x112cbe180"/>
        <function-ref name="runTask" scoped="" ref="0x112cbe310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x111c2e540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x111c2e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x111c2e8c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x111c2ea50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x111c2ebe0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x111c2ed70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x111c2b020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x111c2b1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x111c2b340"/>
        <function-ref name="getStopBit" scoped="" ref="0x111c2b4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x111c2b660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111c2b7f0"/>
        <function-ref name="getData" scoped="" ref="0x111c2b980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111c2bb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111c2bca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x111c2a020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x111c2a1b0"/>
        <function-ref name="getIV" scoped="" ref="0x111c2a340"/>
        <function-ref name="enableI2C" scoped="" ref="0x111c2a4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x111c2a660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111c2a7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x111c2a980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x111c2ab10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111c2aca0"/>
        <function-ref name="isI2C" scoped="" ref="0x111c2ae30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111c29020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x111c291b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x111c29540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x111c296d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x111c29860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x111c299f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x111c29b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x111c29d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x111c28020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x111c281b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x111c28340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x111c284d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x111c28660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x111c287f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x111c28980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x111c28b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x111c28ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x111c28e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x111c27020"/>
        <function-ref name="setData" scoped="" ref="0x111c271b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x111c27340"/>
        <function-ref name="getClockSource" scoped="" ref="0x111c274d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x111c27660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x111c277f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x111c27980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x111c27b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x111c26420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x111c265b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x111c26740"/>
        <function-ref name="setStopBit" scoped="" ref="0x111c268d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x111c26a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x111c26bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x111c26d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x111c25020"/>
        <function-ref name="setStartByte" scoped="" ref="0x111c251b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x111c25340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x111c76250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x111c76250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x111c765d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x111c76760"/>
        <function-ref name="setUctl" scoped="" ref="0x111c768f0"/>
        <function-ref name="enableUart" scoped="" ref="0x111c76a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x111c76c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x111c76da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x111c75020"/>
        <function-ref name="getUtctl" scoped="" ref="0x111c751b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x111c75340"/>
        <function-ref name="resetUsart" scoped="" ref="0x111c754d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x111c75660"/>
        <function-ref name="disableIntr" scoped="" ref="0x111c757f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x111c75980"/>
        <function-ref name="getUbr" scoped="" ref="0x111c75c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x111c75da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x111c74020"/>
        <function-ref name="isUartRx" scoped="" ref="0x111c741b0"/>
        <function-ref name="isUart" scoped="" ref="0x111c74340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x111c744d0"/>
        <function-ref name="isSpi" scoped="" ref="0x111c74660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x111c747f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x111c74980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x111c74b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x111c74ca0"/>
        <function-ref name="getMode" scoped="" ref="0x111c74e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x111c73220"/>
        <function-ref name="clrIntr" scoped="" ref="0x111c733b0"/>
        <function-ref name="setUbr" scoped="" ref="0x111c73540"/>
        <function-ref name="tx" scoped="" ref="0x111c736d0"/>
        <function-ref name="getUctl" scoped="" ref="0x111c73860"/>
        <function-ref name="disableUart" scoped="" ref="0x111c739f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x111c73b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x111c73d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x111c72020"/>
        <function-ref name="rx" scoped="" ref="0x111c721b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x111c72340"/>
        <function-ref name="isUartTx" scoped="" ref="0x111c724d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x111c72660"/>
        <function-ref name="disableSpi" scoped="" ref="0x111c727f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x111c72980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x111c70cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x111c70cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111c6f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x111c6f230"/>
        <function-ref name="setResistor" scoped="" ref="0x111c6f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x111c6f550"/>
        <function-ref name="isOutput" scoped="" ref="0x111c6f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x111c6f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x111c6fa00"/>
        <function-ref name="get" scoped="" ref="0x111c6fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111c6fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x111c6e020"/>
        <function-ref name="set" scoped="" ref="0x111c6e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111c6e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111c6e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111c6e760"/>
        <function-ref name="clr" scoped="" ref="0x111c6e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x111c22430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x111c22430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x111c227b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x111c22940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x111c22ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x111c22c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x111c22df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x111c7c020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x111c7c1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x111c7c340"/>
        <function-ref name="setClockSource" scoped="" ref="0x111c7c4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x111c7c660"/>
        <function-ref name="getData" scoped="" ref="0x111c7c7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x111c7c980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x111c7cb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x111c7cda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x111c7b020"/>
        <function-ref name="getIV" scoped="" ref="0x111c7b1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x111c7b340"/>
        <function-ref name="setStartBit" scoped="" ref="0x111c7b4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x111c7b660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x111c7b7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x111c7b980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x111c7bb10"/>
        <function-ref name="isI2C" scoped="" ref="0x111c7bca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x111c7be30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x111c7a020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x111c7a3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x111c7a540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x111c7a6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x111c7a860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x111c7a9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x111c7ab80"/>
        <function-ref name="disableI2C" scoped="" ref="0x111c7ad10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x111c79020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x111c791b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x111c79340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x111c794d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x111c79660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x111c797f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x111c79980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x111c79b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x111c79ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x111c79e30"/>
        <function-ref name="setData" scoped="" ref="0x111c78020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x111c781b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x111c78340"/>
        <function-ref name="getWordMode" scoped="" ref="0x111c784d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x111c78660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x111c787f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x111c78980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x111c77020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x111c771b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x111c77340"/>
        <function-ref name="setStopBit" scoped="" ref="0x111c774d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x111c77660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x111c777f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x111c77980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x111c77b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x111c77ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x111c77e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x111c72d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x111c72d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111c710e0"/>
        <function-ref name="isInput" scoped="" ref="0x111c71270"/>
        <function-ref name="setResistor" scoped="" ref="0x111c71400"/>
        <function-ref name="toggle" scoped="" ref="0x111c71590"/>
        <function-ref name="isOutput" scoped="" ref="0x111c71720"/>
        <function-ref name="getResistor" scoped="" ref="0x111c718b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111c71a40"/>
        <function-ref name="get" scoped="" ref="0x111c71bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111c71d60"/>
        <function-ref name="getRaw" scoped="" ref="0x111c70020"/>
        <function-ref name="set" scoped="" ref="0x111c701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111c70340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111c704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111c70760"/>
        <function-ref name="clr" scoped="" ref="0x111c708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111d9ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111d9ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d99210"/>
        <function-ref name="write" scoped="" ref="0x111d993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111d45da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111d45da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d43180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111d9db50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111d9db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d9c020"/>
        <function-ref name="write" scoped="" ref="0x111d9c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111d98670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111d98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d989f0"/>
        <function-ref name="write" scoped="" ref="0x111d98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111d90e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111d90e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8f210"/>
        <function-ref name="write" scoped="" ref="0x111d8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111d98e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111d98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d96210"/>
        <function-ref name="write" scoped="" ref="0x111d963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x111d842f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x111d842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d84670"/>
        <function-ref name="write" scoped="" ref="0x111d84800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x111d862f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111d862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d86670"/>
        <function-ref name="write" scoped="" ref="0x111d86800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111d42120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111d42120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d424a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111d8c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111d8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8c9f0"/>
        <function-ref name="write" scoped="" ref="0x111d8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x111d872f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111d872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d87670"/>
        <function-ref name="write" scoped="" ref="0x111d87800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111d9cc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111d9cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d9b020"/>
        <function-ref name="write" scoped="" ref="0x111d9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111d9bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111d9bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d9a020"/>
        <function-ref name="write" scoped="" ref="0x111d9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111d92670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111d92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d929f0"/>
        <function-ref name="write" scoped="" ref="0x111d92b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x111d94e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x111d94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d93210"/>
        <function-ref name="write" scoped="" ref="0x111d933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111d96670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111d96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d969f0"/>
        <function-ref name="write" scoped="" ref="0x111d96b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111d46760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111d46760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111d46ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111d46c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111d46e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111d41aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111d41aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d41e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111d40120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111d40120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d405a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111d8ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111d8ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8bdf0"/>
        <function-ref name="write" scoped="" ref="0x111d8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111d40870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111d40870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d40bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111d87ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111d87ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d87e50"/>
        <function-ref name="write" scoped="" ref="0x111d86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111d42dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111d42dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d41180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111d8de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111d8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8c210"/>
        <function-ref name="write" scoped="" ref="0x111d8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x111d9b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x111d9b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d9b800"/>
        <function-ref name="write" scoped="" ref="0x111d9b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x111d9c480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111d9c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d9c800"/>
        <function-ref name="write" scoped="" ref="0x111d9c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111d45750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111d45750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d45ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111d8ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111d8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8d210"/>
        <function-ref name="write" scoped="" ref="0x111d8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111d8f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111d8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8f9f0"/>
        <function-ref name="write" scoped="" ref="0x111d8fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111d8d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111d8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8d9f0"/>
        <function-ref name="write" scoped="" ref="0x111d8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111d85ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111d85ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d85e50"/>
        <function-ref name="write" scoped="" ref="0x111d84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111d86ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111d86ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d86e50"/>
        <function-ref name="write" scoped="" ref="0x111d85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111d93670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111d93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d939f0"/>
        <function-ref name="write" scoped="" ref="0x111d93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111d8fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111d8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8e210"/>
        <function-ref name="write" scoped="" ref="0x111d8e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111d88ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111d88ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d88e50"/>
        <function-ref name="write" scoped="" ref="0x111d87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111d95670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111d95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d959f0"/>
        <function-ref name="write" scoped="" ref="0x111d95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111d84ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111d84ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111d84e50"/>
        <function-ref name="writeDone" scoped="" ref="0x111d82020"/>
        <function-ref name="write" scoped="" ref="0x111d821b0"/>
        <function-ref name="beginRead" scoped="" ref="0x111d82340"/>
        <function-ref name="readDone" scoped="" ref="0x111d824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111d45100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111d45100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d45480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x111d9d370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x111d9d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d9d6f0"/>
        <function-ref name="write" scoped="" ref="0x111d9d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111d9a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111d9a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d9a800"/>
        <function-ref name="write" scoped="" ref="0x111d9a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111d92e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111d92e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d90210"/>
        <function-ref name="write" scoped="" ref="0x111d903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x111d96e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x111d96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d95210"/>
        <function-ref name="write" scoped="" ref="0x111d953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111d90670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111d90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d909f0"/>
        <function-ref name="write" scoped="" ref="0x111d90b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111d99670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111d99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d999f0"/>
        <function-ref name="write" scoped="" ref="0x111d99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111d43450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111d43450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d437d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x111d99e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111d99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d98210"/>
        <function-ref name="write" scoped="" ref="0x111d983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111d47a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111d47a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111d47e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111d46020"/>
        <function-ref name="request" scoped="" ref="0x111d461b0"/>
        <function-ref name="granted" scoped="" ref="0x111d46340"/>
        <function-ref name="isOwner" scoped="" ref="0x111d464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111d3f020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111d3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d3f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111d3fcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111d3fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d9d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x111d882f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x111d882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d88670"/>
        <function-ref name="write" scoped="" ref="0x111d88800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111d8aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111d8aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8ae50"/>
        <function-ref name="write" scoped="" ref="0x111d88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111d41450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111d41450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d417d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x111d8a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111d8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8a670"/>
        <function-ref name="write" scoped="" ref="0x111d8a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x111d852f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x111d852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d85670"/>
        <function-ref name="write" scoped="" ref="0x111d85800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111d93e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111d93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d92210"/>
        <function-ref name="write" scoped="" ref="0x111d923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111d8e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111d8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8e9f0"/>
        <function-ref name="write" scoped="" ref="0x111d8eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111d43aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111d43aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d43e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111d42770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111d42770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d42af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x111d95e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x111d95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d94210"/>
        <function-ref name="write" scoped="" ref="0x111d943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111d3f670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111d3f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d3f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111d94670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111d94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d949f0"/>
        <function-ref name="write" scoped="" ref="0x111d94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111d8ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111d8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d8b610"/>
        <function-ref name="write" scoped="" ref="0x111d8b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111d827a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111d827a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111d82b20"/>
        <function-ref name="writeDone" scoped="" ref="0x111d82cb0"/>
        <function-ref name="write" scoped="" ref="0x111d82e40"/>
        <function-ref name="beginRead" scoped="" ref="0x111d81020"/>
        <function-ref name="readDone" scoped="" ref="0x111d811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111dcdc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111dcdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dcc210"/>
        <function-ref name="write" scoped="" ref="0x111dcc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111d78da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111d78da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d77180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111d71b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111d71b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d70020"/>
        <function-ref name="write" scoped="" ref="0x111d701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111dcb670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111dcb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dcb9f0"/>
        <function-ref name="write" scoped="" ref="0x111dcbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111dc4e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111dc4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc3210"/>
        <function-ref name="write" scoped="" ref="0x111dc33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111dcbe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111dcbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dca210"/>
        <function-ref name="write" scoped="" ref="0x111dca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x111db72f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x111db72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111db7670"/>
        <function-ref name="write" scoped="" ref="0x111db7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x111db92f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111db92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111db9670"/>
        <function-ref name="write" scoped="" ref="0x111db9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111d76120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111d76120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d764a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111dbf670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111dbf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbf9f0"/>
        <function-ref name="write" scoped="" ref="0x111dbfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x111dbb2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111dbb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbb670"/>
        <function-ref name="write" scoped="" ref="0x111dbb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111d70c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111d70c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6f020"/>
        <function-ref name="write" scoped="" ref="0x111d6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111d6fc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111d6fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dcd020"/>
        <function-ref name="write" scoped="" ref="0x111dcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111dc5670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111dc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc59f0"/>
        <function-ref name="write" scoped="" ref="0x111dc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x111dc7e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x111dc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc6210"/>
        <function-ref name="write" scoped="" ref="0x111dc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111dca670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111dca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dca9f0"/>
        <function-ref name="write" scoped="" ref="0x111dcab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111d79760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111d79760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111d79ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111d79c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111d79e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111d74aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111d74aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d74e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111d73120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111d73120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d735a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111dbea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111dbea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbedf0"/>
        <function-ref name="write" scoped="" ref="0x111dbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111d73870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111d73870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d73bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111dbbad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111dbbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbbe50"/>
        <function-ref name="write" scoped="" ref="0x111db9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111d76dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111d76dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d74180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111dc0e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111dc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbf210"/>
        <function-ref name="write" scoped="" ref="0x111dbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x111d6f480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x111d6f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d6f800"/>
        <function-ref name="write" scoped="" ref="0x111d6f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x111d70480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111d70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d70800"/>
        <function-ref name="write" scoped="" ref="0x111d70990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111d78750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111d78750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d78ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111dc2e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111dc2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc0210"/>
        <function-ref name="write" scoped="" ref="0x111dc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111dc3670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111dc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc39f0"/>
        <function-ref name="write" scoped="" ref="0x111dc3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111dc0670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111dc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc09f0"/>
        <function-ref name="write" scoped="" ref="0x111dc0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111db8ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111db8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111db8e50"/>
        <function-ref name="write" scoped="" ref="0x111db7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111db9ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111db9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111db9e50"/>
        <function-ref name="write" scoped="" ref="0x111db8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111dc6670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111dc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc69f0"/>
        <function-ref name="write" scoped="" ref="0x111dc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111dc3e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111dc3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc2210"/>
        <function-ref name="write" scoped="" ref="0x111dc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111dbcad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111dbcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbce50"/>
        <function-ref name="write" scoped="" ref="0x111dbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111dc9670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111dc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc99f0"/>
        <function-ref name="write" scoped="" ref="0x111dc9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111db7ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111db7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111db7e50"/>
        <function-ref name="writeDone" scoped="" ref="0x111db6020"/>
        <function-ref name="write" scoped="" ref="0x111db61b0"/>
        <function-ref name="beginRead" scoped="" ref="0x111db6340"/>
        <function-ref name="readDone" scoped="" ref="0x111db64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111d78100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111d78100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d78480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x111d71370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x111d71370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111d716f0"/>
        <function-ref name="write" scoped="" ref="0x111d71880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111dcd480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111dcd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dcd800"/>
        <function-ref name="write" scoped="" ref="0x111dcd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111dc5e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111dc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc4210"/>
        <function-ref name="write" scoped="" ref="0x111dc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x111dcae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x111dcae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc9210"/>
        <function-ref name="write" scoped="" ref="0x111dc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111dc4670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111dc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc49f0"/>
        <function-ref name="write" scoped="" ref="0x111dc4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111dcc670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111dcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dcc9f0"/>
        <function-ref name="write" scoped="" ref="0x111dccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111d77450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111d77450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d777d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x111dcce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111dcce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dcb210"/>
        <function-ref name="write" scoped="" ref="0x111dcb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111d7a9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111d7a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111d7ad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111d79020"/>
        <function-ref name="request" scoped="" ref="0x111d791b0"/>
        <function-ref name="granted" scoped="" ref="0x111d79340"/>
        <function-ref name="isOwner" scoped="" ref="0x111d794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111d72020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111d72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111d72cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111d72cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d710a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x111dbc2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x111dbc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbc670"/>
        <function-ref name="write" scoped="" ref="0x111dbc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111dbdad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111dbdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbde50"/>
        <function-ref name="write" scoped="" ref="0x111dbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111d74450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111d74450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d747d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x111dbd2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111dbd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbd670"/>
        <function-ref name="write" scoped="" ref="0x111dbd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x111db82f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x111db82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111db8670"/>
        <function-ref name="write" scoped="" ref="0x111db8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111dc6e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111dc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc5210"/>
        <function-ref name="write" scoped="" ref="0x111dc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111dc2670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111dc2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc29f0"/>
        <function-ref name="write" scoped="" ref="0x111dc2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111d77aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111d77aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d77e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111d76770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111d76770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d76af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x111dc9e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x111dc9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc7210"/>
        <function-ref name="write" scoped="" ref="0x111dc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111d72670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111d72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111d729f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111dc7670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111dc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dc79f0"/>
        <function-ref name="write" scoped="" ref="0x111dc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111dbfe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111dbfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111dbe610"/>
        <function-ref name="write" scoped="" ref="0x111dbe7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111db67a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111db67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111db6b20"/>
        <function-ref name="writeDone" scoped="" ref="0x111db6cb0"/>
        <function-ref name="write" scoped="" ref="0x111db6e40"/>
        <function-ref name="beginRead" scoped="" ref="0x111db5020"/>
        <function-ref name="readDone" scoped="" ref="0x111db51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x111daeb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x111daeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x111dab020"/>
        <function-ref name="changed" scoped="" ref="0x111dab1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x111dab340"/>
        <function-ref name="setAddress" scoped="" ref="0x111dab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x111dadd20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x111dadd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x111df70e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x111df3310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x111df3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x111df3690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x111df0880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x111df0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111df0c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x111de6020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x111de6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111de63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x111ddcbd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x111ddcbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111ddf020"/>
        <function-ref name="write" scoped="" ref="0x111ddf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x111ddf530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x111ddf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111ddf8b0"/>
        <function-ref name="stop" scoped="" ref="0x111ddfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x111de0140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x111de0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111de04c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x111de5c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x111de5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111e2d020"/>
        <function-ref name="write" scoped="" ref="0x111e2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x111e2d540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x111e2d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e2d8c0"/>
        <function-ref name="isInput" scoped="" ref="0x111e2da50"/>
        <function-ref name="toggle" scoped="" ref="0x111e2dbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x111e2dd70"/>
        <function-ref name="get" scoped="" ref="0x111e2c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e2c1b0"/>
        <function-ref name="set" scoped="" ref="0x111e2c340"/>
        <function-ref name="clr" scoped="" ref="0x111e2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x111e24950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x111e24950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x111e27780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x111e29150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x111e29150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111e294d0"/>
        <function-ref name="write" scoped="" ref="0x111e29660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x111e299f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x111e299f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e29d70"/>
        <function-ref name="isInput" scoped="" ref="0x111e28020"/>
        <function-ref name="toggle" scoped="" ref="0x111e281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x111e28340"/>
        <function-ref name="get" scoped="" ref="0x111e284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e28660"/>
        <function-ref name="set" scoped="" ref="0x111e287f0"/>
        <function-ref name="clr" scoped="" ref="0x111e28980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x111e2bca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x111e2bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x111e03ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x111e00a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x111e00a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x111e548d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x111e53020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111e53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111e53e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111e52800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111e52340"/>
        <function-ref name="overflow" scoped="" ref="0x111e52cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x111e4d530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x111e4d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111e4c3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111e4cd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111e4c890"/>
        <function-ref name="overflow" scoped="" ref="0x111e4b260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x111e46020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x111e46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x111e463a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x111e46530"/>
        <function-ref name="enableEvents" scoped="" ref="0x111e466c0"/>
        <function-ref name="get" scoped="" ref="0x111e46850"/>
        <function-ref name="disableEvents" scoped="" ref="0x111e469e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111e46b70"/>
        <function-ref name="getMode" scoped="" ref="0x111e46d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111e45020"/>
        <function-ref name="overflow" scoped="" ref="0x111e451b0"/>
        <function-ref name="setMode" scoped="" ref="0x111e45340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x111e454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x111e4ae50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x111e4ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d03640"/>
            <typename><typedef-ref name="TMicro" ref="0x110d039b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111e49ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x111e47670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x111e471b0"/>
        <function-ref name="overflow" scoped="" ref="0x111e47b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x111e2e590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x111e2e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e2e910"/>
        <function-ref name="isInput" scoped="" ref="0x111e2eaa0"/>
        <function-ref name="toggle" scoped="" ref="0x111e2ec30"/>
        <function-ref name="isOutput" scoped="" ref="0x111e2edc0"/>
        <function-ref name="get" scoped="" ref="0x111e41020"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e411b0"/>
        <function-ref name="set" scoped="" ref="0x111e41340"/>
        <function-ref name="clr" scoped="" ref="0x111e414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x111e3fc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x111e3fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e3e020"/>
        <function-ref name="isInput" scoped="" ref="0x111e3e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x111e3e340"/>
        <function-ref name="toggle" scoped="" ref="0x111e3e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x111e3e660"/>
        <function-ref name="getResistor" scoped="" ref="0x111e3e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e3e980"/>
        <function-ref name="get" scoped="" ref="0x111e3eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x111e3eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x111e3ee30"/>
        <function-ref name="set" scoped="" ref="0x111e3d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x111e3d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x111e3d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x111e3d5d0"/>
        <function-ref name="clr" scoped="" ref="0x111e3d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x111e409e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x111e409e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e40d60"/>
        <function-ref name="isInput" scoped="" ref="0x111e3f020"/>
        <function-ref name="toggle" scoped="" ref="0x111e3f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x111e3f340"/>
        <function-ref name="get" scoped="" ref="0x111e3f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e3f660"/>
        <function-ref name="set" scoped="" ref="0x111e3f7f0"/>
        <function-ref name="clr" scoped="" ref="0x111e3f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111e42a20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111e42a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111e42da0"/>
        <function-ref name="stop" scoped="" ref="0x111e38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x111e8dcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x111e8dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x111e8b0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x111e8b230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x111e8b3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x111e8b550"/>
        <function-ref name="setCca" scoped="" ref="0x111e8b6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x111e8b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x111e88990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x111e88990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111e88d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x111e8d020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x111e8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111e8d3a0"/>
        <function-ref name="cancel" scoped="" ref="0x111e8d530"/>
        <function-ref name="modify" scoped="" ref="0x111e8d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x111e8d850"/>
        <function-ref name="resend" scoped="" ref="0x111e8d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111e906c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111e906c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111e90a40"/>
        <function-ref name="stop" scoped="" ref="0x111e90bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x111e8a150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x111e8a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111e8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x111e7f970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x111e7f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x111e7fcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x111e7fe80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x111e7e030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x111e7e1c0"/>
        <function-ref name="setCca" scoped="" ref="0x111e7e350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x111e7e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x111e76950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x111e76950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111e74020"/>
        <function-ref name="clear" scoped="" ref="0x111e74750"/>
        <function-ref name="isValid" scoped="" ref="0x111e75780"/>
        <function-ref name="set" scoped="" ref="0x111e74e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x111ec5020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111ec5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111ec53a0"/>
        <function-ref name="write" scoped="" ref="0x111ec5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x111ec5890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111ec5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111ec5c10"/>
        <function-ref name="write" scoped="" ref="0x111ec5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x111e7e900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x111e7e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111e7ec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x111e62530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111e62530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111e628b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x111e71880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x111e71880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x111e71c00"/>
        <function-ref name="disable" scoped="" ref="0x111e71d90"/>
        <function-ref name="captured" scoped="" ref="0x111e70020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x111e701b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x111e7dae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x111e7dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x111e79390"/>
        <function-ref name="fired" scoped="" ref="0x111e7a360"/>
        <function-ref name="startAt" scoped="" ref="0x111e7ace0"/>
        <function-ref name="isRunning" scoped="" ref="0x111e7a820"/>
        <function-ref name="getAlarm" scoped="" ref="0x111e79850"/>
        <function-ref name="start" scoped="" ref="0x111e7b970"/>
        <function-ref name="stop" scoped="" ref="0x111e7be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x111e79d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111e79d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111e770a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x111e77230"/>
        <function-ref name="getRssi" scoped="" ref="0x111e773c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x111e77550"/>
        <function-ref name="getPower" scoped="" ref="0x111e776e0"/>
        <function-ref name="getLqi" scoped="" ref="0x111e77870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x111e65550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111e65550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111e658d0"/>
        <function-ref name="write" scoped="" ref="0x111e65a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x111e65e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111e65e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111e631c0"/>
        <function-ref name="write" scoped="" ref="0x111e63350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x111ebfd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x111ebfd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111ec20e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x111ec2270"/>
        <function-ref name="sfd" scoped="" ref="0x111ec2400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x111e80bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x111e80bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x111e7f020"/>
        <function-ref name="cancel" scoped="" ref="0x111e7f1b0"/>
        <function-ref name="modify" scoped="" ref="0x111e7f340"/>
        <function-ref name="sendDone" scoped="" ref="0x111e7f4d0"/>
        <function-ref name="resend" scoped="" ref="0x111e7f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x111e67d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111e67d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111e660e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x111e66270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111e66400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x111e62c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111e62c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111ec7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x111e6a820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x111e6a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e6aba0"/>
        <function-ref name="isInput" scoped="" ref="0x111e6ad30"/>
        <function-ref name="toggle" scoped="" ref="0x111e69020"/>
        <function-ref name="isOutput" scoped="" ref="0x111e691b0"/>
        <function-ref name="get" scoped="" ref="0x111e69340"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e694d0"/>
        <function-ref name="set" scoped="" ref="0x111e69660"/>
        <function-ref name="clr" scoped="" ref="0x111e697f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111e81c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111e81c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111e80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x111e77bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x111e77bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x111e76020"/>
        <function-ref name="getHeader" scoped="" ref="0x111e761b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x111e76340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x111e6bbe0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111e6bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111e71020"/>
        <function-ref name="isSet" scoped="" ref="0x111e711b0"/>
        <function-ref name="cancel" scoped="" ref="0x111e71340"/>
        <function-ref name="set" scoped="" ref="0x111e714d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x111ec73e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111ec73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111ec7960"/>
        <function-ref name="write" scoped="" ref="0x111ec7af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x111e67020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x111e67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111e673a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111e67530"/>
        <function-ref name="request" scoped="" ref="0x111e676c0"/>
        <function-ref name="granted" scoped="" ref="0x111e67850"/>
        <function-ref name="isOwner" scoped="" ref="0x111e679e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x111e70500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x111e70500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e70980"/>
        <function-ref name="isInput" scoped="" ref="0x111e70b10"/>
        <function-ref name="toggle" scoped="" ref="0x111e70ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x111e70e30"/>
        <function-ref name="get" scoped="" ref="0x111e6a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e6a1b0"/>
        <function-ref name="set" scoped="" ref="0x111e6a340"/>
        <function-ref name="clr" scoped="" ref="0x111e6a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x111ec4130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111ec4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111ec44b0"/>
        <function-ref name="write" scoped="" ref="0x111ec4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x111ec49c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111ec49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111ec4d40"/>
        <function-ref name="write" scoped="" ref="0x111ec3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x111e636d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111e636d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111e63a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x111e69b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x111e69b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111e68020"/>
        <function-ref name="isInput" scoped="" ref="0x111e681b0"/>
        <function-ref name="toggle" scoped="" ref="0x111e68340"/>
        <function-ref name="isOutput" scoped="" ref="0x111e684d0"/>
        <function-ref name="get" scoped="" ref="0x111e68660"/>
        <function-ref name="makeOutput" scoped="" ref="0x111e687f0"/>
        <function-ref name="set" scoped="" ref="0x111e68980"/>
        <function-ref name="clr" scoped="" ref="0x111e68b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111ec26c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111ec26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111ec2a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111ec2bd0"/>
        <function-ref name="led1On" scoped="" ref="0x111ec2d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111ec1020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111ec11b0"/>
        <function-ref name="get" scoped="" ref="0x111ec1340"/>
        <function-ref name="led1Off" scoped="" ref="0x111ec14d0"/>
        <function-ref name="led2Off" scoped="" ref="0x111ec1b10"/>
        <function-ref name="set" scoped="" ref="0x111ec1660"/>
        <function-ref name="led0On" scoped="" ref="0x111ec17f0"/>
        <function-ref name="led2On" scoped="" ref="0x111ec1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x111ec65e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111ec65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111ec6960"/>
        <function-ref name="write" scoped="" ref="0x111ec6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111e80320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111e80320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111e806a0"/>
        <function-ref name="stop" scoped="" ref="0x111e80830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x111e66780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111e66780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111e66b00"/>
        <function-ref name="writeDone" scoped="" ref="0x111e66c90"/>
        <function-ref name="write" scoped="" ref="0x111e66e20"/>
        <function-ref name="beginRead" scoped="" ref="0x111e65020"/>
        <function-ref name="readDone" scoped="" ref="0x111e651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x111e63de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111e63de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111e62180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x111ec7e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111ec7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111ec6220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x111e7d0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x111e7d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111e7d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x111f56c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x111f56c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f55210"/>
        <function-ref name="write" scoped="" ref="0x111f553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x111f60020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x111f60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x111f5ac70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x111f5ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f59020"/>
        <function-ref name="write" scoped="" ref="0x111f591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x111f54670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111f54670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f549f0"/>
        <function-ref name="write" scoped="" ref="0x111f54b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x111f4de50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x111f4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4c210"/>
        <function-ref name="write" scoped="" ref="0x111f4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x111f54e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x111f54e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f53210"/>
        <function-ref name="write" scoped="" ref="0x111f533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x111f402f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x111f402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f40670"/>
        <function-ref name="write" scoped="" ref="0x111f40800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x111f422f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111f422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f42670"/>
        <function-ref name="write" scoped="" ref="0x111f42800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x111f5f370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x111f5f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x111f48670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x111f48670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f489f0"/>
        <function-ref name="write" scoped="" ref="0x111f48b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x111f442f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x111f442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f44670"/>
        <function-ref name="write" scoped="" ref="0x111f44800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x111f59c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x111f59c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f58020"/>
        <function-ref name="write" scoped="" ref="0x111f581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x111f58c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x111f58c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f56020"/>
        <function-ref name="write" scoped="" ref="0x111f561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x111f4e670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x111f4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4e9f0"/>
        <function-ref name="write" scoped="" ref="0x111f4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x111f50e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x111f50e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4f210"/>
        <function-ref name="write" scoped="" ref="0x111f4f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x111f53670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x111f53670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f539f0"/>
        <function-ref name="write" scoped="" ref="0x111f53b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x111efb8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x111efb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x111efbc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x111efbe00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x111f61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x111f5ed00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x111f5ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x111f5c370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111f5c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x111f47a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x111f47a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f47df0"/>
        <function-ref name="write" scoped="" ref="0x111f46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x111f5cac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x111f5cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x111f44ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111f44ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f44e50"/>
        <function-ref name="write" scoped="" ref="0x111f42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x111f5e060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x111f5e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x111f49e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x111f49e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f48210"/>
        <function-ref name="write" scoped="" ref="0x111f483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x111f58480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x111f58480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f58800"/>
        <function-ref name="write" scoped="" ref="0x111f58990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x111f59480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x111f59480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f59800"/>
        <function-ref name="write" scoped="" ref="0x111f59990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x111f61940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x111f61940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f61cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x111f4be50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x111f4be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f49210"/>
        <function-ref name="write" scoped="" ref="0x111f493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x111f4c670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x111f4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4c9f0"/>
        <function-ref name="write" scoped="" ref="0x111f4cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x111f49670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x111f49670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f499f0"/>
        <function-ref name="write" scoped="" ref="0x111f49b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x111f41ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x111f41ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f41e50"/>
        <function-ref name="write" scoped="" ref="0x111f40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x111f42ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111f42ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f42e50"/>
        <function-ref name="write" scoped="" ref="0x111f41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x111f4f670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x111f4f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4f9f0"/>
        <function-ref name="write" scoped="" ref="0x111f4fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x111f4ce50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x111f4ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4b210"/>
        <function-ref name="write" scoped="" ref="0x111f4b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x111f45ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x111f45ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f45e50"/>
        <function-ref name="write" scoped="" ref="0x111f44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x111f52670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x111f52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f529f0"/>
        <function-ref name="write" scoped="" ref="0x111f52b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x111f40ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111f40ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111f40e50"/>
        <function-ref name="writeDone" scoped="" ref="0x111f3f020"/>
        <function-ref name="write" scoped="" ref="0x111f3f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x111f3f340"/>
        <function-ref name="readDone" scoped="" ref="0x111f3f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x111f612f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111f612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f61670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x111f5a490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x111f5a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f5a810"/>
        <function-ref name="write" scoped="" ref="0x111f5a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x111f56480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x111f56480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f56800"/>
        <function-ref name="write" scoped="" ref="0x111f56990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x111f4ee50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x111f4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4d210"/>
        <function-ref name="write" scoped="" ref="0x111f4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x111f53e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x111f53e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f52210"/>
        <function-ref name="write" scoped="" ref="0x111f523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x111f4d670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x111f4d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4d9f0"/>
        <function-ref name="write" scoped="" ref="0x111f4db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x111f55670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x111f55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f559f0"/>
        <function-ref name="write" scoped="" ref="0x111f55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x111f60670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x111f60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f609f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x111f55e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111f55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f54210"/>
        <function-ref name="write" scoped="" ref="0x111f543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x111efcc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x111efcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111efb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111efb1b0"/>
        <function-ref name="request" scoped="" ref="0x111efb340"/>
        <function-ref name="granted" scoped="" ref="0x111efb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x111efb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x111f5b160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111f5b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x111f5be00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x111f5be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x111f452f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x111f452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f45670"/>
        <function-ref name="write" scoped="" ref="0x111f45800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x111f46ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x111f46ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f46e50"/>
        <function-ref name="write" scoped="" ref="0x111f45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x111f5e6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111f5e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x111f462f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x111f462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f46670"/>
        <function-ref name="write" scoped="" ref="0x111f46800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x111f412f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x111f412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f41670"/>
        <function-ref name="write" scoped="" ref="0x111f41800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x111f4fe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x111f4fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4e210"/>
        <function-ref name="write" scoped="" ref="0x111f4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x111f4b670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x111f4b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f4b9f0"/>
        <function-ref name="write" scoped="" ref="0x111f4bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x111f60cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x111f60cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x111f5f9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x111f5f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x111f52e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x111f52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f50210"/>
        <function-ref name="write" scoped="" ref="0x111f503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x111f5b7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x111f5b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f5bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x111f50670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x111f50670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f509f0"/>
        <function-ref name="write" scoped="" ref="0x111f50b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x111f48e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x111f48e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f47610"/>
        <function-ref name="write" scoped="" ref="0x111f477a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x111f3f7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x111f3f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111f3fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x111f3fcb0"/>
        <function-ref name="write" scoped="" ref="0x111f3fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x111f3e020"/>
        <function-ref name="readDone" scoped="" ref="0x111f3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x111f33df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x111f33df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111f301c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x111f30350"/>
        <function-ref name="sfd" scoped="" ref="0x111f304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x111f307c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x111f307c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111f30b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x111f2f020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x111f2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111f2f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111f335c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111f335c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111f33940"/>
        <function-ref name="stop" scoped="" ref="0x111f33ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x111f8f380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x111f8f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111f8f700"/>
        <function-ref name="isInput" scoped="" ref="0x111f8f890"/>
        <function-ref name="toggle" scoped="" ref="0x111f8fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x111f8fbb0"/>
        <function-ref name="get" scoped="" ref="0x111f8fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x111f8e020"/>
        <function-ref name="set" scoped="" ref="0x111f8e1b0"/>
        <function-ref name="clr" scoped="" ref="0x111f8e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x111f88b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x111f88b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x111f87020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x111f871b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x111f87340"/>
        <function-ref name="syncDone" scoped="" ref="0x111f874d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x111f87660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x111f877f0"/>
        <function-ref name="setChannel" scoped="" ref="0x111f87980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x111f87b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x111f87ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x111f87e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x111f86020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x111f861b0"/>
        <function-ref name="sync" scoped="" ref="0x111f86340"/>
        <function-ref name="getChannel" scoped="" ref="0x111f865d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x111f86760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x111f719d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x111f719d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x111f71d50"/>
        <function-ref name="runTask" scoped="" ref="0x111f70020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x111f86d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x111f86d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111f84330"/>
        <function-ref name="clear" scoped="" ref="0x111f84a60"/>
        <function-ref name="isValid" scoped="" ref="0x111f85ba0"/>
        <function-ref name="set" scoped="" ref="0x111f82210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x111f8e6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x111f8e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111f8ea30"/>
        <function-ref name="isInput" scoped="" ref="0x111f8ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x111f8ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x111f8d020"/>
        <function-ref name="get" scoped="" ref="0x111f8d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111f8d340"/>
        <function-ref name="set" scoped="" ref="0x111f8d4d0"/>
        <function-ref name="clr" scoped="" ref="0x111f8d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x111f81cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x111f81cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f800a0"/>
        <function-ref name="write" scoped="" ref="0x111f80230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x111f80590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x111f80590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f80910"/>
        <function-ref name="write" scoped="" ref="0x111f80aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x111f7f6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x111f7f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f7fa50"/>
        <function-ref name="write" scoped="" ref="0x111f7fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x111f89330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111f89330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111f896b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x111f89840"/>
        <function-ref name="getRssi" scoped="" ref="0x111f899d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x111f89b60"/>
        <function-ref name="getPower" scoped="" ref="0x111f89cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x111f89e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x111f93550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x111f93550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111f938d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x111f93a60"/>
        <function-ref name="sfd" scoped="" ref="0x111f93bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x111f8a3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x111f8a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f8a720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x111f90020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x111f90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x111f903a0"/>
        <function-ref name="isInput" scoped="" ref="0x111f90530"/>
        <function-ref name="toggle" scoped="" ref="0x111f906c0"/>
        <function-ref name="isOutput" scoped="" ref="0x111f90850"/>
        <function-ref name="get" scoped="" ref="0x111f909e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x111f90b70"/>
        <function-ref name="set" scoped="" ref="0x111f90d00"/>
        <function-ref name="clr" scoped="" ref="0x111f8f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x111f7e020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x111f7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f7e3a0"/>
        <function-ref name="write" scoped="" ref="0x111f7e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x111f94620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x111f94620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x111f949a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x111f881e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x111f881e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x111f88560"/>
        <function-ref name="getHeader" scoped="" ref="0x111f886f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x111f88880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x111f91020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x111f91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x111f913a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x111f8c6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x111f8c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x111f8ca60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x111f8cbf0"/>
        <function-ref name="request" scoped="" ref="0x111f8cd80"/>
        <function-ref name="granted" scoped="" ref="0x111f8b020"/>
        <function-ref name="isOwner" scoped="" ref="0x111f8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x111f80e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x111f80e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f7f1c0"/>
        <function-ref name="write" scoped="" ref="0x111f7f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x111f8b530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x111f8b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x111f8b8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x111f8ba40"/>
        <function-ref name="write" scoped="" ref="0x111f8bbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x111f8bd60"/>
        <function-ref name="readDone" scoped="" ref="0x111f8a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x111f7e8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x111f7e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f7ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x111f917c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x111f917c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x111f91b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x111f7d150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x111f7d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x111f7d4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x111f7d660"/>
        <function-ref name="led1On" scoped="" ref="0x111f7d7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x111f7d980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x111f7db10"/>
        <function-ref name="get" scoped="" ref="0x111f7dca0"/>
        <function-ref name="led1Off" scoped="" ref="0x111f7de30"/>
        <function-ref name="led2Off" scoped="" ref="0x111f7c4d0"/>
        <function-ref name="set" scoped="" ref="0x111f7c020"/>
        <function-ref name="led0On" scoped="" ref="0x111f7c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x111f7c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x111f813e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x111f813e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x111f81760"/>
        <function-ref name="write" scoped="" ref="0x111f818f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x111f82b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x111f82b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x111f8da50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x111f8da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x111f8ddd0"/>
        <function-ref name="disable" scoped="" ref="0x111f8c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x111f8c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x111f8c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x111f8aad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x111f8aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x111f89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x111f94ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x111f94ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x111f930a0"/>
        <function-ref name="stop" scoped="" ref="0x111f93230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x111fe1a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x111fe1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x111fe1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x111fe5670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111fe5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111fe59f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x111fe5b80"/>
        <function-ref name="getRssi" scoped="" ref="0x111fe5d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x111fe2020"/>
        <function-ref name="getPower" scoped="" ref="0x111fe21b0"/>
        <function-ref name="getLqi" scoped="" ref="0x111fe2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x111fe0550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x111fe0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111fdfb00"/>
        <function-ref name="clear" scoped="" ref="0x111fdd2a0"/>
        <function-ref name="isValid" scoped="" ref="0x111fdf3d0"/>
        <function-ref name="set" scoped="" ref="0x111fdd9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x111fe10c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fe10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x111fe1440"/>
        <function-ref name="getHeader" scoped="" ref="0x111fe15d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x111fe1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x111fd8480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111fd8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111fd8800"/>
        <function-ref name="isSet" scoped="" ref="0x111fd8990"/>
        <function-ref name="cancel" scoped="" ref="0x111fd8b20"/>
        <function-ref name="set" scoped="" ref="0x111fd8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x111fdc660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x111fdc660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111fdbce0"/>
        <function-ref name="clear" scoped="" ref="0x111fd9460"/>
        <function-ref name="isValid" scoped="" ref="0x111fdb5b0"/>
        <function-ref name="set" scoped="" ref="0x111fd9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x111fe26e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x111fe26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111fe2a60"/>
        <function-ref name="noAck" scoped="" ref="0x111fe2bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x111fe2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x111fd2020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x111fd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x111fd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x111fd7d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x111fd7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x111fd40e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x111fd4270"/>
        <function-ref name="getRssi" scoped="" ref="0x111fd4400"/>
        <function-ref name="getNetwork" scoped="" ref="0x111fd4590"/>
        <function-ref name="getPower" scoped="" ref="0x111fd4720"/>
        <function-ref name="getLqi" scoped="" ref="0x111fd48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1120334a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1120334a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112033820"/>
        <function-ref name="payloadLength" scoped="" ref="0x1120339b0"/>
        <function-ref name="getPayload" scoped="" ref="0x112033b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112033cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x112033e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x111fd2a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x111fd2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111fcf020"/>
        <function-ref name="clear" scoped="" ref="0x111fcf750"/>
        <function-ref name="isValid" scoped="" ref="0x111fd18d0"/>
        <function-ref name="set" scoped="" ref="0x111fcfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x111fd3640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x111fd3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x111fd39c0"/>
        <function-ref name="getHeader" scoped="" ref="0x111fd3b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x111fd3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x111fca8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x111fca8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x111fcac30"/>
        <function-ref name="isSet" scoped="" ref="0x111fcadc0"/>
        <function-ref name="cancel" scoped="" ref="0x112033020"/>
        <function-ref name="set" scoped="" ref="0x1120331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x1120323b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x1120323b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112031020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x1120316e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x1120316e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11202f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x111fceaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x111fceaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x111fcb0d0"/>
        <function-ref name="clear" scoped="" ref="0x111fcb800"/>
        <function-ref name="isValid" scoped="" ref="0x111fcd970"/>
        <function-ref name="set" scoped="" ref="0x111fca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x111fd4c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x111fd4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x111fd3020"/>
        <function-ref name="noAck" scoped="" ref="0x111fd31b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x111fd3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x11204ccf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x11204ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x11204b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x112049020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x112049020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04df0"/>
            <typename><typedef-ref name="T32khz" ref="0x110d03200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x112049e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x112048800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x112048340"/>
        <function-ref name="overflow" scoped="" ref="0x112048cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1120450b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1120450b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x110d04640"/>
            <typename><typedef-ref name="TMilli" ref="0x110d049b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x112041630"/>
        <function-ref name="fired" scoped="" ref="0x112044b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x112042920"/>
        <function-ref name="isOneShot" scoped="" ref="0x1120424a0"/>
        <function-ref name="getdt" scoped="" ref="0x112040020"/>
        <function-ref name="gett0" scoped="" ref="0x112041ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x112042020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x112045ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x112041020"/>
        <function-ref name="startOneShot" scoped="" ref="0x1120441b0"/>
        <function-ref name="stop" scoped="" ref="0x112044680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x11209c620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x11209c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209cba0"/>
        <function-ref name="write" scoped="" ref="0x11209cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x11203a940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x11203a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11203acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x11209f620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x11209f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209f9a0"/>
        <function-ref name="write" scoped="" ref="0x11209fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x112099060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x112099060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120993e0"/>
        <function-ref name="write" scoped="" ref="0x112099570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x112092840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x112092840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112092bc0"/>
        <function-ref name="write" scoped="" ref="0x112092d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x112099840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x112099840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112099bc0"/>
        <function-ref name="write" scoped="" ref="0x112099d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x112087c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x112087c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112085020"/>
        <function-ref name="write" scoped="" ref="0x1120851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x112089c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x112089c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112088020"/>
        <function-ref name="write" scoped="" ref="0x1120881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x112039cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x112039cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1120380a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x11208e060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x11208e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208e3e0"/>
        <function-ref name="write" scoped="" ref="0x11208e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x11208ac60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x11208ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112089020"/>
        <function-ref name="write" scoped="" ref="0x1120891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x11209e620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x11209e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209e9a0"/>
        <function-ref name="write" scoped="" ref="0x11209eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x11209d620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x11209d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209d9a0"/>
        <function-ref name="write" scoped="" ref="0x11209db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x112093060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x112093060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120933e0"/>
        <function-ref name="write" scoped="" ref="0x112093570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x112096840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x112096840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112096bc0"/>
        <function-ref name="write" scoped="" ref="0x112096d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x112098060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x112098060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120983e0"/>
        <function-ref name="write" scoped="" ref="0x112098570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x11203c2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x11203c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x11203c630"/>
        <function-ref name="abortRelease" scoped="" ref="0x11203c7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x11203c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1120376b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1120376b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x112037a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x112037d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x112037d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1120361c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x11208c480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x11208c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208c800"/>
        <function-ref name="write" scoped="" ref="0x11208c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x112036490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x112036490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x112036810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x112089480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x112089480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112089800"/>
        <function-ref name="write" scoped="" ref="0x112089990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1120389c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1120389c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x112038d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x11208f840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x11208f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208fbc0"/>
        <function-ref name="write" scoped="" ref="0x11208fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x11209ee00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x11209ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209d1c0"/>
        <function-ref name="write" scoped="" ref="0x11209d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x11209fe00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x11209fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209e1c0"/>
        <function-ref name="write" scoped="" ref="0x11209e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x11203a2f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x11203a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11203a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x112090840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x112090840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112090bc0"/>
        <function-ref name="write" scoped="" ref="0x112090d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x112091060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x112091060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120913e0"/>
        <function-ref name="write" scoped="" ref="0x112091570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x11208f060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x11208f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208f3e0"/>
        <function-ref name="write" scoped="" ref="0x11208f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x112087480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x112087480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112087800"/>
        <function-ref name="write" scoped="" ref="0x112087990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x112088480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x112088480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112088800"/>
        <function-ref name="write" scoped="" ref="0x112088990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x112095060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x112095060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120953e0"/>
        <function-ref name="write" scoped="" ref="0x112095570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x112091840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x112091840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112091bc0"/>
        <function-ref name="write" scoped="" ref="0x112091d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x11208a480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x11208a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208a800"/>
        <function-ref name="write" scoped="" ref="0x11208a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x112097060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x112097060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120973e0"/>
        <function-ref name="write" scoped="" ref="0x112097570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x112085480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x112085480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x112085800"/>
        <function-ref name="writeDone" scoped="" ref="0x112085990"/>
        <function-ref name="write" scoped="" ref="0x112085b20"/>
        <function-ref name="beginRead" scoped="" ref="0x112085cb0"/>
        <function-ref name="readDone" scoped="" ref="0x112085e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x11203cc20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x11203cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x11203a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x112034e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x112034e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209f1c0"/>
        <function-ref name="write" scoped="" ref="0x11209f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x11209de00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x11209de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209c1c0"/>
        <function-ref name="write" scoped="" ref="0x11209c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x112093840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x112093840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112093bc0"/>
        <function-ref name="write" scoped="" ref="0x112093d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x112098840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x112098840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112098bc0"/>
        <function-ref name="write" scoped="" ref="0x112098d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x112092060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x112092060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120923e0"/>
        <function-ref name="write" scoped="" ref="0x112092570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x11209b060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x11209b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209b3e0"/>
        <function-ref name="write" scoped="" ref="0x11209b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x112039020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x112039020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1120393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x11209b840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x11209b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11209bbc0"/>
        <function-ref name="write" scoped="" ref="0x11209bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11203d520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11203d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11203d8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11203da30"/>
        <function-ref name="request" scoped="" ref="0x11203dbc0"/>
        <function-ref name="granted" scoped="" ref="0x11203dd50"/>
        <function-ref name="isOwner" scoped="" ref="0x11203c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x112036ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x112036ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x112036e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x1120347b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x1120347b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x112034b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x11208bc60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x11208bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208a020"/>
        <function-ref name="write" scoped="" ref="0x11208a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x11208b480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x11208b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208b800"/>
        <function-ref name="write" scoped="" ref="0x11208b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x112037060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x112037060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1120373e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x11208cc60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x11208cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208b020"/>
        <function-ref name="write" scoped="" ref="0x11208b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x112088c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x112088c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112087020"/>
        <function-ref name="write" scoped="" ref="0x1120871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x112095840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x112095840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112095bc0"/>
        <function-ref name="write" scoped="" ref="0x112095d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x112090060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x112090060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120903e0"/>
        <function-ref name="write" scoped="" ref="0x112090570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x112039670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x112039670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1120399f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x112038370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x112038370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1120386f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x112097840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x112097840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x112097bc0"/>
        <function-ref name="write" scoped="" ref="0x112097d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x112034160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x112034160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1120344e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x112096060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x112096060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1120963e0"/>
        <function-ref name="write" scoped="" ref="0x112096570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x11208e840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x11208e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x11208c020"/>
        <function-ref name="write" scoped="" ref="0x11208c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x112084160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x112084160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1120844e0"/>
        <function-ref name="writeDone" scoped="" ref="0x112084670"/>
        <function-ref name="write" scoped="" ref="0x112084800"/>
        <function-ref name="beginRead" scoped="" ref="0x112084990"/>
        <function-ref name="readDone" scoped="" ref="0x112084b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1120c9a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1120c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1120c9da0"/>
        <function-ref name="rand32" scoped="" ref="0x1120c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1120c7920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1120c7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120c9560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1120cd990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1120cd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120cdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x1120c1a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1120c1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1120c1da0"/>
        <function-ref name="rand32" scoped="" ref="0x1120c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x1120c2940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x1120c2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120c1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1120c2080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1120c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120c2400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1120cbaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1120cbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1120cbe20"/>
        <function-ref name="toIdle" scoped="" ref="0x1120c3020"/>
        <function-ref name="isState" scoped="" ref="0x1120c31b0"/>
        <function-ref name="isIdle" scoped="" ref="0x1120c3340"/>
        <function-ref name="requestState" scoped="" ref="0x1120c34d0"/>
        <function-ref name="forceState" scoped="" ref="0x1120c3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1120a9020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1120a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1120a93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1120a9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1120a96c0"/>
        <function-ref name="cancel" scoped="" ref="0x1120a9850"/>
        <function-ref name="sendDone" scoped="" ref="0x1120a99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1120aa220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1120aa220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1120aa5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1120aa730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1120aa8c0"/>
        <function-ref name="cancel" scoped="" ref="0x1120aaa50"/>
        <function-ref name="sendDone" scoped="" ref="0x1120aabe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1120a5e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1120a5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1120a4210"/>
        <function-ref name="getPayload" scoped="" ref="0x1120a43a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1120a4530"/>
        <function-ref name="cancel" scoped="" ref="0x1120a46c0"/>
        <function-ref name="sendDone" scoped="" ref="0x1120a4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1120a8a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1120a8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1120a8d90"/>
        <function-ref name="getPayload" scoped="" ref="0x1120a5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1120a51b0"/>
        <function-ref name="cancel" scoped="" ref="0x1120a5340"/>
        <function-ref name="sendDone" scoped="" ref="0x1120a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x1120a38f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1120a38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1120a3c70"/>
        <function-ref name="rand32" scoped="" ref="0x1120a3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1120a5750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1120a5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120a5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1120a2170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1120a2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1120a24f0"/>
        <function-ref name="getHeader" scoped="" ref="0x1120a2680"/>
        <function-ref name="getMetadata" scoped="" ref="0x1120a2810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x1120a4ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1120a4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1120a4e60"/>
        <function-ref name="toIdle" scoped="" ref="0x1120a3020"/>
        <function-ref name="isState" scoped="" ref="0x1120a31b0"/>
        <function-ref name="isIdle" scoped="" ref="0x1120a3340"/>
        <function-ref name="requestState" scoped="" ref="0x1120a34d0"/>
        <function-ref name="forceState" scoped="" ref="0x1120a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1120a6690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1120a6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1120a6a10"/>
        <function-ref name="toIdle" scoped="" ref="0x1120a6ba0"/>
        <function-ref name="isState" scoped="" ref="0x1120a6d30"/>
        <function-ref name="isIdle" scoped="" ref="0x112102020"/>
        <function-ref name="requestState" scoped="" ref="0x1121021b0"/>
        <function-ref name="forceState" scoped="" ref="0x112102340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1120fc950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1120fc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1120fccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1120ffaa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1120ffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1120ffe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1120fc200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1120fc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1120fc580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1120f73f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1120f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1120f7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1120f8b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1120f8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1120f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1120fbe30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1120fbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1120f81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1120f7a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1120f7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1120f7df0"/>
        <function-ref name="getHeader" scoped="" ref="0x1120f6020"/>
        <function-ref name="getMetadata" scoped="" ref="0x1120f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1120f8570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1120f8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1120f88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x112136020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x112136020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1121363a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1121366b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1121366b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112136a30"/>
        <function-ref name="getPayload" scoped="" ref="0x112136bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112136d50"/>
        <function-ref name="cancel" scoped="" ref="0x112135020"/>
        <function-ref name="sendDone" scoped="" ref="0x1121351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11213b8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11213b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11213bc60"/>
        <function-ref name="getPayload" scoped="" ref="0x11213bdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112139020"/>
        <function-ref name="cancel" scoped="" ref="0x1121391b0"/>
        <function-ref name="sendDone" scoped="" ref="0x112139340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x112139c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x112139c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1121380a0"/>
        <function-ref name="getPayload" scoped="" ref="0x112138230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1121383c0"/>
        <function-ref name="cancel" scoped="" ref="0x112138550"/>
        <function-ref name="sendDone" scoped="" ref="0x1121386e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1121395e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1121395e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x112139960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x11213cbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x11213cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x11213b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x11213b1b0"/>
        <function-ref name="request" scoped="" ref="0x11213b340"/>
        <function-ref name="granted" scoped="" ref="0x11213b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x11213b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x112138a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x112138a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x112138dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x112137170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x112137170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1121374f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x112137680"/>
        <function-ref name="getPayload" scoped="" ref="0x112137810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1121379a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x112137b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x11212cd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x11212cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11212b180"/>
        <function-ref name="getPayload" scoped="" ref="0x11212b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11212b4a0"/>
        <function-ref name="cancel" scoped="" ref="0x11212b630"/>
        <function-ref name="sendDone" scoped="" ref="0x11212b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x11212bb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x11212bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11212a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x11216cdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x11216cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11216b180"/>
        <function-ref name="runTask" scoped="" ref="0x11216b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x11212a2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x11212a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x11212a670"/>
        <function-ref name="setNetwork" scoped="" ref="0x11212a800"/>
        <function-ref name="getRssi" scoped="" ref="0x11212a990"/>
        <function-ref name="getNetwork" scoped="" ref="0x11212ab20"/>
        <function-ref name="getPower" scoped="" ref="0x11212acb0"/>
        <function-ref name="getLqi" scoped="" ref="0x11212ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x11212ea20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x11212ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11212eda0"/>
        <function-ref name="getPayload" scoped="" ref="0x11212d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11212d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x11212d340"/>
        <function-ref name="sendDone" scoped="" ref="0x11212d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x112129b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x112129b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x112128020"/>
        <function-ref name="isEmpty" scoped="" ref="0x1121281b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x112128340"/>
        <function-ref name="dequeue" scoped="" ref="0x1121284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x112129170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x112129170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1121294f0"/>
        <function-ref name="getHeader" scoped="" ref="0x112129680"/>
        <function-ref name="getMetadata" scoped="" ref="0x112129810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x11212e370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x11212e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11212e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1121317b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1121317b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x112131b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x112131cc0"/>
        <function-ref name="request" scoped="" ref="0x112131e50"/>
        <function-ref name="granted" scoped="" ref="0x112130020"/>
        <function-ref name="isOwner" scoped="" ref="0x1121301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x1121304d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x1121304d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112130850"/>
        <function-ref name="getPayload" scoped="" ref="0x1121309e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112130b70"/>
        <function-ref name="cancel" scoped="" ref="0x112130d00"/>
        <function-ref name="sendDone" scoped="" ref="0x11212e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x11212d840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x11212d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11212dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x11212c020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x11212c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x11212c3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x11212c530"/>
        <function-ref name="getPayload" scoped="" ref="0x11212c6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11212c850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x11212c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11214cdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11214cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11214b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x11214b410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x11214b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x11214b790"/>
        <function-ref name="isEmpty" scoped="" ref="0x11214b920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x11214bab0"/>
        <function-ref name="dequeue" scoped="" ref="0x11214bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1121afb80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1121afb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1121ae020"/>
        <function-ref name="stopDone" scoped="" ref="0x1121ae1b0"/>
        <function-ref name="start" scoped="" ref="0x1121ae340"/>
        <function-ref name="stop" scoped="" ref="0x1121ae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1121ad860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1121ad860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1121adbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x1121add70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1121ac020"/>
        <function-ref name="cancel" scoped="" ref="0x1121ac1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1121ac340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1121ac690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1121ac690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1121aca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1121b4ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1121b4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1121b00a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1121b0230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1121b03c0"/>
        <function-ref name="cancel" scoped="" ref="0x1121b0550"/>
        <function-ref name="sendDone" scoped="" ref="0x1121b06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x1121af080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x1121af080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x1121af400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x1121af590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x1121af720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x1121af8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x1121ae800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x1121ae800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1121aeb80"/>
        <function-ref name="toIdle" scoped="" ref="0x1121aed10"/>
        <function-ref name="isState" scoped="" ref="0x1121ad020"/>
        <function-ref name="isIdle" scoped="" ref="0x1121ad1b0"/>
        <function-ref name="requestState" scoped="" ref="0x1121ad340"/>
        <function-ref name="forceState" scoped="" ref="0x1121ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x1121acd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x1121acd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1121ab180"/>
        <function-ref name="stopDone" scoped="" ref="0x1121ab310"/>
        <function-ref name="start" scoped="" ref="0x1121ab4a0"/>
        <function-ref name="stop" scoped="" ref="0x1121ab630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1121b0980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1121b0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1121b0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x1121a82d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x1121a82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x1121a8650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x1121a87e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x1121a8970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x1121a8b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1121aa580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1121aa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1121aa900"/>
        <function-ref name="toIdle" scoped="" ref="0x1121aaa90"/>
        <function-ref name="isState" scoped="" ref="0x1121aac20"/>
        <function-ref name="isIdle" scoped="" ref="0x1121aadb0"/>
        <function-ref name="requestState" scoped="" ref="0x1121a9020"/>
        <function-ref name="forceState" scoped="" ref="0x1121a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x11219bd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x11219bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11219a180"/>
        <function-ref name="getPayload" scoped="" ref="0x11219a310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11219a4a0"/>
        <function-ref name="cancel" scoped="" ref="0x11219a630"/>
        <function-ref name="sendDone" scoped="" ref="0x11219a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11219e350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11219e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11219e6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x11219e860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11219e9f0"/>
        <function-ref name="cancel" scoped="" ref="0x11219eb80"/>
        <function-ref name="sendDone" scoped="" ref="0x11219ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x11219b020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x11219b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x11219b3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x11219b530"/>
        <function-ref name="getRetries" scoped="" ref="0x11219b6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x11219b850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x11219b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x1121961c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1121961c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x112196540"/>
        <function-ref name="noAck" scoped="" ref="0x1121966d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x112196860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x112199410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x112199410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x112199790"/>
        <function-ref name="setRetries" scoped="" ref="0x112199920"/>
        <function-ref name="getRetries" scoped="" ref="0x112199ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x112199c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x112199dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1121e7690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1121e7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1121e7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1121e8860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1121e8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1121e8be0"/>
        <function-ref name="getPayload" scoped="" ref="0x1121e8d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1121e7020"/>
        <function-ref name="cancel" scoped="" ref="0x1121e71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1121e7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x1121e5610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1121e5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x1121e5990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1121e5b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x1121e5cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x1121e5e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x1121e4020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1121e41b0"/>
        <function-ref name="setChannel" scoped="" ref="0x1121e4340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x1121e44d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1121e4660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x1121e47f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x1121e4980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1121e4b10"/>
        <function-ref name="sync" scoped="" ref="0x1121e4ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x1121e3020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1121e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1121e98b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1121e98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1121e9c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1121e9dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1121e8020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1121e81b0"/>
        <function-ref name="setCca" scoped="" ref="0x1121e8340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1121e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x1121eace0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x1121eace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x1121e90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x1121e21f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x1121e21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1121e2570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1121e2700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1121e2890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1121e2a20"/>
        <function-ref name="setCca" scoped="" ref="0x1121e2bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1121e2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1121eca80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1121eca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1121ece00"/>
        <function-ref name="payloadLength" scoped="" ref="0x1121ea020"/>
        <function-ref name="getPayload" scoped="" ref="0x1121ea1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1121ea340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1121ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1121ef020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1121ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1121ef3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1121ef530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1121ef6c0"/>
        <function-ref name="cancel" scoped="" ref="0x1121ef850"/>
        <function-ref name="sendDone" scoped="" ref="0x1121ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x1121eedf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x1121eedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1121ed1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x1121e7ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1121e7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1121e60a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1121e6230"/>
        <function-ref name="getRssi" scoped="" ref="0x1121e63c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x1121e6550"/>
        <function-ref name="getPower" scoped="" ref="0x1121e66e0"/>
        <function-ref name="getLqi" scoped="" ref="0x1121e6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x1121e34d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1121e34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x1121e3950"/>
        <function-ref name="changed" scoped="" ref="0x1121e3ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x1121e3c70"/>
        <function-ref name="setAddress" scoped="" ref="0x1121e3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1121e6b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1121e6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1121e5020"/>
        <function-ref name="getHeader" scoped="" ref="0x1121e51b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x1121e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1121ee210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1121ee210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1121ee590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1121e1d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1121e1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1121e00e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1121e0270"/>
        <function-ref name="led1On" scoped="" ref="0x1121e0400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1121e0590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1121e0720"/>
        <function-ref name="get" scoped="" ref="0x1121e08b0"/>
        <function-ref name="led1Off" scoped="" ref="0x1121e0a40"/>
        <function-ref name="led2Off" scoped="" ref="0x1121df1b0"/>
        <function-ref name="set" scoped="" ref="0x1121e0bd0"/>
        <function-ref name="led0On" scoped="" ref="0x1121e0d60"/>
        <function-ref name="led2On" scoped="" ref="0x1121df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1121ed470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1121ed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1121ed7f0"/>
        <function-ref name="source" scoped="" ref="0x1121ed980"/>
        <function-ref name="address" scoped="" ref="0x1121edb10"/>
        <function-ref name="destination" scoped="" ref="0x1121edca0"/>
        <function-ref name="setSource" scoped="" ref="0x1121ede30"/>
        <function-ref name="setDestination" scoped="" ref="0x1121ec020"/>
        <function-ref name="type" scoped="" ref="0x1121ec1b0"/>
        <function-ref name="setType" scoped="" ref="0x1121ec340"/>
        <function-ref name="isForMe" scoped="" ref="0x1121ec4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x1121ec660"/>
        <function-ref name="localGroup" scoped="" ref="0x1121ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x1121e10f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x1121e10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1121e1470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1121e1600"/>
        <function-ref name="request" scoped="" ref="0x1121e1790"/>
        <function-ref name="granted" scoped="" ref="0x1121e1920"/>
        <function-ref name="isOwner" scoped="" ref="0x1121e1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x112315020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x112315020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1123153a0"/>
        <function-ref name="getPayload" scoped="" ref="0x112315530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1123156c0"/>
        <function-ref name="cancel" scoped="" ref="0x112315850"/>
        <function-ref name="sendDone" scoped="" ref="0x1123159e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x112315c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x112315c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112314020"/>
        <function-ref name="payloadLength" scoped="" ref="0x1123141b0"/>
        <function-ref name="getPayload" scoped="" ref="0x112314340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1123144d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x112314660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1123148b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1123148b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x112314c30"/>
        <function-ref name="source" scoped="" ref="0x112314dc0"/>
        <function-ref name="address" scoped="" ref="0x112312020"/>
        <function-ref name="destination" scoped="" ref="0x1123121b0"/>
        <function-ref name="setSource" scoped="" ref="0x112312340"/>
        <function-ref name="setDestination" scoped="" ref="0x1123124d0"/>
        <function-ref name="type" scoped="" ref="0x112312660"/>
        <function-ref name="setType" scoped="" ref="0x1123127f0"/>
        <function-ref name="isForMe" scoped="" ref="0x112312980"/>
        <function-ref name="setGroup" scoped="" ref="0x112312b10"/>
        <function-ref name="localGroup" scoped="" ref="0x112312ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x112311020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x112311020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1123113a0"/>
        <function-ref name="noAck" scoped="" ref="0x112311530"/>
        <function-ref name="wasAcked" scoped="" ref="0x1123116c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x112e19b60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x112e19b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112e18020"/>
        <function-ref name="getPayload" scoped="" ref="0x112e181b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112e18340"/>
        <function-ref name="cancel" scoped="" ref="0x112e184d0"/>
        <function-ref name="sendDone" scoped="" ref="0x112e18660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x112e188b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x112e188b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112e18c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x112e18dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x112e17020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112e171b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x112e17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x112e17590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x112e17590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x112e17910"/>
        <function-ref name="source" scoped="" ref="0x112e17aa0"/>
        <function-ref name="address" scoped="" ref="0x112e17c30"/>
        <function-ref name="destination" scoped="" ref="0x112e17dc0"/>
        <function-ref name="setSource" scoped="" ref="0x112e16020"/>
        <function-ref name="setDestination" scoped="" ref="0x112e161b0"/>
        <function-ref name="type" scoped="" ref="0x112e16340"/>
        <function-ref name="setType" scoped="" ref="0x112e164d0"/>
        <function-ref name="isForMe" scoped="" ref="0x112e16660"/>
        <function-ref name="setGroup" scoped="" ref="0x112e167f0"/>
        <function-ref name="localGroup" scoped="" ref="0x112e16980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x112e16c10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="ControllerAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x112e16c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x112e15020"/>
        <function-ref name="noAck" scoped="" ref="0x112e151b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x112e15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x112e0c660" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="ControllerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x112e0c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112e0c9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x112e0cb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112e0cd00"/>
        <function-ref name="cancel" scoped="" ref="0x112e0a020"/>
        <function-ref name="sendDone" scoped="" ref="0x112e0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x112e0a460" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="ControllerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x112e0a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112e0a7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x112e0a970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112e0ab00"/>
        <function-ref name="cancel" scoped="" ref="0x112e0ac90"/>
        <function-ref name="sendDone" scoped="" ref="0x112e0ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x112e090e0" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="ControllerAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x112e090e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x112e09460"/>
        <function-ref name="source" scoped="" ref="0x112e095f0"/>
        <function-ref name="address" scoped="" ref="0x112e09780"/>
        <function-ref name="destination" scoped="" ref="0x112e09910"/>
        <function-ref name="setSource" scoped="" ref="0x112e09aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x112e09c30"/>
        <function-ref name="type" scoped="" ref="0x112e09dc0"/>
        <function-ref name="setType" scoped="" ref="0x112e08020"/>
        <function-ref name="isForMe" scoped="" ref="0x112e081b0"/>
        <function-ref name="setGroup" scoped="" ref="0x112e08340"/>
        <function-ref name="localGroup" scoped="" ref="0x112e084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x11228e930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x11228e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x11228ecb0"/>
        <function-ref name="getPayload" scoped="" ref="0x11228ee40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x11228b020"/>
        <function-ref name="cancel" scoped="" ref="0x11228b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x11228b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1122b4400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1122b4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1122b47a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1122b4930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1122b4ac0"/>
        <function-ref name="cancel" scoped="" ref="0x1122b4c50"/>
        <function-ref name="sendDone" scoped="" ref="0x1122b4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1122b54b0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1122b54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1122b5850"/>
        <function-ref name="getPayload" scoped="" ref="0x1122b59e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1122b5b70"/>
        <function-ref name="cancel" scoped="" ref="0x1122b5d00"/>
        <function-ref name="sendDone" scoped="" ref="0x1122b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1122b2720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1122b2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1122b2aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1122b2c30"/>
        <function-ref name="getPayload" scoped="" ref="0x1122b2dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1122b1020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1122b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x1122b1480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x1122b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1122b1800"/>
        <function-ref name="runTask" scoped="" ref="0x1122b1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x1122b1c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x1122b1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1122b0020"/>
        <function-ref name="runTask" scoped="" ref="0x1122b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1122b3060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1122b3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1122b33e0"/>
        <function-ref name="source" scoped="" ref="0x1122b3570"/>
        <function-ref name="address" scoped="" ref="0x1122b3700"/>
        <function-ref name="destination" scoped="" ref="0x1122b3890"/>
        <function-ref name="setSource" scoped="" ref="0x1122b3a20"/>
        <function-ref name="setDestination" scoped="" ref="0x1122b3bb0"/>
        <function-ref name="type" scoped="" ref="0x1122b3d40"/>
        <function-ref name="setType" scoped="" ref="0x1122b2020"/>
        <function-ref name="isForMe" scoped="" ref="0x1122b21b0"/>
        <function-ref name="setGroup" scoped="" ref="0x1122b2340"/>
        <function-ref name="localGroup" scoped="" ref="0x1122b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x112308020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="ControllerAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x112308020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1123083a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x112308530"/>
        <function-ref name="getPayload" scoped="" ref="0x1123086c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112308850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1123089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11230e910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="ControllerAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11230e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11230ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x112308c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="ControllerAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x112308c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x112307020"/>
        <function-ref name="source" scoped="" ref="0x1123071b0"/>
        <function-ref name="address" scoped="" ref="0x112307340"/>
        <function-ref name="destination" scoped="" ref="0x1123074d0"/>
        <function-ref name="setSource" scoped="" ref="0x112307660"/>
        <function-ref name="setDestination" scoped="" ref="0x1123077f0"/>
        <function-ref name="type" scoped="" ref="0x112307980"/>
        <function-ref name="setType" scoped="" ref="0x112307b10"/>
        <function-ref name="isForMe" scoped="" ref="0x112307ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x112307e30"/>
        <function-ref name="localGroup" scoped="" ref="0x112306020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1123058f0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1123058f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x112305c70"/>
        <function-ref name="stopDone" scoped="" ref="0x112305e00"/>
        <function-ref name="start" scoped="" ref="0x112302020"/>
        <function-ref name="stop" scoped="" ref="0x1123021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x112302980" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x112302980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112302d00"/>
        <function-ref name="getPayload" scoped="" ref="0x112300020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1123001b0"/>
        <function-ref name="cancel" scoped="" ref="0x112300340"/>
        <function-ref name="sendDone" scoped="" ref="0x1123004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1122ff330" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1122ff330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1122ff6b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1122ff840"/>
        <function-ref name="getPayload" scoped="" ref="0x1122ff9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1122ffb60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1122ffcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x112300cb0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x112300cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1122ff0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1122fc300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1122fc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1122fc680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1122fc810"/>
        <function-ref name="led1On" scoped="" ref="0x1122fc9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1122fcb30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1122fccc0"/>
        <function-ref name="get" scoped="" ref="0x1122fce50"/>
        <function-ref name="led1Off" scoped="" ref="0x1122fb020"/>
        <function-ref name="led2Off" scoped="" ref="0x1122fb660"/>
        <function-ref name="set" scoped="" ref="0x1122fb1b0"/>
        <function-ref name="led0On" scoped="" ref="0x1122fb340"/>
        <function-ref name="led2On" scoped="" ref="0x1122fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x1122fd800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1122fd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1122fdb80"/>
        <function-ref name="noAck" scoped="" ref="0x1122fdd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x1122fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1122fe020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1122fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1122fe3a0"/>
        <function-ref name="source" scoped="" ref="0x1122fe530"/>
        <function-ref name="address" scoped="" ref="0x1122fe6c0"/>
        <function-ref name="destination" scoped="" ref="0x1122fe850"/>
        <function-ref name="setSource" scoped="" ref="0x1122fe9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x1122feb70"/>
        <function-ref name="type" scoped="" ref="0x1122fed00"/>
        <function-ref name="setType" scoped="" ref="0x1122fd020"/>
        <function-ref name="isForMe" scoped="" ref="0x1122fd1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x1122fd340"/>
        <function-ref name="localGroup" scoped="" ref="0x1122fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1123174a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1123174a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112317820"/>
        <function-ref name="getPayload" scoped="" ref="0x1123179b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112317b40"/>
        <function-ref name="cancel" scoped="" ref="0x112317cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x112317e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x11238c120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x11238c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11238c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1122f9300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1122f9300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1122f96a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1122f9830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1122f99c0"/>
        <function-ref name="cancel" scoped="" ref="0x1122f9b50"/>
        <function-ref name="sendDone" scoped="" ref="0x1122f9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x112319d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x112319d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x112318180"/>
        <function-ref name="payloadLength" scoped="" ref="0x112318310"/>
        <function-ref name="getPayload" scoped="" ref="0x1123184a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112318630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1123187c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x11231a0d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x11231a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x11231a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x112318a10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x112318a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x112318d90"/>
        <function-ref name="noAck" scoped="" ref="0x112317020"/>
        <function-ref name="wasAcked" scoped="" ref="0x1123171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x11231a6c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x11231a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x11231aa40"/>
        <function-ref name="source" scoped="" ref="0x11231abd0"/>
        <function-ref name="address" scoped="" ref="0x11231ad60"/>
        <function-ref name="destination" scoped="" ref="0x112319020"/>
        <function-ref name="setSource" scoped="" ref="0x1123191b0"/>
        <function-ref name="setDestination" scoped="" ref="0x112319340"/>
        <function-ref name="type" scoped="" ref="0x1123194d0"/>
        <function-ref name="setType" scoped="" ref="0x112319660"/>
        <function-ref name="isForMe" scoped="" ref="0x1123197f0"/>
        <function-ref name="setGroup" scoped="" ref="0x112319980"/>
        <function-ref name="localGroup" scoped="" ref="0x112319b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x11238ab90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x11238ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x112387020"/>
        <function-ref name="stopDone" scoped="" ref="0x1123871b0"/>
        <function-ref name="start" scoped="" ref="0x112387340"/>
        <function-ref name="stop" scoped="" ref="0x1123874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x112386790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x112386790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x110d43850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x112386b10"/>
        <function-ref name="getPayload" scoped="" ref="0x112386ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x112386e30"/>
        <function-ref name="cancel" scoped="" ref="0x112385020"/>
        <function-ref name="sendDone" scoped="" ref="0x1123851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11238a540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11238a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11238a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x112387c60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x112387c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x110d43850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x112386020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1123842b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1123842b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x112384630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1123847c0"/>
        <function-ref name="led1On" scoped="" ref="0x112384950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x112384ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x112384c70"/>
        <function-ref name="get" scoped="" ref="0x112384e00"/>
        <function-ref name="led1Off" scoped="" ref="0x112383020"/>
        <function-ref name="led2Off" scoped="" ref="0x112383660"/>
        <function-ref name="set" scoped="" ref="0x1123831b0"/>
        <function-ref name="led0On" scoped="" ref="0x112383340"/>
        <function-ref name="led2On" scoped="" ref="0x1123834d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x11237f970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x11237f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x110d43850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x11237fcf0"/>
        <function-ref name="offset" scoped="" ref="0x11237fe80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x112384030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x11237b7c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x11237b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x11237bb40"/>
        <function-ref name="stopDone" scoped="" ref="0x11237bcd0"/>
        <function-ref name="start" scoped="" ref="0x11237be60"/>
        <function-ref name="stop" scoped="" ref="0x11237a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x1124066e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x1124066e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x112406a60"/>
        <function-ref name="runTask" scoped="" ref="0x112406bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x11236a860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x11236a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x11236abe0"/>
        <function-ref name="stop" scoped="" ref="0x11236ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x1123c44f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x1123c44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1123c4870"/>
        <function-ref name="runTask" scoped="" ref="0x1123c4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x11237b170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x11237b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x11237b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x112365480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x112365480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x112365800"/>
        <function-ref name="flush" scoped="" ref="0x112365990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x112390c70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x112390c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x11238f020"/>
        <function-ref name="runTask" scoped="" ref="0x11238f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x112373020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x112373020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x1123733a0"/>
        <function-ref name="resetSend" scoped="" ref="0x112373530"/>
        <function-ref name="dataReceived" scoped="" ref="0x1123736c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x112373850"/>
        <function-ref name="putData" scoped="" ref="0x1123739e0"/>
        <function-ref name="putDone" scoped="" ref="0x112373b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x112373d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x112370020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x112370020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1123703a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x112370530"/>
        <function-ref name="led1On" scoped="" ref="0x1123706c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x112370850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1123709e0"/>
        <function-ref name="get" scoped="" ref="0x112370b70"/>
        <function-ref name="led1Off" scoped="" ref="0x112370d00"/>
        <function-ref name="led2Off" scoped="" ref="0x11236a4d0"/>
        <function-ref name="set" scoped="" ref="0x11236a020"/>
        <function-ref name="led0On" scoped="" ref="0x11236a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x11236a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x112402a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x112402a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x112402d80"/>
        <function-ref name="runTask" scoped="" ref="0x112401020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x112374720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x112374720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x112374aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x112374c30"/>
        <function-ref name="startSend" scoped="" ref="0x112374dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x112379020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x112371c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x112371c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x112378020"/>
        <function-ref name="byteReceived" scoped="" ref="0x1123781b0"/>
        <function-ref name="endPacket" scoped="" ref="0x112378340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x1124a8020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x1124a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1124a83a0"/>
        <function-ref name="runTask" scoped="" ref="0x1124a8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1124aede0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1124aede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x110d43850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1124ad1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x1124ad350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1124ad4e0"/>
        <function-ref name="cancel" scoped="" ref="0x1124ad670"/>
        <function-ref name="sendDone" scoped="" ref="0x1124ad800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x1124a8800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x1124a8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1124a8b80"/>
        <function-ref name="runTask" scoped="" ref="0x1124a8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1124ae6c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1124ae6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x110d43850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1124aea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x1124adc20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x1124adc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x110d43850"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x1124ab020"/>
        <function-ref name="offset" scoped="" ref="0x1124ab1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x1124ab340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1124aa920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1124aa920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1124aaca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1124aae30"/>
        <function-ref name="led1On" scoped="" ref="0x1124a9020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1124a91b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1124a9340"/>
        <function-ref name="get" scoped="" ref="0x1124a94d0"/>
        <function-ref name="led1Off" scoped="" ref="0x1124a9660"/>
        <function-ref name="led2On" scoped="" ref="0x1124a9ca0"/>
        <function-ref name="set" scoped="" ref="0x1124a9980"/>
        <function-ref name="led2Off" scoped="" ref="0x1124a97f0"/>
        <function-ref name="led0On" scoped="" ref="0x1124a9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x1124abe80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x1124abe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x1124aa220"/>
        <function-ref name="nextByte" scoped="" ref="0x1124aa3b0"/>
        <function-ref name="startSend" scoped="" ref="0x1124aa540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x1124aa6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x1124ab590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x1124ab590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x1124ab910"/>
        <function-ref name="byteReceived" scoped="" ref="0x1124abaa0"/>
        <function-ref name="endPacket" scoped="" ref="0x1124abc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x1124a3e40" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x1124a3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1124a21e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x1124a2370"/>
        <function-ref name="receive" scoped="" ref="0x1124a2500"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x1124a2690"/>
        <function-ref name="receiveDone" scoped="" ref="0x1124a2820"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x1124a29b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1124a2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x1124a6e00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x1124a6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x1124a31c0"/>
        <function-ref name="resetSend" scoped="" ref="0x1124a3350"/>
        <function-ref name="dataReceived" scoped="" ref="0x1124a34e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x1124a3670"/>
        <function-ref name="putData" scoped="" ref="0x1124a3800"/>
        <function-ref name="putDone" scoped="" ref="0x1124a3990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x1124a3b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1124a2dc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1124a2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1124a1180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1124a1310"/>
        <function-ref name="led1On" scoped="" ref="0x1124a14a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1124a1630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1124a17c0"/>
        <function-ref name="get" scoped="" ref="0x1124a1950"/>
        <function-ref name="led1Off" scoped="" ref="0x1124a1ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x1124a01b0"/>
        <function-ref name="set" scoped="" ref="0x1124a1c70"/>
        <function-ref name="led0On" scoped="" ref="0x1124a1e00"/>
        <function-ref name="led2On" scoped="" ref="0x1124a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x1124fd6b0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x1124fd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x1124fda30"/>
        <function-ref name="offset" scoped="" ref="0x1124fdbc0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x1124fdd50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x110d0a020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110d0cd30" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x110d09520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x110d092a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x110d0c350" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110d0a870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x110cd98d0" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110d072a0" loc="46:../../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x110d07020" loc="46:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x110d06130" loc="56:../../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x110d07b10" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x110d07e70" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x110d54e80" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d54c00" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x110d70020" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d72c90" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x110d6d490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d6ee50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d6d1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x110d6e560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x110d6f5e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d6f020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d6f350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x110d77020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x110d785d0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x110d78950" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d78c80" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x110d73660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d73060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d73390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x110d92790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x110d76390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d76110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x110d748b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d742d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x110d74620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x110cf6ba0" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x110cf6ba0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x110d11cc0" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x110d114a0" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x110d0f720" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x110cf6ba0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x110d0f4a0" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x110cf6ba0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x110d8d300" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
              <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x110d798b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x110d79c00" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x110d8d020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x110cee020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x110cee7d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x110ced020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x110cec020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x110ceb7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110ce9020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x110ced7b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110ce9b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x110ce9910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x110cf0850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x110cec800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x110ceb020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x110d7dd30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x110d44140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d7dab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x110d67a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d67790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x110d08e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x110d69950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d696d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x110d643a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d68d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x110d64110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x110d65e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d65870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x110d65bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x110d81810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d81590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x110d7fb90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d7f5e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x110d7f900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x110d45d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x110d82600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d82380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x110d7c2f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x110d44140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x110d80cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x110d7c060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x110d44140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x110d7a190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x110d44140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x110d01020" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x110d01020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x110cfbc50" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x110cff5b0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x110cfc360" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x110cfed60" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x110cfc0d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x110cfe5b0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x110cfaca0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x110cfa420" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x110cffd90" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x110d01b90" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x110d01910" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x110cfb2f0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x110cfcd00" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x110cfb060" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x110d00680" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x110d00400" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x110d00e80" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x110da6120" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x110ddf420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x110de1700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x110de0ce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x110de1020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x110de1e70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x110de30e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x110de37c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x110de05c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x110bd8070" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x11090a670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x110e38020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x110e3acc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x110e3c390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x110dd8ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x110dd7940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x110e38890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x110e377b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x110e3a560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x110e37020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x110e3cb30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x110e3b350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x110e3bda0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x110dd8ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x110dd7940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x110e3bb20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x110dd8ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x110dd7940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x110e2b0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x110e4c630" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x110e4c3b0" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x110e4b2a0" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x110e4b020" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x110e4ebe0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x110e4e3e0" loc="63:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x110e2ba90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x110e2b810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x110e323e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x110e32d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x110e32ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x110e30790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x110e30510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x110e2f2a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x110e2f020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x110e2f990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x110e1f810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x110e1c2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x110e1c020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x110e1e020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110e25aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x110e1e760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x110e229b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x110e1f120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x110e22270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x110e200e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x110e209f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x110e20770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x110e1ccb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x110e1ca30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x110e709f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x110caf670" loc="76:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x110961910" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x110851020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x11085c020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x110851770" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x110863020" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x110863870" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x110f8ae30" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x110f895c0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x110f8a020" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x110f87480" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110f8a720" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x110f89ce0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110f8b120" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x110f8b7f0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x110faf020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x110faf770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x110fd42e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x110fd4060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x110fb1770" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x110fad780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x110fd4bd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x110fad020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x110fb0820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x110fab020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x110fb0020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x110fb48c0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x110fac020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x110fab7c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x110fac7b0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x110fb1020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:../../../tos/interfaces/Get.nc">
      <documentation loc="33:../../../tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x1111db550" loc="49:../../../tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1111db550"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1111dbdf0" loc="55:../../../tos/interfaces/Get.nc">
        <documentation loc="50:../../../tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1111db550"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x111200020" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x1112017e0" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x111201070" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x111202790" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1111fa7b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1111f82b0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x1111fa020" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x1111f9a60" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x1111f97e0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x1111fc6f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x1111f9020" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x111351350" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x111351350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x111351c70" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x11134ec70" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x11134ec70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x11134b020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x11137fc50" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x111382ba0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x11137f2b0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x111380bd0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
          </variable>
          <variable name="dt" ref="0x11137f020" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x1113803b0" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x11137e480" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x11134bb80" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x11134b900" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x11134b020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1113823e0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1113be100" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1113be100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1113be340" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1113be340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1113bec60" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1113be340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1113bdd70" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1113bd510" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1113f6500" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1114f07d0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1114f0200" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1114f0540" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x1114eb450" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x1114eb1d0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x1114e92b0" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1114ebc50" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1114e9020" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x1114ec0e0" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x1114e8bb0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1114e8280" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1114e85c0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1114e8910" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x1114ec9d0" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1114ee0d0" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1114ed760" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1114edaa0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1114eddf0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x1114f22b0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1114f2ac0" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x11154b7f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x111549190" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x111546230" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11152e920"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x11152ed40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x11154d020" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x11154e020" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x11154f540" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x11154e810" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x11154da80" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x11157f840" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x11157f020" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x1115772e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111577060" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x11157a890" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x111591af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x11159c790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x111569390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151f7a0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x11151e020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x111569110" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151f7a0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x11151e020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x11159f7b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x111567880" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151a6f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x111519020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x111567600" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151a6f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x111519020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x111596e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x111592480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x111568e00" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151d670"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x11151de00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x1115650e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151a6f0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x111519020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x1115a3dc0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x1115a3b40" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x1115a3420" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x111596740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x111568610" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151d670"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x11151de00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x111568390" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151d670"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x11151de00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x1115a4270" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x1115955d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x1115a4c50" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x1115a49d0" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x1115a0730" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x11159f020" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x111597840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x11159a790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x11159e7e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x111596020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x11159b020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x111595cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x1115a15f0" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x1114f1780"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x111521e60"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x1115944c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x111591350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x111565a80" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x111565800" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x1115904d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111590250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x111569b70" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x11151f7a0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x11151e020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x11159e020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x11159b770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x111597020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11152e920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x11152ed40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x111599cf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11152e920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x11152ed40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x1115992a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x1115428d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x111542cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x111599020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x1115428d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x111542cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x111590d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x111594cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x1115a1e00" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x111592be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x11159a020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x11159c020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x111625390" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x111625be0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x111692c70" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x1116d54f0" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x1116c3bb0" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x1116ede00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x1116eb020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x1116ed570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x1116ec6d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x1116eb950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x1116e0020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1116e6090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1116e1d20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1116e6090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x1116e2020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x1116e2b20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1116e6090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1116e28a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x1116e6090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x1116e1470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x1116e6090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x111747770" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x111789020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x111789020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x111789260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111789260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x1117870b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111789260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111788e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x1117ce2a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117ce020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x111789e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111789ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1117cd610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111789260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117cd020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x1117cd380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111789260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x1117c1680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117c1060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x1117c13f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x1117c0850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117c05d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x1117c2810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x1117c5d60" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x1117c5ae0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x11178e2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11178e060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x11178d510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11178d290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x11178c680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11178c400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x1117e26e0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117e2460" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x1117e5940" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117e56c0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x1117e6020" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x1117e7d40" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x1117e74a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x1117e7220" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x1117e6a50" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x1117e67d0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x1117e3860" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117e35e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x1117d5020" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x1117d78b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x1117d7c30" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x1117f12b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1117f2c50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x1117f1020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x1117ed980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1117ed380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x1117ed6f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x1117f1d90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x1105c4110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1117f1b10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x1117ee880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1117ee600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x1117f2450" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1117f21d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x1117f0990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x1117f0710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x1117db830" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117db5b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x1117de8f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117de2d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x1117de660" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x1117dd810" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117dd590" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x1117dcd20" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117dc700" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x1117dca90" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x1117d9810" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117d9590" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x1117ea3d0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1117ea150" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x111818a70" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1118184b0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1118187e0" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x111811160" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111812ae0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x111812e10" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x111812270" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x111815d90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111815b10" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x111814360" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111816d10" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1118140d0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x11183e900" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x11183e340" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x11183e670" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x11183cc10" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x111838410" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x11183a5e0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x11183ae20" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x111838170" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x11183bdc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x11183b7e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x11183bb30" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x11183c3d0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x11183c150" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x111835820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x111835020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x11182fae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11182f820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x11182f020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x110d20680"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x110d1d020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111831be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x11182ede0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x110d1db20"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x110d1b440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x11182eae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x1117f94c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x1117f7570" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x1117f8d50" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x1117feb70" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x1117fbbe0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x1117f9d30" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x1117f8580" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x1117fb420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x111828480" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x11182aa80" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x111829c90" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x111829a10" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x111829270" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x11182b730" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x11182b4b0" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x11182a2a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x11182a020" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x1118af020" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x1118659f0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x111865d40" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x111866960" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x111866020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x111867820" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x111867c00" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x11186c2a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x11186c020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x111865270" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x11186ad70" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x11186aaf0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x11186b3e0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x11186b160" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x1118ae270" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x111867020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x111868c50" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x1118afa20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x11186bb60" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x1117c4ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x1117bb240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x11186a390" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x11186d850" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x11186c9f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x111868530" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x1118adc50" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1118adc50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x1118aa540" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x1118a92b0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1118adc50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1118aacc0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x1118a9020" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x1118adc50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1118d5a70" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x110d0d850"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1118d57f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1118d45c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x110d0d850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1118d4340" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x11189c640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x1117c4ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x1117bb240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x111890420" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x11188f390" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x111890c00" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x110d44140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x111891b80" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x110d44140"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x1118915a0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x110d44140"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x1118918f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x110d44520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x1118d0c50" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x110d0d850"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x11188dc00" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x110d0d850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x111893d80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x11188d610" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x11188d960" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1118d73b0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x110d0d850"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x11188b530" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x11188bda0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1118d7110" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x11199fbb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x1119f0d70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x1119f05c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1119f0340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x11199f350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x111a140e0" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x111a14930" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x111a121f0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x111a3eb60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111a3e580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x111a3e8d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x111a39dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111a39490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x111a397e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x111a39b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x111a3a6b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x110d0d850"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111a3a0d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x111a3a420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x111a40730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x110d0d850"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111a40150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x111a404a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x111a3c2c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111a3d930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x111a3dc80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x111a3c020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x111a1fcf0" loc="70:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x111a1f380" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x111a1f710" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x111a1fa50" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x111a1d3c0" loc="82:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x111a1b6a0" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x111a1ba30" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x111a1bd70" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x111a1d110" loc="83:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x111a23c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x111a23a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x111ad7120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x1115428d0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x111542cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x111adfd60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111adfae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x111ada2a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111ada020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x111adb610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x111adad30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111adaab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x111b909d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x111b4a420" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x111b96620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x111b963a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x111b53af0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x111b94c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x111b435e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x111b4b540" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x111b492d0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x111b4c500" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x111b4c280" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x111b4fa10" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x111b46070" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x111b95550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x111b90270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x111b98c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x111b8b350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x111b879d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x111b52980" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x111b478b0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x111b451f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x111b4cdc0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x111b548c0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x111b98460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x111b981e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x111b54190" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x111b944d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x111b8f190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x111b8ab00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x111b87270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x111b93b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x111b8f8c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x111b96db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x111b8c390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x111b500e0" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x111b427e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x111b8d7b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x111b91ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x111b45de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x111b45b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x111b892d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x111b99a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x111b93420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x111b53390" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11155b8d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x11155bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x111b53110" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x11155b8d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x11155bcf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x111b47190" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x111b4f2a0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x111b4f020" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x111b469d0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x111b46750" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x111b8cb60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x111b4eb50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x111b50850" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x111b992a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x111b99020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1105c5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x111b52270" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x111b8d020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x111b91350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x111b95cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x111b42020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x111b43d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x111b499f0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x111b4bc80" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x111b89a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x111b4e3c0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x111b4e140" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x111b8bb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x111b4ab50" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x111b8a350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x111df05e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x111df0360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x111dddb00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x111ddd1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x111ddd530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x111ddd860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x111ddc880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x111ddc2c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x111ddc5f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x111e25530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x111e25530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x111e25770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111e25770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x111e242e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111e25770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x111e24060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x111e25770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x111e88580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x111ebf9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x111ebf020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x111ebf750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x111ec07f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x111ec0020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x111ec3d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x1105c5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x111e6e3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111e6e150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x111e6f3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x110855090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111e6f150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x111e6b350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111e6b0d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x111e6d390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x111e6d110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x1120ca5f0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1120ca5f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1120c72a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1120ca5f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x1120c7020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1120ca5f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x11237f020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x112380960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x112380ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x112382020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x112380020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1123828b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x110d56e00"/>
                <typename><typedef-ref name="message_t" ref="0x110d54450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x112382c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x112365190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x1123699e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x11236f270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x11236d6c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x11236b390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x11236b110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x11236c020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x11236fde0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x11236fb60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x11236bbf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x11236c8d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x112377c10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x112376590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x1123772a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x112377020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x1123742a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x112374020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x112372020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x112372c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1123729c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1105c5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x112371730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x1123714b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x110858980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
