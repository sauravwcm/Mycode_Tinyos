<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="8:ActuatorC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x1039773e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x1037869a0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x1037869a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x103952590"/></to>
    </wire>
    <wire loc="10:ActuatorC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10398e770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x104e99020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x104e99020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x104ae02c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:ActuatorC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x10398abe0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x103cb6ce0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x103cb6ce0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x103f792f0"/></to>
    </wire>
    <wire loc="13:ActuatorC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x10398a020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x104cca5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x104cca5c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x104d4a4e0"/></to>
    </wire>
    <wire loc="15:ActuatorC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x1039d0ba0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x104cc7600"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x104cc7600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x104cbfb40"/></to>
    </wire>
    <wire loc="16:ActuatorC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x1039eebb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x104cc6e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x104cc6e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x104d52720"/></to>
    </wire>
    <wire loc="17:ActuatorC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x103a04cc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x104cc5ab0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x104cc5ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x104cdf020"/></to>
    </wire>
    <wire loc="18:ActuatorC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x103a01940"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x103cb3310"/></to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x103cb3310"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x103f3f060"/></to>
    </wire>
    <wire loc="20:ActuatorC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x103a03700"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x103f6ad20"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x103f6ad20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x103f78320"/></to>
    </wire>
    <wire loc="21:ActuatorC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x1039ff5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x103f67020"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x103f67020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x103f77510"/></to>
    </wire>
    <wire loc="22:ActuatorC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x1039fe210"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x103f67c00"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x103f67c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x103f761d0"/></to>
    </wire>
    <wire loc="23:ActuatorC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x1039fe8d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x103f662b0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x103f662b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x103fb1020"/></to>
    </wire>
    <wire loc="24:ActuatorC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x1039fc6c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x103f65020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x103f65020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x103f76800"/></to>
    </wire>
    <wire loc="26:ActuatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x103a159a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a37400"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104d4de50"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104bdedd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104b8ab70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104b3c750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104ae9080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104a10130"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1048b3620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10481cc60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1041037e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10560da40"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10444a020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10406acc0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1053ca020"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x103952c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1033053a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x1033053a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x103761420"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x10396a6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1037a0020"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1037a0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10379d280"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10396adc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10379d990"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x10379e640"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10379e640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1037ba580"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x10379c0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1037963f0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x10379c7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x103a60dd0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1037ba580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1037bf7e0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x1037b1bb0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x1037dd020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x103685510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x1037dc360"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x1038195a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038c56d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x103827020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038e1b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x103810700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038cb160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x103834a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038ebcb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x103817aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1038cc480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x10383a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1038eb020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x103831a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10391ccb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x1038215a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x103909220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x10381ab10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038719d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x103836a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038d62f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x10383c3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1038d7610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x1038265a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038d8220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x10380f700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038e67a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x103833a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1039072f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x103825be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038f56d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x103816890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1038e7ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x10380a060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10387f540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x10383ada0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x103908610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x1038000c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038cd020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x103820a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1039016d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x10382a690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038d3a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x103835a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038f37a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x103812cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1038d4de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x10383b1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1038f4ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x103832a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038ff7a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x1038220c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038edb30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x103839b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x103900ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x103837a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1038dfcb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x103838a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10391c020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x10383d570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x1038df020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x10381e020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1038fab30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10387d450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10387ed80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10387daa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x103917a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10387c120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x103913260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038d2930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10387f540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038d0020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10387ed80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038ca020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10387f540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038c87a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10387ed80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038e5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10387f540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038e4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10387ed80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x1038752f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x103875940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x1039139f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x103874020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x103912240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038deb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038dc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038f9160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038f87a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038f2610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038f1c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038eab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038e82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x103906160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1039057a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x1038fe610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1038fdc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10391bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1039192f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x103876bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x103760320"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x10375c990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x103367760"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x103a60dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x103a3adb0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x103a2fa90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x103a38590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x103a38590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x103c7b020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x103a35ca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x103a62830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x103a62830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x103c99b90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x103a55020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x103a61b50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x103a61b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x103c94710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x103c9c2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x103aaf200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x103aaf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bd0740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x103c98de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x103aad200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x103aad200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bf9100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x103c93930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x103aab200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x103aab200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bf5d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x103a72020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b56100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x103a88020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b81d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x103ae7560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b73d10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x103aef570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bfe100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x103ae5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b9c740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x103a84020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b77100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x103a99200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103ba4e00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x103ac9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103c09d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x103adf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b93d10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x103afb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103beb100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x103b13580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bfad10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x103a6c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b47100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x103add580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b8e740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x103a92020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b6b740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x103aa8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b97100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x103abd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bc4d10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x103ad3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bf0740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x103ac3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bfad10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x103a77020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b34d10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x103a8c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b5d860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x103aa2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b88100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x103abf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b73d10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x103af5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103c0d100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x103b15570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bfad10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x103ad5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bd5d10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x103a9e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bada60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x103ab3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bd9100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x103acd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103be2740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x103af3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103c09d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x103adb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bb5d10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x103a70020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b52d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x103a86020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b7c740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x103ad1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103beb100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x103a82020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b73d10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x103a97200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b9f740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x103ac7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103c03740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x103ad7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bd9100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x103a5b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b3d6d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x103a90020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b66100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x103aa6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b93d10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x103abb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bbe740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x103aff580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b88100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x103af9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103be7d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x103aed570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bfad10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x103ab7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bb5d10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x103afd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bb2d10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x103a74020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b2f740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x103a8a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b58270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x103aa0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bb2d10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x103ad9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bde740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x103af1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103c03740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x103a9c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103ba8460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x103ab1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bd5d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x103acb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103c0d100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x103a6e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b4d740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x103acf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103be7d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x103a94020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b43d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x103a80020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b9c740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x103a95200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bc8100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x103ac5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bfe100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x103a79020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b38100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x103a8e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b62d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x103aa4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b8e740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x103ab9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bb9100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x103ae1560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b97100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x103af7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103be2740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x103ae3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b97100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x103ab5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bde740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x103aeb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bfe100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x103b10580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103bf0740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x103ac11f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x103b77100"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x103f3f060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x103d0e050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x103ca61e0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x103f400c0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x103f400c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x103d119f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x103cb2a80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x103f3d790"/></to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103f3f800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103f3a020"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103f3a690"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103f42c00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103f42c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103d141d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x103f418f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1053a8020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1053a8020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x103e6bbc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103d0b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103f3f800"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1053a2440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x103d10c70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x103d0ee60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x1053a92a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1053a92a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103e6c850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x103d07710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1053a3c10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1053a3c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x103e6d980"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x103d10c70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x103d8ddc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x103d0e050"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x103d8b890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x103d119f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x103d8c6d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103d141d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103d8d020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103dbe020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103d0b1d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x103d8a230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x103d0ee60"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x103db9290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x103d07710"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x103dbe690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x103dad8b0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x103dad8b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x103dd7020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x103db9c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x103e66110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x103e66110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x103e60210"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x103db7dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x103da63b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x103dd3dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x103dad080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x103da5710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x103dd26d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x103ad9580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x103dd0670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x103ad7580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x103dce670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x103ad5580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x103dcc670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x103afd580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x103dca670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x103aff580"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x103e60210"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x103e5b2a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x103e4d450"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x1053a7020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x103dad8b0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1053a87c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x103ea34b0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x103ea34b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x103efd400"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x103ea2280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1053a2440"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x103e6bbc0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x103efe020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x103efe020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1053c76c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x103e6d980"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x103e9f0d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103e6c850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103eff210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103eff210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1053c8850"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x103efd400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1053c6a70"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x103e8d0a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x103da63b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x103efdcd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x103ea2280"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x103e8c020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x103efd400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103f1e9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103efe7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103efe7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1053c7e40"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x103f34b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x103dad080"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1053c5400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x103efdcd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1053c5bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x1053ca630"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x1053c2de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x105432470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x103f34b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x105432bd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x103f1e400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x105431270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103f1e9d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x105431e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x103f1d720"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x103f792f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x103fcc020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x103f78320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x104c10020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x103f761d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x104c0edf0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x103fb1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x104c0ca80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x103f63430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x104959550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x104959550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10494ba80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x103f85430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x103fa7170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x103fa7170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x103fbb080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x103f77510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104c0e210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103f5c350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103fb0020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103fb0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103fbc020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x103f76800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x104c0d470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x103f91660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x104956660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x104956660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x104947af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x103fcc020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x104bd2b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x103faf2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x104c0a8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x103f9b1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x104c0bce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x103fa80f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x103fbd020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x103fbd020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x103fbb080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x104bd2080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103fbc020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10495c6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x103fd1430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x103fbbb70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x103fbbb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x104c2c020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x103fa3170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x103fbc9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x103fbc9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10495ba70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x104c010f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103fcb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104c09860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x103fc8990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x103fc8990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x104b5ec90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x104c08690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x103fc0840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x103fc0840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x104b5da50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x104c034d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x104759b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x104c08ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x104950d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x104c06b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10494c640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x104c05610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x104070550"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x104070550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x1040660c0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x104c021f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x103fb5330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x103fb5330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x103fef7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x104c01d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x104bd2b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x104bcfd90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10495ba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10494b020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x104c2c020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x104c2a410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x104b5ec90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x104bc2a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x104bd2080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x104bcb2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x103fc9500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104b5e5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x104b5e5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x104bc2370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x10495c6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x10494dc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103fcb1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104b60be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x104b60be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104b547b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x103fbf6f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x104b5f8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x104b5f8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x104bc34d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x103fc9bc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x104b5c170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x104b5c170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x104bc0020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x104b5da50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x104bc1840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x104bcfd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x103fb7390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x103fb7390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x103fb4e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104b5b6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x104b41220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x104b41220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x104b3fa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104b40020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x104c2f350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x104c2f350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x104c2cd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104c2cd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x104bd6ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x104bd6ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x104bd0860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104bd0860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x103fb7e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x103fb7e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x103ff0990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x104b5b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104bd3980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x104bd3980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x104bcf690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x104bcf690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104b24aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x104b24aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104b20e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x104b21950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x103fb6b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x103fb6b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1048b87c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1048b87c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1048b1020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103fee640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10403d020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10403d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104067390"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x103fe6b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x10403b4b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x10403b4b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x104064020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x103feb020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1047ca6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x103feb020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1048bb5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1048bb5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1048b3ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1047ca6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10481b320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x103fddd30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x1047c7020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x1047c7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10481bbc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x103fe5ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1047c7cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x1047c7cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10481a970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x103fdab00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x104011130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x103fd9b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x104aeea20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x104aeea20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x104ae8a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x10400c850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x104af0aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x104af0aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1043fe280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x103fdb470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x1040072a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x1040082a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x1040092b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x10406b850"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x104063500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x104056790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x104100220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x104100220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x1040fa2e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x1040559d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x104202370"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x104202370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1041f41b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x104053ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x1041fece0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x1041fece0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10422d710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x104093020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x1041fb380"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x1041fb380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x104224d70"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x10408ec00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x104258210"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x104258210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x104346a30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10407cb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1046cee20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1046cee20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104393950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10407bb60"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x1046ca7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1046ca7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10407d3b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x1046c9ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1046c9ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10407c440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x1046ccad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1046ccad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10407dae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x1046c8160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1046c8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x104081420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x1046c0870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1046c0870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x104081cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x1046bd880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1046bd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1040885d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x1046bc0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1046bc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x104083020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x1046c4e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1046c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1040838f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x1046c3670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1046c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x104084e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x1046af500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1046af500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1040844a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x1046b0ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1046b0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1040801e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x1046c1e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1046c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x104080a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x1046c3e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x1046c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10407e3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x1046c2e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1046c2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x104079880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1046faa80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1046faa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104393950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x10407aa10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10472a9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10472a9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104393950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x104089390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x104759b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10405e970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x104758d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x104758d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10473d310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x1040b02f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x1040b1410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1041037e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1040fba20"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1040fba20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10549eaf0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x1040fa2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10549d370"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10549eaf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x105496ab0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10549d370"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1054905f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x105496ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10547a510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10548ad20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x105495360"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x105495360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10547ada0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10548c9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10419d020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10419d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1041c35f0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x105475020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10547f1b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10547f1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x105474760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10547e8f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10547e8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x105473a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10547dc10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10547dc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x103827020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x10383d570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x103825be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x10383b1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x1038220c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x10383a020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x1038215a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x10383ada0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x103820a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x103839b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x10381e020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x103838a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1041c1950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x103e60210"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x1042016a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1041f0d70"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x1041ff9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x104233b70"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x1042030e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1041f9710"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x1041fc020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1042281b0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1041f8930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x103a72020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1041f3480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x103a99200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1041ee020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x103a74020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x104231de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x103a5b020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10422c930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x103abb200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x104227480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x103a9c200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x104222020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x103abd200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x1042535a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10423f020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x104258e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x104383a70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10423fae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x1038265a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x10423dda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x103836a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x10423cc20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x103a9c200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x104385610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x104276c40"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x104276c40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x104263a30"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x104382610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x104279e30"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x104279e30"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x1042699c0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10426cbc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x1042a2bc0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x104273bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x10425fa30"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x104271bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x10425da30"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10427cd20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x104265a30"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10426ebc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x10425aa30"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x104275bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x104262a30"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10426bbc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x1042a1bc0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x104270bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x10425ca30"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x104277c80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x104264a30"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10426dc40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x1042a3bc0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x104274bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x104260a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x104272bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x10425ea30"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10427dd80"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x104266a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10426fbc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x10425ba30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x1046ca160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x1046bf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x1046b60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1046bd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1046ab500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1046ad500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1046c9490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x1046b3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1046ae500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x1046b9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x1046ba0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1046cda90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x104390670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x104390670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10438a920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1046c8e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1046c7490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1046b2c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x1046c7be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1046aece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x1046b30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x1046c2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x1046b40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x1046b6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x1046b4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1046acce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1046adce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x1046ba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x1046b50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1046afce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x1046bc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1046abce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1046cc480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x1046c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x1046c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x1046b80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x1046b8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1046bf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x1046c62f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x1046c4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1046c87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1046b0500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1046ac500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x1046b90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x1046b5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x1046cae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1046bb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1046c6940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x1046bb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x1046b20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1046a99b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x10438f630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x1043d4bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1043d1020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1043d1db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x104393950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104387810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x10438b510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x1043d0ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x1043cc020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x104403770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x104403770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1043fe280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1043cf400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104431c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x104431c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x105557e70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1043cd080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1044308f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1044308f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1055542c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1043c3680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x10469a020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10469a020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x105553440"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1043ccdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x1043be120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1043fe280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10444ab70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x105553440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x10446c850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1055542c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x10446d020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x105557e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104470430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x105555af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10554b5d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10554b5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1045b82c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x10446d020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1044b5a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1055548d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x10446d6a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x10446d6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x1044b4060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10446aa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x105553be0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10553da80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10446f6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x10446b690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x10554c860"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10554c860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1045b9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1044692a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x105544020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x105544020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1045bc4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x10446f6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1044b5250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10446c850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1044b4c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x104470430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1044b6470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1044b13e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10446aa40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1044b25b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x10446b690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1044ac480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x1044692a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x1044b1a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x1044a2020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x1044a2020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x1044eec70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1044acc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x1044aa2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1044ef5e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1044e6150"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1044f0d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1044e7780"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x10450bbb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x103abf580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x104509b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x103ae5580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x104507b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x103ae3580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x104505b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x103add580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x104503b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x103adf580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x104511d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x1045ef430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1055447c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1045bb3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x105544dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x1045a5540"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x1045a5540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x1045ef430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x10554a5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x1044a2020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10554bd70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1045b8ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1045b8ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1045aec30"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1045b78a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x10553da80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1045b82c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1045af850"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1045af850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x105608020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x1045bc4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1045b5060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1045b9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1045b0a80"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1045b0a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x105609270"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x1045bb3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1045b5990"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1045aec30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x105607400"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1045ad570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1045b78a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1045b4e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1045aec30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x1045b4060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1044f0d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x1045b4840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1044ef5e0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1045ae020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1056087a0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x105607cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1045ad570"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x105606500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x10560c0a0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x1056047a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x1045e8250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x1044eec70"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x1045e4d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x103abf580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x1045e2cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x103ae3580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1046edc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x1046f8da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x1046f1b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x1046eb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x1046e4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1046ebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1046d72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1046d92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1046f6120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x1046df670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1046db2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x1046f0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1046eec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x1046e5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x1046e7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1046ea670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1046f9760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x104390670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1046f4aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1046f3120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1046dea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x1046f3870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1046dbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1046f6dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x1046e0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x1046ee480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1046f0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1046f8750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x1046e2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x1046e3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x1046e0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1046d8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1046d9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x1046e6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x1046e3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1046dcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x1046e9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1046d7ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1046f8100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x1046f1370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x1046ed480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x1046e5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1046eae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x1046e4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1046ec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x1046f7450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1046ece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x1046f2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x1046f2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1046dc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1046ddad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1046f4450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1046dd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1046d82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x1046e6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x1046e2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x1046f7aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1046f6770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1046e9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1046f2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x1046e7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x1046dfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1046d67a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10471dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x104728da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x104720b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10471a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x104713e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10471ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1047072f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1047092f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x104725120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x10470f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10470a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10471fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10471ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x104715670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x104717e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x104719670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x104729760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x104390670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x104724aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x104723120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10470ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x104723870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10470aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x104725dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x104710e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x10471e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10471f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x104728750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x104711e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x104712670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x104710670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x104708ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x104709ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x104716670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x104712e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x10470bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x104718670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x104707ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x104728100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x104720370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10471d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x104715e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x104719e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x104713670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10471c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x104726450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10471ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x104722020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x104722cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10470b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x10470cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x104724450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10470c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1047082f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x104716e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x104711670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x104726aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x104725770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x104718e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x104722670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x104717670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x10470fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1047057a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x10473a880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x10478c020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x10478c020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x104787140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x104782bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x10478bc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x10478bc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x10476e150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x104786530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1047e0a20"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x104772540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x104773590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x104773590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1047de9e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x104769950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x104770ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x104770ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x1047a4a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x10476e9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x104772540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x104794020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x1047ec530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x1047ec530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1047e8e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1047e5020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x10380a060"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1047ddc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x103a8c020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x1047c3990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x104819900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x1047c5150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x1048180f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x104818ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x104100220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x10480c500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x1042030e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x104805820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x104202370"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x104804b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x1041fc020"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x10480d880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x1042535a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x104802020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10488ac30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10488ac30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104393950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x104802d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x1048898f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1048898f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x104390670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1047ff6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x1048882f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1048882f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x1047ffde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x104886cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x104886cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x1047fe530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x104885370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x104885370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1047fec60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x104884d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x104884d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x104800e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x1048e0c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x1048e0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x104801780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x1048c77a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1048c77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x104800550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1048cc2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1048cc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1047fd3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x1048e1480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1048e1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1047fc5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x1048dee50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1048dee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x1047fb020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x1048dc670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x1048dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1047fde80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x1048827b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1048827b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1047f99c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x1048caad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1048caad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1047fb890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x1048cb2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1048cb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1047f9130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x1048cbad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1048cbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x1047f4d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x1048bbdf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x1048bbdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x1048b2550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x104814d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x104813bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x104812950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x104959550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x104807be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x104952480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x104952480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1049a88b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1047f76c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x1048dfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x104886020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x104880c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x1048d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x1048dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1048c92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x1048d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x1048e1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x1048d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x1048d9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x1048db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x104883370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1048d0a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x104883ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1048ccad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x104884060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x1048d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x1048e0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x104888940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x1048d3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x1048d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x1048d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x1048d8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x1048d4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1048cdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x1048da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x1048c9ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x104880490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x1048df480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x1048d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x1048dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x1048d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x1048de670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x104886670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x104882160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x104882e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1048cd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1048cead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1048846b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1048ce2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x1048ca2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x1048d8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x1048d3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1048859c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x1048dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x1048d9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x1048d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x1048b7020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x1048b17c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1048ff150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x104913020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x104202370"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x104912380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x1042016a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x1049116b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x1041ff9d0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x104910a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x104258e30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10490f6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104ad1d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x104ad1d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x104393950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10490e530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x104b19ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x104b19ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10490dad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x104acb6b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x104acb6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x10490d3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x104aca370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x104aca370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10490b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10490a1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x104908d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x104959550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10490ab90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x104070550"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1049033e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x104ac3e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x104ac3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x104903cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x104ac2670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x104ac2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x104905b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x104ac9160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x104ac9160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1049016d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x104b192f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x104b192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x104902590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x104ab02f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x104ab02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x104902e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x104ab0ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x104ab0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x104900020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x104ab2ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x104ab2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1049008b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x104acf300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x104acf300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x1048f39d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1049af7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10419d020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x1049a3820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x1049b84e0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x1049a5b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x104a09610"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x104a09610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x104a8a2b0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x104a0e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x104a98150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x104a10130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104a43020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x104a43020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1056f79d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x104a92640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x104a162f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x104a79850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x104a43870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x104a43870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1056f05f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x104a88690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1049fab70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1049fab70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1049f2610"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1056f79d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1056da360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1056ead20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1056f6260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1056f6260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1056dabf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1056ed9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1049fab70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x105775dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1056e0020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1056e0020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x105772440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1056df760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1056df760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x105771760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1056dda80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1056dda80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1049efb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x103e60210"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x104a759c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x104a8da00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x104a808c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x104ae02c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x104ae02c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x104a0e020"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x104ac4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x104ace020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x104ac8c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x104abbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x104ac2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x104acd370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x104ab6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x104ab22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x104ac7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x104ac5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x104abc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x104abee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x104ac1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x104ad0970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x104390670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x104acbd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x104ab5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x104acaac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x104acb060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x104ab7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x104ac5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x104ac7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x104acf950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x104ab9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x104aba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x104ab7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x104aafad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x104abd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x104abae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x104ab3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x104ac0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x104ac8490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x104ac4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x104abce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x104ac1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x104abb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x104ac3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x104ace670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x104ac9e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x104ab32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x104ab4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x104ab42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x104aaf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x104abde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x104ab9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x104acecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x104acd9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x104ac0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x104ac97b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10438b510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x104abe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x104ab6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x104b187a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x10438f630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x104aec920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x104ae9940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x104af2990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104ae9080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104b3ce60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x104b40020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x104b3bae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x104b3d690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x104b3d690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1043fe280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x104b3a8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x104aeea20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x104b39170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x104b21200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x104b8a570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x104b893f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x104b21950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x104b89a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104bc0d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x104b5b6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x104bbfb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x104b5b020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x104bbe2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x104bbd170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x104bbdb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x104bdd410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x104b91db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x104bd1800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x104bcd580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x104bcd580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1043fe280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104c271c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103fbc020"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x104d4a4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x104d41e00"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x104cc6800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104ce09e0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104cc31a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104d51400"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x104d4de50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x104d417b0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x104d47940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x104cc3b20"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x104d51d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x104d48020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x104d4fa50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104d494c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x104d47020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x104eaa6b0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x104d48020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x104e5f830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x104d494c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x104e5f110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x104e5d760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x104d47020"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x104d3c750"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x104d47940"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x104e5b590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x104d47940"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x104e53c80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x104d47940"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x104e5c0e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x104d34340"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x104e5c9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x104d38e50"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x104d2e680"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x104e57b60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x104d2c020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x103cb2a80"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x104e54ca0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x103ca61e0"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x104dc4e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x104d85d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x104dc6400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x104dbf0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x104e5ac50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x104e59480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="ActuatorP" loc="7:ActuatorP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActuatorC.TimerMilliC" loc="44(ActuatorC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10384c890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10384cc30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10384b020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10384b3a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10384b720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10384ba90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10384be20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x103849200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x1038495d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x103873e70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x103870270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x103b0b9f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x103b0bda0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x103b0a1a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x103b0a550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x103b0a8c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x103e5a460" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x103e5a460"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x103e8a9b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x103eb7910" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x103ed3020" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1041439c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1041439c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x104199ba0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x104199ba0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1041963b0" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1041963b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1041967a0" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1041967a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x104195020" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x104195020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1041953f0" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x104195bf0" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x104195bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10419edc0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10419edc0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1041b9600" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1041b9600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1041b99f0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1041b99f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1041b8210" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1041b8210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1041b85e0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1047a2020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1047a2020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1047a27b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1047a27b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1049baa50" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1049baa50"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104a3ecc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104a3ecc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x104a70230" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x104a70230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x104a70560" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x103787020" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x103787020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1037873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x1037869a0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x1037869a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x103786d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1037a0020" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1037a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1037a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x10379c0c0" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x10379c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10379c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10379d280" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10379d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10379d600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x10379d990" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10379d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10379dd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x10379c7a0" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x10379c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10379cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1037963f0" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1037963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x103796770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x10379e640" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10379e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10379e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1037b1bb0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1037b1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1037b7b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x1037b71b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1037b7340"/>
        <function-ref name="initTimerA" scoped="" ref="0x1037b74d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1037b7020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1037b7660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1037b77f0"/>
        <function-ref name="initClocks" scoped="" ref="0x1037b7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1037ba580" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1037ba580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1037ba900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1037dd020" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1037dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1037dc020"/>
        <function-ref name="initTimerB" scoped="" ref="0x1037dd530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1037dd6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x1037dd850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1037dd3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1037dd9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1037ddb70"/>
        <function-ref name="initClocks" scoped="" ref="0x1037ddd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x1037dc360" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x1037dc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1037dc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1037bf7e0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1037bf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1037bfb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x1038195a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x1038195a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103819920"/>
        <function-ref name="getControl" scoped="" ref="0x103819ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103819c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103819dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103818020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038181b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103818340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038184d0"/>
        <function-ref name="setControl" scoped="" ref="0x103818660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x103827020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x103827020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1038273a0"/>
        <function-ref name="getControl" scoped="" ref="0x103827530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038276c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103827850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038279e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x103827b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103827d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103826020"/>
        <function-ref name="setControl" scoped="" ref="0x1038261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x103810700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x103810700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103810a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103810c10"/>
        <function-ref name="captured" scoped="" ref="0x103810da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10380f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10380f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10380f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x103834a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x103834a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103834da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103833020"/>
        <function-ref name="captured" scoped="" ref="0x1038331b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103833340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038334d0"/>
        <function-ref name="setEdge" scoped="" ref="0x103833660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x103817aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x103817aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103817e20"/>
        <function-ref name="setEvent" scoped="" ref="0x103816020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038161b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x103816340"/>
        <function-ref name="fired" scoped="" ref="0x1038164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x10383a020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x10383a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10383a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10383a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10383a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10383a850"/>
        <function-ref name="fired" scoped="" ref="0x10383a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x103831a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x103831a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103831da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103830020"/>
        <function-ref name="captured" scoped="" ref="0x1038301b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103830340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038304d0"/>
        <function-ref name="setEdge" scoped="" ref="0x103830660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x1038215a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x1038215a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103821920"/>
        <function-ref name="getControl" scoped="" ref="0x103821ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103821c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103821dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103820020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038201b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103820340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038204d0"/>
        <function-ref name="setControl" scoped="" ref="0x103820660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x10381ab10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x10381ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103801020"/>
        <function-ref name="getControl" scoped="" ref="0x1038011b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103801340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038014d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103801660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038017f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103801980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103801b10"/>
        <function-ref name="setControl" scoped="" ref="0x103801ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x103836a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x103836a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103836da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103835020"/>
        <function-ref name="captured" scoped="" ref="0x1038351b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103835340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038354d0"/>
        <function-ref name="setEdge" scoped="" ref="0x103835660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x10383c3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x10383c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10383c760"/>
        <function-ref name="setEvent" scoped="" ref="0x10383c8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10383ca80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10383cc10"/>
        <function-ref name="fired" scoped="" ref="0x10383cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x1038265a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x1038265a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103826a20"/>
        <function-ref name="getControl" scoped="" ref="0x103826bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103826d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103825020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038251b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x103825340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038254d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103825660"/>
        <function-ref name="setControl" scoped="" ref="0x1038257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x10380f700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x10380f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10380fa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10380fc10"/>
        <function-ref name="captured" scoped="" ref="0x10380fda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103829020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038291b0"/>
        <function-ref name="setEdge" scoped="" ref="0x103829340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x103833a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x103833a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103833da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103832020"/>
        <function-ref name="captured" scoped="" ref="0x1038321b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103832340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038324d0"/>
        <function-ref name="setEdge" scoped="" ref="0x103832660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x103825be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x103825be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103824020"/>
        <function-ref name="getControl" scoped="" ref="0x1038241b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103824340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038244d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103824660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038247f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103824980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103824b10"/>
        <function-ref name="setControl" scoped="" ref="0x103824ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x103816890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x103816890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103816c10"/>
        <function-ref name="setEvent" scoped="" ref="0x103816da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x103811020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038111b0"/>
        <function-ref name="fired" scoped="" ref="0x103811340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x10380a060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x10380a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10380a3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10380a570"/>
        <function-ref name="enableEvents" scoped="" ref="0x10380a700"/>
        <function-ref name="get" scoped="" ref="0x10380a890"/>
        <function-ref name="disableEvents" scoped="" ref="0x10380aa20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10380abb0"/>
        <function-ref name="getMode" scoped="" ref="0x10380ad40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103809020"/>
        <function-ref name="overflow" scoped="" ref="0x1038091b0"/>
        <function-ref name="setMode" scoped="" ref="0x103809340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x10383ada0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x10383ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103839180"/>
        <function-ref name="setEvent" scoped="" ref="0x103839310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038394a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x103839630"/>
        <function-ref name="fired" scoped="" ref="0x1038397c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x1038000c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x1038000c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103800440"/>
        <function-ref name="getControl" scoped="" ref="0x1038005d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103800760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038008f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103800a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x103800c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103800da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103819020"/>
        <function-ref name="setControl" scoped="" ref="0x1038191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x103820a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x103820a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103820dd0"/>
        <function-ref name="getControl" scoped="" ref="0x10381f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10381f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10381f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10381f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10381f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10381f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10381f980"/>
        <function-ref name="setControl" scoped="" ref="0x10381fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x10382a690" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x10382a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10382aa10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10382aba0"/>
        <function-ref name="captured" scoped="" ref="0x10382ad30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103810020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038101b0"/>
        <function-ref name="setEdge" scoped="" ref="0x103810340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x103835a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x103835a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103835da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103834020"/>
        <function-ref name="captured" scoped="" ref="0x1038341b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103834340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038344d0"/>
        <function-ref name="setEdge" scoped="" ref="0x103834660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x103812cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x103812cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038170a0"/>
        <function-ref name="setEvent" scoped="" ref="0x103817230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038173c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x103817550"/>
        <function-ref name="fired" scoped="" ref="0x1038176e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x10383b1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x10383b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10383b570"/>
        <function-ref name="setEvent" scoped="" ref="0x10383b700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10383b890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10383ba20"/>
        <function-ref name="fired" scoped="" ref="0x10383bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x103832a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x103832a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103832da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103831020"/>
        <function-ref name="captured" scoped="" ref="0x1038311b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103831340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038314d0"/>
        <function-ref name="setEdge" scoped="" ref="0x103831660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x1038220c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x1038220c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103822440"/>
        <function-ref name="getControl" scoped="" ref="0x1038225d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103822760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038228f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103822a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x103822c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103822da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103821020"/>
        <function-ref name="setControl" scoped="" ref="0x1038211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x1038296c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x1038296c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103829a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x103829bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103829d60"/>
        <function-ref name="get" scoped="" ref="0x103828020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038281b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103828340"/>
        <function-ref name="getMode" scoped="" ref="0x1038284d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103828660"/>
        <function-ref name="overflow" scoped="" ref="0x1038287f0"/>
        <function-ref name="setMode" scoped="" ref="0x103828980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x103828b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x103839b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x103839b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103838020"/>
        <function-ref name="setEvent" scoped="" ref="0x1038381b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x103838340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038384d0"/>
        <function-ref name="fired" scoped="" ref="0x103838660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x103837a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x103837a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103837da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103836020"/>
        <function-ref name="captured" scoped="" ref="0x1038361b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103836340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038364d0"/>
        <function-ref name="setEdge" scoped="" ref="0x103836660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x103838a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x103838a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103837020"/>
        <function-ref name="setEvent" scoped="" ref="0x1038371b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x103837340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038374d0"/>
        <function-ref name="fired" scoped="" ref="0x103837660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x10383d570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x10383d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10383d8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x10383da80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10383dc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10383dda0"/>
        <function-ref name="fired" scoped="" ref="0x10383c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x10381e020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x10381e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10381e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x10381e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10381e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10381e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10381e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10381eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10381ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10383d020"/>
        <function-ref name="setControl" scoped="" ref="0x10383d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10387daa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10387daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10387de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10387d450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10387d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10387d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10387c120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10387c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10387c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10387ed80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10387ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10387d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10387f540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10387f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10387f8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10387fa50"/>
        <function-ref name="enableEvents" scoped="" ref="0x10387fbe0"/>
        <function-ref name="get" scoped="" ref="0x10387fd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x10387e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10387e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10387e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10387e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10387e660"/>
        <function-ref name="setMode" scoped="" ref="0x10387e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10387e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x103875940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x103875940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103875cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x1038752f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x1038752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103875670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x103874020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x103874020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x103876bf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x103876bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103875020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1038773e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038773e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103877760"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038778f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103877a80"/>
        <function-ref name="get" scoped="" ref="0x103877c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x103877da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103876020"/>
        <function-ref name="getMode" scoped="" ref="0x1038761b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103876340"/>
        <function-ref name="overflow" scoped="" ref="0x1038764d0"/>
        <function-ref name="setMode" scoped="" ref="0x103876660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038d3a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038d3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038d3e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038d2020"/>
        <function-ref name="captured" scoped="" ref="0x1038d21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038d2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038d24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x1038d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038719d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038719d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103871d50"/>
        <function-ref name="getControl" scoped="" ref="0x1038d4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038d41b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038d4340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038d44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038d4660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038d47f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038d4980"/>
        <function-ref name="setControl" scoped="" ref="0x1038d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038d0020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1038d4de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1038d4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038d3180"/>
        <function-ref name="setEvent" scoped="" ref="0x1038d3310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038d34a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038d3630"/>
        <function-ref name="fired" scoped="" ref="0x1038d37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038d2930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038d2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038d2cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038d2e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038d1020"/>
        <function-ref name="get" scoped="" ref="0x1038d11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038d1340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038d14d0"/>
        <function-ref name="getMode" scoped="" ref="0x1038d1660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038d17f0"/>
        <function-ref name="overflow" scoped="" ref="0x1038d1980"/>
        <function-ref name="setMode" scoped="" ref="0x1038d1b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038d1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038cb160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038cb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038cb4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038cb670"/>
        <function-ref name="captured" scoped="" ref="0x1038cb800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038cb990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038cbb20"/>
        <function-ref name="setEdge" scoped="" ref="0x1038cbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038cd020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1038cd3a0"/>
        <function-ref name="getControl" scoped="" ref="0x1038cd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038cd6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038cd850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038cd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038cdb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038cdd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038cc020"/>
        <function-ref name="setControl" scoped="" ref="0x1038cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038c87a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038c87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038c8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1038cc480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1038cc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038cc800"/>
        <function-ref name="setEvent" scoped="" ref="0x1038cc990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038ccb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038cccb0"/>
        <function-ref name="fired" scoped="" ref="0x1038cce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038ca020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038ca3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038ca530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038ca6c0"/>
        <function-ref name="get" scoped="" ref="0x1038ca850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038ca9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038cab70"/>
        <function-ref name="getMode" scoped="" ref="0x1038cad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038c8020"/>
        <function-ref name="overflow" scoped="" ref="0x1038c81b0"/>
        <function-ref name="setMode" scoped="" ref="0x1038c8340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038e67a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038e67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038e6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038e6cb0"/>
        <function-ref name="captured" scoped="" ref="0x1038e6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038e5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038e51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x1038e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038c56d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038c56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1038c5a50"/>
        <function-ref name="getControl" scoped="" ref="0x1038c5be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038c5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038e7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038e71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038e7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038e74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038e7660"/>
        <function-ref name="setControl" scoped="" ref="0x1038e77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038e4c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038e4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1038e7ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1038e7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038e7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x1038e6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038e61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038e6340"/>
        <function-ref name="fired" scoped="" ref="0x1038e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038e5610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038e5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038e5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038e5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038e5cb0"/>
        <function-ref name="get" scoped="" ref="0x1038e5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038e4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038e41b0"/>
        <function-ref name="getMode" scoped="" ref="0x1038e4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038e44d0"/>
        <function-ref name="overflow" scoped="" ref="0x1038e4660"/>
        <function-ref name="setMode" scoped="" ref="0x1038e47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038e4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038dfcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038dfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038de0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038de230"/>
        <function-ref name="captured" scoped="" ref="0x1038de3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038de550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038de6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x1038de870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038e1b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038e1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1038e0020"/>
        <function-ref name="getControl" scoped="" ref="0x1038e01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038e0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038e04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038e0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038e07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038e0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038e0b10"/>
        <function-ref name="setControl" scoped="" ref="0x1038e0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038dc2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038dc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038dc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1038df020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1038df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038df3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1038df530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038df6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038df850"/>
        <function-ref name="fired" scoped="" ref="0x1038df9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038deb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038deb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038dd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038dd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038dd340"/>
        <function-ref name="get" scoped="" ref="0x1038dd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038dd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038dd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x1038dd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038ddb10"/>
        <function-ref name="overflow" scoped="" ref="0x1038ddca0"/>
        <function-ref name="setMode" scoped="" ref="0x1038dde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038d62f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038d6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038d6800"/>
        <function-ref name="captured" scoped="" ref="0x1038d6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038d6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038d6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x1038d6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038d8220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038d8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1038d85a0"/>
        <function-ref name="getControl" scoped="" ref="0x1038d8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038d88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038d8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038d8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038d8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038d7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038d71b0"/>
        <function-ref name="setControl" scoped="" ref="0x1038d7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038f87a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038f87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038f8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1038d7610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1038d7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038d7990"/>
        <function-ref name="setEvent" scoped="" ref="0x1038d7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038d7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038d7e40"/>
        <function-ref name="fired" scoped="" ref="0x1038d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038f9160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038f9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038f94e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038f9670"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038f9800"/>
        <function-ref name="get" scoped="" ref="0x1038f9990"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038f9b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038f9cb0"/>
        <function-ref name="getMode" scoped="" ref="0x1038f9e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038f8020"/>
        <function-ref name="overflow" scoped="" ref="0x1038f81b0"/>
        <function-ref name="setMode" scoped="" ref="0x1038f8340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038f37a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038f37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038f3b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038f3cb0"/>
        <function-ref name="captured" scoped="" ref="0x1038f3e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038f2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038f21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x1038f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038f56d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038f56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1038f5a50"/>
        <function-ref name="getControl" scoped="" ref="0x1038f5be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038f5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038f4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038f41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038f4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038f44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038f4660"/>
        <function-ref name="setControl" scoped="" ref="0x1038f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038f1c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038f1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1038f4ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1038f4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038f4e40"/>
        <function-ref name="setEvent" scoped="" ref="0x1038f3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038f31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038f3340"/>
        <function-ref name="fired" scoped="" ref="0x1038f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038f2610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038f2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038f2990"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038f2b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038f2cb0"/>
        <function-ref name="get" scoped="" ref="0x1038f2e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038f1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038f11b0"/>
        <function-ref name="getMode" scoped="" ref="0x1038f1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038f14d0"/>
        <function-ref name="overflow" scoped="" ref="0x1038f1660"/>
        <function-ref name="setMode" scoped="" ref="0x1038f17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038f1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038ebcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038ebcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038ea0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038ea230"/>
        <function-ref name="captured" scoped="" ref="0x1038ea3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038ea550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038ea6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x1038ea870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038edb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038edb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1038ec020"/>
        <function-ref name="getControl" scoped="" ref="0x1038ec1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038ec340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1038ec4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1038ec660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038ec7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1038ec980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1038ecb10"/>
        <function-ref name="setControl" scoped="" ref="0x1038ecca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038e82f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038e8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x1038eb020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x1038eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038eb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x1038eb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038eb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038eb850"/>
        <function-ref name="fired" scoped="" ref="0x1038eb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038eab40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038eab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038e9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038e91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038e9340"/>
        <function-ref name="get" scoped="" ref="0x1038e94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038e9660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038e97f0"/>
        <function-ref name="getMode" scoped="" ref="0x1038e9980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038e9b10"/>
        <function-ref name="overflow" scoped="" ref="0x1038e9ca0"/>
        <function-ref name="setMode" scoped="" ref="0x1038e9e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1039072f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1039072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103907670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x103907800"/>
        <function-ref name="captured" scoped="" ref="0x103907990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103907b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103907cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x103907e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x103909220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x103909220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1039095a0"/>
        <function-ref name="getControl" scoped="" ref="0x103909730"/>
        <function-ref name="enableEvents" scoped="" ref="0x1039098c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103909a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103909be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x103909d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103908020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1039081b0"/>
        <function-ref name="setControl" scoped="" ref="0x103908340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1039057a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1039057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103905b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x103908610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x103908610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103908990"/>
        <function-ref name="setEvent" scoped="" ref="0x103908b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x103908cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x103908e40"/>
        <function-ref name="fired" scoped="" ref="0x103907020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x103906160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x103906160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1039064e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x103906670"/>
        <function-ref name="enableEvents" scoped="" ref="0x103906800"/>
        <function-ref name="get" scoped="" ref="0x103906990"/>
        <function-ref name="disableEvents" scoped="" ref="0x103906b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103906cb0"/>
        <function-ref name="getMode" scoped="" ref="0x103906e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103905020"/>
        <function-ref name="overflow" scoped="" ref="0x1039051b0"/>
        <function-ref name="setMode" scoped="" ref="0x103905340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1039054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1038ff7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1038ff7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1038ffb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1038ffcb0"/>
        <function-ref name="captured" scoped="" ref="0x1038ffe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038fe020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038fe1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x1038fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1039016d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1039016d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103901a50"/>
        <function-ref name="getControl" scoped="" ref="0x103901be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103901d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103900020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1039001b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x103900340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1039004d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103900660"/>
        <function-ref name="setControl" scoped="" ref="0x1039007f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1038fdc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1038fdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1038fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x103900ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x103900ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103900e40"/>
        <function-ref name="setEvent" scoped="" ref="0x1038ff020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1038ff1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1038ff340"/>
        <function-ref name="fired" scoped="" ref="0x1038ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x1038fe610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1038fe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1038fe990"/>
        <function-ref name="setClockSource" scoped="" ref="0x1038feb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x1038fecb0"/>
        <function-ref name="get" scoped="" ref="0x1038fee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x1038fd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1038fd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x1038fd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1038fd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x1038fd660"/>
        <function-ref name="setMode" scoped="" ref="0x1038fd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1038fd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10391ccb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10391ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10391b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10391b230"/>
        <function-ref name="captured" scoped="" ref="0x10391b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10391b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10391b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10391b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1038fab30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1038fab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10391d020"/>
        <function-ref name="getControl" scoped="" ref="0x10391d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10391d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10391d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10391d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10391d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10391d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10391db10"/>
        <function-ref name="setControl" scoped="" ref="0x10391dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1039192f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1039192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103919670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10391c020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10391c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10391c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10391c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10391c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10391c850"/>
        <function-ref name="fired" scoped="" ref="0x10391c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10391bb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10391bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10391a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10391a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10391a340"/>
        <function-ref name="get" scoped="" ref="0x10391a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10391a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10391a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x10391a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10391ab10"/>
        <function-ref name="overflow" scoped="" ref="0x10391aca0"/>
        <function-ref name="setMode" scoped="" ref="0x10391ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x103919020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x103912240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x103912240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1039125c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x103917a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x103917a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103917e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x103913260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x103913260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1039135e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x1039139f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x1039139f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103913d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x103685510" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x103685510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x103685890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x103367760" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x103367760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x103367ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x10340ccc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x10340ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1034a10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x1037b8b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1037b8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x103951b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x1039511b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x103951340"/>
        <function-ref name="initTimerA" scoped="" ref="0x1039514d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x103951020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x103951660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1039517f0"/>
        <function-ref name="initClocks" scoped="" ref="0x103951980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10396adc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10396adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x103969180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x103952590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x103952590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x103952910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x10396a6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x10396a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10396aa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x103952c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x103952c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10396a020"/>
        <function-ref name="taskLoop" scoped="" ref="0x10396a1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10396a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x1032911d0" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x1032911d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x103291550"/>
        <function-ref name="runTask" scoped="" ref="0x1032916e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1033053a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x1033053a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x103305720"/>
        <function-ref name="taskLoop" scoped="" ref="0x1033058b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x103305a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x103760320" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x103760320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1037606a0"/>
        <function-ref name="runTask" scoped="" ref="0x103760830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x10375c990" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10375c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10375cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x103761420" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x103761420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1037617a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x103761930"/>
        <function-ref name="runNextTask" scoped="" ref="0x103761ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x1039773e0" loc="9:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x1039773e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x103977760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x10398a020" loc="11:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x10398a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x10398a3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x10398a530"/>
        <function-ref name="start" scoped="" ref="0x10398a6c0"/>
        <function-ref name="stop" scoped="" ref="0x10398a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x103a01940" loc="17:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x103a01940"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103a01cc0"/>
        <function-ref name="receive" scoped="" ref="0x103a01e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x1039fc6c0" loc="23:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMPacket" scoped="" ref="0x1039fc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1039fcb40"/>
        <function-ref name="source" scoped="" ref="0x1039fccd0"/>
        <function-ref name="address" scoped="" ref="0x1039fce60"/>
        <function-ref name="destination" scoped="" ref="0x1039f9020"/>
        <function-ref name="setSource" scoped="" ref="0x1039f91b0"/>
        <function-ref name="setDestination" scoped="" ref="0x1039f9340"/>
        <function-ref name="type" scoped="" ref="0x1039f94d0"/>
        <function-ref name="setType" scoped="" ref="0x1039f9660"/>
        <function-ref name="isForMe" scoped="" ref="0x1039f97f0"/>
        <function-ref name="setGroup" scoped="" ref="0x1039f9980"/>
        <function-ref name="localGroup" scoped="" ref="0x1039f9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x10398abe0" loc="12:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x10398abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x103989020"/>
        <function-ref name="stopDone" scoped="" ref="0x1039891b0"/>
        <function-ref name="start" scoped="" ref="0x103989340"/>
        <function-ref name="stop" scoped="" ref="0x1039894d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x1039fe8d0" loc="22:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x1039fe8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1039fec50"/>
        <function-ref name="payloadLength" scoped="" ref="0x1039fede0"/>
        <function-ref name="getPayload" scoped="" ref="0x1039fc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1039fc1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1039fc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x1039ff5a0" loc="20:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x1039ff5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1039ff920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x103a159a0" loc="25:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x103a159a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x103a15d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1039f7020"/>
        <function-ref name="led1On" scoped="" ref="0x1039f71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1039f7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1039f74d0"/>
        <function-ref name="get" scoped="" ref="0x1039f7660"/>
        <function-ref name="led1Off" scoped="" ref="0x1039f77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x1039f7e30"/>
        <function-ref name="set" scoped="" ref="0x1039f7980"/>
        <function-ref name="led0On" scoped="" ref="0x1039f7b10"/>
        <function-ref name="led2On" scoped="" ref="0x1039f7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x1039eebb0" loc="15:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x1039eebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103983020"/>
        <function-ref name="payloadLength" scoped="" ref="0x1039831b0"/>
        <function-ref name="getPayload" scoped="" ref="0x103983340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1039834d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x103983660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x103a03700" loc="19:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x103a03700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103a03a80"/>
        <function-ref name="getPayload" scoped="" ref="0x103a03c10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103a03da0"/>
        <function-ref name="cancel" scoped="" ref="0x103a00020"/>
        <function-ref name="sendDone" scoped="" ref="0x103a001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x1039d0ba0" loc="14:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x1039d0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103984020"/>
        <function-ref name="getPayload" scoped="" ref="0x1039841b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103984340"/>
        <function-ref name="cancel" scoped="" ref="0x1039844d0"/>
        <function-ref name="sendDone" scoped="" ref="0x103984660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x1039fe210" loc="21:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSnoop" scoped="" ref="0x1039fe210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1039fe590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x103a04cc0" loc="16:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x103a04cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1039d10a0"/>
        <function-ref name="source" scoped="" ref="0x1039d1230"/>
        <function-ref name="address" scoped="" ref="0x1039d13c0"/>
        <function-ref name="destination" scoped="" ref="0x1039d1550"/>
        <function-ref name="setSource" scoped="" ref="0x1039d16e0"/>
        <function-ref name="setDestination" scoped="" ref="0x1039d1870"/>
        <function-ref name="type" scoped="" ref="0x1039d1a00"/>
        <function-ref name="setType" scoped="" ref="0x1039d1b90"/>
        <function-ref name="isForMe" scoped="" ref="0x1039d1d20"/>
        <function-ref name="setGroup" scoped="" ref="0x1039ef020"/>
        <function-ref name="localGroup" scoped="" ref="0x1039ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10398e770" loc="10:ActuatorP.nc">
      <component-ref qname="ActuatorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10398e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10398cc40"/>
        <function-ref name="fired" scoped="" ref="0x10398d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10398c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10398dae0"/>
        <function-ref name="getdt" scoped="" ref="0x10398b590"/>
        <function-ref name="gett0" scoped="" ref="0x10398b110"/>
        <function-ref name="isRunning" scoped="" ref="0x10398d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x103976390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10398c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x103976860"/>
        <function-ref name="stop" scoped="" ref="0x103976d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x103a3ea90" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x103a3ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x103a3ee10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x103a3b020"/>
        <function-ref name="led1On" scoped="" ref="0x103a3b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x103a3b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x103a3b4d0"/>
        <function-ref name="get" scoped="" ref="0x103a3b660"/>
        <function-ref name="led1Off" scoped="" ref="0x103a3b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x103a3be30"/>
        <function-ref name="set" scoped="" ref="0x103a3b980"/>
        <function-ref name="led0On" scoped="" ref="0x103a3bb10"/>
        <function-ref name="led2On" scoped="" ref="0x103a3bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x103a2fa90" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x103a2fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a2fe10"/>
        <function-ref name="isInput" scoped="" ref="0x103a35020"/>
        <function-ref name="toggle" scoped="" ref="0x103a351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x103a35340"/>
        <function-ref name="get" scoped="" ref="0x103a354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a35660"/>
        <function-ref name="set" scoped="" ref="0x103a357f0"/>
        <function-ref name="clr" scoped="" ref="0x103a35980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x103a3adb0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x103a3adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x103a37180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x103a35ca0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x103a35ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a340a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a34230"/>
        <function-ref name="toggle" scoped="" ref="0x103a343c0"/>
        <function-ref name="isOutput" scoped="" ref="0x103a34550"/>
        <function-ref name="get" scoped="" ref="0x103a346e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a34870"/>
        <function-ref name="set" scoped="" ref="0x103a34a00"/>
        <function-ref name="clr" scoped="" ref="0x103a34b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x103a37400" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x103a37400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x103a37780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x103a37910"/>
        <function-ref name="led1On" scoped="" ref="0x103a37aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x103a37c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x103a37dc0"/>
        <function-ref name="get" scoped="" ref="0x103a36020"/>
        <function-ref name="led1Off" scoped="" ref="0x103a361b0"/>
        <function-ref name="led2Off" scoped="" ref="0x103a367f0"/>
        <function-ref name="set" scoped="" ref="0x103a36340"/>
        <function-ref name="led0On" scoped="" ref="0x103a364d0"/>
        <function-ref name="led2On" scoped="" ref="0x103a36660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x103a55020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x103a55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a553a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a55530"/>
        <function-ref name="toggle" scoped="" ref="0x103a556c0"/>
        <function-ref name="isOutput" scoped="" ref="0x103a55850"/>
        <function-ref name="get" scoped="" ref="0x103a559e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a55b70"/>
        <function-ref name="set" scoped="" ref="0x103a55d00"/>
        <function-ref name="clr" scoped="" ref="0x103a54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x103a38590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x103a38590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a38910"/>
        <function-ref name="isInput" scoped="" ref="0x103a38aa0"/>
        <function-ref name="toggle" scoped="" ref="0x103a38c30"/>
        <function-ref name="isOutput" scoped="" ref="0x103a38dc0"/>
        <function-ref name="get" scoped="" ref="0x103a62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a621b0"/>
        <function-ref name="set" scoped="" ref="0x103a62340"/>
        <function-ref name="clr" scoped="" ref="0x103a624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x103a62830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x103a62830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a62bb0"/>
        <function-ref name="isInput" scoped="" ref="0x103a62d40"/>
        <function-ref name="toggle" scoped="" ref="0x103a61020"/>
        <function-ref name="isOutput" scoped="" ref="0x103a611b0"/>
        <function-ref name="get" scoped="" ref="0x103a61340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a614d0"/>
        <function-ref name="set" scoped="" ref="0x103a61660"/>
        <function-ref name="clr" scoped="" ref="0x103a617f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x103a60dd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x103a60dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x103a5f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x103a61b50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x103a61b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a60020"/>
        <function-ref name="isInput" scoped="" ref="0x103a601b0"/>
        <function-ref name="toggle" scoped="" ref="0x103a60340"/>
        <function-ref name="isOutput" scoped="" ref="0x103a604d0"/>
        <function-ref name="get" scoped="" ref="0x103a60660"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a607f0"/>
        <function-ref name="set" scoped="" ref="0x103a60980"/>
        <function-ref name="clr" scoped="" ref="0x103a60b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x103a72020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x103a72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a723a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a72530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a726c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a72850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a729e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a72b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a72d00"/>
        <function-ref name="get" scoped="" ref="0x103a71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a71340"/>
        <function-ref name="set" scoped="" ref="0x103a714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a71a80"/>
        <function-ref name="clr" scoped="" ref="0x103a71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x103a88020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x103a88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a883a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a88530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a886c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a88850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a889e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a88b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a88d00"/>
        <function-ref name="get" scoped="" ref="0x103a87020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a87340"/>
        <function-ref name="set" scoped="" ref="0x103a874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a87660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a87a80"/>
        <function-ref name="clr" scoped="" ref="0x103a87c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x103ae7560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x103ae7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ae78e0"/>
        <function-ref name="isInput" scoped="" ref="0x103ae7a70"/>
        <function-ref name="setResistor" scoped="" ref="0x103ae7c00"/>
        <function-ref name="toggle" scoped="" ref="0x103ae7d90"/>
        <function-ref name="isOutput" scoped="" ref="0x103ae6020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ae61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ae6340"/>
        <function-ref name="get" scoped="" ref="0x103ae64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ae6660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ae67f0"/>
        <function-ref name="set" scoped="" ref="0x103ae6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ae6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ae6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ae5020"/>
        <function-ref name="clr" scoped="" ref="0x103ae51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x103aef570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x103aef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aef8f0"/>
        <function-ref name="isInput" scoped="" ref="0x103aefa80"/>
        <function-ref name="setResistor" scoped="" ref="0x103aefc10"/>
        <function-ref name="toggle" scoped="" ref="0x103aefda0"/>
        <function-ref name="isOutput" scoped="" ref="0x103aee020"/>
        <function-ref name="getResistor" scoped="" ref="0x103aee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aee340"/>
        <function-ref name="get" scoped="" ref="0x103aee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aee660"/>
        <function-ref name="getRaw" scoped="" ref="0x103aee7f0"/>
        <function-ref name="set" scoped="" ref="0x103aee980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aeeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aeeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aed020"/>
        <function-ref name="clr" scoped="" ref="0x103aed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x103ae5580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x103ae5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ae5900"/>
        <function-ref name="isInput" scoped="" ref="0x103ae5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x103ae5c20"/>
        <function-ref name="toggle" scoped="" ref="0x103ae5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ae4020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ae41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ae4340"/>
        <function-ref name="get" scoped="" ref="0x103ae44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ae4660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ae47f0"/>
        <function-ref name="set" scoped="" ref="0x103ae4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ae4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ae4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ae3020"/>
        <function-ref name="clr" scoped="" ref="0x103ae31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x103a84020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x103a84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a843a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a84530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a846c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a84850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a849e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a84b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a84d00"/>
        <function-ref name="get" scoped="" ref="0x103a83020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a83340"/>
        <function-ref name="set" scoped="" ref="0x103a834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a83660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a83a80"/>
        <function-ref name="clr" scoped="" ref="0x103a83c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x103a99200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x103a99200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a99580"/>
        <function-ref name="isInput" scoped="" ref="0x103a99710"/>
        <function-ref name="setResistor" scoped="" ref="0x103a998a0"/>
        <function-ref name="toggle" scoped="" ref="0x103a99a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103a99bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a99d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a98020"/>
        <function-ref name="get" scoped="" ref="0x103a981b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a98340"/>
        <function-ref name="getRaw" scoped="" ref="0x103a984d0"/>
        <function-ref name="set" scoped="" ref="0x103a98660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a987f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a98980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a98c10"/>
        <function-ref name="clr" scoped="" ref="0x103a98da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x103aaf200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x103aaf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aaf580"/>
        <function-ref name="isInput" scoped="" ref="0x103aaf710"/>
        <function-ref name="setResistor" scoped="" ref="0x103aaf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103aafa30"/>
        <function-ref name="isOutput" scoped="" ref="0x103aafbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aafd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aae020"/>
        <function-ref name="get" scoped="" ref="0x103aae1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aae340"/>
        <function-ref name="getRaw" scoped="" ref="0x103aae4d0"/>
        <function-ref name="set" scoped="" ref="0x103aae660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aae7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aae980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aaec10"/>
        <function-ref name="clr" scoped="" ref="0x103aaeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x103ac9200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x103ac9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ac9580"/>
        <function-ref name="isInput" scoped="" ref="0x103ac9710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ac98a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ac9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ac9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ac9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ac8020"/>
        <function-ref name="get" scoped="" ref="0x103ac81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ac8340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ac84d0"/>
        <function-ref name="set" scoped="" ref="0x103ac8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ac87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ac8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ac8c10"/>
        <function-ref name="clr" scoped="" ref="0x103ac8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x103adf580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x103adf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103adf900"/>
        <function-ref name="isInput" scoped="" ref="0x103adfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x103adfc20"/>
        <function-ref name="toggle" scoped="" ref="0x103adfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ade020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ade1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ade340"/>
        <function-ref name="get" scoped="" ref="0x103ade4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ade660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ade7f0"/>
        <function-ref name="set" scoped="" ref="0x103ade980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103adeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103adeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103add020"/>
        <function-ref name="clr" scoped="" ref="0x103add1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x103afb570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x103afb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103afb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x103afba80"/>
        <function-ref name="setResistor" scoped="" ref="0x103afbc10"/>
        <function-ref name="toggle" scoped="" ref="0x103afbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x103afa020"/>
        <function-ref name="getResistor" scoped="" ref="0x103afa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103afa340"/>
        <function-ref name="get" scoped="" ref="0x103afa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103afa660"/>
        <function-ref name="getRaw" scoped="" ref="0x103afa7f0"/>
        <function-ref name="set" scoped="" ref="0x103afa980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103afab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103afaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103af9020"/>
        <function-ref name="clr" scoped="" ref="0x103af91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x103b13580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x103b13580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b13900"/>
        <function-ref name="isInput" scoped="" ref="0x103b13a90"/>
        <function-ref name="setResistor" scoped="" ref="0x103b13c20"/>
        <function-ref name="toggle" scoped="" ref="0x103b13db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103b11020"/>
        <function-ref name="getResistor" scoped="" ref="0x103b111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b11340"/>
        <function-ref name="get" scoped="" ref="0x103b114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b11660"/>
        <function-ref name="getRaw" scoped="" ref="0x103b117f0"/>
        <function-ref name="set" scoped="" ref="0x103b11980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b11b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b11ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b10020"/>
        <function-ref name="clr" scoped="" ref="0x103b101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x103a6c020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x103a6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a6c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a6c530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a6c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a6c850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a6c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a6cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a6cd00"/>
        <function-ref name="get" scoped="" ref="0x103a6b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a6b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a6b340"/>
        <function-ref name="set" scoped="" ref="0x103a6b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a6b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a6b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a6ba80"/>
        <function-ref name="clr" scoped="" ref="0x103a6bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x103add580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x103add580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103add900"/>
        <function-ref name="isInput" scoped="" ref="0x103adda90"/>
        <function-ref name="setResistor" scoped="" ref="0x103addc20"/>
        <function-ref name="toggle" scoped="" ref="0x103adddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x103adc020"/>
        <function-ref name="getResistor" scoped="" ref="0x103adc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103adc340"/>
        <function-ref name="get" scoped="" ref="0x103adc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103adc660"/>
        <function-ref name="getRaw" scoped="" ref="0x103adc7f0"/>
        <function-ref name="set" scoped="" ref="0x103adc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103adcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103adcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103adb020"/>
        <function-ref name="clr" scoped="" ref="0x103adb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x103a92020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x103a92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a923a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a92530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a926c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a92850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a929e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a92b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a92d00"/>
        <function-ref name="get" scoped="" ref="0x103a91020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a91340"/>
        <function-ref name="set" scoped="" ref="0x103a914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a91660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a91a80"/>
        <function-ref name="clr" scoped="" ref="0x103a91c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x103aa8020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x103aa8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aa83a0"/>
        <function-ref name="isInput" scoped="" ref="0x103aa8530"/>
        <function-ref name="setResistor" scoped="" ref="0x103aa86c0"/>
        <function-ref name="toggle" scoped="" ref="0x103aa8850"/>
        <function-ref name="isOutput" scoped="" ref="0x103aa89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aa8b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aa8d00"/>
        <function-ref name="get" scoped="" ref="0x103aa7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aa71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103aa7340"/>
        <function-ref name="set" scoped="" ref="0x103aa74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aa7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aa77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aa7a80"/>
        <function-ref name="clr" scoped="" ref="0x103aa7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x103abd200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x103abd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103abd580"/>
        <function-ref name="isInput" scoped="" ref="0x103abd710"/>
        <function-ref name="setResistor" scoped="" ref="0x103abd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103abda30"/>
        <function-ref name="isOutput" scoped="" ref="0x103abdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103abdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103abc020"/>
        <function-ref name="get" scoped="" ref="0x103abc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103abc340"/>
        <function-ref name="getRaw" scoped="" ref="0x103abc4d0"/>
        <function-ref name="set" scoped="" ref="0x103abc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103abc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103abc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103abcc10"/>
        <function-ref name="clr" scoped="" ref="0x103abcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x103ad3200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x103ad3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ad3580"/>
        <function-ref name="isInput" scoped="" ref="0x103ad3710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ad38a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ad3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ad3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ad3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ad2020"/>
        <function-ref name="get" scoped="" ref="0x103ad21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ad2340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ad24d0"/>
        <function-ref name="set" scoped="" ref="0x103ad2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ad27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ad2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ad2c10"/>
        <function-ref name="clr" scoped="" ref="0x103ad2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x103ac3200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x103ac3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ac3580"/>
        <function-ref name="isInput" scoped="" ref="0x103ac3710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ac38a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ac3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ac3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ac3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ac2020"/>
        <function-ref name="get" scoped="" ref="0x103ac21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ac2340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ac24d0"/>
        <function-ref name="set" scoped="" ref="0x103ac2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ac27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ac2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ac2c10"/>
        <function-ref name="clr" scoped="" ref="0x103ac2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x103a77020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x103a77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a773a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a77530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a776c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a77850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a779e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a77b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a77d00"/>
        <function-ref name="get" scoped="" ref="0x103a76020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a76340"/>
        <function-ref name="set" scoped="" ref="0x103a764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a76660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a76a80"/>
        <function-ref name="clr" scoped="" ref="0x103a76c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x103a8c020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x103a8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a8c4a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a8c630"/>
        <function-ref name="setResistor" scoped="" ref="0x103a8c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a8c950"/>
        <function-ref name="isOutput" scoped="" ref="0x103a8cae0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a8cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a8ce00"/>
        <function-ref name="get" scoped="" ref="0x103a8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a8b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a8b340"/>
        <function-ref name="set" scoped="" ref="0x103a8b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a8b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a8b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a8ba80"/>
        <function-ref name="clr" scoped="" ref="0x103a8bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x103aa2020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x103aa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aa23a0"/>
        <function-ref name="isInput" scoped="" ref="0x103aa2530"/>
        <function-ref name="setResistor" scoped="" ref="0x103aa26c0"/>
        <function-ref name="toggle" scoped="" ref="0x103aa2850"/>
        <function-ref name="isOutput" scoped="" ref="0x103aa29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aa2b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aa2d00"/>
        <function-ref name="get" scoped="" ref="0x103aa1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aa11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103aa1340"/>
        <function-ref name="set" scoped="" ref="0x103aa14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aa1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aa17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aa1a80"/>
        <function-ref name="clr" scoped="" ref="0x103aa1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x103abf580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x103abf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103abf900"/>
        <function-ref name="isInput" scoped="" ref="0x103abfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x103abfc20"/>
        <function-ref name="toggle" scoped="" ref="0x103abfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ae8020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ae81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ae8340"/>
        <function-ref name="get" scoped="" ref="0x103ae84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ae8660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ae87f0"/>
        <function-ref name="set" scoped="" ref="0x103ae8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ae8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ae8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ae7020"/>
        <function-ref name="clr" scoped="" ref="0x103ae71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x103af5570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x103af5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103af58f0"/>
        <function-ref name="isInput" scoped="" ref="0x103af5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x103af5c10"/>
        <function-ref name="toggle" scoped="" ref="0x103af5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x103af4020"/>
        <function-ref name="getResistor" scoped="" ref="0x103af41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103af4340"/>
        <function-ref name="get" scoped="" ref="0x103af44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103af4660"/>
        <function-ref name="getRaw" scoped="" ref="0x103af47f0"/>
        <function-ref name="set" scoped="" ref="0x103af4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103af4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103af4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103af3020"/>
        <function-ref name="clr" scoped="" ref="0x103af31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x103b15570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x103b15570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b158f0"/>
        <function-ref name="isInput" scoped="" ref="0x103b15a80"/>
        <function-ref name="setResistor" scoped="" ref="0x103b15c10"/>
        <function-ref name="toggle" scoped="" ref="0x103b15da0"/>
        <function-ref name="isOutput" scoped="" ref="0x103b14020"/>
        <function-ref name="getResistor" scoped="" ref="0x103b141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b14340"/>
        <function-ref name="get" scoped="" ref="0x103b144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b14660"/>
        <function-ref name="getRaw" scoped="" ref="0x103b147f0"/>
        <function-ref name="set" scoped="" ref="0x103b14980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b14b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b14ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b13020"/>
        <function-ref name="clr" scoped="" ref="0x103b131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x103ad5580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x103ad5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ad5900"/>
        <function-ref name="isInput" scoped="" ref="0x103ad5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x103ad5c20"/>
        <function-ref name="toggle" scoped="" ref="0x103ad5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ad4020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ad41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ad4340"/>
        <function-ref name="get" scoped="" ref="0x103ad44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ad4660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ad47f0"/>
        <function-ref name="set" scoped="" ref="0x103ad4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ad4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ad4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aff020"/>
        <function-ref name="clr" scoped="" ref="0x103aff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x103a9e020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x103a9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a9e5a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a9e730"/>
        <function-ref name="setResistor" scoped="" ref="0x103a9e8c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a9ea50"/>
        <function-ref name="isOutput" scoped="" ref="0x103a9ebe0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a9ed70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a9d020"/>
        <function-ref name="get" scoped="" ref="0x103a9d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a9d340"/>
        <function-ref name="getRaw" scoped="" ref="0x103a9d4d0"/>
        <function-ref name="set" scoped="" ref="0x103a9d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a9d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a9d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a9dc10"/>
        <function-ref name="clr" scoped="" ref="0x103a9dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x103ab3200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x103ab3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ab3580"/>
        <function-ref name="isInput" scoped="" ref="0x103ab3710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ab38a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ab3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ab3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ab3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ab2020"/>
        <function-ref name="get" scoped="" ref="0x103ab21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ab2340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ab24d0"/>
        <function-ref name="set" scoped="" ref="0x103ab2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ab27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ab2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ab2c10"/>
        <function-ref name="clr" scoped="" ref="0x103ab2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x103acd200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x103acd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103acd580"/>
        <function-ref name="isInput" scoped="" ref="0x103acd710"/>
        <function-ref name="setResistor" scoped="" ref="0x103acd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103acda30"/>
        <function-ref name="isOutput" scoped="" ref="0x103acdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103acdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103acc020"/>
        <function-ref name="get" scoped="" ref="0x103acc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103acc340"/>
        <function-ref name="getRaw" scoped="" ref="0x103acc4d0"/>
        <function-ref name="set" scoped="" ref="0x103acc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103acc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103acc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103accc10"/>
        <function-ref name="clr" scoped="" ref="0x103accda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x103af3570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x103af3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103af38f0"/>
        <function-ref name="isInput" scoped="" ref="0x103af3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x103af3c10"/>
        <function-ref name="toggle" scoped="" ref="0x103af3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x103af2020"/>
        <function-ref name="getResistor" scoped="" ref="0x103af21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103af2340"/>
        <function-ref name="get" scoped="" ref="0x103af24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103af2660"/>
        <function-ref name="getRaw" scoped="" ref="0x103af27f0"/>
        <function-ref name="set" scoped="" ref="0x103af2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103af2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103af2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103af1020"/>
        <function-ref name="clr" scoped="" ref="0x103af11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x103adb570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x103adb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103adb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x103adba80"/>
        <function-ref name="setResistor" scoped="" ref="0x103adbc10"/>
        <function-ref name="toggle" scoped="" ref="0x103adbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ada020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ada1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ada340"/>
        <function-ref name="get" scoped="" ref="0x103ada4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ada660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ada7f0"/>
        <function-ref name="set" scoped="" ref="0x103ada980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103adab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103adaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ad9020"/>
        <function-ref name="clr" scoped="" ref="0x103ad91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x103a70020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x103a70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a703a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a70530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a706c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a70850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a709e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a70b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a70d00"/>
        <function-ref name="get" scoped="" ref="0x103a6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a6f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a6f340"/>
        <function-ref name="set" scoped="" ref="0x103a6f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a6f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a6f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a6fa80"/>
        <function-ref name="clr" scoped="" ref="0x103a6fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x103a86020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x103a86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a863a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a86530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a866c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a86850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a869e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a86b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a86d00"/>
        <function-ref name="get" scoped="" ref="0x103a85020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a85340"/>
        <function-ref name="set" scoped="" ref="0x103a854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a85660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a85a80"/>
        <function-ref name="clr" scoped="" ref="0x103a85c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x103ad1200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x103ad1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ad1580"/>
        <function-ref name="isInput" scoped="" ref="0x103ad1710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ad18a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ad1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ad1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ad1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ad0020"/>
        <function-ref name="get" scoped="" ref="0x103ad01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ad0340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ad04d0"/>
        <function-ref name="set" scoped="" ref="0x103ad0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ad07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ad0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ad0c10"/>
        <function-ref name="clr" scoped="" ref="0x103ad0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x103a82020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x103a82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a823a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a82530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a826c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a82850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a829e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a82b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a82d00"/>
        <function-ref name="get" scoped="" ref="0x103a81020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a81340"/>
        <function-ref name="set" scoped="" ref="0x103a814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a81660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a81a80"/>
        <function-ref name="clr" scoped="" ref="0x103a81c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x103a97200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x103a97200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a97580"/>
        <function-ref name="isInput" scoped="" ref="0x103a97710"/>
        <function-ref name="setResistor" scoped="" ref="0x103a978a0"/>
        <function-ref name="toggle" scoped="" ref="0x103a97a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103a97bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a97d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a96020"/>
        <function-ref name="get" scoped="" ref="0x103a961b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a96340"/>
        <function-ref name="getRaw" scoped="" ref="0x103a964d0"/>
        <function-ref name="set" scoped="" ref="0x103a96660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a967f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a96980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a96c10"/>
        <function-ref name="clr" scoped="" ref="0x103a96da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x103aad200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x103aad200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aad580"/>
        <function-ref name="isInput" scoped="" ref="0x103aad710"/>
        <function-ref name="setResistor" scoped="" ref="0x103aad8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103aada30"/>
        <function-ref name="isOutput" scoped="" ref="0x103aadbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aadd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aac020"/>
        <function-ref name="get" scoped="" ref="0x103aac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aac340"/>
        <function-ref name="getRaw" scoped="" ref="0x103aac4d0"/>
        <function-ref name="set" scoped="" ref="0x103aac660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aac7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aac980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aacc10"/>
        <function-ref name="clr" scoped="" ref="0x103aacda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x103ac7200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x103ac7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ac7580"/>
        <function-ref name="isInput" scoped="" ref="0x103ac7710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ac78a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ac7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ac7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ac7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ac6020"/>
        <function-ref name="get" scoped="" ref="0x103ac61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ac6340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ac64d0"/>
        <function-ref name="set" scoped="" ref="0x103ac6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ac67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ac6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ac6c10"/>
        <function-ref name="clr" scoped="" ref="0x103ac6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x103ad7580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x103ad7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ad7900"/>
        <function-ref name="isInput" scoped="" ref="0x103ad7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x103ad7c20"/>
        <function-ref name="toggle" scoped="" ref="0x103ad7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ad6020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ad61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ad6340"/>
        <function-ref name="get" scoped="" ref="0x103ad64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ad6660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ad67f0"/>
        <function-ref name="set" scoped="" ref="0x103ad6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ad6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ad6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ad5020"/>
        <function-ref name="clr" scoped="" ref="0x103ad51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x103a5b020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x103a5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a5b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a5b530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a5b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a5b850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a5b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a5bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a5bd00"/>
        <function-ref name="get" scoped="" ref="0x103a59020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a59340"/>
        <function-ref name="set" scoped="" ref="0x103a594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a59660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a59a80"/>
        <function-ref name="clr" scoped="" ref="0x103a59c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x103a90020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x103a90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a903a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a90530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a906c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a90850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a909e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a90b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a90d00"/>
        <function-ref name="get" scoped="" ref="0x103a8f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a8f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a8f340"/>
        <function-ref name="set" scoped="" ref="0x103a8f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a8f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a8f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a8fa80"/>
        <function-ref name="clr" scoped="" ref="0x103a8fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x103aa6020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x103aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aa63a0"/>
        <function-ref name="isInput" scoped="" ref="0x103aa6530"/>
        <function-ref name="setResistor" scoped="" ref="0x103aa66c0"/>
        <function-ref name="toggle" scoped="" ref="0x103aa6850"/>
        <function-ref name="isOutput" scoped="" ref="0x103aa69e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aa6b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aa6d00"/>
        <function-ref name="get" scoped="" ref="0x103aa5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aa51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103aa5340"/>
        <function-ref name="set" scoped="" ref="0x103aa54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aa5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aa57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aa5a80"/>
        <function-ref name="clr" scoped="" ref="0x103aa5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x103abb200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x103abb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103abb580"/>
        <function-ref name="isInput" scoped="" ref="0x103abb710"/>
        <function-ref name="setResistor" scoped="" ref="0x103abb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103abba30"/>
        <function-ref name="isOutput" scoped="" ref="0x103abbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103abbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aba020"/>
        <function-ref name="get" scoped="" ref="0x103aba1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aba340"/>
        <function-ref name="getRaw" scoped="" ref="0x103aba4d0"/>
        <function-ref name="set" scoped="" ref="0x103aba660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aba7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aba980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103abac10"/>
        <function-ref name="clr" scoped="" ref="0x103abada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x103aff580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x103aff580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aff900"/>
        <function-ref name="isInput" scoped="" ref="0x103affa90"/>
        <function-ref name="setResistor" scoped="" ref="0x103affc20"/>
        <function-ref name="toggle" scoped="" ref="0x103affdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x103afe020"/>
        <function-ref name="getResistor" scoped="" ref="0x103afe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103afe340"/>
        <function-ref name="get" scoped="" ref="0x103afe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103afe660"/>
        <function-ref name="getRaw" scoped="" ref="0x103afe7f0"/>
        <function-ref name="set" scoped="" ref="0x103afe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103afeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103afeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103afd020"/>
        <function-ref name="clr" scoped="" ref="0x103afd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x103af9570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x103af9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103af98f0"/>
        <function-ref name="isInput" scoped="" ref="0x103af9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x103af9c10"/>
        <function-ref name="toggle" scoped="" ref="0x103af9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x103af8020"/>
        <function-ref name="getResistor" scoped="" ref="0x103af81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103af8340"/>
        <function-ref name="get" scoped="" ref="0x103af84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103af8660"/>
        <function-ref name="getRaw" scoped="" ref="0x103af87f0"/>
        <function-ref name="set" scoped="" ref="0x103af8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103af8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103af8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103af7020"/>
        <function-ref name="clr" scoped="" ref="0x103af71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x103aed570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x103aed570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aed8f0"/>
        <function-ref name="isInput" scoped="" ref="0x103aeda80"/>
        <function-ref name="setResistor" scoped="" ref="0x103aedc10"/>
        <function-ref name="toggle" scoped="" ref="0x103aedda0"/>
        <function-ref name="isOutput" scoped="" ref="0x103aec020"/>
        <function-ref name="getResistor" scoped="" ref="0x103aec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aec340"/>
        <function-ref name="get" scoped="" ref="0x103aec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aec660"/>
        <function-ref name="getRaw" scoped="" ref="0x103aec7f0"/>
        <function-ref name="set" scoped="" ref="0x103aec980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aecb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aecca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aeb020"/>
        <function-ref name="clr" scoped="" ref="0x103aeb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x103ab7200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x103ab7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ab7580"/>
        <function-ref name="isInput" scoped="" ref="0x103ab7710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ab78a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ab7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ab7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ab7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ab6020"/>
        <function-ref name="get" scoped="" ref="0x103ab61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ab6340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ab64d0"/>
        <function-ref name="set" scoped="" ref="0x103ab6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ab67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ab6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ab6c10"/>
        <function-ref name="clr" scoped="" ref="0x103ab6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x103afd580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x103afd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103afd900"/>
        <function-ref name="isInput" scoped="" ref="0x103afda90"/>
        <function-ref name="setResistor" scoped="" ref="0x103afdc20"/>
        <function-ref name="toggle" scoped="" ref="0x103afddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x103afc020"/>
        <function-ref name="getResistor" scoped="" ref="0x103afc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103afc340"/>
        <function-ref name="get" scoped="" ref="0x103afc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103afc660"/>
        <function-ref name="getRaw" scoped="" ref="0x103afc7f0"/>
        <function-ref name="set" scoped="" ref="0x103afc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103afcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103afcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103afb020"/>
        <function-ref name="clr" scoped="" ref="0x103afb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x103a74020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x103a74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a743a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a74530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a746c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a74850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a749e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a74b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a74d00"/>
        <function-ref name="get" scoped="" ref="0x103a73020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a731b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a73340"/>
        <function-ref name="set" scoped="" ref="0x103a734d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a73660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a737f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a73a80"/>
        <function-ref name="clr" scoped="" ref="0x103a73c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x103a8a020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x103a8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a8a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a8a530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a8a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a8a850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a8a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a8ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a8ad00"/>
        <function-ref name="get" scoped="" ref="0x103a89020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a89340"/>
        <function-ref name="set" scoped="" ref="0x103a894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a89660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a89a80"/>
        <function-ref name="clr" scoped="" ref="0x103a89c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x103aa0020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x103aa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aa03a0"/>
        <function-ref name="isInput" scoped="" ref="0x103aa0530"/>
        <function-ref name="setResistor" scoped="" ref="0x103aa06c0"/>
        <function-ref name="toggle" scoped="" ref="0x103aa0850"/>
        <function-ref name="isOutput" scoped="" ref="0x103aa09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aa0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aa0d00"/>
        <function-ref name="get" scoped="" ref="0x103a9f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a9f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a9f340"/>
        <function-ref name="set" scoped="" ref="0x103a9f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a9f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a9f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a9fa80"/>
        <function-ref name="clr" scoped="" ref="0x103a9fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x103ad9580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x103ad9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ad9900"/>
        <function-ref name="isInput" scoped="" ref="0x103ad9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x103ad9c20"/>
        <function-ref name="toggle" scoped="" ref="0x103ad9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ad8020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ad81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ad8340"/>
        <function-ref name="get" scoped="" ref="0x103ad84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ad8660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ad87f0"/>
        <function-ref name="set" scoped="" ref="0x103ad8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ad8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ad8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ad7020"/>
        <function-ref name="clr" scoped="" ref="0x103ad71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x103af1570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x103af1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103af18f0"/>
        <function-ref name="isInput" scoped="" ref="0x103af1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x103af1c10"/>
        <function-ref name="toggle" scoped="" ref="0x103af1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x103af0020"/>
        <function-ref name="getResistor" scoped="" ref="0x103af01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103af0340"/>
        <function-ref name="get" scoped="" ref="0x103af04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103af0660"/>
        <function-ref name="getRaw" scoped="" ref="0x103af07f0"/>
        <function-ref name="set" scoped="" ref="0x103af0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103af0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103af0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aef020"/>
        <function-ref name="clr" scoped="" ref="0x103aef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x103a9c200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x103a9c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a9c580"/>
        <function-ref name="isInput" scoped="" ref="0x103a9c710"/>
        <function-ref name="setResistor" scoped="" ref="0x103a9c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103a9ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x103a9cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a9cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a9b020"/>
        <function-ref name="get" scoped="" ref="0x103a9b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a9b340"/>
        <function-ref name="getRaw" scoped="" ref="0x103a9b4d0"/>
        <function-ref name="set" scoped="" ref="0x103a9b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a9b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a9b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a9bc10"/>
        <function-ref name="clr" scoped="" ref="0x103a9bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x103ab1200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x103ab1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ab1580"/>
        <function-ref name="isInput" scoped="" ref="0x103ab1710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ab18a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ab1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ab1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ab1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ab0020"/>
        <function-ref name="get" scoped="" ref="0x103ab01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ab0340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ab04d0"/>
        <function-ref name="set" scoped="" ref="0x103ab0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ab07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ab0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ab0c10"/>
        <function-ref name="clr" scoped="" ref="0x103ab0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x103acb200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x103acb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103acb580"/>
        <function-ref name="isInput" scoped="" ref="0x103acb710"/>
        <function-ref name="setResistor" scoped="" ref="0x103acb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103acba30"/>
        <function-ref name="isOutput" scoped="" ref="0x103acbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103acbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aca020"/>
        <function-ref name="get" scoped="" ref="0x103aca1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aca340"/>
        <function-ref name="getRaw" scoped="" ref="0x103aca4d0"/>
        <function-ref name="set" scoped="" ref="0x103aca660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aca7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aca980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103acac10"/>
        <function-ref name="clr" scoped="" ref="0x103acada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x103a6e020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x103a6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a6e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a6e530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a6e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a6e850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a6e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a6eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a6ed00"/>
        <function-ref name="get" scoped="" ref="0x103a6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a6d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a6d340"/>
        <function-ref name="set" scoped="" ref="0x103a6d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a6d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a6d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a6da80"/>
        <function-ref name="clr" scoped="" ref="0x103a6dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x103acf200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x103acf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103acf580"/>
        <function-ref name="isInput" scoped="" ref="0x103acf710"/>
        <function-ref name="setResistor" scoped="" ref="0x103acf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103acfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x103acfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103acfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ace020"/>
        <function-ref name="get" scoped="" ref="0x103ace1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ace340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ace4d0"/>
        <function-ref name="set" scoped="" ref="0x103ace660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ace7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ace980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103acec10"/>
        <function-ref name="clr" scoped="" ref="0x103aceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x103a94020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x103a94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a943a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a94530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a946c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a94850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a949e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a94b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a94d00"/>
        <function-ref name="get" scoped="" ref="0x103a93020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a93340"/>
        <function-ref name="set" scoped="" ref="0x103a934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a93660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a93a80"/>
        <function-ref name="clr" scoped="" ref="0x103a93c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x103a80020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x103a80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a803a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a80530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a806c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a80850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a809e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a80b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a80d00"/>
        <function-ref name="get" scoped="" ref="0x103aa9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aa91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103aa9340"/>
        <function-ref name="set" scoped="" ref="0x103aa94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aa9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aa97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aa9a80"/>
        <function-ref name="clr" scoped="" ref="0x103aa9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x103a95200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x103a95200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a95580"/>
        <function-ref name="isInput" scoped="" ref="0x103a95710"/>
        <function-ref name="setResistor" scoped="" ref="0x103a958a0"/>
        <function-ref name="toggle" scoped="" ref="0x103a95a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103a95bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a95d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103abe020"/>
        <function-ref name="get" scoped="" ref="0x103abe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103abe340"/>
        <function-ref name="getRaw" scoped="" ref="0x103abe4d0"/>
        <function-ref name="set" scoped="" ref="0x103abe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103abe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103abe980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103abec10"/>
        <function-ref name="clr" scoped="" ref="0x103abeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x103aab200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x103aab200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aab580"/>
        <function-ref name="isInput" scoped="" ref="0x103aab710"/>
        <function-ref name="setResistor" scoped="" ref="0x103aab8a0"/>
        <function-ref name="toggle" scoped="" ref="0x103aaba30"/>
        <function-ref name="isOutput" scoped="" ref="0x103aabbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aabd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aaa020"/>
        <function-ref name="get" scoped="" ref="0x103aaa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aaa340"/>
        <function-ref name="getRaw" scoped="" ref="0x103aaa4d0"/>
        <function-ref name="set" scoped="" ref="0x103aaa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aaa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aaa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aaac10"/>
        <function-ref name="clr" scoped="" ref="0x103aaada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x103ac5200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x103ac5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ac5580"/>
        <function-ref name="isInput" scoped="" ref="0x103ac5710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ac58a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ac5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ac5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ac5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ac4020"/>
        <function-ref name="get" scoped="" ref="0x103ac41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ac4340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ac44d0"/>
        <function-ref name="set" scoped="" ref="0x103ac4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ac47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ac4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ac4c10"/>
        <function-ref name="clr" scoped="" ref="0x103ac4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x103a79020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x103a79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a793a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a79530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a796c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a79850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a799e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a79b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a79d00"/>
        <function-ref name="get" scoped="" ref="0x103a78020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a78340"/>
        <function-ref name="set" scoped="" ref="0x103a784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a78660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a78a80"/>
        <function-ref name="clr" scoped="" ref="0x103a78c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x103a8e020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x103a8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103a8e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x103a8e530"/>
        <function-ref name="setResistor" scoped="" ref="0x103a8e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x103a8e850"/>
        <function-ref name="isOutput" scoped="" ref="0x103a8e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103a8eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103a8ed00"/>
        <function-ref name="get" scoped="" ref="0x103a8d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103a8d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103a8d340"/>
        <function-ref name="set" scoped="" ref="0x103a8d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103a8d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103a8d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103a8da80"/>
        <function-ref name="clr" scoped="" ref="0x103a8dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x103aa4020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x103aa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aa43a0"/>
        <function-ref name="isInput" scoped="" ref="0x103aa4530"/>
        <function-ref name="setResistor" scoped="" ref="0x103aa46c0"/>
        <function-ref name="toggle" scoped="" ref="0x103aa4850"/>
        <function-ref name="isOutput" scoped="" ref="0x103aa49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x103aa4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aa4d00"/>
        <function-ref name="get" scoped="" ref="0x103aa3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aa31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103aa3340"/>
        <function-ref name="set" scoped="" ref="0x103aa34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aa3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aa37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103aa3a80"/>
        <function-ref name="clr" scoped="" ref="0x103aa3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x103ab9200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x103ab9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ab9580"/>
        <function-ref name="isInput" scoped="" ref="0x103ab9710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ab98a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ab9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ab9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ab9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ab8020"/>
        <function-ref name="get" scoped="" ref="0x103ab81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ab8340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ab84d0"/>
        <function-ref name="set" scoped="" ref="0x103ab8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ab87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ab8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ab8c10"/>
        <function-ref name="clr" scoped="" ref="0x103ab8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x103ae1560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x103ae1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ae18e0"/>
        <function-ref name="isInput" scoped="" ref="0x103ae1a70"/>
        <function-ref name="setResistor" scoped="" ref="0x103ae1c00"/>
        <function-ref name="toggle" scoped="" ref="0x103ae1d90"/>
        <function-ref name="isOutput" scoped="" ref="0x103ae0020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ae01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ae0340"/>
        <function-ref name="get" scoped="" ref="0x103ae04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ae0660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ae07f0"/>
        <function-ref name="set" scoped="" ref="0x103ae0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ae0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ae0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103adf020"/>
        <function-ref name="clr" scoped="" ref="0x103adf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x103af7570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x103af7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103af78f0"/>
        <function-ref name="isInput" scoped="" ref="0x103af7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x103af7c10"/>
        <function-ref name="toggle" scoped="" ref="0x103af7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x103af6020"/>
        <function-ref name="getResistor" scoped="" ref="0x103af61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103af6340"/>
        <function-ref name="get" scoped="" ref="0x103af64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103af6660"/>
        <function-ref name="getRaw" scoped="" ref="0x103af67f0"/>
        <function-ref name="set" scoped="" ref="0x103af6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103af6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103af6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103af5020"/>
        <function-ref name="clr" scoped="" ref="0x103af51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x103ae3580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x103ae3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ae3900"/>
        <function-ref name="isInput" scoped="" ref="0x103ae3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x103ae3c20"/>
        <function-ref name="toggle" scoped="" ref="0x103ae3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103ae2020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ae21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ae2340"/>
        <function-ref name="get" scoped="" ref="0x103ae24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ae2660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ae27f0"/>
        <function-ref name="set" scoped="" ref="0x103ae2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ae2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ae2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ae1020"/>
        <function-ref name="clr" scoped="" ref="0x103ae11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x103ab5200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x103ab5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ab5580"/>
        <function-ref name="isInput" scoped="" ref="0x103ab5710"/>
        <function-ref name="setResistor" scoped="" ref="0x103ab58a0"/>
        <function-ref name="toggle" scoped="" ref="0x103ab5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x103ab5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x103ab5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ab4020"/>
        <function-ref name="get" scoped="" ref="0x103ab41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ab4340"/>
        <function-ref name="getRaw" scoped="" ref="0x103ab44d0"/>
        <function-ref name="set" scoped="" ref="0x103ab4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ab47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ab4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ab4c10"/>
        <function-ref name="clr" scoped="" ref="0x103ab4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x103aeb570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x103aeb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103aeb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x103aeba80"/>
        <function-ref name="setResistor" scoped="" ref="0x103aebc10"/>
        <function-ref name="toggle" scoped="" ref="0x103aebda0"/>
        <function-ref name="isOutput" scoped="" ref="0x103aea020"/>
        <function-ref name="getResistor" scoped="" ref="0x103aea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103aea340"/>
        <function-ref name="get" scoped="" ref="0x103aea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103aea660"/>
        <function-ref name="getRaw" scoped="" ref="0x103aea7f0"/>
        <function-ref name="set" scoped="" ref="0x103aea980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103aeab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103aeaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b15020"/>
        <function-ref name="clr" scoped="" ref="0x103b151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x103b10580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x103b10580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b10900"/>
        <function-ref name="isInput" scoped="" ref="0x103b10a90"/>
        <function-ref name="setResistor" scoped="" ref="0x103b10c20"/>
        <function-ref name="toggle" scoped="" ref="0x103b10db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103b0f020"/>
        <function-ref name="getResistor" scoped="" ref="0x103b0f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b0f340"/>
        <function-ref name="get" scoped="" ref="0x103b0f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b0f660"/>
        <function-ref name="getRaw" scoped="" ref="0x103b0f7f0"/>
        <function-ref name="set" scoped="" ref="0x103b0f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b0fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b0fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b0e020"/>
        <function-ref name="clr" scoped="" ref="0x103b0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x103ac11f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x103ac11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ac1970"/>
        <function-ref name="isInput" scoped="" ref="0x103ac1b00"/>
        <function-ref name="setResistor" scoped="" ref="0x103ac1c90"/>
        <function-ref name="toggle" scoped="" ref="0x103ac1e20"/>
        <function-ref name="isOutput" scoped="" ref="0x103ac0020"/>
        <function-ref name="getResistor" scoped="" ref="0x103ac01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ac0340"/>
        <function-ref name="get" scoped="" ref="0x103ac04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ac0660"/>
        <function-ref name="getRaw" scoped="" ref="0x103ac07f0"/>
        <function-ref name="set" scoped="" ref="0x103ac0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ac0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ac0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103abf020"/>
        <function-ref name="clr" scoped="" ref="0x103abf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b3d6d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b3d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b3da50"/>
        <function-ref name="isInput" scoped="" ref="0x103b3dbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x103b3dd70"/>
        <function-ref name="toggle" scoped="" ref="0x103b3c020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b3c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b3c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b3c4d0"/>
        <function-ref name="get" scoped="" ref="0x103b3c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b3c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b3c980"/>
        <function-ref name="set" scoped="" ref="0x103b3cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b3cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b3ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b3b120"/>
        <function-ref name="clr" scoped="" ref="0x103b3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b38100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b38480"/>
        <function-ref name="isInput" scoped="" ref="0x103b38610"/>
        <function-ref name="setResistor" scoped="" ref="0x103b387a0"/>
        <function-ref name="toggle" scoped="" ref="0x103b38930"/>
        <function-ref name="isOutput" scoped="" ref="0x103b38ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b38c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b38de0"/>
        <function-ref name="get" scoped="" ref="0x103b37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b37340"/>
        <function-ref name="set" scoped="" ref="0x103b374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b37660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b37a80"/>
        <function-ref name="clr" scoped="" ref="0x103b37c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b34d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b34d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b330e0"/>
        <function-ref name="isInput" scoped="" ref="0x103b33270"/>
        <function-ref name="setResistor" scoped="" ref="0x103b33400"/>
        <function-ref name="toggle" scoped="" ref="0x103b33590"/>
        <function-ref name="isOutput" scoped="" ref="0x103b33720"/>
        <function-ref name="getResistor" scoped="" ref="0x103b338b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b33a40"/>
        <function-ref name="get" scoped="" ref="0x103b33bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b33d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103b32020"/>
        <function-ref name="set" scoped="" ref="0x103b321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b32340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b32760"/>
        <function-ref name="clr" scoped="" ref="0x103b328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b2f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b2f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b2fac0"/>
        <function-ref name="isInput" scoped="" ref="0x103b2fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x103b2fde0"/>
        <function-ref name="toggle" scoped="" ref="0x103b2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b2e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b2e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b2e4d0"/>
        <function-ref name="get" scoped="" ref="0x103b2e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b2e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b2e980"/>
        <function-ref name="set" scoped="" ref="0x103b2eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b2eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b2ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b2d120"/>
        <function-ref name="clr" scoped="" ref="0x103b2d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b56100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b56480"/>
        <function-ref name="isInput" scoped="" ref="0x103b56610"/>
        <function-ref name="setResistor" scoped="" ref="0x103b567a0"/>
        <function-ref name="toggle" scoped="" ref="0x103b56930"/>
        <function-ref name="isOutput" scoped="" ref="0x103b56ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b56c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b56de0"/>
        <function-ref name="get" scoped="" ref="0x103b55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b55340"/>
        <function-ref name="set" scoped="" ref="0x103b554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b55a80"/>
        <function-ref name="clr" scoped="" ref="0x103b55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b52d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b52d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b510e0"/>
        <function-ref name="isInput" scoped="" ref="0x103b51270"/>
        <function-ref name="setResistor" scoped="" ref="0x103b51400"/>
        <function-ref name="toggle" scoped="" ref="0x103b51590"/>
        <function-ref name="isOutput" scoped="" ref="0x103b51720"/>
        <function-ref name="getResistor" scoped="" ref="0x103b518b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b51a40"/>
        <function-ref name="get" scoped="" ref="0x103b51bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b51d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103b50020"/>
        <function-ref name="set" scoped="" ref="0x103b501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b50340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b50760"/>
        <function-ref name="clr" scoped="" ref="0x103b508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b4d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b4d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b4dac0"/>
        <function-ref name="isInput" scoped="" ref="0x103b4dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x103b4dde0"/>
        <function-ref name="toggle" scoped="" ref="0x103b4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b4b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b4b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b4b4d0"/>
        <function-ref name="get" scoped="" ref="0x103b4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b4b980"/>
        <function-ref name="set" scoped="" ref="0x103b4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b4bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b4be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b4a120"/>
        <function-ref name="clr" scoped="" ref="0x103b4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b47100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b47480"/>
        <function-ref name="isInput" scoped="" ref="0x103b47610"/>
        <function-ref name="setResistor" scoped="" ref="0x103b477a0"/>
        <function-ref name="toggle" scoped="" ref="0x103b47930"/>
        <function-ref name="isOutput" scoped="" ref="0x103b47ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b47c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b47de0"/>
        <function-ref name="get" scoped="" ref="0x103b46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b46340"/>
        <function-ref name="set" scoped="" ref="0x103b464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b46a80"/>
        <function-ref name="clr" scoped="" ref="0x103b46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b43d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b43d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b420e0"/>
        <function-ref name="isInput" scoped="" ref="0x103b42270"/>
        <function-ref name="setResistor" scoped="" ref="0x103b42400"/>
        <function-ref name="toggle" scoped="" ref="0x103b42590"/>
        <function-ref name="isOutput" scoped="" ref="0x103b42720"/>
        <function-ref name="getResistor" scoped="" ref="0x103b428b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b42a40"/>
        <function-ref name="get" scoped="" ref="0x103b42bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b42d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103b6e020"/>
        <function-ref name="set" scoped="" ref="0x103b6e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b6e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b6e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b6e760"/>
        <function-ref name="clr" scoped="" ref="0x103b6e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b6b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b6b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b6bac0"/>
        <function-ref name="isInput" scoped="" ref="0x103b6bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x103b6bde0"/>
        <function-ref name="toggle" scoped="" ref="0x103b6a020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b6a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b6a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b6a4d0"/>
        <function-ref name="get" scoped="" ref="0x103b6a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b6a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b6a980"/>
        <function-ref name="set" scoped="" ref="0x103b6ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b6aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b6ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b69120"/>
        <function-ref name="clr" scoped="" ref="0x103b692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b66100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b66100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b66480"/>
        <function-ref name="isInput" scoped="" ref="0x103b66610"/>
        <function-ref name="setResistor" scoped="" ref="0x103b667a0"/>
        <function-ref name="toggle" scoped="" ref="0x103b66930"/>
        <function-ref name="isOutput" scoped="" ref="0x103b66ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b66c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b66de0"/>
        <function-ref name="get" scoped="" ref="0x103b65020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b651b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b65340"/>
        <function-ref name="set" scoped="" ref="0x103b654d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b65660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b657f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b65a80"/>
        <function-ref name="clr" scoped="" ref="0x103b65c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b62d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b62d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b610e0"/>
        <function-ref name="isInput" scoped="" ref="0x103b61270"/>
        <function-ref name="setResistor" scoped="" ref="0x103b61400"/>
        <function-ref name="toggle" scoped="" ref="0x103b61590"/>
        <function-ref name="isOutput" scoped="" ref="0x103b61720"/>
        <function-ref name="getResistor" scoped="" ref="0x103b618b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b61a40"/>
        <function-ref name="get" scoped="" ref="0x103b61bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b61d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103b60020"/>
        <function-ref name="set" scoped="" ref="0x103b601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b60340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b60760"/>
        <function-ref name="clr" scoped="" ref="0x103b608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b5d860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b5d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b5dbe0"/>
        <function-ref name="isInput" scoped="" ref="0x103b5dd70"/>
        <function-ref name="setResistor" scoped="" ref="0x103b5c020"/>
        <function-ref name="toggle" scoped="" ref="0x103b5c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x103b5c340"/>
        <function-ref name="getResistor" scoped="" ref="0x103b5c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b5c660"/>
        <function-ref name="get" scoped="" ref="0x103b5c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b5c980"/>
        <function-ref name="getRaw" scoped="" ref="0x103b5cb10"/>
        <function-ref name="set" scoped="" ref="0x103b5cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b5ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b5b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b5b2b0"/>
        <function-ref name="clr" scoped="" ref="0x103b5b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b58270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b58270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b585f0"/>
        <function-ref name="isInput" scoped="" ref="0x103b58780"/>
        <function-ref name="setResistor" scoped="" ref="0x103b58910"/>
        <function-ref name="toggle" scoped="" ref="0x103b58aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x103b58c30"/>
        <function-ref name="getResistor" scoped="" ref="0x103b58dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b85020"/>
        <function-ref name="get" scoped="" ref="0x103b851b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b85340"/>
        <function-ref name="getRaw" scoped="" ref="0x103b854d0"/>
        <function-ref name="set" scoped="" ref="0x103b85660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b857f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b85980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b85c10"/>
        <function-ref name="clr" scoped="" ref="0x103b85da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b81d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b81d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b800e0"/>
        <function-ref name="isInput" scoped="" ref="0x103b80270"/>
        <function-ref name="setResistor" scoped="" ref="0x103b80400"/>
        <function-ref name="toggle" scoped="" ref="0x103b80590"/>
        <function-ref name="isOutput" scoped="" ref="0x103b80720"/>
        <function-ref name="getResistor" scoped="" ref="0x103b808b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b80a40"/>
        <function-ref name="get" scoped="" ref="0x103b80bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b80d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103b7f020"/>
        <function-ref name="set" scoped="" ref="0x103b7f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b7f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b7f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b7f760"/>
        <function-ref name="clr" scoped="" ref="0x103b7f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b7c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b7c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b7cac0"/>
        <function-ref name="isInput" scoped="" ref="0x103b7cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x103b7cde0"/>
        <function-ref name="toggle" scoped="" ref="0x103b7b020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b7b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b7b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b7b4d0"/>
        <function-ref name="get" scoped="" ref="0x103b7b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b7b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b7b980"/>
        <function-ref name="set" scoped="" ref="0x103b7bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b7bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b7be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b7a120"/>
        <function-ref name="clr" scoped="" ref="0x103b7a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b77100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b77100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b77480"/>
        <function-ref name="isInput" scoped="" ref="0x103b77610"/>
        <function-ref name="setResistor" scoped="" ref="0x103b777a0"/>
        <function-ref name="toggle" scoped="" ref="0x103b77930"/>
        <function-ref name="isOutput" scoped="" ref="0x103b77ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b77c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b77de0"/>
        <function-ref name="get" scoped="" ref="0x103b76020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b76340"/>
        <function-ref name="set" scoped="" ref="0x103b764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b76660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b76a80"/>
        <function-ref name="clr" scoped="" ref="0x103b76c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b73d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b73d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b720e0"/>
        <function-ref name="isInput" scoped="" ref="0x103b72270"/>
        <function-ref name="setResistor" scoped="" ref="0x103b72400"/>
        <function-ref name="toggle" scoped="" ref="0x103b72590"/>
        <function-ref name="isOutput" scoped="" ref="0x103b72720"/>
        <function-ref name="getResistor" scoped="" ref="0x103b728b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b72a40"/>
        <function-ref name="get" scoped="" ref="0x103b72bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b72d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103b71020"/>
        <function-ref name="set" scoped="" ref="0x103b711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b71340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b71760"/>
        <function-ref name="clr" scoped="" ref="0x103b718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b9c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b9c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b9cac0"/>
        <function-ref name="isInput" scoped="" ref="0x103b9cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x103b9cde0"/>
        <function-ref name="toggle" scoped="" ref="0x103b9b020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b9b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b9b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b9b4d0"/>
        <function-ref name="get" scoped="" ref="0x103b9b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b9b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b9b980"/>
        <function-ref name="set" scoped="" ref="0x103b9bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b9bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b9be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b9a120"/>
        <function-ref name="clr" scoped="" ref="0x103b9a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b97100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b97100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b97480"/>
        <function-ref name="isInput" scoped="" ref="0x103b97610"/>
        <function-ref name="setResistor" scoped="" ref="0x103b977a0"/>
        <function-ref name="toggle" scoped="" ref="0x103b97930"/>
        <function-ref name="isOutput" scoped="" ref="0x103b97ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b97c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b97de0"/>
        <function-ref name="get" scoped="" ref="0x103b96020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b96340"/>
        <function-ref name="set" scoped="" ref="0x103b964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b96660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b96a80"/>
        <function-ref name="clr" scoped="" ref="0x103b96c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b93d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b93d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b920e0"/>
        <function-ref name="isInput" scoped="" ref="0x103b92270"/>
        <function-ref name="setResistor" scoped="" ref="0x103b92400"/>
        <function-ref name="toggle" scoped="" ref="0x103b92590"/>
        <function-ref name="isOutput" scoped="" ref="0x103b92720"/>
        <function-ref name="getResistor" scoped="" ref="0x103b928b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b92a40"/>
        <function-ref name="get" scoped="" ref="0x103b92bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b92d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103b91020"/>
        <function-ref name="set" scoped="" ref="0x103b911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b91340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b91760"/>
        <function-ref name="clr" scoped="" ref="0x103b918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b8e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b8e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b8eac0"/>
        <function-ref name="isInput" scoped="" ref="0x103b8ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x103b8ede0"/>
        <function-ref name="toggle" scoped="" ref="0x103b8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b8c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b8c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b8c4d0"/>
        <function-ref name="get" scoped="" ref="0x103b8c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b8c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b8c980"/>
        <function-ref name="set" scoped="" ref="0x103b8cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b8cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b8ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b8b120"/>
        <function-ref name="clr" scoped="" ref="0x103b8b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b88100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b88100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b88480"/>
        <function-ref name="isInput" scoped="" ref="0x103b88610"/>
        <function-ref name="setResistor" scoped="" ref="0x103b887a0"/>
        <function-ref name="toggle" scoped="" ref="0x103b88930"/>
        <function-ref name="isOutput" scoped="" ref="0x103b88ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b88c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b88de0"/>
        <function-ref name="get" scoped="" ref="0x103b87020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b87340"/>
        <function-ref name="set" scoped="" ref="0x103b874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b87660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b87a80"/>
        <function-ref name="clr" scoped="" ref="0x103b87c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bb2d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bb2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bb10e0"/>
        <function-ref name="isInput" scoped="" ref="0x103bb1270"/>
        <function-ref name="setResistor" scoped="" ref="0x103bb1400"/>
        <function-ref name="toggle" scoped="" ref="0x103bb1590"/>
        <function-ref name="isOutput" scoped="" ref="0x103bb1720"/>
        <function-ref name="getResistor" scoped="" ref="0x103bb18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bb1a40"/>
        <function-ref name="get" scoped="" ref="0x103bb1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bb1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103bb0020"/>
        <function-ref name="set" scoped="" ref="0x103bb01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bb0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bb04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bb0760"/>
        <function-ref name="clr" scoped="" ref="0x103bb08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bada60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bada60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103badde0"/>
        <function-ref name="isInput" scoped="" ref="0x103bac020"/>
        <function-ref name="setResistor" scoped="" ref="0x103bac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x103bac340"/>
        <function-ref name="isOutput" scoped="" ref="0x103bac4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bac7f0"/>
        <function-ref name="get" scoped="" ref="0x103bac980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bacb10"/>
        <function-ref name="getRaw" scoped="" ref="0x103bacca0"/>
        <function-ref name="set" scoped="" ref="0x103bace30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bab020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bab1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bab440"/>
        <function-ref name="clr" scoped="" ref="0x103bab5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103ba8460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103ba8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ba87e0"/>
        <function-ref name="isInput" scoped="" ref="0x103ba8970"/>
        <function-ref name="setResistor" scoped="" ref="0x103ba8b00"/>
        <function-ref name="toggle" scoped="" ref="0x103ba8c90"/>
        <function-ref name="isOutput" scoped="" ref="0x103ba8e20"/>
        <function-ref name="getResistor" scoped="" ref="0x103ba7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ba71b0"/>
        <function-ref name="get" scoped="" ref="0x103ba7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ba74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x103ba7660"/>
        <function-ref name="set" scoped="" ref="0x103ba77f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ba7980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ba7b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ba7da0"/>
        <function-ref name="clr" scoped="" ref="0x103ba6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103ba4e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103ba4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103ba31c0"/>
        <function-ref name="isInput" scoped="" ref="0x103ba3350"/>
        <function-ref name="setResistor" scoped="" ref="0x103ba34e0"/>
        <function-ref name="toggle" scoped="" ref="0x103ba3670"/>
        <function-ref name="isOutput" scoped="" ref="0x103ba3800"/>
        <function-ref name="getResistor" scoped="" ref="0x103ba3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x103ba3b20"/>
        <function-ref name="get" scoped="" ref="0x103ba3cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103ba3e40"/>
        <function-ref name="getRaw" scoped="" ref="0x103ba2020"/>
        <function-ref name="set" scoped="" ref="0x103ba21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103ba2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103ba24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103ba2760"/>
        <function-ref name="clr" scoped="" ref="0x103ba28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103b9f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103b9f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103b9fac0"/>
        <function-ref name="isInput" scoped="" ref="0x103b9fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x103b9fde0"/>
        <function-ref name="toggle" scoped="" ref="0x103b9e020"/>
        <function-ref name="isOutput" scoped="" ref="0x103b9e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103b9e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103b9e4d0"/>
        <function-ref name="get" scoped="" ref="0x103b9e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103b9e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103b9e980"/>
        <function-ref name="set" scoped="" ref="0x103b9eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103b9eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103b9ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103b9d120"/>
        <function-ref name="clr" scoped="" ref="0x103b9d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bc8100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bc8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bc8480"/>
        <function-ref name="isInput" scoped="" ref="0x103bc8610"/>
        <function-ref name="setResistor" scoped="" ref="0x103bc87a0"/>
        <function-ref name="toggle" scoped="" ref="0x103bc8930"/>
        <function-ref name="isOutput" scoped="" ref="0x103bc8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bc8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bc8de0"/>
        <function-ref name="get" scoped="" ref="0x103bc7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bc71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bc7340"/>
        <function-ref name="set" scoped="" ref="0x103bc74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bc7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bc77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bc7a80"/>
        <function-ref name="clr" scoped="" ref="0x103bc7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bc4d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bc4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bc20e0"/>
        <function-ref name="isInput" scoped="" ref="0x103bc2270"/>
        <function-ref name="setResistor" scoped="" ref="0x103bc2400"/>
        <function-ref name="toggle" scoped="" ref="0x103bc2590"/>
        <function-ref name="isOutput" scoped="" ref="0x103bc2720"/>
        <function-ref name="getResistor" scoped="" ref="0x103bc28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bc2a40"/>
        <function-ref name="get" scoped="" ref="0x103bc2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bc2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103bc1020"/>
        <function-ref name="set" scoped="" ref="0x103bc11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bc1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bc14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bc1760"/>
        <function-ref name="clr" scoped="" ref="0x103bc18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bbe740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bbe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bbeac0"/>
        <function-ref name="isInput" scoped="" ref="0x103bbec50"/>
        <function-ref name="setResistor" scoped="" ref="0x103bbede0"/>
        <function-ref name="toggle" scoped="" ref="0x103bbd020"/>
        <function-ref name="isOutput" scoped="" ref="0x103bbd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bbd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bbd4d0"/>
        <function-ref name="get" scoped="" ref="0x103bbd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bbd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bbd980"/>
        <function-ref name="set" scoped="" ref="0x103bbdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bbdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bbde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bbc120"/>
        <function-ref name="clr" scoped="" ref="0x103bbc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bb9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bb9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bb9480"/>
        <function-ref name="isInput" scoped="" ref="0x103bb9610"/>
        <function-ref name="setResistor" scoped="" ref="0x103bb97a0"/>
        <function-ref name="toggle" scoped="" ref="0x103bb9930"/>
        <function-ref name="isOutput" scoped="" ref="0x103bb9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bb9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bb9de0"/>
        <function-ref name="get" scoped="" ref="0x103bb8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bb81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bb8340"/>
        <function-ref name="set" scoped="" ref="0x103bb84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bb8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bb87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bb8a80"/>
        <function-ref name="clr" scoped="" ref="0x103bb8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bb5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bb5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bb40e0"/>
        <function-ref name="isInput" scoped="" ref="0x103bb4270"/>
        <function-ref name="setResistor" scoped="" ref="0x103bb4400"/>
        <function-ref name="toggle" scoped="" ref="0x103bb4590"/>
        <function-ref name="isOutput" scoped="" ref="0x103bb4720"/>
        <function-ref name="getResistor" scoped="" ref="0x103bb48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bb4a40"/>
        <function-ref name="get" scoped="" ref="0x103bb4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bb4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103be1020"/>
        <function-ref name="set" scoped="" ref="0x103be11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103be1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103be14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103be1760"/>
        <function-ref name="clr" scoped="" ref="0x103be18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bde740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bde740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bdeac0"/>
        <function-ref name="isInput" scoped="" ref="0x103bdec50"/>
        <function-ref name="setResistor" scoped="" ref="0x103bdede0"/>
        <function-ref name="toggle" scoped="" ref="0x103bdd020"/>
        <function-ref name="isOutput" scoped="" ref="0x103bdd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bdd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bdd4d0"/>
        <function-ref name="get" scoped="" ref="0x103bdd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bdd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bdd980"/>
        <function-ref name="set" scoped="" ref="0x103bddb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bddca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bdde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bdc120"/>
        <function-ref name="clr" scoped="" ref="0x103bdc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bd9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bd9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bd9480"/>
        <function-ref name="isInput" scoped="" ref="0x103bd9610"/>
        <function-ref name="setResistor" scoped="" ref="0x103bd97a0"/>
        <function-ref name="toggle" scoped="" ref="0x103bd9930"/>
        <function-ref name="isOutput" scoped="" ref="0x103bd9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bd9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bd9de0"/>
        <function-ref name="get" scoped="" ref="0x103bd8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bd81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bd8340"/>
        <function-ref name="set" scoped="" ref="0x103bd84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bd8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bd87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bd8a80"/>
        <function-ref name="clr" scoped="" ref="0x103bd8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bd5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bd5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bd40e0"/>
        <function-ref name="isInput" scoped="" ref="0x103bd4270"/>
        <function-ref name="setResistor" scoped="" ref="0x103bd4400"/>
        <function-ref name="toggle" scoped="" ref="0x103bd4590"/>
        <function-ref name="isOutput" scoped="" ref="0x103bd4720"/>
        <function-ref name="getResistor" scoped="" ref="0x103bd48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bd4a40"/>
        <function-ref name="get" scoped="" ref="0x103bd4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bd4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103bd3020"/>
        <function-ref name="set" scoped="" ref="0x103bd31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bd3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bd34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bd3760"/>
        <function-ref name="clr" scoped="" ref="0x103bd38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bd0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bd0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bd0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x103bd0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x103bd0de0"/>
        <function-ref name="toggle" scoped="" ref="0x103bcf020"/>
        <function-ref name="isOutput" scoped="" ref="0x103bcf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bcf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bcf4d0"/>
        <function-ref name="get" scoped="" ref="0x103bcf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bcf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bcf980"/>
        <function-ref name="set" scoped="" ref="0x103bcfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bcfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bcfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bce120"/>
        <function-ref name="clr" scoped="" ref="0x103bce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bf9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bf9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bf9480"/>
        <function-ref name="isInput" scoped="" ref="0x103bf9610"/>
        <function-ref name="setResistor" scoped="" ref="0x103bf97a0"/>
        <function-ref name="toggle" scoped="" ref="0x103bf9930"/>
        <function-ref name="isOutput" scoped="" ref="0x103bf9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bf9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bf9de0"/>
        <function-ref name="get" scoped="" ref="0x103bf8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bf81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bf8340"/>
        <function-ref name="set" scoped="" ref="0x103bf84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bf8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bf87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bf8a80"/>
        <function-ref name="clr" scoped="" ref="0x103bf8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bf5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bf5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bf40e0"/>
        <function-ref name="isInput" scoped="" ref="0x103bf4270"/>
        <function-ref name="setResistor" scoped="" ref="0x103bf4400"/>
        <function-ref name="toggle" scoped="" ref="0x103bf4590"/>
        <function-ref name="isOutput" scoped="" ref="0x103bf4720"/>
        <function-ref name="getResistor" scoped="" ref="0x103bf48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bf4a40"/>
        <function-ref name="get" scoped="" ref="0x103bf4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bf4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103bf3020"/>
        <function-ref name="set" scoped="" ref="0x103bf31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bf3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bf34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bf3760"/>
        <function-ref name="clr" scoped="" ref="0x103bf38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bf0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bf0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bf0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x103bf0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x103bf0de0"/>
        <function-ref name="toggle" scoped="" ref="0x103bef020"/>
        <function-ref name="isOutput" scoped="" ref="0x103bef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bef4d0"/>
        <function-ref name="get" scoped="" ref="0x103bef660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bef7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bef980"/>
        <function-ref name="set" scoped="" ref="0x103befb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103befca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103befe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bee120"/>
        <function-ref name="clr" scoped="" ref="0x103bee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103beb100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103beb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103beb480"/>
        <function-ref name="isInput" scoped="" ref="0x103beb610"/>
        <function-ref name="setResistor" scoped="" ref="0x103beb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x103beb930"/>
        <function-ref name="isOutput" scoped="" ref="0x103bebac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bebc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bebde0"/>
        <function-ref name="get" scoped="" ref="0x103bea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bea340"/>
        <function-ref name="set" scoped="" ref="0x103bea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103beaa80"/>
        <function-ref name="clr" scoped="" ref="0x103beac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103be7d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103be7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103be60e0"/>
        <function-ref name="isInput" scoped="" ref="0x103be6270"/>
        <function-ref name="setResistor" scoped="" ref="0x103be6400"/>
        <function-ref name="toggle" scoped="" ref="0x103be6590"/>
        <function-ref name="isOutput" scoped="" ref="0x103be6720"/>
        <function-ref name="getResistor" scoped="" ref="0x103be68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103be6a40"/>
        <function-ref name="get" scoped="" ref="0x103be6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103be6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103be5020"/>
        <function-ref name="set" scoped="" ref="0x103be51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103be5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103be54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103be5760"/>
        <function-ref name="clr" scoped="" ref="0x103be58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103be2740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103be2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103be2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x103be2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x103be2de0"/>
        <function-ref name="toggle" scoped="" ref="0x103c11020"/>
        <function-ref name="isOutput" scoped="" ref="0x103c111b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103c11340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c114d0"/>
        <function-ref name="get" scoped="" ref="0x103c11660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c117f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103c11980"/>
        <function-ref name="set" scoped="" ref="0x103c11b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c11ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c11e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c10120"/>
        <function-ref name="clr" scoped="" ref="0x103c102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103c0d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103c0d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c0d480"/>
        <function-ref name="isInput" scoped="" ref="0x103c0d610"/>
        <function-ref name="setResistor" scoped="" ref="0x103c0d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x103c0d930"/>
        <function-ref name="isOutput" scoped="" ref="0x103c0dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103c0dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c0dde0"/>
        <function-ref name="get" scoped="" ref="0x103c0c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c0c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103c0c340"/>
        <function-ref name="set" scoped="" ref="0x103c0c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c0c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c0c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c0ca80"/>
        <function-ref name="clr" scoped="" ref="0x103c0cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103c09d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103c09d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c070e0"/>
        <function-ref name="isInput" scoped="" ref="0x103c07270"/>
        <function-ref name="setResistor" scoped="" ref="0x103c07400"/>
        <function-ref name="toggle" scoped="" ref="0x103c07590"/>
        <function-ref name="isOutput" scoped="" ref="0x103c07720"/>
        <function-ref name="getResistor" scoped="" ref="0x103c078b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c07a40"/>
        <function-ref name="get" scoped="" ref="0x103c07bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c07d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103c06020"/>
        <function-ref name="set" scoped="" ref="0x103c061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c06340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c06760"/>
        <function-ref name="clr" scoped="" ref="0x103c068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103c03740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103c03740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c03ac0"/>
        <function-ref name="isInput" scoped="" ref="0x103c03c50"/>
        <function-ref name="setResistor" scoped="" ref="0x103c03de0"/>
        <function-ref name="toggle" scoped="" ref="0x103c02020"/>
        <function-ref name="isOutput" scoped="" ref="0x103c021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103c02340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c024d0"/>
        <function-ref name="get" scoped="" ref="0x103c02660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103c02980"/>
        <function-ref name="set" scoped="" ref="0x103c02b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c02ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c02e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c01120"/>
        <function-ref name="clr" scoped="" ref="0x103c012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bfe100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bfe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103bfe480"/>
        <function-ref name="isInput" scoped="" ref="0x103bfe610"/>
        <function-ref name="setResistor" scoped="" ref="0x103bfe7a0"/>
        <function-ref name="toggle" scoped="" ref="0x103bfe930"/>
        <function-ref name="isOutput" scoped="" ref="0x103bfeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x103bfec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x103bfede0"/>
        <function-ref name="get" scoped="" ref="0x103bfd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103bfd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x103bfd340"/>
        <function-ref name="set" scoped="" ref="0x103bfd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103bfd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103bfd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103bfda80"/>
        <function-ref name="clr" scoped="" ref="0x103bfdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x103bfad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x103bfad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c290e0"/>
        <function-ref name="isInput" scoped="" ref="0x103c29270"/>
        <function-ref name="setResistor" scoped="" ref="0x103c29400"/>
        <function-ref name="toggle" scoped="" ref="0x103c29590"/>
        <function-ref name="isOutput" scoped="" ref="0x103c29720"/>
        <function-ref name="getResistor" scoped="" ref="0x103c298b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c29a40"/>
        <function-ref name="get" scoped="" ref="0x103c29bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c29d60"/>
        <function-ref name="getRaw" scoped="" ref="0x103c28020"/>
        <function-ref name="set" scoped="" ref="0x103c281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c28340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c28760"/>
        <function-ref name="clr" scoped="" ref="0x103c288f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x103c9c2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x103c9c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c9c670"/>
        <function-ref name="isInput" scoped="" ref="0x103c9c800"/>
        <function-ref name="setResistor" scoped="" ref="0x103c9c990"/>
        <function-ref name="toggle" scoped="" ref="0x103c9cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x103c9ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x103c9ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c9b020"/>
        <function-ref name="get" scoped="" ref="0x103c9b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c9b340"/>
        <function-ref name="getRaw" scoped="" ref="0x103c9b4d0"/>
        <function-ref name="set" scoped="" ref="0x103c9b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c9b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c9b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c9bc10"/>
        <function-ref name="clr" scoped="" ref="0x103c9bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x103c7b020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x103c7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c7b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x103c7b530"/>
        <function-ref name="toggle" scoped="" ref="0x103c7b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x103c7b850"/>
        <function-ref name="get" scoped="" ref="0x103c7b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c7bb70"/>
        <function-ref name="set" scoped="" ref="0x103c7bd00"/>
        <function-ref name="clr" scoped="" ref="0x103c9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x103c98de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x103c98de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c97180"/>
        <function-ref name="isInput" scoped="" ref="0x103c97310"/>
        <function-ref name="setResistor" scoped="" ref="0x103c974a0"/>
        <function-ref name="toggle" scoped="" ref="0x103c97630"/>
        <function-ref name="isOutput" scoped="" ref="0x103c977c0"/>
        <function-ref name="getResistor" scoped="" ref="0x103c97950"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c97ae0"/>
        <function-ref name="get" scoped="" ref="0x103c97c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c97e00"/>
        <function-ref name="getRaw" scoped="" ref="0x103c96020"/>
        <function-ref name="set" scoped="" ref="0x103c961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c96340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c96760"/>
        <function-ref name="clr" scoped="" ref="0x103c968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x103c99b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x103c99b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c98020"/>
        <function-ref name="isInput" scoped="" ref="0x103c981b0"/>
        <function-ref name="toggle" scoped="" ref="0x103c98340"/>
        <function-ref name="isOutput" scoped="" ref="0x103c984d0"/>
        <function-ref name="get" scoped="" ref="0x103c98660"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c987f0"/>
        <function-ref name="set" scoped="" ref="0x103c98980"/>
        <function-ref name="clr" scoped="" ref="0x103c98b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x103c93930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x103c93930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c93cb0"/>
        <function-ref name="isInput" scoped="" ref="0x103c93e40"/>
        <function-ref name="setResistor" scoped="" ref="0x103c91020"/>
        <function-ref name="toggle" scoped="" ref="0x103c911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x103c91340"/>
        <function-ref name="getResistor" scoped="" ref="0x103c914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c91660"/>
        <function-ref name="get" scoped="" ref="0x103c917f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103c91980"/>
        <function-ref name="getRaw" scoped="" ref="0x103c91b10"/>
        <function-ref name="set" scoped="" ref="0x103c91ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103c91e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103c90020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103c902b0"/>
        <function-ref name="clr" scoped="" ref="0x103c90440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x103c94710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x103c94710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103c94a90"/>
        <function-ref name="isInput" scoped="" ref="0x103c94c20"/>
        <function-ref name="toggle" scoped="" ref="0x103c94db0"/>
        <function-ref name="isOutput" scoped="" ref="0x103c93020"/>
        <function-ref name="get" scoped="" ref="0x103c931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x103c93340"/>
        <function-ref name="set" scoped="" ref="0x103c934d0"/>
        <function-ref name="clr" scoped="" ref="0x103c93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x103cb3310" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x103cb3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103cb3690"/>
        <function-ref name="receive" scoped="" ref="0x103cb3820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x103ca61e0" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x103ca61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103ca6560"/>
        <function-ref name="receivedByte" scoped="" ref="0x103ca66f0"/>
        <function-ref name="receive" scoped="" ref="0x103ca6880"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x103ca6a10"/>
        <function-ref name="receiveDone" scoped="" ref="0x103ca6ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x103ca6d30"/>
        <function-ref name="sendDone" scoped="" ref="0x103cb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x103cb2a80" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x103cb2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x103cb2e00"/>
        <function-ref name="stop" scoped="" ref="0x103cb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x103f418f0" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x103f418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x103f41c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x103f41e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x103f3f060" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x103f3f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103f3f3e0"/>
        <function-ref name="receive" scoped="" ref="0x103f3f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x103f3f800" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103f3f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x103f3fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x103f400c0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x103f400c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103f40440"/>
        <function-ref name="receivedByte" scoped="" ref="0x103f405d0"/>
        <function-ref name="receive" scoped="" ref="0x103f40760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x103f408f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x103f40a80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x103f40c10"/>
        <function-ref name="sendDone" scoped="" ref="0x103f40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103f42c00" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103f42c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103f41020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103f411b0"/>
        <function-ref name="request" scoped="" ref="0x103f41340"/>
        <function-ref name="granted" scoped="" ref="0x103f414d0"/>
        <function-ref name="isOwner" scoped="" ref="0x103f41660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x103d10c70" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x103d10c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x103d11020"/>
        <function-ref name="configure" scoped="" ref="0x103d111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x103d0e050" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x103d0e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103d0e3d0"/>
        <function-ref name="receive" scoped="" ref="0x103d0e560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x103d0b1d0" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103d0b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x103d0b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x103d119f0" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x103d119f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103d11d70"/>
        <function-ref name="receivedByte" scoped="" ref="0x103d0f020"/>
        <function-ref name="receive" scoped="" ref="0x103d0f1b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x103d0f340"/>
        <function-ref name="receiveDone" scoped="" ref="0x103d0f4d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x103d0f660"/>
        <function-ref name="sendDone" scoped="" ref="0x103d0f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x103d0ee60" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x103d0ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103d0d210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103d0d3a0"/>
        <function-ref name="request" scoped="" ref="0x103d0d530"/>
        <function-ref name="granted" scoped="" ref="0x103d0d6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x103d0d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103d141d0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103d141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103d14550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103d146e0"/>
        <function-ref name="request" scoped="" ref="0x103d14870"/>
        <function-ref name="granted" scoped="" ref="0x103d14a00"/>
        <function-ref name="isOwner" scoped="" ref="0x103d14b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x103d07710" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x103d07710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103d07a90"/>
        <function-ref name="txDone" scoped="" ref="0x103d07c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x103d8ddc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x103d8ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x103d8c180"/>
        <function-ref name="configure" scoped="" ref="0x103d8c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x103d8b890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x103d8b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103d8bc30"/>
        <function-ref name="receive" scoped="" ref="0x103d8bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x103dbe020" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103dbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x103dbe3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x103dbe690" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x103dbe690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x103dbea10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x103dbeba0"/>
        <function-ref name="setUctl" scoped="" ref="0x103dbed30"/>
        <function-ref name="enableUart" scoped="" ref="0x103dbd020"/>
        <function-ref name="setUrctl" scoped="" ref="0x103dbd1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x103dbd340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x103dbd4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x103dbd660"/>
        <function-ref name="getUrctl" scoped="" ref="0x103dbd7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x103dbd980"/>
        <function-ref name="getUmctl" scoped="" ref="0x103dbdb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x103dbdca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x103dbde30"/>
        <function-ref name="getUbr" scoped="" ref="0x103dbc120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x103dbc2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x103dbc440"/>
        <function-ref name="isUartRx" scoped="" ref="0x103dbc5d0"/>
        <function-ref name="isUart" scoped="" ref="0x103dbc760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x103dbc8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x103dbca80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x103dbcc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x103dbcda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x103dbb020"/>
        <function-ref name="enableIntr" scoped="" ref="0x103dbb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x103dbb340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x103dbb6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x103dbb860"/>
        <function-ref name="setUbr" scoped="" ref="0x103dbb9f0"/>
        <function-ref name="tx" scoped="" ref="0x103dbbb80"/>
        <function-ref name="getUctl" scoped="" ref="0x103dbbd10"/>
        <function-ref name="disableUart" scoped="" ref="0x103dba020"/>
        <function-ref name="enableSpi" scoped="" ref="0x103dba1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x103dba340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x103dba4d0"/>
        <function-ref name="rx" scoped="" ref="0x103dba660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x103dba7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x103dba980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x103dbab10"/>
        <function-ref name="disableSpi" scoped="" ref="0x103dbaca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x103dbae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x103d8c6d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x103d8c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103d8ca70"/>
        <function-ref name="receivedByte" scoped="" ref="0x103d8cc00"/>
        <function-ref name="receive" scoped="" ref="0x103d8cd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x103d8b020"/>
        <function-ref name="receiveDone" scoped="" ref="0x103d8b1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x103d8b340"/>
        <function-ref name="sendDone" scoped="" ref="0x103d8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x103db9c90" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x103db9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x103db8ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103db74e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103db7020"/>
        <function-ref name="overflow" scoped="" ref="0x103db79a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x103d8a230" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x103d8a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103d8a5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103d8a760"/>
        <function-ref name="request" scoped="" ref="0x103d8a8f0"/>
        <function-ref name="granted" scoped="" ref="0x103d8aa80"/>
        <function-ref name="isOwner" scoped="" ref="0x103d8ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103d8d020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103d8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103d8d3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103d8d550"/>
        <function-ref name="request" scoped="" ref="0x103d8d6e0"/>
        <function-ref name="granted" scoped="" ref="0x103d8d870"/>
        <function-ref name="isOwner" scoped="" ref="0x103d8da00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x103db9290" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x103db9290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103db9630"/>
        <function-ref name="txDone" scoped="" ref="0x103db97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x103db7dd0" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x103db7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x103db6180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x103db6310"/>
        <function-ref name="led1On" scoped="" ref="0x103db64a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x103db6630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x103db67c0"/>
        <function-ref name="get" scoped="" ref="0x103db6950"/>
        <function-ref name="led1Off" scoped="" ref="0x103db6ae0"/>
        <function-ref name="led2On" scoped="" ref="0x103db51b0"/>
        <function-ref name="set" scoped="" ref="0x103db6e00"/>
        <function-ref name="led2Off" scoped="" ref="0x103db6c70"/>
        <function-ref name="led0On" scoped="" ref="0x103db5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x103da63b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x103da63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103da6730"/>
        <function-ref name="txDone" scoped="" ref="0x103da68c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x103dad080" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x103dad080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x103dad400"/>
        <function-ref name="stop" scoped="" ref="0x103dad590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x103dad8b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x103dad8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x103dadc30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x103daddc0"/>
        <function-ref name="setUctl" scoped="" ref="0x103dac020"/>
        <function-ref name="enableUart" scoped="" ref="0x103dac1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x103dac340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x103dac4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x103dac660"/>
        <function-ref name="getUtctl" scoped="" ref="0x103dac7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x103dac980"/>
        <function-ref name="resetUsart" scoped="" ref="0x103dacb10"/>
        <function-ref name="getUmctl" scoped="" ref="0x103dacca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x103dace30"/>
        <function-ref name="setUtctl" scoped="" ref="0x103da9020"/>
        <function-ref name="getUbr" scoped="" ref="0x103da92b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x103da9440"/>
        <function-ref name="setUmctl" scoped="" ref="0x103da95d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x103da9760"/>
        <function-ref name="isUart" scoped="" ref="0x103da98f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x103da9a80"/>
        <function-ref name="isSpi" scoped="" ref="0x103da9c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x103da9da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x103da8020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x103da81b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x103da8340"/>
        <function-ref name="getMode" scoped="" ref="0x103da84d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x103da8860"/>
        <function-ref name="clrIntr" scoped="" ref="0x103da89f0"/>
        <function-ref name="setUbr" scoped="" ref="0x103da8b80"/>
        <function-ref name="tx" scoped="" ref="0x103da8d10"/>
        <function-ref name="getUctl" scoped="" ref="0x103da7020"/>
        <function-ref name="disableUart" scoped="" ref="0x103da71b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x103da7340"/>
        <function-ref name="setModeUart" scoped="" ref="0x103da74d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x103da7660"/>
        <function-ref name="rx" scoped="" ref="0x103da77f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x103da7980"/>
        <function-ref name="isUartTx" scoped="" ref="0x103da7b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x103da7ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x103da7e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x103da6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x103dce670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x103dce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103dce9f0"/>
        <function-ref name="isInput" scoped="" ref="0x103dceb80"/>
        <function-ref name="setResistor" scoped="" ref="0x103dced10"/>
        <function-ref name="toggle" scoped="" ref="0x103dcd020"/>
        <function-ref name="isOutput" scoped="" ref="0x103dcd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103dcd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103dcd4d0"/>
        <function-ref name="get" scoped="" ref="0x103dcd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103dcd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103dcd980"/>
        <function-ref name="set" scoped="" ref="0x103dcdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103dcdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103dcde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103dcc120"/>
        <function-ref name="clr" scoped="" ref="0x103dcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x103dd3dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x103dd3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103dd2180"/>
        <function-ref name="txDone" scoped="" ref="0x103dd2310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x103dcc670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x103dcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103dcc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x103dccb80"/>
        <function-ref name="setResistor" scoped="" ref="0x103dccd10"/>
        <function-ref name="toggle" scoped="" ref="0x103dcb020"/>
        <function-ref name="isOutput" scoped="" ref="0x103dcb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103dcb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103dcb4d0"/>
        <function-ref name="get" scoped="" ref="0x103dcb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103dcb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103dcb980"/>
        <function-ref name="set" scoped="" ref="0x103dcbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103dcbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103dcbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103dca120"/>
        <function-ref name="clr" scoped="" ref="0x103dca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x103dca670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x103dca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103dca9f0"/>
        <function-ref name="isInput" scoped="" ref="0x103dcab80"/>
        <function-ref name="setResistor" scoped="" ref="0x103dcad10"/>
        <function-ref name="toggle" scoped="" ref="0x103dc9020"/>
        <function-ref name="isOutput" scoped="" ref="0x103dc91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103dc9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103dc94d0"/>
        <function-ref name="get" scoped="" ref="0x103dc9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103dc97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103dc9980"/>
        <function-ref name="set" scoped="" ref="0x103dc9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103dc9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103dc9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103dc8120"/>
        <function-ref name="clr" scoped="" ref="0x103dc82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x103dd7020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x103dd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x103dd73a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x103dd7530"/>
        <function-ref name="setUctl" scoped="" ref="0x103dd76c0"/>
        <function-ref name="enableUart" scoped="" ref="0x103dd7850"/>
        <function-ref name="setUrctl" scoped="" ref="0x103dd79e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x103dd7b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x103dd7d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x103dd6020"/>
        <function-ref name="getUrctl" scoped="" ref="0x103dd61b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x103dd6340"/>
        <function-ref name="getUmctl" scoped="" ref="0x103dd64d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x103dd6660"/>
        <function-ref name="setUtctl" scoped="" ref="0x103dd67f0"/>
        <function-ref name="getUbr" scoped="" ref="0x103dd6a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x103dd6c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x103dd6da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x103dd5020"/>
        <function-ref name="isUart" scoped="" ref="0x103dd51b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x103dd5340"/>
        <function-ref name="isSpi" scoped="" ref="0x103dd54d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x103dd5660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x103dd57f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x103dd5980"/>
        <function-ref name="enableIntr" scoped="" ref="0x103dd5b10"/>
        <function-ref name="getMode" scoped="" ref="0x103dd5ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x103dd4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x103dd43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x103dd4540"/>
        <function-ref name="tx" scoped="" ref="0x103dd46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x103dd4860"/>
        <function-ref name="disableUart" scoped="" ref="0x103dd49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x103dd4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x103dd4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x103dd3020"/>
        <function-ref name="rx" scoped="" ref="0x103dd31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x103dd3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x103dd34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x103dd3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x103dd37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x103dd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x103da5710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x103da5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x103da5a90"/>
        <function-ref name="stop" scoped="" ref="0x103da5c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x103dd0670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x103dd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103dd09f0"/>
        <function-ref name="isInput" scoped="" ref="0x103dd0b80"/>
        <function-ref name="setResistor" scoped="" ref="0x103dd0d10"/>
        <function-ref name="toggle" scoped="" ref="0x103dcf020"/>
        <function-ref name="isOutput" scoped="" ref="0x103dcf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103dcf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103dcf4d0"/>
        <function-ref name="get" scoped="" ref="0x103dcf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103dcf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103dcf980"/>
        <function-ref name="set" scoped="" ref="0x103dcfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103dcfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103dcfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103dce120"/>
        <function-ref name="clr" scoped="" ref="0x103dce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x103dd26d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x103dd26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x103dd2a50"/>
        <function-ref name="isInput" scoped="" ref="0x103dd2be0"/>
        <function-ref name="setResistor" scoped="" ref="0x103dd2d70"/>
        <function-ref name="toggle" scoped="" ref="0x103dd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x103dd11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x103dd1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x103dd14d0"/>
        <function-ref name="get" scoped="" ref="0x103dd1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x103dd17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x103dd1980"/>
        <function-ref name="set" scoped="" ref="0x103dd1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x103dd1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x103dd1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x103dd0120"/>
        <function-ref name="clr" scoped="" ref="0x103dd02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x103e66110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x103e66110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x103e64020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103e649a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103e644e0"/>
        <function-ref name="overflow" scoped="" ref="0x103e64e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x103e60210" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x103e60210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x103e5f090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103e5fa10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103e5f550"/>
        <function-ref name="overflow" scoped="" ref="0x103e5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x103e4d450" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x103e4d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103e4d7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x103e4d960"/>
        <function-ref name="enableEvents" scoped="" ref="0x103e4daf0"/>
        <function-ref name="get" scoped="" ref="0x103e4dc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x103e4de10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103e85020"/>
        <function-ref name="getMode" scoped="" ref="0x103e851b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103e85340"/>
        <function-ref name="overflow" scoped="" ref="0x103e854d0"/>
        <function-ref name="setMode" scoped="" ref="0x103e85660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x103e857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x103e5b2a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x103e5b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x103e4e0d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103e4ea50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103e4e590"/>
        <function-ref name="overflow" scoped="" ref="0x103e4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1053a8020" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1053a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1053a83a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1053a8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1053a2440" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1053a2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1053a27c0"/>
        <function-ref name="configure" scoped="" ref="0x1053a2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x1053a3c10" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1053a3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1053a2020"/>
        <function-ref name="txDone" scoped="" ref="0x1053a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1053a92a0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1053a92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1053a9620"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1053a97b0"/>
        <function-ref name="request" scoped="" ref="0x1053a9940"/>
        <function-ref name="granted" scoped="" ref="0x1053a9ad0"/>
        <function-ref name="isOwner" scoped="" ref="0x1053a9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x1053a7020" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x1053a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1053a73a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1053a7530"/>
        <function-ref name="setUctl" scoped="" ref="0x1053a76c0"/>
        <function-ref name="enableUart" scoped="" ref="0x1053a7850"/>
        <function-ref name="setUrctl" scoped="" ref="0x1053a79e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1053a7b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1053a7d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x1053a6020"/>
        <function-ref name="getUrctl" scoped="" ref="0x1053a61b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x1053a6340"/>
        <function-ref name="getUmctl" scoped="" ref="0x1053a64d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x1053a6660"/>
        <function-ref name="setUtctl" scoped="" ref="0x1053a67f0"/>
        <function-ref name="getUbr" scoped="" ref="0x1053a6a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1053a6c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x1053a6da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x1053a5020"/>
        <function-ref name="isUart" scoped="" ref="0x1053a51b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1053a5340"/>
        <function-ref name="isSpi" scoped="" ref="0x1053a54d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1053a5660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1053a57f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1053a5980"/>
        <function-ref name="enableIntr" scoped="" ref="0x1053a5b10"/>
        <function-ref name="getMode" scoped="" ref="0x1053a5ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1053a4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1053a43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x1053a4540"/>
        <function-ref name="tx" scoped="" ref="0x1053a46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x1053a4860"/>
        <function-ref name="disableUart" scoped="" ref="0x1053a49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x1053a4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x1053a4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1053a3020"/>
        <function-ref name="rx" scoped="" ref="0x1053a31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1053a3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1053a34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1053a3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1053a37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1053a3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1053a87c0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1053a87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1053a8b40"/>
        <function-ref name="userId" scoped="" ref="0x1053a8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x103e6bbc0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x103e6bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x103ea3020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x103ea31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x103ea2280" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x103ea2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x103ea2600"/>
        <function-ref name="configure" scoped="" ref="0x103ea2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x103e6d980" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x103e6d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103e6dd00"/>
        <function-ref name="txDone" scoped="" ref="0x103e6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103e6c850" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103e6c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103e6cbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103e6cd60"/>
        <function-ref name="request" scoped="" ref="0x103e6b020"/>
        <function-ref name="granted" scoped="" ref="0x103e6b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x103e6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x103ea34b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x103ea34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x103ea3830"/>
        <function-ref name="userId" scoped="" ref="0x103ea39c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x103e8c020" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x103e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x103e8c3a0"/>
        <function-ref name="userId" scoped="" ref="0x103e8c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x103e9f0d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x103e9f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103e9f470"/>
        <function-ref name="txDone" scoped="" ref="0x103e9f600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x103e8d880" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x103e8d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103e8dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x103e9fa00" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x103e9fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x103e9fda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x103e8d0a0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x103e8d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103e8d420"/>
        <function-ref name="txDone" scoped="" ref="0x103e8d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x103efe020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x103efe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x103efe3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x103efe550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x103efdcd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x103efdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x103efc0a0"/>
        <function-ref name="configure" scoped="" ref="0x103efc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x103efe7a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103efe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103efeb20"/>
        <function-ref name="requested" scoped="" ref="0x103efecb0"/>
        <function-ref name="granted" scoped="" ref="0x103efee40"/>
        <function-ref name="isOwner" scoped="" ref="0x103efd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x103efd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103eff210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103eff210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103eff5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103eff740"/>
        <function-ref name="request" scoped="" ref="0x103eff8d0"/>
        <function-ref name="granted" scoped="" ref="0x103effa60"/>
        <function-ref name="isOwner" scoped="" ref="0x103effbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x103efd400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x103efd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x103efd780"/>
        <function-ref name="userId" scoped="" ref="0x103efd910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1053ca020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1053ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1053ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x1053ca630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x1053ca630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1053ca9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x1053cab40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1053cacd0"/>
        <function-ref name="dequeue" scoped="" ref="0x1053cae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1053c76c0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1053c76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1053c7a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1053c7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1053c5400" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1053c5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1053c57a0"/>
        <function-ref name="configure" scoped="" ref="0x1053c5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1053c5bc0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1053c5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1053c3020"/>
        <function-ref name="isEmpty" scoped="" ref="0x1053c31b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1053c3340"/>
        <function-ref name="dequeue" scoped="" ref="0x1053c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1053c7e40" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1053c7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1053c61e0"/>
        <function-ref name="requested" scoped="" ref="0x1053c6370"/>
        <function-ref name="granted" scoped="" ref="0x1053c6500"/>
        <function-ref name="isOwner" scoped="" ref="0x1053c6690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1053c6820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1053c3720" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1053c3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1053c3aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1053c3c30"/>
        <function-ref name="led1On" scoped="" ref="0x1053c3dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1053c2020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1053c21b0"/>
        <function-ref name="get" scoped="" ref="0x1053c2340"/>
        <function-ref name="led1Off" scoped="" ref="0x1053c24d0"/>
        <function-ref name="led0On" scoped="" ref="0x1053c2b10"/>
        <function-ref name="set" scoped="" ref="0x1053c27f0"/>
        <function-ref name="led2On" scoped="" ref="0x1053c2660"/>
        <function-ref name="led2Off" scoped="" ref="0x1053c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1053c8850" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1053c8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1053c8bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1053c8d80"/>
        <function-ref name="request" scoped="" ref="0x1053c7020"/>
        <function-ref name="granted" scoped="" ref="0x1053c71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x1053c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1053c6a70" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1053c6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1053c6df0"/>
        <function-ref name="userId" scoped="" ref="0x1053c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1053c2de0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x1053c2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1053c1180"/>
        <function-ref name="runTask" scoped="" ref="0x1053c1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x103f1e400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x103f1e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x103f1e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x103f1e9d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103f1e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103f1ed50"/>
        <function-ref name="requested" scoped="" ref="0x103f1d020"/>
        <function-ref name="granted" scoped="" ref="0x103f1d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x103f1d340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x103f1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x103f34b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x103f34b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x103f1e020"/>
        <function-ref name="stop" scoped="" ref="0x103f1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x103f1d720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x103f1d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x103f1daa0"/>
        <function-ref name="userId" scoped="" ref="0x103f1dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x105432bd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x105432bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x105431020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x105431270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x105431270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1054315f0"/>
        <function-ref name="requested" scoped="" ref="0x105431780"/>
        <function-ref name="granted" scoped="" ref="0x105431910"/>
        <function-ref name="isOwner" scoped="" ref="0x105431aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x105431c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x105432470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x105432470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1054327f0"/>
        <function-ref name="stop" scoped="" ref="0x105432980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x105431e80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x105431e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x105430220"/>
        <function-ref name="userId" scoped="" ref="0x1054303b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x103f3a020" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x103f3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x103f3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x103f3a690" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103f3a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103f3aa10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103f3aba0"/>
        <function-ref name="request" scoped="" ref="0x103f3ad30"/>
        <function-ref name="granted" scoped="" ref="0x103f39020"/>
        <function-ref name="isOwner" scoped="" ref="0x103f391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x103f3d790" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x103f3d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x103f3db10"/>
        <function-ref name="stop" scoped="" ref="0x103f3dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x103cb6ce0" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x103cb6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x103f6a0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x103f6a230"/>
        <function-ref name="start" scoped="" ref="0x103f6a3c0"/>
        <function-ref name="stop" scoped="" ref="0x103f6a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x103f6ad20" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x103f6ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103f690e0"/>
        <function-ref name="getPayload" scoped="" ref="0x103f69270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103f69400"/>
        <function-ref name="cancel" scoped="" ref="0x103f69590"/>
        <function-ref name="sendDone" scoped="" ref="0x103f69720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x103f67c00" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x103f67c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x103f66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x103f662b0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x103f662b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103f66630"/>
        <function-ref name="payloadLength" scoped="" ref="0x103f667c0"/>
        <function-ref name="getPayload" scoped="" ref="0x103f66950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103f66ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x103f66c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x103f63430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x103f63430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x103f62b00"/>
        <function-ref name="clear" scoped="" ref="0x103f932a0"/>
        <function-ref name="isValid" scoped="" ref="0x103f623d0"/>
        <function-ref name="set" scoped="" ref="0x103f939d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x103f85430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x103f85430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x103f857b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x103f85940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x103f85ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x103f85c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x103f67020" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x103f67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x103f673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x103f5c350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103f5c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x103f5c6d0"/>
        <function-ref name="noAck" scoped="" ref="0x103f5c860"/>
        <function-ref name="wasAcked" scoped="" ref="0x103f5c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x103f65020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x103f65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x103f653a0"/>
        <function-ref name="source" scoped="" ref="0x103f65530"/>
        <function-ref name="address" scoped="" ref="0x103f656c0"/>
        <function-ref name="destination" scoped="" ref="0x103f65850"/>
        <function-ref name="setSource" scoped="" ref="0x103f659e0"/>
        <function-ref name="setDestination" scoped="" ref="0x103f65b70"/>
        <function-ref name="type" scoped="" ref="0x103f65d00"/>
        <function-ref name="setType" scoped="" ref="0x103f64020"/>
        <function-ref name="isForMe" scoped="" ref="0x103f641b0"/>
        <function-ref name="setGroup" scoped="" ref="0x103f64340"/>
        <function-ref name="localGroup" scoped="" ref="0x103f644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x103f91660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x103f91660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x103f90ce0"/>
        <function-ref name="clear" scoped="" ref="0x103f8f460"/>
        <function-ref name="isValid" scoped="" ref="0x103f905b0"/>
        <function-ref name="set" scoped="" ref="0x103f8fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x103f792f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x103f792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x103f79670"/>
        <function-ref name="stopDone" scoped="" ref="0x103f79800"/>
        <function-ref name="start" scoped="" ref="0x103f79990"/>
        <function-ref name="stop" scoped="" ref="0x103f79b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x103faf2c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x103faf2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x103faf640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x103faf7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x103faf960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x103fafaf0"/>
        <function-ref name="setCca" scoped="" ref="0x103fafc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x103fafe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x103f9b1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x103f9b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x103f9b650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x103fb1020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x103fb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103fb13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x103fb1530"/>
        <function-ref name="getPayload" scoped="" ref="0x103fb16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103fb1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x103fb19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x103f78320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x103f78320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103f786a0"/>
        <function-ref name="getPayload" scoped="" ref="0x103f78830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103f789c0"/>
        <function-ref name="cancel" scoped="" ref="0x103f78b50"/>
        <function-ref name="sendDone" scoped="" ref="0x103f78ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x103f761d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x103f761d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x103f76550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x103fa80f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x103fa80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x103fa8470"/>
        <function-ref name="setNetwork" scoped="" ref="0x103fa8600"/>
        <function-ref name="getRssi" scoped="" ref="0x103fa8790"/>
        <function-ref name="getNetwork" scoped="" ref="0x103fa8920"/>
        <function-ref name="getPower" scoped="" ref="0x103fa8ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x103fa8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x103fa7170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x103fa7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x103fa74f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x103fa7680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x103fa7810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x103fa79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x103f77510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x103f77510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x103f77890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x103fb0020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103fb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x103fb03a0"/>
        <function-ref name="noAck" scoped="" ref="0x103fb0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x103fb06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x103fd1430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x103fd1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x103fd17b0"/>
        <function-ref name="setRetries" scoped="" ref="0x103fd1940"/>
        <function-ref name="getRetries" scoped="" ref="0x103fd1ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x103fd1c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x103fd1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x103f76800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x103f76800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x103f76b80"/>
        <function-ref name="source" scoped="" ref="0x103f76d10"/>
        <function-ref name="address" scoped="" ref="0x103fb2020"/>
        <function-ref name="destination" scoped="" ref="0x103fb21b0"/>
        <function-ref name="setSource" scoped="" ref="0x103fb2340"/>
        <function-ref name="setDestination" scoped="" ref="0x103fb24d0"/>
        <function-ref name="type" scoped="" ref="0x103fb2660"/>
        <function-ref name="setType" scoped="" ref="0x103fb27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x103fb2980"/>
        <function-ref name="setGroup" scoped="" ref="0x103fb2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x103fb2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x103fa3170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x103fa3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x103fa34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x103fcc020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x103fcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x103fcc3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x103fcc530"/>
        <function-ref name="start" scoped="" ref="0x103fcc6c0"/>
        <function-ref name="stop" scoped="" ref="0x103fcc850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x103fbc9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x103fbc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x103fbcd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x103fbbb70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x103fbbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x103fba020"/>
        <function-ref name="setRetries" scoped="" ref="0x103fba1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x103fba340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x103fba4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x103fba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x103fbd020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x103fbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x103fbd3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x103fbd530"/>
        <function-ref name="getRssi" scoped="" ref="0x103fbd6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x103fbd850"/>
        <function-ref name="getPower" scoped="" ref="0x103fbd9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x103fbdb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x103fc8990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x103fc8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103fc8d10"/>
        <function-ref name="getPayload" scoped="" ref="0x103fc0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103fc01b0"/>
        <function-ref name="cancel" scoped="" ref="0x103fc0340"/>
        <function-ref name="sendDone" scoped="" ref="0x103fc04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x103fbb080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x103fbb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x103fbb400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x103fbb590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x103fbb720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x103fbb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x103fc9500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x103fc9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x103fc9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x103fbc020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x103fbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x103fbc3a0"/>
        <function-ref name="noAck" scoped="" ref="0x103fbc530"/>
        <function-ref name="wasAcked" scoped="" ref="0x103fbc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103fcb1d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103fcb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103fcb550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103fcb6e0"/>
        <function-ref name="request" scoped="" ref="0x103fcb870"/>
        <function-ref name="granted" scoped="" ref="0x103fcba00"/>
        <function-ref name="isOwner" scoped="" ref="0x103fcbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x103fbf6f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x103fbf6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103fbfa70"/>
        <function-ref name="getPayload" scoped="" ref="0x103fbfc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103fbfd90"/>
        <function-ref name="cancel" scoped="" ref="0x103fc9020"/>
        <function-ref name="sendDone" scoped="" ref="0x103fc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x103fc9bc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x103fc9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103fc8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x103fc81b0"/>
        <function-ref name="getPayload" scoped="" ref="0x103fc8340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103fc84d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x103fc8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x103fc0840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x103fc0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x103fc0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x103fb7390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x103fb7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x103fb7710"/>
        <function-ref name="stopDone" scoped="" ref="0x103fb78a0"/>
        <function-ref name="start" scoped="" ref="0x103fb7a30"/>
        <function-ref name="stop" scoped="" ref="0x103fb7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x103fb5330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x103fb5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x103fb56b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x103fb5840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x103fb59d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x103fb5b60"/>
        <function-ref name="setCca" scoped="" ref="0x103fb5cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x103fb5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x103fb7e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x103fb7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103fb6220"/>
        <function-ref name="getPayload" scoped="" ref="0x103fb63b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103fb6540"/>
        <function-ref name="cancel" scoped="" ref="0x103fb66d0"/>
        <function-ref name="sendDone" scoped="" ref="0x103fb6860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x103fb6b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x103fb6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x103fb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x103fb4e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x103fb4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x103ff0220"/>
        <function-ref name="stopDone" scoped="" ref="0x103ff03b0"/>
        <function-ref name="start" scoped="" ref="0x103ff0540"/>
        <function-ref name="stop" scoped="" ref="0x103ff06d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x103fef7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x103fef7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x103fefb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x103fefcf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x103fefe80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x103fee030"/>
        <function-ref name="setCca" scoped="" ref="0x103fee1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x103fee350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x103fe5ae0" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x103fe5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x103fe5e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x103fe4020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x103fe41b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x103fe4340"/>
        <function-ref name="setCca" scoped="" ref="0x103fe44d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x103fe4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x103fdab00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x103fdab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x103fdae80"/>
        <function-ref name="setNetwork" scoped="" ref="0x103fd8030"/>
        <function-ref name="getRssi" scoped="" ref="0x103fd81c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x103fd8350"/>
        <function-ref name="getPower" scoped="" ref="0x103fd84e0"/>
        <function-ref name="getLqi" scoped="" ref="0x103fd8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x103fddd30" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x103fddd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103fe50e0"/>
        <function-ref name="cancel" scoped="" ref="0x103fe5270"/>
        <function-ref name="modify" scoped="" ref="0x103fe5400"/>
        <function-ref name="sendDone" scoped="" ref="0x103fe5590"/>
        <function-ref name="resend" scoped="" ref="0x103fe5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x103ff0990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x103ff0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x103ff0d10"/>
        <function-ref name="getPayload" scoped="" ref="0x103fef020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x103fef1b0"/>
        <function-ref name="cancel" scoped="" ref="0x103fef340"/>
        <function-ref name="sendDone" scoped="" ref="0x103fef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x103fd9b60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x103fd9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x103fdb020"/>
        <function-ref name="rand32" scoped="" ref="0x103fdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x103feb020" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x103feb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x103feb3a0"/>
        <function-ref name="stop" scoped="" ref="0x103feb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x104011130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x104011130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1040114b0"/>
        <function-ref name="getHeader" scoped="" ref="0x104011640"/>
        <function-ref name="getMetadata" scoped="" ref="0x1040117d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x103fe6b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x103fe6b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x103fec020"/>
        <function-ref name="rfOff" scoped="" ref="0x103fec1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x103fec340"/>
        <function-ref name="startVReg" scoped="" ref="0x103fec4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x103fec660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x103fec7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x103fec980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x103fecb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x103fdb470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x103fdb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x103fdb7f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x103fdb980"/>
        <function-ref name="led1On" scoped="" ref="0x103fdbb10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x103fdbca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x103fdbe30"/>
        <function-ref name="get" scoped="" ref="0x103fda020"/>
        <function-ref name="led1Off" scoped="" ref="0x103fda1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x103fda7f0"/>
        <function-ref name="set" scoped="" ref="0x103fda340"/>
        <function-ref name="led0On" scoped="" ref="0x103fda4d0"/>
        <function-ref name="led2On" scoped="" ref="0x103fda660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x103fee640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103fee640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103fee9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103feeb50"/>
        <function-ref name="request" scoped="" ref="0x103feece0"/>
        <function-ref name="granted" scoped="" ref="0x103feee70"/>
        <function-ref name="isOwner" scoped="" ref="0x103fed030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x10400c850" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x10400c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10400ccd0"/>
        <function-ref name="toIdle" scoped="" ref="0x10400ce60"/>
        <function-ref name="isState" scoped="" ref="0x103fd6020"/>
        <function-ref name="isIdle" scoped="" ref="0x103fd61b0"/>
        <function-ref name="requestState" scoped="" ref="0x103fd6340"/>
        <function-ref name="forceState" scoped="" ref="0x103fd64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x1040072a0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x1040072a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104007620"/>
        <function-ref name="runTask" scoped="" ref="0x1040077b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x1040082a0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x1040082a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104008620"/>
        <function-ref name="runTask" scoped="" ref="0x1040087b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x1040092b0" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x1040092b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104009630"/>
        <function-ref name="runTask" scoped="" ref="0x1040097c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x104070550" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x104070550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x1040708d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x104070a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x104070bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x104070d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10403c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10403c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x10403c340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10403c4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10403c660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10403c7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10403c980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10403cb10"/>
        <function-ref name="sync" scoped="" ref="0x10403cca0"/>
        <function-ref name="getChannel" scoped="" ref="0x10403b020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10403b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x10406b850" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x10406b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10406e480"/>
        <function-ref name="readDone" scoped="" ref="0x10406e900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x10403b4b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x10403b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x10403b830"/>
        <function-ref name="rfOff" scoped="" ref="0x10403b9c0"/>
        <function-ref name="rxOn" scoped="" ref="0x10403bb50"/>
        <function-ref name="startVReg" scoped="" ref="0x10403bce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x10403be70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x10406f030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x10406f1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x10406f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10403d020" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10403d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10403d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10403d530"/>
        <function-ref name="request" scoped="" ref="0x10403d6c0"/>
        <function-ref name="granted" scoped="" ref="0x10403d850"/>
        <function-ref name="isOwner" scoped="" ref="0x10403d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x1040660c0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x1040660c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x104066440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1040665d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x104066760"/>
        <function-ref name="syncDone" scoped="" ref="0x1040668f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x104066a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x104066c10"/>
        <function-ref name="setChannel" scoped="" ref="0x104066da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x104065020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x1040651b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x104065340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x1040654d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x104065660"/>
        <function-ref name="sync" scoped="" ref="0x1040657f0"/>
        <function-ref name="getChannel" scoped="" ref="0x104065a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x104065c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x1040801e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1040801e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104080560"/>
        <function-ref name="write" scoped="" ref="0x1040806f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x10405e970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10405e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x10405ecf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x104056790" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x104056790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104055020"/>
        <function-ref name="fired" scoped="" ref="0x10405d020"/>
        <function-ref name="startAt" scoped="" ref="0x10405d9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x10405d4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1040554e0"/>
        <function-ref name="start" scoped="" ref="0x10405f5d0"/>
        <function-ref name="stop" scoped="" ref="0x10405fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x104083020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x104083020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1040833a0"/>
        <function-ref name="write" scoped="" ref="0x104083530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x104053ce0" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x104053ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1040520a0"/>
        <function-ref name="isInput" scoped="" ref="0x104052230"/>
        <function-ref name="toggle" scoped="" ref="0x1040523c0"/>
        <function-ref name="isOutput" scoped="" ref="0x104052550"/>
        <function-ref name="get" scoped="" ref="0x1040526e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104052870"/>
        <function-ref name="set" scoped="" ref="0x104052a00"/>
        <function-ref name="clr" scoped="" ref="0x104052b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x104063500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x104063500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104062130"/>
        <function-ref name="readDone" scoped="" ref="0x1040625b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x1040b02f0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x1040b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1040b0670"/>
        <function-ref name="runTask" scoped="" ref="0x1040b0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x104080a80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x104080a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104080e00"/>
        <function-ref name="write" scoped="" ref="0x10407e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x10407e3c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10407e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10407e740"/>
        <function-ref name="write" scoped="" ref="0x10407e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x104081cd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x104081cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1040880a0"/>
        <function-ref name="write" scoped="" ref="0x104088230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x104089390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x104089390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x104089710"/>
        <function-ref name="changed" scoped="" ref="0x1040898a0"/>
        <function-ref name="amGroup" scoped="" ref="0x104089a30"/>
        <function-ref name="setAddress" scoped="" ref="0x104089bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x1040559d0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x1040559d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104055d50"/>
        <function-ref name="isInput" scoped="" ref="0x104053020"/>
        <function-ref name="toggle" scoped="" ref="0x1040531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x104053340"/>
        <function-ref name="get" scoped="" ref="0x1040534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104053660"/>
        <function-ref name="set" scoped="" ref="0x1040537f0"/>
        <function-ref name="clr" scoped="" ref="0x104053980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x10407dae0" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10407dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10407c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x104093020" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x104093020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1040933a0"/>
        <function-ref name="isInput" scoped="" ref="0x104093530"/>
        <function-ref name="toggle" scoped="" ref="0x1040936c0"/>
        <function-ref name="isOutput" scoped="" ref="0x104093850"/>
        <function-ref name="get" scoped="" ref="0x1040939e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104093b70"/>
        <function-ref name="set" scoped="" ref="0x104093d00"/>
        <function-ref name="clr" scoped="" ref="0x104092020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10406acc0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10406acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1040670a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x1040838f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1040838f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104083c70"/>
        <function-ref name="write" scoped="" ref="0x104083e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x10407c440" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10407c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10407c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10407cb60" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10407cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10407a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10407a1b0"/>
        <function-ref name="request" scoped="" ref="0x10407a340"/>
        <function-ref name="granted" scoped="" ref="0x10407a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10407a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x104079880" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x104079880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104079c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104079d90"/>
        <function-ref name="request" scoped="" ref="0x104078020"/>
        <function-ref name="granted" scoped="" ref="0x1040781b0"/>
        <function-ref name="isOwner" scoped="" ref="0x104078340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x104064020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x104064020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x1040643a0"/>
        <function-ref name="rfOff" scoped="" ref="0x104064530"/>
        <function-ref name="rxOn" scoped="" ref="0x1040646c0"/>
        <function-ref name="startVReg" scoped="" ref="0x104064850"/>
        <function-ref name="stopVReg" scoped="" ref="0x1040649e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x104064b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x104064d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x104063020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x1040885d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1040885d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104088950"/>
        <function-ref name="write" scoped="" ref="0x104088ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x104081420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x104081420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1040817a0"/>
        <function-ref name="write" scoped="" ref="0x104081930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x10407bb60" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10407bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10407d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104078600" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104078600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104078980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104078b10"/>
        <function-ref name="led1On" scoped="" ref="0x104078ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104078e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104077020"/>
        <function-ref name="get" scoped="" ref="0x1040771b0"/>
        <function-ref name="led1Off" scoped="" ref="0x104077340"/>
        <function-ref name="led2Off" scoped="" ref="0x104077980"/>
        <function-ref name="set" scoped="" ref="0x1040774d0"/>
        <function-ref name="led0On" scoped="" ref="0x104077660"/>
        <function-ref name="led2On" scoped="" ref="0x1040777f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x1040b1410" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x1040b1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1040b1790"/>
        <function-ref name="runTask" scoped="" ref="0x1040b1920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104067390" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104067390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104067710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1040678a0"/>
        <function-ref name="request" scoped="" ref="0x104067a30"/>
        <function-ref name="granted" scoped="" ref="0x104067bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x104067d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x104084e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x104084e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10408d1c0"/>
        <function-ref name="write" scoped="" ref="0x10408d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x1040844a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1040844a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104084920"/>
        <function-ref name="write" scoped="" ref="0x104084ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x10408ec00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x10408ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104091020"/>
        <function-ref name="disable" scoped="" ref="0x1040911b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x104091340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1040914d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x10407aa10" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x10407aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10407ad90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104079020"/>
        <function-ref name="request" scoped="" ref="0x1040791b0"/>
        <function-ref name="granted" scoped="" ref="0x104079340"/>
        <function-ref name="isOwner" scoped="" ref="0x1040794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x10407d3b0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10407d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10407d730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1041037e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1041037e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104103b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x104100220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x104100220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1040fdb30"/>
        <function-ref name="fired" scoped="" ref="0x1040fea60"/>
        <function-ref name="startAt" scoped="" ref="0x1040fd4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x1040fd020"/>
        <function-ref name="getAlarm" scoped="" ref="0x1040fc020"/>
        <function-ref name="start" scoped="" ref="0x1040fe090"/>
        <function-ref name="stop" scoped="" ref="0x1040fe5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1040fba20" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1040fba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1040fbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x1040fa2e0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x1040fa2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104207b30"/>
        <function-ref name="fired" scoped="" ref="0x104208ae0"/>
        <function-ref name="startAt" scoped="" ref="0x1042074e0"/>
        <function-ref name="isRunning" scoped="" ref="0x104207020"/>
        <function-ref name="getAlarm" scoped="" ref="0x104206020"/>
        <function-ref name="start" scoped="" ref="0x104208110"/>
        <function-ref name="stop" scoped="" ref="0x104208620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10549d370" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10549d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10549aba0"/>
        <function-ref name="fired" scoped="" ref="0x10549cb80"/>
        <function-ref name="startAt" scoped="" ref="0x10549a550"/>
        <function-ref name="isRunning" scoped="" ref="0x10549a090"/>
        <function-ref name="getAlarm" scoped="" ref="0x105499090"/>
        <function-ref name="start" scoped="" ref="0x10549c1b0"/>
        <function-ref name="stop" scoped="" ref="0x10549c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10549eaf0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10549eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10549ee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x105495360" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x105495360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x105493ba0"/>
        <function-ref name="fired" scoped="" ref="0x105494b80"/>
        <function-ref name="startAt" scoped="" ref="0x105493550"/>
        <function-ref name="isRunning" scoped="" ref="0x105493090"/>
        <function-ref name="getAlarm" scoped="" ref="0x105492090"/>
        <function-ref name="start" scoped="" ref="0x1054941b0"/>
        <function-ref name="stop" scoped="" ref="0x1054946c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x105496ab0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x105496ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x105496e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10547dc10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10547dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10547c020"/>
        <function-ref name="setEvent" scoped="" ref="0x10547c1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10547c340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10547c4d0"/>
        <function-ref name="fired" scoped="" ref="0x10547c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10547f1b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10547f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10547f530"/>
        <function-ref name="setClockSource" scoped="" ref="0x10547f6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10547f850"/>
        <function-ref name="get" scoped="" ref="0x10547f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10547fb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10547fd00"/>
        <function-ref name="getMode" scoped="" ref="0x10547e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10547e1b0"/>
        <function-ref name="overflow" scoped="" ref="0x10547e340"/>
        <function-ref name="setMode" scoped="" ref="0x10547e4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10547e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10547e8f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10547e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10547ec70"/>
        <function-ref name="getControl" scoped="" ref="0x10547ee00"/>
        <function-ref name="enableEvents" scoped="" ref="0x10547d020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10547d1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10547d340"/>
        <function-ref name="disableEvents" scoped="" ref="0x10547d4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10547d660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10547d7f0"/>
        <function-ref name="setControl" scoped="" ref="0x10547d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10411cba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10411cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10411a020"/>
        <function-ref name="setEvent" scoped="" ref="0x10411a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10411a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10411a4d0"/>
        <function-ref name="fired" scoped="" ref="0x10411a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10411f4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10411f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10411f850"/>
        <function-ref name="setClockSource" scoped="" ref="0x10411f9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10411fb70"/>
        <function-ref name="get" scoped="" ref="0x10411fd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x10411e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10411e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10411e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10411e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10411e660"/>
        <function-ref name="setMode" scoped="" ref="0x10411e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10411e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10411d280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10411d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10411d600"/>
        <function-ref name="getControl" scoped="" ref="0x10411d790"/>
        <function-ref name="enableEvents" scoped="" ref="0x10411d920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10411dab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10411dc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10411ddd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10411c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10411c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x10411c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x105473a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x105473a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x105473e00"/>
        <function-ref name="setEvent" scoped="" ref="0x105472020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1054721b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x105472340"/>
        <function-ref name="fired" scoped="" ref="0x1054724d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x105475020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x105475020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1054753a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x105475530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1054756c0"/>
        <function-ref name="get" scoped="" ref="0x105475850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1054759e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x105475b70"/>
        <function-ref name="getMode" scoped="" ref="0x105475d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x105474020"/>
        <function-ref name="overflow" scoped="" ref="0x1054741b0"/>
        <function-ref name="setMode" scoped="" ref="0x105474340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1054744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10547ada0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10547ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x105476670"/>
        <function-ref name="fired" scoped="" ref="0x105478610"/>
        <function-ref name="startAt" scoped="" ref="0x105476020"/>
        <function-ref name="isRunning" scoped="" ref="0x105478ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x105476b30"/>
        <function-ref name="start" scoped="" ref="0x105479bf0"/>
        <function-ref name="stop" scoped="" ref="0x105478150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10547a510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10547a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10547a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x105474760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x105474760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x105474ae0"/>
        <function-ref name="getControl" scoped="" ref="0x105474c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x105474e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x105473020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1054731b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x105473340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1054734d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x105473660"/>
        <function-ref name="setControl" scoped="" ref="0x1054737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10419d020" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10419d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10419de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10419c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10419c340"/>
        <function-ref name="overflow" scoped="" ref="0x10419ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1041c1950" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x1041c1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1041bf780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041be150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041bfc40"/>
        <function-ref name="overflow" scoped="" ref="0x1041be610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1041c35f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1041c35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1041c2430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1041c2db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1041c28f0"/>
        <function-ref name="overflow" scoped="" ref="0x1041c12a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1054905f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1054905f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10548de50"/>
        <function-ref name="fired" scoped="" ref="0x10548fe00"/>
        <function-ref name="startAt" scoped="" ref="0x10548d800"/>
        <function-ref name="isRunning" scoped="" ref="0x10548d340"/>
        <function-ref name="getAlarm" scoped="" ref="0x10548c340"/>
        <function-ref name="start" scoped="" ref="0x10548f430"/>
        <function-ref name="stop" scoped="" ref="0x10548f940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10548ad20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10548ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x105486670"/>
        <function-ref name="fired" scoped="" ref="0x105487550"/>
        <function-ref name="startAt" scoped="" ref="0x105486020"/>
        <function-ref name="isRunning" scoped="" ref="0x105487a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x105486b30"/>
        <function-ref name="start" scoped="" ref="0x105488b60"/>
        <function-ref name="stop" scoped="" ref="0x105487090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10548c9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10548c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10548b7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10548a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10548bca0"/>
        <function-ref name="overflow" scoped="" ref="0x10548a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x1042016a0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x1042016a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104201a20"/>
        <function-ref name="isInput" scoped="" ref="0x104201bb0"/>
        <function-ref name="toggle" scoped="" ref="0x104201d40"/>
        <function-ref name="isOutput" scoped="" ref="0x1041ff020"/>
        <function-ref name="get" scoped="" ref="0x1041ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041ff340"/>
        <function-ref name="set" scoped="" ref="0x1041ff4d0"/>
        <function-ref name="clr" scoped="" ref="0x1041ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x1041ff9d0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x1041ff9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041ffd50"/>
        <function-ref name="isInput" scoped="" ref="0x1041fe020"/>
        <function-ref name="toggle" scoped="" ref="0x1041fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1041fe340"/>
        <function-ref name="get" scoped="" ref="0x1041fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041fe660"/>
        <function-ref name="set" scoped="" ref="0x1041fe7f0"/>
        <function-ref name="clr" scoped="" ref="0x1041fe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x1041fece0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x1041fece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041fd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x1041fd230"/>
        <function-ref name="toggle" scoped="" ref="0x1041fd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1041fd550"/>
        <function-ref name="get" scoped="" ref="0x1041fd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041fd870"/>
        <function-ref name="set" scoped="" ref="0x1041fda00"/>
        <function-ref name="clr" scoped="" ref="0x1041fdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x104202370" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x104202370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1042026f0"/>
        <function-ref name="isInput" scoped="" ref="0x104202880"/>
        <function-ref name="toggle" scoped="" ref="0x104202a10"/>
        <function-ref name="isOutput" scoped="" ref="0x104202ba0"/>
        <function-ref name="get" scoped="" ref="0x104202d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x104201020"/>
        <function-ref name="set" scoped="" ref="0x1042011b0"/>
        <function-ref name="clr" scoped="" ref="0x104201340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x1041fb380" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x1041fb380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041fb700"/>
        <function-ref name="isInput" scoped="" ref="0x1041fb890"/>
        <function-ref name="toggle" scoped="" ref="0x1041fba20"/>
        <function-ref name="isOutput" scoped="" ref="0x1041fbbb0"/>
        <function-ref name="get" scoped="" ref="0x1041fbd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041fa020"/>
        <function-ref name="set" scoped="" ref="0x1041fa1b0"/>
        <function-ref name="clr" scoped="" ref="0x1041fa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x1042030e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x1042030e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104203460"/>
        <function-ref name="isInput" scoped="" ref="0x1042035f0"/>
        <function-ref name="toggle" scoped="" ref="0x104203780"/>
        <function-ref name="isOutput" scoped="" ref="0x104203910"/>
        <function-ref name="get" scoped="" ref="0x104203aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104203c30"/>
        <function-ref name="set" scoped="" ref="0x104203dc0"/>
        <function-ref name="clr" scoped="" ref="0x104202020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x1041fc020" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x1041fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041fc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1041fc530"/>
        <function-ref name="toggle" scoped="" ref="0x1041fc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1041fc850"/>
        <function-ref name="get" scoped="" ref="0x1041fc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041fcb70"/>
        <function-ref name="set" scoped="" ref="0x1041fcd00"/>
        <function-ref name="clr" scoped="" ref="0x1041fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1041f8930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1041f8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041f8cb0"/>
        <function-ref name="isInput" scoped="" ref="0x1041f8e40"/>
        <function-ref name="setResistor" scoped="" ref="0x1041f7020"/>
        <function-ref name="toggle" scoped="" ref="0x1041f71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1041f7340"/>
        <function-ref name="getResistor" scoped="" ref="0x1041f74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041f7660"/>
        <function-ref name="get" scoped="" ref="0x1041f77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1041f7980"/>
        <function-ref name="getRaw" scoped="" ref="0x1041f7b10"/>
        <function-ref name="set" scoped="" ref="0x1041f7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1041f7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1041f6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1041f62b0"/>
        <function-ref name="clr" scoped="" ref="0x1041f6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1041f9710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1041f9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041f9a90"/>
        <function-ref name="isInput" scoped="" ref="0x1041f9c20"/>
        <function-ref name="toggle" scoped="" ref="0x1041f9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1041f8020"/>
        <function-ref name="get" scoped="" ref="0x1041f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041f8340"/>
        <function-ref name="set" scoped="" ref="0x1041f84d0"/>
        <function-ref name="clr" scoped="" ref="0x1041f8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1041f3480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1041f3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041f3800"/>
        <function-ref name="isInput" scoped="" ref="0x1041f3990"/>
        <function-ref name="setResistor" scoped="" ref="0x1041f3b20"/>
        <function-ref name="toggle" scoped="" ref="0x1041f3cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x1041f3e40"/>
        <function-ref name="getResistor" scoped="" ref="0x1041f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041f21b0"/>
        <function-ref name="get" scoped="" ref="0x1041f2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1041f24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x1041f2660"/>
        <function-ref name="set" scoped="" ref="0x1041f27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1041f2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1041f2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1041f2da0"/>
        <function-ref name="clr" scoped="" ref="0x1041f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1041f41b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1041f41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041f4530"/>
        <function-ref name="isInput" scoped="" ref="0x1041f46c0"/>
        <function-ref name="toggle" scoped="" ref="0x1041f4850"/>
        <function-ref name="isOutput" scoped="" ref="0x1041f49e0"/>
        <function-ref name="get" scoped="" ref="0x1041f4b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041f4d00"/>
        <function-ref name="set" scoped="" ref="0x1041f3020"/>
        <function-ref name="clr" scoped="" ref="0x1041f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1041ee020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1041ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1041ee530"/>
        <function-ref name="setResistor" scoped="" ref="0x1041ee6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1041ee850"/>
        <function-ref name="isOutput" scoped="" ref="0x1041ee9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1041eeb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041eed00"/>
        <function-ref name="get" scoped="" ref="0x1041ed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1041ed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1041ed340"/>
        <function-ref name="set" scoped="" ref="0x1041ed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1041ed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1041ed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1041eda80"/>
        <function-ref name="clr" scoped="" ref="0x1041edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1041f0d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1041f0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1041ef180"/>
        <function-ref name="isInput" scoped="" ref="0x1041ef310"/>
        <function-ref name="toggle" scoped="" ref="0x1041ef4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x1041ef630"/>
        <function-ref name="get" scoped="" ref="0x1041ef7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1041ef950"/>
        <function-ref name="set" scoped="" ref="0x1041efae0"/>
        <function-ref name="clr" scoped="" ref="0x1041efc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x104231de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x104231de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104230180"/>
        <function-ref name="isInput" scoped="" ref="0x104230310"/>
        <function-ref name="setResistor" scoped="" ref="0x1042304a0"/>
        <function-ref name="toggle" scoped="" ref="0x104230630"/>
        <function-ref name="isOutput" scoped="" ref="0x1042307c0"/>
        <function-ref name="getResistor" scoped="" ref="0x104230950"/>
        <function-ref name="makeOutput" scoped="" ref="0x104230ae0"/>
        <function-ref name="get" scoped="" ref="0x104230c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104230e00"/>
        <function-ref name="getRaw" scoped="" ref="0x10422f020"/>
        <function-ref name="set" scoped="" ref="0x10422f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10422f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10422f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10422f760"/>
        <function-ref name="clr" scoped="" ref="0x10422f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x104233b70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x104233b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104231020"/>
        <function-ref name="isInput" scoped="" ref="0x1042311b0"/>
        <function-ref name="toggle" scoped="" ref="0x104231340"/>
        <function-ref name="isOutput" scoped="" ref="0x1042314d0"/>
        <function-ref name="get" scoped="" ref="0x104231660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1042317f0"/>
        <function-ref name="set" scoped="" ref="0x104231980"/>
        <function-ref name="clr" scoped="" ref="0x104231b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10422c930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10422c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10422ccb0"/>
        <function-ref name="isInput" scoped="" ref="0x10422ce40"/>
        <function-ref name="setResistor" scoped="" ref="0x10422b020"/>
        <function-ref name="toggle" scoped="" ref="0x10422b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10422b340"/>
        <function-ref name="getResistor" scoped="" ref="0x10422b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10422b660"/>
        <function-ref name="get" scoped="" ref="0x10422b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10422b980"/>
        <function-ref name="getRaw" scoped="" ref="0x10422bb10"/>
        <function-ref name="set" scoped="" ref="0x10422bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10422be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10422a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10422a2b0"/>
        <function-ref name="clr" scoped="" ref="0x10422a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10422d710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10422d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10422da90"/>
        <function-ref name="isInput" scoped="" ref="0x10422dc20"/>
        <function-ref name="toggle" scoped="" ref="0x10422ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10422c020"/>
        <function-ref name="get" scoped="" ref="0x10422c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10422c340"/>
        <function-ref name="set" scoped="" ref="0x10422c4d0"/>
        <function-ref name="clr" scoped="" ref="0x10422c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x104227480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x104227480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104227800"/>
        <function-ref name="isInput" scoped="" ref="0x104227990"/>
        <function-ref name="setResistor" scoped="" ref="0x104227b20"/>
        <function-ref name="toggle" scoped="" ref="0x104227cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x104227e40"/>
        <function-ref name="getResistor" scoped="" ref="0x104226020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1042261b0"/>
        <function-ref name="get" scoped="" ref="0x104226340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1042264d0"/>
        <function-ref name="getRaw" scoped="" ref="0x104226660"/>
        <function-ref name="set" scoped="" ref="0x1042267f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104226980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104226b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104226da0"/>
        <function-ref name="clr" scoped="" ref="0x104225020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1042281b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1042281b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104228530"/>
        <function-ref name="isInput" scoped="" ref="0x1042286c0"/>
        <function-ref name="toggle" scoped="" ref="0x104228850"/>
        <function-ref name="isOutput" scoped="" ref="0x1042289e0"/>
        <function-ref name="get" scoped="" ref="0x104228b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x104228d00"/>
        <function-ref name="set" scoped="" ref="0x104227020"/>
        <function-ref name="clr" scoped="" ref="0x1042271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x104222020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x104222020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1042223a0"/>
        <function-ref name="isInput" scoped="" ref="0x104222530"/>
        <function-ref name="setResistor" scoped="" ref="0x1042226c0"/>
        <function-ref name="toggle" scoped="" ref="0x104222850"/>
        <function-ref name="isOutput" scoped="" ref="0x1042229e0"/>
        <function-ref name="getResistor" scoped="" ref="0x104222b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x104222d00"/>
        <function-ref name="get" scoped="" ref="0x104221020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1042211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x104221340"/>
        <function-ref name="set" scoped="" ref="0x1042214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x104221660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1042217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x104221a80"/>
        <function-ref name="clr" scoped="" ref="0x104221c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x104224d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x104224d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104223180"/>
        <function-ref name="isInput" scoped="" ref="0x104223310"/>
        <function-ref name="toggle" scoped="" ref="0x1042234a0"/>
        <function-ref name="isOutput" scoped="" ref="0x104223630"/>
        <function-ref name="get" scoped="" ref="0x1042237c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104223950"/>
        <function-ref name="set" scoped="" ref="0x104223ae0"/>
        <function-ref name="clr" scoped="" ref="0x104223c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x1042535a0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x1042535a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x104253920"/>
        <function-ref name="disable" scoped="" ref="0x104253ab0"/>
        <function-ref name="captured" scoped="" ref="0x104253c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x104253dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x104258210" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x104258210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104258590"/>
        <function-ref name="disable" scoped="" ref="0x104258720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1042588b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x104258a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x104258e30" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x104258e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1042571e0"/>
        <function-ref name="disable" scoped="" ref="0x104257370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x104257500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x104257690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x10423dda0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x10423dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10423c180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10423c310"/>
        <function-ref name="captured" scoped="" ref="0x10423c4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10423c630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10423c7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x10423c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10423f020" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10423f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x10423f3a0"/>
        <function-ref name="disable" scoped="" ref="0x10423f530"/>
        <function-ref name="captured" scoped="" ref="0x10423f6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x10423f850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10423fae0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10423fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10423fe60"/>
        <function-ref name="getControl" scoped="" ref="0x10423d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10423d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10423d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10423d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10423d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10423d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10423d980"/>
        <function-ref name="setControl" scoped="" ref="0x10423db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x10423cc20" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10423cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10423b020"/>
        <function-ref name="isInput" scoped="" ref="0x10423b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10423b340"/>
        <function-ref name="toggle" scoped="" ref="0x10423b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x10423b660"/>
        <function-ref name="getResistor" scoped="" ref="0x10423b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10423b980"/>
        <function-ref name="get" scoped="" ref="0x10423bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10423bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x10423be30"/>
        <function-ref name="set" scoped="" ref="0x10423a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10423a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10423a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10423a5d0"/>
        <function-ref name="clr" scoped="" ref="0x10423a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x104276c40" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x104276c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104275020"/>
        <function-ref name="fired" scoped="" ref="0x1042751b0"/>
        <function-ref name="disable" scoped="" ref="0x104275340"/>
        <function-ref name="edge" scoped="" ref="0x1042754d0"/>
        <function-ref name="enable" scoped="" ref="0x104275660"/>
        <function-ref name="getValue" scoped="" ref="0x1042757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10426cbc0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10426cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10426b020"/>
        <function-ref name="fired" scoped="" ref="0x10426b1b0"/>
        <function-ref name="disable" scoped="" ref="0x10426b340"/>
        <function-ref name="edge" scoped="" ref="0x10426b4d0"/>
        <function-ref name="enable" scoped="" ref="0x10426b660"/>
        <function-ref name="getValue" scoped="" ref="0x10426b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x104273bc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x104273bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104272020"/>
        <function-ref name="fired" scoped="" ref="0x1042721b0"/>
        <function-ref name="disable" scoped="" ref="0x104272340"/>
        <function-ref name="edge" scoped="" ref="0x1042724d0"/>
        <function-ref name="enable" scoped="" ref="0x104272660"/>
        <function-ref name="getValue" scoped="" ref="0x1042727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x104271bc0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x104271bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104270020"/>
        <function-ref name="fired" scoped="" ref="0x1042701b0"/>
        <function-ref name="disable" scoped="" ref="0x104270340"/>
        <function-ref name="edge" scoped="" ref="0x1042704d0"/>
        <function-ref name="enable" scoped="" ref="0x104270660"/>
        <function-ref name="getValue" scoped="" ref="0x1042707f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10427cd20" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10427cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1042770e0"/>
        <function-ref name="fired" scoped="" ref="0x104277270"/>
        <function-ref name="disable" scoped="" ref="0x104277400"/>
        <function-ref name="edge" scoped="" ref="0x104277590"/>
        <function-ref name="enable" scoped="" ref="0x104277720"/>
        <function-ref name="getValue" scoped="" ref="0x1042778b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10426ebc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10426ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10426d0a0"/>
        <function-ref name="fired" scoped="" ref="0x10426d230"/>
        <function-ref name="disable" scoped="" ref="0x10426d3c0"/>
        <function-ref name="edge" scoped="" ref="0x10426d550"/>
        <function-ref name="enable" scoped="" ref="0x10426d6e0"/>
        <function-ref name="getValue" scoped="" ref="0x10426d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x104275bc0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x104275bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104274020"/>
        <function-ref name="fired" scoped="" ref="0x1042741b0"/>
        <function-ref name="disable" scoped="" ref="0x104274340"/>
        <function-ref name="edge" scoped="" ref="0x1042744d0"/>
        <function-ref name="enable" scoped="" ref="0x104274660"/>
        <function-ref name="getValue" scoped="" ref="0x1042747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10426bbc0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10426bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10426a020"/>
        <function-ref name="fired" scoped="" ref="0x10426a1b0"/>
        <function-ref name="disable" scoped="" ref="0x10426a340"/>
        <function-ref name="edge" scoped="" ref="0x10426a4d0"/>
        <function-ref name="enable" scoped="" ref="0x10426a660"/>
        <function-ref name="getValue" scoped="" ref="0x10426a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x104279e30" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x104279e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10427d1e0"/>
        <function-ref name="fired" scoped="" ref="0x10427d370"/>
        <function-ref name="disable" scoped="" ref="0x10427d500"/>
        <function-ref name="edge" scoped="" ref="0x10427d690"/>
        <function-ref name="enable" scoped="" ref="0x10427d820"/>
        <function-ref name="getValue" scoped="" ref="0x10427d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x104270bc0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x104270bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10426f020"/>
        <function-ref name="fired" scoped="" ref="0x10426f1b0"/>
        <function-ref name="disable" scoped="" ref="0x10426f340"/>
        <function-ref name="edge" scoped="" ref="0x10426f4d0"/>
        <function-ref name="enable" scoped="" ref="0x10426f660"/>
        <function-ref name="getValue" scoped="" ref="0x10426f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x104277c80" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x104277c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1042760a0"/>
        <function-ref name="fired" scoped="" ref="0x104276230"/>
        <function-ref name="disable" scoped="" ref="0x1042763c0"/>
        <function-ref name="edge" scoped="" ref="0x104276550"/>
        <function-ref name="enable" scoped="" ref="0x1042766e0"/>
        <function-ref name="getValue" scoped="" ref="0x104276870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10426dc40" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10426dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10426c020"/>
        <function-ref name="fired" scoped="" ref="0x10426c1b0"/>
        <function-ref name="disable" scoped="" ref="0x10426c340"/>
        <function-ref name="edge" scoped="" ref="0x10426c4d0"/>
        <function-ref name="enable" scoped="" ref="0x10426c660"/>
        <function-ref name="getValue" scoped="" ref="0x10426c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x104274bc0" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x104274bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104273020"/>
        <function-ref name="fired" scoped="" ref="0x1042731b0"/>
        <function-ref name="disable" scoped="" ref="0x104273340"/>
        <function-ref name="edge" scoped="" ref="0x1042734d0"/>
        <function-ref name="enable" scoped="" ref="0x104273660"/>
        <function-ref name="getValue" scoped="" ref="0x1042737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x104272bc0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x104272bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104271020"/>
        <function-ref name="fired" scoped="" ref="0x1042711b0"/>
        <function-ref name="disable" scoped="" ref="0x104271340"/>
        <function-ref name="edge" scoped="" ref="0x1042714d0"/>
        <function-ref name="enable" scoped="" ref="0x104271660"/>
        <function-ref name="getValue" scoped="" ref="0x1042717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10427dd80" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10427dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10427c180"/>
        <function-ref name="fired" scoped="" ref="0x10427c310"/>
        <function-ref name="disable" scoped="" ref="0x10427c4a0"/>
        <function-ref name="edge" scoped="" ref="0x10427c630"/>
        <function-ref name="enable" scoped="" ref="0x10427c7c0"/>
        <function-ref name="getValue" scoped="" ref="0x10427c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10426fbc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10426fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10426e020"/>
        <function-ref name="fired" scoped="" ref="0x10426e1b0"/>
        <function-ref name="disable" scoped="" ref="0x10426e340"/>
        <function-ref name="edge" scoped="" ref="0x10426e4d0"/>
        <function-ref name="enable" scoped="" ref="0x10426e660"/>
        <function-ref name="getValue" scoped="" ref="0x10426e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x104263a30" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x104263a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104263db0"/>
        <function-ref name="fired" scoped="" ref="0x104262020"/>
        <function-ref name="disable" scoped="" ref="0x1042621b0"/>
        <function-ref name="edge" scoped="" ref="0x104262340"/>
        <function-ref name="enable" scoped="" ref="0x1042624d0"/>
        <function-ref name="getValue" scoped="" ref="0x104262660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x1042a2bc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x1042a2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1042a1020"/>
        <function-ref name="fired" scoped="" ref="0x1042a11b0"/>
        <function-ref name="disable" scoped="" ref="0x1042a1340"/>
        <function-ref name="edge" scoped="" ref="0x1042a14d0"/>
        <function-ref name="enable" scoped="" ref="0x1042a1660"/>
        <function-ref name="getValue" scoped="" ref="0x1042a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10425fa30" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10425fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10425fdb0"/>
        <function-ref name="fired" scoped="" ref="0x10425e020"/>
        <function-ref name="disable" scoped="" ref="0x10425e1b0"/>
        <function-ref name="edge" scoped="" ref="0x10425e340"/>
        <function-ref name="enable" scoped="" ref="0x10425e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10425e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10425da30" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10425da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10425ddb0"/>
        <function-ref name="fired" scoped="" ref="0x10425c020"/>
        <function-ref name="disable" scoped="" ref="0x10425c1b0"/>
        <function-ref name="edge" scoped="" ref="0x10425c340"/>
        <function-ref name="enable" scoped="" ref="0x10425c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10425c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x104265a30" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x104265a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104265db0"/>
        <function-ref name="fired" scoped="" ref="0x104264020"/>
        <function-ref name="disable" scoped="" ref="0x1042641b0"/>
        <function-ref name="edge" scoped="" ref="0x104264340"/>
        <function-ref name="enable" scoped="" ref="0x1042644d0"/>
        <function-ref name="getValue" scoped="" ref="0x104264660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10425aa30" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10425aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1042a3020"/>
        <function-ref name="fired" scoped="" ref="0x1042a31b0"/>
        <function-ref name="disable" scoped="" ref="0x1042a3340"/>
        <function-ref name="edge" scoped="" ref="0x1042a34d0"/>
        <function-ref name="enable" scoped="" ref="0x1042a3660"/>
        <function-ref name="getValue" scoped="" ref="0x1042a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x104262a30" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x104262a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104262db0"/>
        <function-ref name="fired" scoped="" ref="0x104260020"/>
        <function-ref name="disable" scoped="" ref="0x1042601b0"/>
        <function-ref name="edge" scoped="" ref="0x104260340"/>
        <function-ref name="enable" scoped="" ref="0x1042604d0"/>
        <function-ref name="getValue" scoped="" ref="0x104260660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x1042a1bc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x1042a1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1042a0020"/>
        <function-ref name="fired" scoped="" ref="0x1042a01b0"/>
        <function-ref name="disable" scoped="" ref="0x1042a0340"/>
        <function-ref name="edge" scoped="" ref="0x1042a04d0"/>
        <function-ref name="enable" scoped="" ref="0x1042a0660"/>
        <function-ref name="getValue" scoped="" ref="0x1042a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x1042699c0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x1042699c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104269d40"/>
        <function-ref name="fired" scoped="" ref="0x104266020"/>
        <function-ref name="disable" scoped="" ref="0x1042661b0"/>
        <function-ref name="edge" scoped="" ref="0x104266340"/>
        <function-ref name="enable" scoped="" ref="0x1042664d0"/>
        <function-ref name="getValue" scoped="" ref="0x104266660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10425ca30" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10425ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10425cdb0"/>
        <function-ref name="fired" scoped="" ref="0x10425b020"/>
        <function-ref name="disable" scoped="" ref="0x10425b1b0"/>
        <function-ref name="edge" scoped="" ref="0x10425b340"/>
        <function-ref name="enable" scoped="" ref="0x10425b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10425b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x104264a30" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x104264a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104264db0"/>
        <function-ref name="fired" scoped="" ref="0x104263020"/>
        <function-ref name="disable" scoped="" ref="0x1042631b0"/>
        <function-ref name="edge" scoped="" ref="0x104263340"/>
        <function-ref name="enable" scoped="" ref="0x1042634d0"/>
        <function-ref name="getValue" scoped="" ref="0x104263660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x1042a3bc0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x1042a3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1042a2020"/>
        <function-ref name="fired" scoped="" ref="0x1042a21b0"/>
        <function-ref name="disable" scoped="" ref="0x1042a2340"/>
        <function-ref name="edge" scoped="" ref="0x1042a24d0"/>
        <function-ref name="enable" scoped="" ref="0x1042a2660"/>
        <function-ref name="getValue" scoped="" ref="0x1042a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x104260a30" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x104260a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104260db0"/>
        <function-ref name="fired" scoped="" ref="0x10425f020"/>
        <function-ref name="disable" scoped="" ref="0x10425f1b0"/>
        <function-ref name="edge" scoped="" ref="0x10425f340"/>
        <function-ref name="enable" scoped="" ref="0x10425f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10425f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10425ea30" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10425ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10425edb0"/>
        <function-ref name="fired" scoped="" ref="0x10425d020"/>
        <function-ref name="disable" scoped="" ref="0x10425d1b0"/>
        <function-ref name="edge" scoped="" ref="0x10425d340"/>
        <function-ref name="enable" scoped="" ref="0x10425d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10425d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x104266a30" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x104266a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104266db0"/>
        <function-ref name="fired" scoped="" ref="0x104265020"/>
        <function-ref name="disable" scoped="" ref="0x1042651b0"/>
        <function-ref name="edge" scoped="" ref="0x104265340"/>
        <function-ref name="enable" scoped="" ref="0x1042654d0"/>
        <function-ref name="getValue" scoped="" ref="0x104265660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10425ba30" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10425ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10425bdb0"/>
        <function-ref name="fired" scoped="" ref="0x10425a020"/>
        <function-ref name="disable" scoped="" ref="0x10425a1b0"/>
        <function-ref name="edge" scoped="" ref="0x10425a340"/>
        <function-ref name="enable" scoped="" ref="0x10425a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10425a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x104385610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x104385610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104385990"/>
        <function-ref name="fired" scoped="" ref="0x104385b20"/>
        <function-ref name="disable" scoped="" ref="0x104385cb0"/>
        <function-ref name="edge" scoped="" ref="0x104385e40"/>
        <function-ref name="enable" scoped="" ref="0x104384020"/>
        <function-ref name="getValue" scoped="" ref="0x1043841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x104346a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x104346a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104346db0"/>
        <function-ref name="disable" scoped="" ref="0x104385020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1043851b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x104385340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x104382610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x104382610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104382990"/>
        <function-ref name="fired" scoped="" ref="0x104382b20"/>
        <function-ref name="disable" scoped="" ref="0x104382cb0"/>
        <function-ref name="edge" scoped="" ref="0x104382e40"/>
        <function-ref name="enable" scoped="" ref="0x104381020"/>
        <function-ref name="getValue" scoped="" ref="0x1043811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x104383a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x104383a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104383df0"/>
        <function-ref name="disable" scoped="" ref="0x104382020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1043821b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x104382340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x1046c1e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1046c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c0410"/>
        <function-ref name="write" scoped="" ref="0x1046c05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x1046ca160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x1046ca160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046ca4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1046c4e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x1046c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c3210"/>
        <function-ref name="write" scoped="" ref="0x1046c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x1046bf880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x1046bf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bfc00"/>
        <function-ref name="write" scoped="" ref="0x1046bfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x1046b60a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x1046b60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b6420"/>
        <function-ref name="write" scoped="" ref="0x1046b65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1046bd0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1046bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bd420"/>
        <function-ref name="write" scoped="" ref="0x1046bd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1046ab500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1046ab500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ab880"/>
        <function-ref name="write" scoped="" ref="0x1046aba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1046ad500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1046ad500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ad880"/>
        <function-ref name="write" scoped="" ref="0x1046ada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1046c9490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x1046c9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c9810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x1046b3880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x1046b3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b3c00"/>
        <function-ref name="write" scoped="" ref="0x1046b3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1046ae500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1046ae500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ae880"/>
        <function-ref name="write" scoped="" ref="0x1046aea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x1046c3e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x1046c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c2210"/>
        <function-ref name="write" scoped="" ref="0x1046c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1046c2e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x1046c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c1210"/>
        <function-ref name="write" scoped="" ref="0x1046c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x1046b9880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x1046b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b9c00"/>
        <function-ref name="write" scoped="" ref="0x1046b9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x1046ba0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x1046ba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ba420"/>
        <function-ref name="write" scoped="" ref="0x1046ba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1046bd880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x1046bd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bdc00"/>
        <function-ref name="write" scoped="" ref="0x1046bdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x1046cda90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1046cda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1046cde10"/>
        <function-ref name="abortRelease" scoped="" ref="0x1046cc020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1046cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1046c8e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1046c8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x1046c7490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1046c7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c7910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x1046b2c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1046b2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b00a0"/>
        <function-ref name="write" scoped="" ref="0x1046b0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x1046c7be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x1046c7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x1046aece0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1046aece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ad0a0"/>
        <function-ref name="write" scoped="" ref="0x1046ad230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1046c8160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1046c8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x1046b30a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x1046b30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b3420"/>
        <function-ref name="write" scoped="" ref="0x1046b35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x1046c2670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x1046c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c29f0"/>
        <function-ref name="write" scoped="" ref="0x1046c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1046c3670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1046c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c39f0"/>
        <function-ref name="write" scoped="" ref="0x1046c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1046ccad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1046ccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046cce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x1046b40a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x1046b40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b4420"/>
        <function-ref name="write" scoped="" ref="0x1046b45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x1046b6880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x1046b6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b6c00"/>
        <function-ref name="write" scoped="" ref="0x1046b6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x1046b4880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x1046b4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b4c00"/>
        <function-ref name="write" scoped="" ref="0x1046b4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x1046acce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1046acce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ab0a0"/>
        <function-ref name="write" scoped="" ref="0x1046ab230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x1046adce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1046adce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ac0a0"/>
        <function-ref name="write" scoped="" ref="0x1046ac230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x1046ba880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x1046ba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bac00"/>
        <function-ref name="write" scoped="" ref="0x1046bad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x1046b50a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x1046b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b5420"/>
        <function-ref name="write" scoped="" ref="0x1046b55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1046afce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x1046afce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ae0a0"/>
        <function-ref name="write" scoped="" ref="0x1046ae230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x1046bc880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x1046bc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bcc00"/>
        <function-ref name="write" scoped="" ref="0x1046bcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1046abce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x1046abce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1046a90a0"/>
        <function-ref name="writeDone" scoped="" ref="0x1046a9230"/>
        <function-ref name="write" scoped="" ref="0x1046a93c0"/>
        <function-ref name="beginRead" scoped="" ref="0x1046a9550"/>
        <function-ref name="readDone" scoped="" ref="0x1046a96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1046cc480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1046cc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046cc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x1046c4670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x1046c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c49f0"/>
        <function-ref name="write" scoped="" ref="0x1046c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x1046c1670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x1046c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c19f0"/>
        <function-ref name="write" scoped="" ref="0x1046c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x1046b80a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x1046b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b8420"/>
        <function-ref name="write" scoped="" ref="0x1046b85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1046bc0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1046bc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bc420"/>
        <function-ref name="write" scoped="" ref="0x1046bc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x1046b8880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x1046b8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b8c00"/>
        <function-ref name="write" scoped="" ref="0x1046b8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1046c0870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1046c0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046c0bf0"/>
        <function-ref name="write" scoped="" ref="0x1046c0d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1046ca7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1046ca7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046cab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1046bf0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1046bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bf420"/>
        <function-ref name="write" scoped="" ref="0x1046bf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1046cee20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1046cee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1046cd1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1046cd350"/>
        <function-ref name="request" scoped="" ref="0x1046cd4e0"/>
        <function-ref name="granted" scoped="" ref="0x1046cd670"/>
        <function-ref name="isOwner" scoped="" ref="0x1046cd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x1046c62f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x1046c62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x1046c4020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x1046c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1046af500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1046af500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046af880"/>
        <function-ref name="write" scoped="" ref="0x1046afa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1046b0ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1046b0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046af0a0"/>
        <function-ref name="write" scoped="" ref="0x1046af230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1046c87b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1046c87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1046b0500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1046b0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b0880"/>
        <function-ref name="write" scoped="" ref="0x1046b0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1046ac500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1046ac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ac880"/>
        <function-ref name="write" scoped="" ref="0x1046aca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x1046b90a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x1046b90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b9420"/>
        <function-ref name="write" scoped="" ref="0x1046b95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x1046b5880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x1046b5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b5c00"/>
        <function-ref name="write" scoped="" ref="0x1046b5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x1046cae00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x1046cae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1046c9ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1046c9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1046bb0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1046bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bb420"/>
        <function-ref name="write" scoped="" ref="0x1046bb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x1046c6940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1046c6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046c6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x1046bb880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x1046bb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046bbc00"/>
        <function-ref name="write" scoped="" ref="0x1046bbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x1046b20a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x1046b20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046b2820"/>
        <function-ref name="write" scoped="" ref="0x1046b29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1046a99b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1046a99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1046a9d30"/>
        <function-ref name="writeDone" scoped="" ref="0x1046a8020"/>
        <function-ref name="write" scoped="" ref="0x1046a81b0"/>
        <function-ref name="beginRead" scoped="" ref="0x1046a8340"/>
        <function-ref name="readDone" scoped="" ref="0x1046a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x10438f630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x10438f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10438f9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x10438fb40"/>
        <function-ref name="write" scoped="" ref="0x10438fcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x10438fe60"/>
        <function-ref name="readDone" scoped="" ref="0x10438e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x104390670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x104390670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1043909f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x104390b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x104390d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x10438e8c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x10438e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10438ec40"/>
        <function-ref name="write" scoped="" ref="0x10438edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x10438c6f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x10438c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10438ca70"/>
        <function-ref name="write" scoped="" ref="0x10438cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104393950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104393950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104393cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104393e60"/>
        <function-ref name="request" scoped="" ref="0x104390020"/>
        <function-ref name="granted" scoped="" ref="0x1043901b0"/>
        <function-ref name="isOwner" scoped="" ref="0x104390340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x10438b510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x10438b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10438b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x1043c3680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1043c3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1043c3a00"/>
        <function-ref name="sendDone" scoped="" ref="0x1043c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x1043d4bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x1043d4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1043d2020"/>
        <function-ref name="writeDone" scoped="" ref="0x1043d21b0"/>
        <function-ref name="write" scoped="" ref="0x1043d2340"/>
        <function-ref name="beginRead" scoped="" ref="0x1043d24d0"/>
        <function-ref name="readDone" scoped="" ref="0x1043d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10438a920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10438a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10438aca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10438ae30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x104387020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x1043cd080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1043cd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1043cd400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x1043cc020" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x1043cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1043cc3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x1043cc530"/>
        <function-ref name="isState" scoped="" ref="0x1043cc6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x1043cc850"/>
        <function-ref name="requestState" scoped="" ref="0x1043cc9e0"/>
        <function-ref name="forceState" scoped="" ref="0x1043ccb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1043cf400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1043cf400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1043cf780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1043cf910"/>
        <function-ref name="request" scoped="" ref="0x1043cfaa0"/>
        <function-ref name="granted" scoped="" ref="0x1043cfc30"/>
        <function-ref name="isOwner" scoped="" ref="0x1043cfdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x1043d1020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x1043d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1043d13a0"/>
        <function-ref name="write" scoped="" ref="0x1043d1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x1043d1db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x1043d1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1043d0180"/>
        <function-ref name="write" scoped="" ref="0x1043d0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1043ccdf0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1043ccdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1043ca1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1043ca350"/>
        <function-ref name="led1On" scoped="" ref="0x1043ca4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1043ca670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1043ca800"/>
        <function-ref name="get" scoped="" ref="0x1043ca990"/>
        <function-ref name="led1Off" scoped="" ref="0x1043cab20"/>
        <function-ref name="led2Off" scoped="" ref="0x1043c41b0"/>
        <function-ref name="set" scoped="" ref="0x1043cacb0"/>
        <function-ref name="led0On" scoped="" ref="0x1043cae40"/>
        <function-ref name="led2On" scoped="" ref="0x1043c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104387810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104387810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104387b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104387d20"/>
        <function-ref name="request" scoped="" ref="0x1043d4020"/>
        <function-ref name="granted" scoped="" ref="0x1043d41b0"/>
        <function-ref name="isOwner" scoped="" ref="0x1043d4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x1043be120" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x1043be120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1043be4a0"/>
        <function-ref name="runTask" scoped="" ref="0x1043be630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x1043d0ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x1043d0ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1043cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x104403770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x104403770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x104403af0"/>
        <function-ref name="toIdle" scoped="" ref="0x104403c80"/>
        <function-ref name="isState" scoped="" ref="0x104403e10"/>
        <function-ref name="isIdle" scoped="" ref="0x10444b020"/>
        <function-ref name="requestState" scoped="" ref="0x10444b1b0"/>
        <function-ref name="forceState" scoped="" ref="0x10444b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1043fe280" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1043fe280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1043fe600"/>
        <function-ref name="toIdle" scoped="" ref="0x1043fe790"/>
        <function-ref name="isState" scoped="" ref="0x1043fe920"/>
        <function-ref name="isIdle" scoped="" ref="0x1043feab0"/>
        <function-ref name="requestState" scoped="" ref="0x1043fec40"/>
        <function-ref name="forceState" scoped="" ref="0x1043fedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10444a020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10444a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10444a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10444ab70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10444ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x104449020"/>
        <function-ref name="toIdle" scoped="" ref="0x1044491b0"/>
        <function-ref name="isState" scoped="" ref="0x104449340"/>
        <function-ref name="isIdle" scoped="" ref="0x1044494d0"/>
        <function-ref name="requestState" scoped="" ref="0x104449660"/>
        <function-ref name="forceState" scoped="" ref="0x1044497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x10469a020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10469a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10469a3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x10469a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1044308f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1044308f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x104430c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104431c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104431c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104430020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1044301b0"/>
        <function-ref name="request" scoped="" ref="0x104430340"/>
        <function-ref name="granted" scoped="" ref="0x1044304d0"/>
        <function-ref name="isOwner" scoped="" ref="0x104430660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x105555af0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x105555af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x105555e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x105554030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x105553440" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x105553440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1055537c0"/>
        <function-ref name="sendDone" scoped="" ref="0x105553950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x105553be0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x105553be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x105552020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1055542c0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1055542c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x105554640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x105557e70" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x105557e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x105555220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1055553b0"/>
        <function-ref name="request" scoped="" ref="0x105555540"/>
        <function-ref name="granted" scoped="" ref="0x1055556d0"/>
        <function-ref name="isOwner" scoped="" ref="0x105555860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1055548d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1055548d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x105554c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x105554de0"/>
        <function-ref name="splitRead" scoped="" ref="0x105553020"/>
        <function-ref name="write" scoped="" ref="0x1055531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x10446f6b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10446f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10446fa30"/>
        <function-ref name="configure" scoped="" ref="0x10446fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x10446c850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10446c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10446cbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x10446cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x10446aa40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10446aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10446adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x10446d020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x10446d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x10446d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x10446b690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x10446b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10446ba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10446bba0"/>
        <function-ref name="request" scoped="" ref="0x10446bd30"/>
        <function-ref name="granted" scoped="" ref="0x10446a020"/>
        <function-ref name="isOwner" scoped="" ref="0x10446a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104470430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104470430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1044707b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104470940"/>
        <function-ref name="request" scoped="" ref="0x104470ad0"/>
        <function-ref name="granted" scoped="" ref="0x104470c60"/>
        <function-ref name="isOwner" scoped="" ref="0x104470df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x10446d6a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x10446d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x10446da20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x10446dbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x10446dd40"/>
        <function-ref name="write" scoped="" ref="0x10446c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1044692a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1044692a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x104469620"/>
        <function-ref name="txDone" scoped="" ref="0x1044697b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1044b5250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1044b5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1044b55f0"/>
        <function-ref name="configure" scoped="" ref="0x1044b5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1044b4c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1044b4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1044b2020"/>
        <function-ref name="sendDone" scoped="" ref="0x1044b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1044b13e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1044b13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1044b1780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1044b5a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1044b5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1044b5d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x1044b1a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x1044b1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1044b1dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1044b0020"/>
        <function-ref name="setUctl" scoped="" ref="0x1044b01b0"/>
        <function-ref name="enableUart" scoped="" ref="0x1044b0340"/>
        <function-ref name="setUrctl" scoped="" ref="0x1044b04d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1044b0660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1044b07f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x1044b0980"/>
        <function-ref name="getUrctl" scoped="" ref="0x1044b0b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x1044b0ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x1044b0e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x1044af020"/>
        <function-ref name="setUtctl" scoped="" ref="0x1044af1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x1044af440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1044af5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x1044af760"/>
        <function-ref name="isUartRx" scoped="" ref="0x1044af8f0"/>
        <function-ref name="isUart" scoped="" ref="0x1044afa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1044afc10"/>
        <function-ref name="isSpi" scoped="" ref="0x1044afda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1044ae020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1044ae1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1044ae340"/>
        <function-ref name="enableIntr" scoped="" ref="0x1044ae4d0"/>
        <function-ref name="getMode" scoped="" ref="0x1044ae660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1044ae9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x1044aeb80"/>
        <function-ref name="setUbr" scoped="" ref="0x1044aed10"/>
        <function-ref name="tx" scoped="" ref="0x1044ad020"/>
        <function-ref name="getUctl" scoped="" ref="0x1044ad1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x1044ad340"/>
        <function-ref name="enableSpi" scoped="" ref="0x1044ad4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x1044ad660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1044ad7f0"/>
        <function-ref name="rx" scoped="" ref="0x1044ad980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1044adb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x1044adca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1044ade30"/>
        <function-ref name="disableSpi" scoped="" ref="0x1044ac020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1044ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1044acc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1044acc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1044ab020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1044ab1b0"/>
        <function-ref name="led1On" scoped="" ref="0x1044ab340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1044ab4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1044ab660"/>
        <function-ref name="get" scoped="" ref="0x1044ab7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x1044ab980"/>
        <function-ref name="led2On" scoped="" ref="0x1044aa020"/>
        <function-ref name="set" scoped="" ref="0x1044abca0"/>
        <function-ref name="led2Off" scoped="" ref="0x1044abb10"/>
        <function-ref name="led0On" scoped="" ref="0x1044abe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1044b25b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1044b25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1044b2950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1044b2ae0"/>
        <function-ref name="request" scoped="" ref="0x1044b2c70"/>
        <function-ref name="granted" scoped="" ref="0x1044b2e00"/>
        <function-ref name="isOwner" scoped="" ref="0x1044b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1044b6470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1044b6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1044b6810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1044b69a0"/>
        <function-ref name="request" scoped="" ref="0x1044b6b30"/>
        <function-ref name="granted" scoped="" ref="0x1044b6cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x1044b6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1044b4060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1044b4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1044b43e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1044b4570"/>
        <function-ref name="splitRead" scoped="" ref="0x1044b4700"/>
        <function-ref name="write" scoped="" ref="0x1044b4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1044ac480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1044ac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1044ac800"/>
        <function-ref name="txDone" scoped="" ref="0x1044ac990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x1044aa2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x1044aa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1044aa670"/>
        <function-ref name="runTask" scoped="" ref="0x1044aa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x1044ef5e0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1044ef5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1044ef960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x1044f0d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1044f0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1044ef0e0"/>
        <function-ref name="txDone" scoped="" ref="0x1044ef270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x1044a2020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x1044a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1044a23a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1044a2530"/>
        <function-ref name="setUctl" scoped="" ref="0x1044a26c0"/>
        <function-ref name="enableUart" scoped="" ref="0x1044a2850"/>
        <function-ref name="setUrctl" scoped="" ref="0x1044a29e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1044a2b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1044a2d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x1044a1020"/>
        <function-ref name="getUrctl" scoped="" ref="0x1044a11b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x1044a1340"/>
        <function-ref name="getUmctl" scoped="" ref="0x1044a14d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x1044a1660"/>
        <function-ref name="setUtctl" scoped="" ref="0x1044a17f0"/>
        <function-ref name="getUbr" scoped="" ref="0x1044a1a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1044a1c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x1044a1da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x1044a0020"/>
        <function-ref name="isUart" scoped="" ref="0x1044a01b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1044a0340"/>
        <function-ref name="isSpi" scoped="" ref="0x1044a04d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1044a0660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1044a07f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1044a0980"/>
        <function-ref name="enableIntr" scoped="" ref="0x1044a0b10"/>
        <function-ref name="getMode" scoped="" ref="0x1044a0ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10449f220"/>
        <function-ref name="clrIntr" scoped="" ref="0x10449f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x10449f540"/>
        <function-ref name="tx" scoped="" ref="0x10449f6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x10449f860"/>
        <function-ref name="disableUart" scoped="" ref="0x10449f9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10449fb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x10449fd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1044f0020"/>
        <function-ref name="rx" scoped="" ref="0x1044f01b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1044f0340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1044f04d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1044f0660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1044f07f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1044f0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x104507b20" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x104507b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104506020"/>
        <function-ref name="isInput" scoped="" ref="0x1045061b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104506340"/>
        <function-ref name="toggle" scoped="" ref="0x1045064d0"/>
        <function-ref name="isOutput" scoped="" ref="0x104506660"/>
        <function-ref name="getResistor" scoped="" ref="0x1045067f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104506980"/>
        <function-ref name="get" scoped="" ref="0x104506b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104506ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x104506e30"/>
        <function-ref name="set" scoped="" ref="0x104505020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045051b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104505340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045055d0"/>
        <function-ref name="clr" scoped="" ref="0x104505760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1044e7780" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1044e7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1044e7b00"/>
        <function-ref name="txDone" scoped="" ref="0x1044e7c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x104505b20" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x104505b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104504020"/>
        <function-ref name="isInput" scoped="" ref="0x1045041b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104504340"/>
        <function-ref name="toggle" scoped="" ref="0x1045044d0"/>
        <function-ref name="isOutput" scoped="" ref="0x104504660"/>
        <function-ref name="getResistor" scoped="" ref="0x1045047f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104504980"/>
        <function-ref name="get" scoped="" ref="0x104504b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104504ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x104504e30"/>
        <function-ref name="set" scoped="" ref="0x104503020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045031b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104503340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045035d0"/>
        <function-ref name="clr" scoped="" ref="0x104503760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x104503b20" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x104503b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104502020"/>
        <function-ref name="isInput" scoped="" ref="0x1045021b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104502340"/>
        <function-ref name="toggle" scoped="" ref="0x1045024d0"/>
        <function-ref name="isOutput" scoped="" ref="0x104502660"/>
        <function-ref name="getResistor" scoped="" ref="0x1045027f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104502980"/>
        <function-ref name="get" scoped="" ref="0x104502b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104502ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x104502e30"/>
        <function-ref name="set" scoped="" ref="0x104501020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045011b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104501340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045015d0"/>
        <function-ref name="clr" scoped="" ref="0x104501760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x1044eec70" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x1044eec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1044eb020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1044eb1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x1044eb340"/>
        <function-ref name="enableUart" scoped="" ref="0x1044eb4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x1044eb660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1044eb7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1044eb980"/>
        <function-ref name="getUtctl" scoped="" ref="0x1044ebb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x1044ebca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x1044ebe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x1044ea020"/>
        <function-ref name="disableIntr" scoped="" ref="0x1044ea1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x1044ea340"/>
        <function-ref name="getUbr" scoped="" ref="0x1044ea5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1044ea760"/>
        <function-ref name="setUmctl" scoped="" ref="0x1044ea8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x1044eaa80"/>
        <function-ref name="isUart" scoped="" ref="0x1044eac10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1044eada0"/>
        <function-ref name="isSpi" scoped="" ref="0x1044e9020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1044e91b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1044e9340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1044e94d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x1044e9660"/>
        <function-ref name="getMode" scoped="" ref="0x1044e97f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1044e9b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x1044e9d10"/>
        <function-ref name="setUbr" scoped="" ref="0x1044e8020"/>
        <function-ref name="tx" scoped="" ref="0x1044e81b0"/>
        <function-ref name="getUctl" scoped="" ref="0x1044e8340"/>
        <function-ref name="disableUart" scoped="" ref="0x1044e84d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x1044e8660"/>
        <function-ref name="setModeUart" scoped="" ref="0x1044e87f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1044e8980"/>
        <function-ref name="rx" scoped="" ref="0x1044e8b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1044e8ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x1044e8e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1044e7020"/>
        <function-ref name="disableSpi" scoped="" ref="0x1044e71b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1044e7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x104511d10" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x104511d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1044e50e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x1044e5270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1044e5400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1044e5590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1044e5720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1044e58b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1044e5a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x1044e5bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1044e5d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1044e4020"/>
        <function-ref name="getData" scoped="" ref="0x1044e41b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1044e4340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1044e44d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1044e4760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1044e48f0"/>
        <function-ref name="getIV" scoped="" ref="0x1044e4a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x1044e4c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x1044e4da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10450f020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10450f1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x10450f340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10450f4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x10450f660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x10450f7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x10450f980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x10450fd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x10450e020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x10450e1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x10450e340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x10450e4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x10450e660"/>
        <function-ref name="disableI2C" scoped="" ref="0x10450e7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x10450e980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x10450eb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x10450eca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x10450ee30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10450d020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10450d1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10450d340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10450d4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x10450d660"/>
        <function-ref name="setWordMode" scoped="" ref="0x10450d7f0"/>
        <function-ref name="setData" scoped="" ref="0x10450d980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10450db10"/>
        <function-ref name="getClockSource" scoped="" ref="0x10450dca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x10450de30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x10450c020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10450c1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x10450c340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x10450c8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x10450ca60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x10450cbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x10450cd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10450b020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x10450b1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x10450b340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10450b4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x10450b660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10450b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x104509b20" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x104509b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104508020"/>
        <function-ref name="isInput" scoped="" ref="0x1045081b0"/>
        <function-ref name="setResistor" scoped="" ref="0x104508340"/>
        <function-ref name="toggle" scoped="" ref="0x1045084d0"/>
        <function-ref name="isOutput" scoped="" ref="0x104508660"/>
        <function-ref name="getResistor" scoped="" ref="0x1045087f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104508980"/>
        <function-ref name="get" scoped="" ref="0x104508b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x104508ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x104508e30"/>
        <function-ref name="set" scoped="" ref="0x104507020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045071b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104507340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045075d0"/>
        <function-ref name="clr" scoped="" ref="0x104507760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1044e6150" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1044e6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1044e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x10450bbb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x10450bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10450a020"/>
        <function-ref name="isInput" scoped="" ref="0x10450a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10450a340"/>
        <function-ref name="toggle" scoped="" ref="0x10450a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x10450a660"/>
        <function-ref name="getResistor" scoped="" ref="0x10450a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10450a980"/>
        <function-ref name="get" scoped="" ref="0x10450ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10450aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x10450ae30"/>
        <function-ref name="set" scoped="" ref="0x104509020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045091b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x104509340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045095d0"/>
        <function-ref name="clr" scoped="" ref="0x104509760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10554b5d0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10554b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10554b950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10554bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x1055447c0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1055447c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x105544b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x10553da80" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x10553da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x10553de00"/>
        <function-ref name="configure" scoped="" ref="0x10553c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x105544dd0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x105544dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x105543180"/>
        <function-ref name="getStartByte" scoped="" ref="0x105543310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1055434a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x105543630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1055437c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x105543950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x105543ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x105543c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x105543e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x105542020"/>
        <function-ref name="getData" scoped="" ref="0x1055421b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x105542340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1055424d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x105542760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1055428f0"/>
        <function-ref name="getIV" scoped="" ref="0x105542a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x105542c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x105542da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x105541020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1055411b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x105541340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1055414d0"/>
        <function-ref name="isI2C" scoped="" ref="0x105541660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1055417f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x105541980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x105541d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x105540020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1055401b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x105540340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1055404d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x105540660"/>
        <function-ref name="disableI2C" scoped="" ref="0x1055407f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x105540980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x105540b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x105540ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x105540e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10553f020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10553f1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10553f340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10553f4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x10553f660"/>
        <function-ref name="setWordMode" scoped="" ref="0x10553f7f0"/>
        <function-ref name="setData" scoped="" ref="0x10553f980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10553fb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x10553fca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x10553fe30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x10553e020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10553e1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x10553e340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x10553e8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x10553ea60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x10553ebf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x10553ed80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10553d020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x10553d1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x10553d340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10553d4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x10553d660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10553d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x105544020" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x105544020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1055443a0"/>
        <function-ref name="txDone" scoped="" ref="0x105544530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10554c860" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10554c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10554cbe0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10554cd70"/>
        <function-ref name="request" scoped="" ref="0x10554b020"/>
        <function-ref name="granted" scoped="" ref="0x10554b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x10554b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x10554a5a0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x10554a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10554a920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10554aab0"/>
        <function-ref name="setUctl" scoped="" ref="0x10554ac40"/>
        <function-ref name="enableUart" scoped="" ref="0x10554add0"/>
        <function-ref name="setUrctl" scoped="" ref="0x105548020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1055481b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x105548340"/>
        <function-ref name="getUtctl" scoped="" ref="0x1055484d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x105548660"/>
        <function-ref name="resetUsart" scoped="" ref="0x1055487f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x105548980"/>
        <function-ref name="disableIntr" scoped="" ref="0x105548b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x105548ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x105547020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1055471b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x105547340"/>
        <function-ref name="isUartRx" scoped="" ref="0x1055474d0"/>
        <function-ref name="isUart" scoped="" ref="0x105547660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1055477f0"/>
        <function-ref name="isSpi" scoped="" ref="0x105547980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x105547b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x105547ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x105547e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x105546020"/>
        <function-ref name="getMode" scoped="" ref="0x1055461b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x105546540"/>
        <function-ref name="clrIntr" scoped="" ref="0x1055466d0"/>
        <function-ref name="setUbr" scoped="" ref="0x105546860"/>
        <function-ref name="tx" scoped="" ref="0x1055469f0"/>
        <function-ref name="getUctl" scoped="" ref="0x105546b80"/>
        <function-ref name="disableUart" scoped="" ref="0x105546d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x105545020"/>
        <function-ref name="setModeUart" scoped="" ref="0x1055451b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x105545340"/>
        <function-ref name="rx" scoped="" ref="0x1055454d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x105545660"/>
        <function-ref name="isUartTx" scoped="" ref="0x1055457f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x105545980"/>
        <function-ref name="disableSpi" scoped="" ref="0x105545b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x105545ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10554bd70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10554bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10554a180"/>
        <function-ref name="userId" scoped="" ref="0x10554a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1045b82c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1045b82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1045b8640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1045b87d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1045b78a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1045b78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1045b7c20"/>
        <function-ref name="configure" scoped="" ref="0x1045b7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1045bc4d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1045bc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1045bc850"/>
        <function-ref name="txDone" scoped="" ref="0x1045bc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1045b9020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1045b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1045b93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1045b9530"/>
        <function-ref name="request" scoped="" ref="0x1045b96c0"/>
        <function-ref name="granted" scoped="" ref="0x1045b9850"/>
        <function-ref name="isOwner" scoped="" ref="0x1045b99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1045bb3f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1045bb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1045bb770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1045b8ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1045b8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1045b8e50"/>
        <function-ref name="userId" scoped="" ref="0x1045b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1045b4e50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1045b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1045b2210"/>
        <function-ref name="userId" scoped="" ref="0x1045b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1045b5060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1045b5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1045b5400"/>
        <function-ref name="txDone" scoped="" ref="0x1045b5590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x1045b4840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x1045b4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1045b4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1045b5990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1045b5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1045b5d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x1045b4060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x1045b4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1045b43e0"/>
        <function-ref name="txDone" scoped="" ref="0x1045b4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1045af850" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1045af850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1045afbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1045afd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1045ad570" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1045ad570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1045ad910"/>
        <function-ref name="configure" scoped="" ref="0x1045adaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1045ae020" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1045ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1045ae3a0"/>
        <function-ref name="requested" scoped="" ref="0x1045ae530"/>
        <function-ref name="granted" scoped="" ref="0x1045ae6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x1045ae850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1045ae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1045b0a80" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1045b0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1045b0e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1045af020"/>
        <function-ref name="request" scoped="" ref="0x1045af1b0"/>
        <function-ref name="granted" scoped="" ref="0x1045af340"/>
        <function-ref name="isOwner" scoped="" ref="0x1045af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1045aec30" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1045aec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1045ad020"/>
        <function-ref name="userId" scoped="" ref="0x1045ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10560da40" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10560da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10560ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x10560c0a0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x10560c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10560c420"/>
        <function-ref name="isEmpty" scoped="" ref="0x10560c5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10560c740"/>
        <function-ref name="dequeue" scoped="" ref="0x10560c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x105608020" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x105608020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1056083c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x105608550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x105607cf0" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x105607cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1056060e0"/>
        <function-ref name="configure" scoped="" ref="0x105606270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x105606500" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x105606500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x105606880"/>
        <function-ref name="isEmpty" scoped="" ref="0x105606a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x105606ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x105606d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1056087a0" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1056087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x105608b20"/>
        <function-ref name="requested" scoped="" ref="0x105608cb0"/>
        <function-ref name="granted" scoped="" ref="0x105608e40"/>
        <function-ref name="isOwner" scoped="" ref="0x105607020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1056071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x105605020" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x105605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1056053a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x105605530"/>
        <function-ref name="led1On" scoped="" ref="0x1056056c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x105605850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1056059e0"/>
        <function-ref name="get" scoped="" ref="0x105605b70"/>
        <function-ref name="led1Off" scoped="" ref="0x105605d00"/>
        <function-ref name="led0On" scoped="" ref="0x1056044d0"/>
        <function-ref name="set" scoped="" ref="0x1056041b0"/>
        <function-ref name="led2On" scoped="" ref="0x105604020"/>
        <function-ref name="led2Off" scoped="" ref="0x105604340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x105609270" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x105609270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x105609610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1056097a0"/>
        <function-ref name="request" scoped="" ref="0x105609930"/>
        <function-ref name="granted" scoped="" ref="0x105609ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x105609c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x105607400" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x105607400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x105607780"/>
        <function-ref name="userId" scoped="" ref="0x105607910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1056047a0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x1056047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x105604b20"/>
        <function-ref name="runTask" scoped="" ref="0x105604cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x1045a5540" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x1045a5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1045a58c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x1045a5a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1045a5be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1045a5d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1045a2020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1045a21b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1045a2340"/>
        <function-ref name="getStopBit" scoped="" ref="0x1045a24d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1045a2660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1045a27f0"/>
        <function-ref name="getData" scoped="" ref="0x1045a2980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1045a2b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1045a2ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1045a1020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1045a11b0"/>
        <function-ref name="getIV" scoped="" ref="0x1045a1340"/>
        <function-ref name="enableI2C" scoped="" ref="0x1045a14d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x1045a1660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1045a17f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1045a1980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1045a1b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1045a1ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x1045a1e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1045a0020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1045a01b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1045a0540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1045a06d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1045a0860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1045a09f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1045a0b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1045a0d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x10459f020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x10459f1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x10459f340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x10459f4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x10459f660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10459f7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10459f980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10459fb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10459fca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x10459fe30"/>
        <function-ref name="setWordMode" scoped="" ref="0x10459e020"/>
        <function-ref name="setData" scoped="" ref="0x10459e1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10459e340"/>
        <function-ref name="getClockSource" scoped="" ref="0x10459e4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x10459e660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x10459e7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x10459e980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x10459eb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x10459d420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x10459d5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x10459d740"/>
        <function-ref name="setStopBit" scoped="" ref="0x10459d8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x10459da60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x10459dbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x10459dd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x10459c020"/>
        <function-ref name="setStartByte" scoped="" ref="0x10459c1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x10459c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x1045e8250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x1045e8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1045e85d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1045e8760"/>
        <function-ref name="setUctl" scoped="" ref="0x1045e88f0"/>
        <function-ref name="enableUart" scoped="" ref="0x1045e8a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x1045e8c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1045e8da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1045e7020"/>
        <function-ref name="getUtctl" scoped="" ref="0x1045e71b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x1045e7340"/>
        <function-ref name="resetUsart" scoped="" ref="0x1045e74d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x1045e7660"/>
        <function-ref name="disableIntr" scoped="" ref="0x1045e77f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x1045e7980"/>
        <function-ref name="getUbr" scoped="" ref="0x1045e7c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1045e7da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x1045e6020"/>
        <function-ref name="isUartRx" scoped="" ref="0x1045e61b0"/>
        <function-ref name="isUart" scoped="" ref="0x1045e6340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1045e64d0"/>
        <function-ref name="isSpi" scoped="" ref="0x1045e6660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1045e67f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1045e6980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1045e6b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x1045e6ca0"/>
        <function-ref name="getMode" scoped="" ref="0x1045e6e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1045e5220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1045e53b0"/>
        <function-ref name="setUbr" scoped="" ref="0x1045e5540"/>
        <function-ref name="tx" scoped="" ref="0x1045e56d0"/>
        <function-ref name="getUctl" scoped="" ref="0x1045e5860"/>
        <function-ref name="disableUart" scoped="" ref="0x1045e59f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x1045e5b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x1045e5d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1045e4020"/>
        <function-ref name="rx" scoped="" ref="0x1045e41b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1045e4340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1045e44d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1045e4660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1045e47f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1045e4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x1045e2cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x1045e2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x1045e1230"/>
        <function-ref name="setResistor" scoped="" ref="0x1045e13c0"/>
        <function-ref name="toggle" scoped="" ref="0x1045e1550"/>
        <function-ref name="isOutput" scoped="" ref="0x1045e16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1045e1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045e1a00"/>
        <function-ref name="get" scoped="" ref="0x1045e1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045e1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x1045e0020"/>
        <function-ref name="set" scoped="" ref="0x1045e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045e0760"/>
        <function-ref name="clr" scoped="" ref="0x1045e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x1045ef430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x1045ef430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1045ef7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x1045ef940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1045efad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1045efc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1045efdf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1045ee020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1045ee1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x1045ee340"/>
        <function-ref name="setClockSource" scoped="" ref="0x1045ee4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1045ee660"/>
        <function-ref name="getData" scoped="" ref="0x1045ee7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1045ee980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1045eeb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1045eeda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1045ed020"/>
        <function-ref name="getIV" scoped="" ref="0x1045ed1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x1045ed340"/>
        <function-ref name="setStartBit" scoped="" ref="0x1045ed4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1045ed660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1045ed7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1045ed980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1045edb10"/>
        <function-ref name="isI2C" scoped="" ref="0x1045edca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1045ede30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1045ec020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1045ec3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1045ec540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1045ec6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1045ec860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1045ec9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1045ecb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x1045ecd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1045eb020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x1045eb1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1045eb340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x1045eb4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1045eb660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x1045eb7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x1045eb980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x1045ebb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x1045ebca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x1045ebe30"/>
        <function-ref name="setData" scoped="" ref="0x1045ea020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x1045ea1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x1045ea340"/>
        <function-ref name="getWordMode" scoped="" ref="0x1045ea4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1045ea660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1045ea7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x1045ea980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x1045e9020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1045e91b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x1045e9340"/>
        <function-ref name="setStopBit" scoped="" ref="0x1045e94d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x1045e9660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1045e97f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x1045e9980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x1045e9b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x1045e9ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x1045e9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x1045e4d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x1045e4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1045e30e0"/>
        <function-ref name="isInput" scoped="" ref="0x1045e3270"/>
        <function-ref name="setResistor" scoped="" ref="0x1045e3400"/>
        <function-ref name="toggle" scoped="" ref="0x1045e3590"/>
        <function-ref name="isOutput" scoped="" ref="0x1045e3720"/>
        <function-ref name="getResistor" scoped="" ref="0x1045e38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1045e3a40"/>
        <function-ref name="get" scoped="" ref="0x1045e3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1045e3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x1045e2020"/>
        <function-ref name="set" scoped="" ref="0x1045e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1045e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1045e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1045e2760"/>
        <function-ref name="clr" scoped="" ref="0x1045e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x1046edc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1046edc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ec210"/>
        <function-ref name="write" scoped="" ref="0x1046ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x1046f8da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x1046f8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x1046f1b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x1046f1b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046f0020"/>
        <function-ref name="write" scoped="" ref="0x1046f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x1046eb670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x1046eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046eb9f0"/>
        <function-ref name="write" scoped="" ref="0x1046ebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x1046e4e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x1046e4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e3210"/>
        <function-ref name="write" scoped="" ref="0x1046e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1046ebe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1046ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ea210"/>
        <function-ref name="write" scoped="" ref="0x1046ea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1046d72f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1046d72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046d7670"/>
        <function-ref name="write" scoped="" ref="0x1046d7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1046d92f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1046d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046d9670"/>
        <function-ref name="write" scoped="" ref="0x1046d9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x1046f6120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x1046f6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f64a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x1046df670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x1046df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046df9f0"/>
        <function-ref name="write" scoped="" ref="0x1046dfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1046db2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1046db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046db670"/>
        <function-ref name="write" scoped="" ref="0x1046db800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x1046f0c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x1046f0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ee020"/>
        <function-ref name="write" scoped="" ref="0x1046ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1046eec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x1046eec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ed020"/>
        <function-ref name="write" scoped="" ref="0x1046ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x1046e5670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x1046e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e59f0"/>
        <function-ref name="write" scoped="" ref="0x1046e5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x1046e7e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x1046e7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e6210"/>
        <function-ref name="write" scoped="" ref="0x1046e63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1046ea670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x1046ea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ea9f0"/>
        <function-ref name="write" scoped="" ref="0x1046eab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x1046f9760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1046f9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1046f9ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x1046f9c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x1046f9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1046f4aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1046f4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x1046f3120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1046f3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x1046dea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1046dea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046dedf0"/>
        <function-ref name="write" scoped="" ref="0x1046dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x1046f3870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x1046f3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x1046dbad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1046dbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046dbe50"/>
        <function-ref name="write" scoped="" ref="0x1046d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1046f6dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1046f6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x1046e0e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x1046e0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046df210"/>
        <function-ref name="write" scoped="" ref="0x1046df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x1046ee480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x1046ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ee800"/>
        <function-ref name="write" scoped="" ref="0x1046ee990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1046f0480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1046f0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046f0800"/>
        <function-ref name="write" scoped="" ref="0x1046f0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1046f8750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1046f8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x1046e2e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x1046e2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e0210"/>
        <function-ref name="write" scoped="" ref="0x1046e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x1046e3670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x1046e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e39f0"/>
        <function-ref name="write" scoped="" ref="0x1046e3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x1046e0670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x1046e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e09f0"/>
        <function-ref name="write" scoped="" ref="0x1046e0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x1046d8ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1046d8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046d8e50"/>
        <function-ref name="write" scoped="" ref="0x1046d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x1046d9ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1046d9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046d9e50"/>
        <function-ref name="write" scoped="" ref="0x1046d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x1046e6670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x1046e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e69f0"/>
        <function-ref name="write" scoped="" ref="0x1046e6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x1046e3e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x1046e3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e2210"/>
        <function-ref name="write" scoped="" ref="0x1046e23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1046dcad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x1046dcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046dce50"/>
        <function-ref name="write" scoped="" ref="0x1046db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x1046e9670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x1046e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e99f0"/>
        <function-ref name="write" scoped="" ref="0x1046e9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1046d7ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x1046d7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1046d7e50"/>
        <function-ref name="writeDone" scoped="" ref="0x1046d6020"/>
        <function-ref name="write" scoped="" ref="0x1046d61b0"/>
        <function-ref name="beginRead" scoped="" ref="0x1046d6340"/>
        <function-ref name="readDone" scoped="" ref="0x1046d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1046f8100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1046f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f8480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x1046f1370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x1046f1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046f16f0"/>
        <function-ref name="write" scoped="" ref="0x1046f1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x1046ed480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x1046ed480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ed800"/>
        <function-ref name="write" scoped="" ref="0x1046ed990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x1046e5e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x1046e5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e4210"/>
        <function-ref name="write" scoped="" ref="0x1046e43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1046eae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1046eae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e9210"/>
        <function-ref name="write" scoped="" ref="0x1046e93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x1046e4670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x1046e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e49f0"/>
        <function-ref name="write" scoped="" ref="0x1046e4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1046ec670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1046ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046ec9f0"/>
        <function-ref name="write" scoped="" ref="0x1046ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x1046f7450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x1046f7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1046ece50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1046ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046eb210"/>
        <function-ref name="write" scoped="" ref="0x1046eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1046faa80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1046faa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1046fae00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1046f9020"/>
        <function-ref name="request" scoped="" ref="0x1046f91b0"/>
        <function-ref name="granted" scoped="" ref="0x1046f9340"/>
        <function-ref name="isOwner" scoped="" ref="0x1046f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x1046f2020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x1046f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x1046f2cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x1046f2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1046dc2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1046dc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046dc670"/>
        <function-ref name="write" scoped="" ref="0x1046dc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1046ddad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1046ddad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046dde50"/>
        <function-ref name="write" scoped="" ref="0x1046dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1046f4450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1046f4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1046dd2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1046dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046dd670"/>
        <function-ref name="write" scoped="" ref="0x1046dd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1046d82f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1046d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046d8670"/>
        <function-ref name="write" scoped="" ref="0x1046d8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x1046e6e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x1046e6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e5210"/>
        <function-ref name="write" scoped="" ref="0x1046e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x1046e2670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x1046e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e29f0"/>
        <function-ref name="write" scoped="" ref="0x1046e2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x1046f7aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x1046f7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1046f6770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1046f6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1046e9e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1046e9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e7210"/>
        <function-ref name="write" scoped="" ref="0x1046e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x1046f2670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1046f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1046f29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x1046e7670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x1046e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046e79f0"/>
        <function-ref name="write" scoped="" ref="0x1046e7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x1046dfe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x1046dfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1046de610"/>
        <function-ref name="write" scoped="" ref="0x1046de7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1046d67a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1046d67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1046d6b20"/>
        <function-ref name="writeDone" scoped="" ref="0x1046d6cb0"/>
        <function-ref name="write" scoped="" ref="0x1046d6e40"/>
        <function-ref name="beginRead" scoped="" ref="0x104731020"/>
        <function-ref name="readDone" scoped="" ref="0x1047311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x10471dc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10471dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471c210"/>
        <function-ref name="write" scoped="" ref="0x10471c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x104728da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x104728da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104726180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x104720b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x104720b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471f020"/>
        <function-ref name="write" scoped="" ref="0x10471f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10471a670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10471a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471a9f0"/>
        <function-ref name="write" scoped="" ref="0x10471ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x104713e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x104713e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104712210"/>
        <function-ref name="write" scoped="" ref="0x1047123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10471ae50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10471ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104719210"/>
        <function-ref name="write" scoped="" ref="0x1047193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1047072f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1047072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104707670"/>
        <function-ref name="write" scoped="" ref="0x104707800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1047092f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1047092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104709670"/>
        <function-ref name="write" scoped="" ref="0x104709800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x104725120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x104725120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047254a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x10470f670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x10470f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470f9f0"/>
        <function-ref name="write" scoped="" ref="0x10470fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x10470a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10470a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470a670"/>
        <function-ref name="write" scoped="" ref="0x10470a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x10471fc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10471fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471e020"/>
        <function-ref name="write" scoped="" ref="0x10471e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x10471ec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10471ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471d020"/>
        <function-ref name="write" scoped="" ref="0x10471d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x104715670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x104715670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047159f0"/>
        <function-ref name="write" scoped="" ref="0x104715b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x104717e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x104717e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104716210"/>
        <function-ref name="write" scoped="" ref="0x1047163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x104719670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x104719670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047199f0"/>
        <function-ref name="write" scoped="" ref="0x104719b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x104729760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x104729760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x104729ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x104729c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x104729e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x104724aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x104724aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104724e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x104723120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x104723120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047235a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x10470ea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10470ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470edf0"/>
        <function-ref name="write" scoped="" ref="0x10470c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x104723870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x104723870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104723bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x10470aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10470aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470ae50"/>
        <function-ref name="write" scoped="" ref="0x104709020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x104725dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x104725dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104724180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x104710e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x104710e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470f210"/>
        <function-ref name="write" scoped="" ref="0x10470f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x10471e480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x10471e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471e800"/>
        <function-ref name="write" scoped="" ref="0x10471e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x10471f480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10471f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471f800"/>
        <function-ref name="write" scoped="" ref="0x10471f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x104728750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x104728750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104728ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x104711e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x104711e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104710210"/>
        <function-ref name="write" scoped="" ref="0x1047103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x104712670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x104712670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047129f0"/>
        <function-ref name="write" scoped="" ref="0x104712b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x104710670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x104710670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047109f0"/>
        <function-ref name="write" scoped="" ref="0x104710b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x104708ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x104708ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104708e50"/>
        <function-ref name="write" scoped="" ref="0x104707020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x104709ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x104709ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104709e50"/>
        <function-ref name="write" scoped="" ref="0x104708020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x104716670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x104716670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047169f0"/>
        <function-ref name="write" scoped="" ref="0x104716b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x104712e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x104712e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104711210"/>
        <function-ref name="write" scoped="" ref="0x1047113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x10470bad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x10470bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470be50"/>
        <function-ref name="write" scoped="" ref="0x10470a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x104718670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x104718670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047189f0"/>
        <function-ref name="write" scoped="" ref="0x104718b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x104707ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x104707ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x104707e50"/>
        <function-ref name="writeDone" scoped="" ref="0x104705020"/>
        <function-ref name="write" scoped="" ref="0x1047051b0"/>
        <function-ref name="beginRead" scoped="" ref="0x104705340"/>
        <function-ref name="readDone" scoped="" ref="0x1047054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x104728100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x104728100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104728480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x104720370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x104720370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047206f0"/>
        <function-ref name="write" scoped="" ref="0x104720880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10471d480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10471d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471d800"/>
        <function-ref name="write" scoped="" ref="0x10471d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x104715e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x104715e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104713210"/>
        <function-ref name="write" scoped="" ref="0x1047133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x104719e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x104719e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104718210"/>
        <function-ref name="write" scoped="" ref="0x1047183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x104713670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x104713670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047139f0"/>
        <function-ref name="write" scoped="" ref="0x104713b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10471c670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10471c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471c9f0"/>
        <function-ref name="write" scoped="" ref="0x10471cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x104726450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x104726450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047267d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10471ce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10471ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10471a210"/>
        <function-ref name="write" scoped="" ref="0x10471a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10472a9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10472a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10472ad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104729020"/>
        <function-ref name="request" scoped="" ref="0x1047291b0"/>
        <function-ref name="granted" scoped="" ref="0x104729340"/>
        <function-ref name="isOwner" scoped="" ref="0x1047294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x104722020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x104722020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x104722cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x104722cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047200a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x10470b2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10470b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470b670"/>
        <function-ref name="write" scoped="" ref="0x10470b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x10470cad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x10470cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470ce50"/>
        <function-ref name="write" scoped="" ref="0x10470b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x104724450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x104724450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047247d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x10470c2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10470c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470c670"/>
        <function-ref name="write" scoped="" ref="0x10470c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1047082f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1047082f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104708670"/>
        <function-ref name="write" scoped="" ref="0x104708800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x104716e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x104716e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104715210"/>
        <function-ref name="write" scoped="" ref="0x1047153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x104711670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x104711670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047119f0"/>
        <function-ref name="write" scoped="" ref="0x104711b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x104726aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x104726aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104726e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x104725770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x104725770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104725af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x104718e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x104718e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104717210"/>
        <function-ref name="write" scoped="" ref="0x1047173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x104722670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x104722670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047229f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x104717670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x104717670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047179f0"/>
        <function-ref name="write" scoped="" ref="0x104717b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x10470fe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x10470fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10470e610"/>
        <function-ref name="write" scoped="" ref="0x10470e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1047057a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1047057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x104705b20"/>
        <function-ref name="writeDone" scoped="" ref="0x104705cb0"/>
        <function-ref name="write" scoped="" ref="0x104705e40"/>
        <function-ref name="beginRead" scoped="" ref="0x104704020"/>
        <function-ref name="readDone" scoped="" ref="0x1047041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x104759b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x104759b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x104756020"/>
        <function-ref name="changed" scoped="" ref="0x1047561b0"/>
        <function-ref name="amGroup" scoped="" ref="0x104756340"/>
        <function-ref name="setAddress" scoped="" ref="0x1047564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x104758d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x104758d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x1047420e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x10473d310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x10473d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x10473d690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x10473a880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x10473a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10473ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x10478c020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x10478c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10478c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x104782bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x104782bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104786020"/>
        <function-ref name="write" scoped="" ref="0x1047861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x104786530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x104786530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1047868b0"/>
        <function-ref name="stop" scoped="" ref="0x104786a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x104787140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x104787140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047874c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x10478bc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x10478bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104772020"/>
        <function-ref name="write" scoped="" ref="0x1047721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x104772540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x104772540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1047728c0"/>
        <function-ref name="isInput" scoped="" ref="0x104772a50"/>
        <function-ref name="toggle" scoped="" ref="0x104772be0"/>
        <function-ref name="isOutput" scoped="" ref="0x104772d70"/>
        <function-ref name="get" scoped="" ref="0x104771020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1047711b0"/>
        <function-ref name="set" scoped="" ref="0x104771340"/>
        <function-ref name="clr" scoped="" ref="0x1047714d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x104769950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x104769950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x10476c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x10476e150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x10476e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10476e4d0"/>
        <function-ref name="write" scoped="" ref="0x10476e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x10476e9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x10476e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10476ed70"/>
        <function-ref name="isInput" scoped="" ref="0x10476d020"/>
        <function-ref name="toggle" scoped="" ref="0x10476d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10476d340"/>
        <function-ref name="get" scoped="" ref="0x10476d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10476d660"/>
        <function-ref name="set" scoped="" ref="0x10476d7f0"/>
        <function-ref name="clr" scoped="" ref="0x10476d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x104770ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x104770ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1047a6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x1047a4a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1047a4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1047a38d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x104794020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x104794020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104794e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104792800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104792340"/>
        <function-ref name="overflow" scoped="" ref="0x104792cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x1047ec530" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x1047ec530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1047eb3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1047ebd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1047eb890"/>
        <function-ref name="overflow" scoped="" ref="0x1047e9260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1047e5020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1047e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1047e53a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1047e5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1047e56c0"/>
        <function-ref name="get" scoped="" ref="0x1047e5850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1047e59e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1047e5b70"/>
        <function-ref name="getMode" scoped="" ref="0x1047e5d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1047e4020"/>
        <function-ref name="overflow" scoped="" ref="0x1047e41b0"/>
        <function-ref name="setMode" scoped="" ref="0x1047e4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1047e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1047e8e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1047e8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039727d0"/>
            <typename><typedef-ref name="TMicro" ref="0x103972b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1047e7ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1047e6670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1047e61b0"/>
        <function-ref name="overflow" scoped="" ref="0x1047e6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x104773590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x104773590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104773910"/>
        <function-ref name="isInput" scoped="" ref="0x104773aa0"/>
        <function-ref name="toggle" scoped="" ref="0x104773c30"/>
        <function-ref name="isOutput" scoped="" ref="0x104773dc0"/>
        <function-ref name="get" scoped="" ref="0x1047df020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1047df1b0"/>
        <function-ref name="set" scoped="" ref="0x1047df340"/>
        <function-ref name="clr" scoped="" ref="0x1047df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1047ddc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1047ddc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1047dc020"/>
        <function-ref name="isInput" scoped="" ref="0x1047dc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x1047dc340"/>
        <function-ref name="toggle" scoped="" ref="0x1047dc4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x1047dc660"/>
        <function-ref name="getResistor" scoped="" ref="0x1047dc7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1047dc980"/>
        <function-ref name="get" scoped="" ref="0x1047dcb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1047dcca0"/>
        <function-ref name="getRaw" scoped="" ref="0x1047dce30"/>
        <function-ref name="set" scoped="" ref="0x1047db020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1047db1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1047db340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1047db5d0"/>
        <function-ref name="clr" scoped="" ref="0x1047db760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1047de9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1047de9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1047ded60"/>
        <function-ref name="isInput" scoped="" ref="0x1047dd020"/>
        <function-ref name="toggle" scoped="" ref="0x1047dd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1047dd340"/>
        <function-ref name="get" scoped="" ref="0x1047dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1047dd660"/>
        <function-ref name="set" scoped="" ref="0x1047dd7f0"/>
        <function-ref name="clr" scoped="" ref="0x1047dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1047e0a20" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1047e0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1047e0da0"/>
        <function-ref name="stop" scoped="" ref="0x1047d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1047c7cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1047c7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x1047c60a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x1047c6230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x1047c63c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1047c6550"/>
        <function-ref name="setCca" scoped="" ref="0x1047c66e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1047c6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x1047c3990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x1047c3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1047c3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x1047c7020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x1047c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1047c73a0"/>
        <function-ref name="cancel" scoped="" ref="0x1047c7530"/>
        <function-ref name="modify" scoped="" ref="0x1047c76c0"/>
        <function-ref name="sendDone" scoped="" ref="0x1047c7850"/>
        <function-ref name="resend" scoped="" ref="0x1047c79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1047ca6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1047ca6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1047caa40"/>
        <function-ref name="stop" scoped="" ref="0x1047cabd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x1047c5150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x1047c5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1047c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10481a970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10481a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10481acf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10481ae80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x104819030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x1048191c0"/>
        <function-ref name="setCca" scoped="" ref="0x104819350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x1048194e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x104812950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x104812950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10480f020"/>
        <function-ref name="clear" scoped="" ref="0x10480f750"/>
        <function-ref name="isValid" scoped="" ref="0x104811780"/>
        <function-ref name="set" scoped="" ref="0x10480fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x1047fb020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x1047fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047fb3a0"/>
        <function-ref name="write" scoped="" ref="0x1047fb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x1047fb890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1047fb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047fbc10"/>
        <function-ref name="write" scoped="" ref="0x1047fbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x104819900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x104819900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x104819c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x1047fe530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x1047fe530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047fe8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x10480d880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x10480d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x10480dc00"/>
        <function-ref name="disable" scoped="" ref="0x10480dd90"/>
        <function-ref name="captured" scoped="" ref="0x10480c020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x10480c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x104818ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x104818ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104814390"/>
        <function-ref name="fired" scoped="" ref="0x104816360"/>
        <function-ref name="startAt" scoped="" ref="0x104816ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x104816820"/>
        <function-ref name="getAlarm" scoped="" ref="0x104814850"/>
        <function-ref name="start" scoped="" ref="0x104817970"/>
        <function-ref name="stop" scoped="" ref="0x104817e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x104814d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x104814d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1048130a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x104813230"/>
        <function-ref name="getRssi" scoped="" ref="0x1048133c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x104813550"/>
        <function-ref name="getPower" scoped="" ref="0x1048136e0"/>
        <function-ref name="getLqi" scoped="" ref="0x104813870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x104800550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x104800550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048008d0"/>
        <function-ref name="write" scoped="" ref="0x104800a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x104800e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x104800e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047ff1c0"/>
        <function-ref name="write" scoped="" ref="0x1047ff350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x1047f4d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x1047f4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1047f70e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x1047f7270"/>
        <function-ref name="sfd" scoped="" ref="0x1047f7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10481bbc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10481bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10481a020"/>
        <function-ref name="cancel" scoped="" ref="0x10481a1b0"/>
        <function-ref name="modify" scoped="" ref="0x10481a340"/>
        <function-ref name="sendDone" scoped="" ref="0x10481a4d0"/>
        <function-ref name="resend" scoped="" ref="0x10481a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x104802d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x104802d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1048010e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x104801270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x104801400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x1047fec60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1047fec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x104805820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x104805820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104805ba0"/>
        <function-ref name="isInput" scoped="" ref="0x104805d30"/>
        <function-ref name="toggle" scoped="" ref="0x104804020"/>
        <function-ref name="isOutput" scoped="" ref="0x1048041b0"/>
        <function-ref name="get" scoped="" ref="0x104804340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1048044d0"/>
        <function-ref name="set" scoped="" ref="0x104804660"/>
        <function-ref name="clr" scoped="" ref="0x1048047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10481cc60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10481cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10481b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x104813bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x104813bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x104812020"/>
        <function-ref name="getHeader" scoped="" ref="0x1048121b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x104812340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x104807be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x104807be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10480d020"/>
        <function-ref name="isSet" scoped="" ref="0x10480d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x10480d340"/>
        <function-ref name="set" scoped="" ref="0x10480d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x1047fd3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1047fd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047fd960"/>
        <function-ref name="write" scoped="" ref="0x1047fdaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x104802020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x104802020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1048023a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104802530"/>
        <function-ref name="request" scoped="" ref="0x1048026c0"/>
        <function-ref name="granted" scoped="" ref="0x104802850"/>
        <function-ref name="isOwner" scoped="" ref="0x1048029e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x10480c500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x10480c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10480c980"/>
        <function-ref name="isInput" scoped="" ref="0x10480cb10"/>
        <function-ref name="toggle" scoped="" ref="0x10480cca0"/>
        <function-ref name="isOutput" scoped="" ref="0x10480ce30"/>
        <function-ref name="get" scoped="" ref="0x104805020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1048051b0"/>
        <function-ref name="set" scoped="" ref="0x104805340"/>
        <function-ref name="clr" scoped="" ref="0x1048054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x1047f9130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1047f9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047f94b0"/>
        <function-ref name="write" scoped="" ref="0x1047f9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x1047f99c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1047f99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047f9d40"/>
        <function-ref name="write" scoped="" ref="0x1047f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x1047ff6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1047ff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047ffa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x104804b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x104804b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104803020"/>
        <function-ref name="isInput" scoped="" ref="0x1048031b0"/>
        <function-ref name="toggle" scoped="" ref="0x104803340"/>
        <function-ref name="isOutput" scoped="" ref="0x1048034d0"/>
        <function-ref name="get" scoped="" ref="0x104803660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1048037f0"/>
        <function-ref name="set" scoped="" ref="0x104803980"/>
        <function-ref name="clr" scoped="" ref="0x104803b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1047f76c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1047f76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1047f7a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1047f7bd0"/>
        <function-ref name="led1On" scoped="" ref="0x1047f7d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1047f6020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1047f61b0"/>
        <function-ref name="get" scoped="" ref="0x1047f6340"/>
        <function-ref name="led1Off" scoped="" ref="0x1047f64d0"/>
        <function-ref name="led2Off" scoped="" ref="0x1047f6b10"/>
        <function-ref name="set" scoped="" ref="0x1047f6660"/>
        <function-ref name="led0On" scoped="" ref="0x1047f67f0"/>
        <function-ref name="led2On" scoped="" ref="0x1047f6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x1047fc5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1047fc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1047fc960"/>
        <function-ref name="write" scoped="" ref="0x1047fcaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10481b320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10481b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10481b6a0"/>
        <function-ref name="stop" scoped="" ref="0x10481b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x104801780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x104801780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x104801b00"/>
        <function-ref name="writeDone" scoped="" ref="0x104801c90"/>
        <function-ref name="write" scoped="" ref="0x104801e20"/>
        <function-ref name="beginRead" scoped="" ref="0x104800020"/>
        <function-ref name="readDone" scoped="" ref="0x1048001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x1047ffde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x1047ffde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047fe180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x1047fde80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1047fde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1047fc220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x1048180f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x1048180f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x104818470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x1048dfc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x1048dfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048de210"/>
        <function-ref name="write" scoped="" ref="0x1048de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x104886020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x104886020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x104880c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x104880c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048e1020"/>
        <function-ref name="write" scoped="" ref="0x1048e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x1048dc670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x1048dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048dc9f0"/>
        <function-ref name="write" scoped="" ref="0x1048dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x1048d5e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x1048d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d4210"/>
        <function-ref name="write" scoped="" ref="0x1048d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x1048dce50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x1048dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048db210"/>
        <function-ref name="write" scoped="" ref="0x1048db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x1048c92f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1048c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048c9670"/>
        <function-ref name="write" scoped="" ref="0x1048c9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1048cb2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1048cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cb670"/>
        <function-ref name="write" scoped="" ref="0x1048cb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x104885370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x104885370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048856f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x1048d1670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x1048d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d19f0"/>
        <function-ref name="write" scoped="" ref="0x1048d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1048cc2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1048cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cc670"/>
        <function-ref name="write" scoped="" ref="0x1048cc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x1048e1c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x1048e1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048e0020"/>
        <function-ref name="write" scoped="" ref="0x1048e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x1048e0c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x1048e0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048df020"/>
        <function-ref name="write" scoped="" ref="0x1048df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x1048d7670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x1048d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d79f0"/>
        <function-ref name="write" scoped="" ref="0x1048d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x1048d9e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x1048d9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d8210"/>
        <function-ref name="write" scoped="" ref="0x1048d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x1048db670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x1048db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048db9f0"/>
        <function-ref name="write" scoped="" ref="0x1048dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x1048898f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1048898f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x104889c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x104889e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x104888020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x104884d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x104884d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048830a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x104883370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x104883370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x1048d0a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1048d0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d0df0"/>
        <function-ref name="write" scoped="" ref="0x1048ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x104883ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x104883ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104883e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x1048ccad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1048ccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cce50"/>
        <function-ref name="write" scoped="" ref="0x1048cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x104884060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x104884060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048843e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x1048d2e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x1048d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d1210"/>
        <function-ref name="write" scoped="" ref="0x1048d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x1048e0480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x1048e0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048e0800"/>
        <function-ref name="write" scoped="" ref="0x1048e0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x1048e1480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1048e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048e1800"/>
        <function-ref name="write" scoped="" ref="0x1048e1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x104888940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x104888940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104888cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x1048d3e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x1048d3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d2210"/>
        <function-ref name="write" scoped="" ref="0x1048d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x1048d4670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x1048d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d49f0"/>
        <function-ref name="write" scoped="" ref="0x1048d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x1048d2670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x1048d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d29f0"/>
        <function-ref name="write" scoped="" ref="0x1048d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x1048caad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1048caad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cae50"/>
        <function-ref name="write" scoped="" ref="0x1048c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x1048cbad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1048cbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cbe50"/>
        <function-ref name="write" scoped="" ref="0x1048ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x1048d8670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x1048d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d89f0"/>
        <function-ref name="write" scoped="" ref="0x1048d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x1048d4e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x1048d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d3210"/>
        <function-ref name="write" scoped="" ref="0x1048d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1048cdad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x1048cdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cde50"/>
        <function-ref name="write" scoped="" ref="0x1048cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x1048da670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x1048da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048da9f0"/>
        <function-ref name="write" scoped="" ref="0x1048dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x1048c9ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x1048c9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1048c9e50"/>
        <function-ref name="writeDone" scoped="" ref="0x1048c7020"/>
        <function-ref name="write" scoped="" ref="0x1048c71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x1048c7340"/>
        <function-ref name="readDone" scoped="" ref="0x1048c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1048882f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1048882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104888670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x104880490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x104880490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104880810"/>
        <function-ref name="write" scoped="" ref="0x1048809a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x1048df480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x1048df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048df800"/>
        <function-ref name="write" scoped="" ref="0x1048df990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x1048d7e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x1048d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d5210"/>
        <function-ref name="write" scoped="" ref="0x1048d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x1048dbe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x1048dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048da210"/>
        <function-ref name="write" scoped="" ref="0x1048da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x1048d5670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x1048d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d59f0"/>
        <function-ref name="write" scoped="" ref="0x1048d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x1048de670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x1048de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048de9f0"/>
        <function-ref name="write" scoped="" ref="0x1048deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x104886670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x104886670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048869f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1048dee50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1048dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048dc210"/>
        <function-ref name="write" scoped="" ref="0x1048dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10488ac30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10488ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104889020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1048891b0"/>
        <function-ref name="request" scoped="" ref="0x104889340"/>
        <function-ref name="granted" scoped="" ref="0x1048894d0"/>
        <function-ref name="isOwner" scoped="" ref="0x104889660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x104882160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x104882160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048824e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x104882e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x104882e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048801c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1048cd2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1048cd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cd670"/>
        <function-ref name="write" scoped="" ref="0x1048cd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1048cead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1048cead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048cee50"/>
        <function-ref name="write" scoped="" ref="0x1048cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1048846b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1048846b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104884a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1048ce2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1048ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048ce670"/>
        <function-ref name="write" scoped="" ref="0x1048ce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x1048ca2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x1048ca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048ca670"/>
        <function-ref name="write" scoped="" ref="0x1048ca800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x1048d8e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x1048d8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d7210"/>
        <function-ref name="write" scoped="" ref="0x1048d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x1048d3670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x1048d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d39f0"/>
        <function-ref name="write" scoped="" ref="0x1048d3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x104886cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x104886cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1048850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1048859c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1048859c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104885d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x1048dae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x1048dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d9210"/>
        <function-ref name="write" scoped="" ref="0x1048d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x1048827b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1048827b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104882b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x1048d9670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x1048d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d99f0"/>
        <function-ref name="write" scoped="" ref="0x1048d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x1048d1e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x1048d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1048d0610"/>
        <function-ref name="write" scoped="" ref="0x1048d07a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1048c77a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1048c77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1048c7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x1048c7cb0"/>
        <function-ref name="write" scoped="" ref="0x1048c7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x1048c6020"/>
        <function-ref name="readDone" scoped="" ref="0x1048c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x1048bbdf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x1048bbdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1048b81c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x1048b8350"/>
        <function-ref name="sfd" scoped="" ref="0x1048b84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1048b87c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1048b87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1048b8b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x1048b7020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x1048b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1048b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1048bb5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1048bb5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1048bb940"/>
        <function-ref name="stop" scoped="" ref="0x1048bbad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x104912380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x104912380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104912700"/>
        <function-ref name="isInput" scoped="" ref="0x104912890"/>
        <function-ref name="toggle" scoped="" ref="0x104912a20"/>
        <function-ref name="isOutput" scoped="" ref="0x104912bb0"/>
        <function-ref name="get" scoped="" ref="0x104912d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x104911020"/>
        <function-ref name="set" scoped="" ref="0x1049111b0"/>
        <function-ref name="clr" scoped="" ref="0x104911340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x10490ab90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10490ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x104909020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x1049091b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x104909340"/>
        <function-ref name="syncDone" scoped="" ref="0x1049094d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x104909660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x1049097f0"/>
        <function-ref name="setChannel" scoped="" ref="0x104909980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x104909b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x104909ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x104909e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x104908020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x1049081b0"/>
        <function-ref name="sync" scoped="" ref="0x104908340"/>
        <function-ref name="getChannel" scoped="" ref="0x1049085d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x104908760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x1048f39d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x1048f39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1048f3d50"/>
        <function-ref name="runTask" scoped="" ref="0x1048f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x104908d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x104908d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x104906330"/>
        <function-ref name="clear" scoped="" ref="0x104906a60"/>
        <function-ref name="isValid" scoped="" ref="0x104907ba0"/>
        <function-ref name="set" scoped="" ref="0x104905210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x1049116b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x1049116b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x104911a30"/>
        <function-ref name="isInput" scoped="" ref="0x104911bc0"/>
        <function-ref name="toggle" scoped="" ref="0x104911d50"/>
        <function-ref name="isOutput" scoped="" ref="0x104910020"/>
        <function-ref name="get" scoped="" ref="0x1049101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104910340"/>
        <function-ref name="set" scoped="" ref="0x1049104d0"/>
        <function-ref name="clr" scoped="" ref="0x104910660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x104903cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x104903cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1049020a0"/>
        <function-ref name="write" scoped="" ref="0x104902230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x104902590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x104902590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104902910"/>
        <function-ref name="write" scoped="" ref="0x104902aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x1049016d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1049016d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104901a50"/>
        <function-ref name="write" scoped="" ref="0x104901be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10490b330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10490b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10490b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10490b840"/>
        <function-ref name="getRssi" scoped="" ref="0x10490b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10490bb60"/>
        <function-ref name="getPower" scoped="" ref="0x10490bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x10490be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x1048b2550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x1048b2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1048b28d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x1048b2a60"/>
        <function-ref name="sfd" scoped="" ref="0x1048b2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x10490d3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x10490d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10490d720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x104913020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x104913020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1049133a0"/>
        <function-ref name="isInput" scoped="" ref="0x104913530"/>
        <function-ref name="toggle" scoped="" ref="0x1049136c0"/>
        <function-ref name="isOutput" scoped="" ref="0x104913850"/>
        <function-ref name="get" scoped="" ref="0x1049139e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x104913b70"/>
        <function-ref name="set" scoped="" ref="0x104913d00"/>
        <function-ref name="clr" scoped="" ref="0x104912020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x104900020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x104900020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1049003a0"/>
        <function-ref name="write" scoped="" ref="0x104900530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1048b3620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1048b3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1048b39a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10490a1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10490a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10490a560"/>
        <function-ref name="getHeader" scoped="" ref="0x10490a6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10490a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1048b1020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1048b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1048b13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10490f6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10490f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10490fa60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10490fbf0"/>
        <function-ref name="request" scoped="" ref="0x10490fd80"/>
        <function-ref name="granted" scoped="" ref="0x10490e020"/>
        <function-ref name="isOwner" scoped="" ref="0x10490e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x104902e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x104902e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1049011c0"/>
        <function-ref name="write" scoped="" ref="0x104901350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x10490e530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10490e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10490e8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x10490ea40"/>
        <function-ref name="write" scoped="" ref="0x10490ebd0"/>
        <function-ref name="beginRead" scoped="" ref="0x10490ed60"/>
        <function-ref name="readDone" scoped="" ref="0x10490d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x1049008b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1049008b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104900e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x1048b17c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x1048b17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1048b1b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1048ff150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1048ff150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1048ff4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1048ff660"/>
        <function-ref name="led1On" scoped="" ref="0x1048ff7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1048ff980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1048ffb10"/>
        <function-ref name="get" scoped="" ref="0x1048ffca0"/>
        <function-ref name="led1Off" scoped="" ref="0x1048ffe30"/>
        <function-ref name="led2Off" scoped="" ref="0x1048fe4d0"/>
        <function-ref name="set" scoped="" ref="0x1048fe020"/>
        <function-ref name="led0On" scoped="" ref="0x1048fe1b0"/>
        <function-ref name="led2On" scoped="" ref="0x1048fe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x1049033e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1049033e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104903760"/>
        <function-ref name="write" scoped="" ref="0x1049038f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x104905b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x104905b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104903020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x104910a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x104910a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x104910dd0"/>
        <function-ref name="disable" scoped="" ref="0x10490f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x10490f1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x10490f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x10490dad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10490dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10490b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1048b3ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1048b3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1048b20a0"/>
        <function-ref name="stop" scoped="" ref="0x1048b2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10495ba70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10495ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10495bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x10495f670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10495f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10495f9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10495fb80"/>
        <function-ref name="getRssi" scoped="" ref="0x10495fd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x10495c020"/>
        <function-ref name="getPower" scoped="" ref="0x10495c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x10495c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x104959550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x104959550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x104958b00"/>
        <function-ref name="clear" scoped="" ref="0x1049572a0"/>
        <function-ref name="isValid" scoped="" ref="0x1049583d0"/>
        <function-ref name="set" scoped="" ref="0x1049579d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x10495b0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10495b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10495b440"/>
        <function-ref name="getHeader" scoped="" ref="0x10495b5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10495b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x104952480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x104952480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104952800"/>
        <function-ref name="isSet" scoped="" ref="0x104952990"/>
        <function-ref name="cancel" scoped="" ref="0x104952b20"/>
        <function-ref name="set" scoped="" ref="0x104952cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x104956660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x104956660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x104954ce0"/>
        <function-ref name="clear" scoped="" ref="0x104953460"/>
        <function-ref name="isValid" scoped="" ref="0x1049545b0"/>
        <function-ref name="set" scoped="" ref="0x104953b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10495c6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10495c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10495ca60"/>
        <function-ref name="noAck" scoped="" ref="0x10495cbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10495cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x10494b020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x10494b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x10494b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x104950d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x104950d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10494d0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10494d270"/>
        <function-ref name="getRssi" scoped="" ref="0x10494d400"/>
        <function-ref name="getNetwork" scoped="" ref="0x10494d590"/>
        <function-ref name="getPower" scoped="" ref="0x10494d720"/>
        <function-ref name="getLqi" scoped="" ref="0x10494d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1049a74a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1049a74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1049a7820"/>
        <function-ref name="payloadLength" scoped="" ref="0x1049a79b0"/>
        <function-ref name="getPayload" scoped="" ref="0x1049a7b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1049a7cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1049a7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x10494ba80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x10494ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x104949020"/>
        <function-ref name="clear" scoped="" ref="0x104949750"/>
        <function-ref name="isValid" scoped="" ref="0x10494a8d0"/>
        <function-ref name="set" scoped="" ref="0x104949e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x10494c640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10494c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10494c9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x10494cb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x10494cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x1049a88b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1049a88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049a8c30"/>
        <function-ref name="isSet" scoped="" ref="0x1049a8dc0"/>
        <function-ref name="cancel" scoped="" ref="0x1049a7020"/>
        <function-ref name="set" scoped="" ref="0x1049a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x1049a3820" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x1049a3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049a54c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x1049a5b80" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x1049a5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049a47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x104947af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x104947af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1049aa0d0"/>
        <function-ref name="clear" scoped="" ref="0x1049aa800"/>
        <function-ref name="isValid" scoped="" ref="0x104946970"/>
        <function-ref name="set" scoped="" ref="0x1049a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x10494dc50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x10494dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10494c020"/>
        <function-ref name="noAck" scoped="" ref="0x10494c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x10494c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x1049b84e0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x1049b84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049af150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1049af7c0" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1049af7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049ae620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1049ad020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1049aeae0"/>
        <function-ref name="overflow" scoped="" ref="0x1049ad4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x104a0e020" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x104a0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a0b630"/>
        <function-ref name="fired" scoped="" ref="0x104a0da60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104a0c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x104a0c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x104a09020"/>
        <function-ref name="gett0" scoped="" ref="0x104a0bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x104a0c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104a0ec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104a0b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x104a0d110"/>
        <function-ref name="stop" scoped="" ref="0x104a0d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x104a09610" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x104a09610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104a083d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104a10130" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104a10130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104a104b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x104a43870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x104a43870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a3f090"/>
        <function-ref name="fired" scoped="" ref="0x104a40090"/>
        <function-ref name="startAt" scoped="" ref="0x104a40a10"/>
        <function-ref name="isRunning" scoped="" ref="0x104a40550"/>
        <function-ref name="getAlarm" scoped="" ref="0x104a3f550"/>
        <function-ref name="start" scoped="" ref="0x104a416a0"/>
        <function-ref name="stop" scoped="" ref="0x104a41bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104a43020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104a43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104a433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1056f6260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1056f6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1056f3b30"/>
        <function-ref name="fired" scoped="" ref="0x1056f5a60"/>
        <function-ref name="startAt" scoped="" ref="0x1056f34e0"/>
        <function-ref name="isRunning" scoped="" ref="0x1056f3020"/>
        <function-ref name="getAlarm" scoped="" ref="0x1056f2020"/>
        <function-ref name="start" scoped="" ref="0x1056f5090"/>
        <function-ref name="stop" scoped="" ref="0x1056f55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1056f79d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1056f79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1056f7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1056dda80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1056dda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1056dde00"/>
        <function-ref name="setEvent" scoped="" ref="0x1056dc020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1056dc1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1056dc340"/>
        <function-ref name="fired" scoped="" ref="0x1056dc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1056e0020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1056e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1056e03a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1056e0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1056e06c0"/>
        <function-ref name="get" scoped="" ref="0x1056e0850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1056e09e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1056e0b70"/>
        <function-ref name="getMode" scoped="" ref="0x1056e0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1056df020"/>
        <function-ref name="overflow" scoped="" ref="0x1056df1b0"/>
        <function-ref name="setMode" scoped="" ref="0x1056df340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1056df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1056df760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1056df760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1056dfae0"/>
        <function-ref name="getControl" scoped="" ref="0x1056dfc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x1056dfe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1056dd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1056dd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1056dd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1056dd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1056dd660"/>
        <function-ref name="setControl" scoped="" ref="0x1056dd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x105771760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x105771760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x105771ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x105771c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x105771e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x105770020"/>
        <function-ref name="fired" scoped="" ref="0x1057701b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x105775dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x105775dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x105773180"/>
        <function-ref name="setClockSource" scoped="" ref="0x105773310"/>
        <function-ref name="enableEvents" scoped="" ref="0x1057734a0"/>
        <function-ref name="get" scoped="" ref="0x105773630"/>
        <function-ref name="disableEvents" scoped="" ref="0x1057737c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x105773950"/>
        <function-ref name="getMode" scoped="" ref="0x105773ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x105773c70"/>
        <function-ref name="overflow" scoped="" ref="0x105773e00"/>
        <function-ref name="setMode" scoped="" ref="0x105772020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1057721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1056dabf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1056dabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1057754e0"/>
        <function-ref name="fired" scoped="" ref="0x1057764e0"/>
        <function-ref name="startAt" scoped="" ref="0x105776e60"/>
        <function-ref name="isRunning" scoped="" ref="0x1057769a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1057759a0"/>
        <function-ref name="start" scoped="" ref="0x105777a80"/>
        <function-ref name="stop" scoped="" ref="0x105776020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1056da360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1056da360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1056da6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x105772440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x105772440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1057727c0"/>
        <function-ref name="getControl" scoped="" ref="0x105772950"/>
        <function-ref name="enableEvents" scoped="" ref="0x105772ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x105772c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x105772e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x105771020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1057711b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x105771340"/>
        <function-ref name="setControl" scoped="" ref="0x1057714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1049fab70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1049fab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049f79b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1049f5360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1049f7e70"/>
        <function-ref name="overflow" scoped="" ref="0x1049f5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1049efb90" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x1049efb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049ee9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1049ec4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1049ec020"/>
        <function-ref name="overflow" scoped="" ref="0x1049ec9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1049f2610" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1049f2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1049f05b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1049ef020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1049f0a70"/>
        <function-ref name="overflow" scoped="" ref="0x1049ef4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1056f05f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1056f05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1056eee50"/>
        <function-ref name="fired" scoped="" ref="0x1056efe00"/>
        <function-ref name="startAt" scoped="" ref="0x1056ee800"/>
        <function-ref name="isRunning" scoped="" ref="0x1056ee340"/>
        <function-ref name="getAlarm" scoped="" ref="0x1056ed340"/>
        <function-ref name="start" scoped="" ref="0x1056ef430"/>
        <function-ref name="stop" scoped="" ref="0x1056ef940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1056ead20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x1056ead20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x103972020"/>
            <typename><typedef-ref name="T32khz" ref="0x103972390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1056e7670"/>
        <function-ref name="fired" scoped="" ref="0x1056e8550"/>
        <function-ref name="startAt" scoped="" ref="0x1056e7020"/>
        <function-ref name="isRunning" scoped="" ref="0x1056e8a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x1056e7b30"/>
        <function-ref name="start" scoped="" ref="0x1056e9b60"/>
        <function-ref name="stop" scoped="" ref="0x1056e8090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1056ed9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1056ed9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1056eb7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1056ea1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1056ebca0"/>
        <function-ref name="overflow" scoped="" ref="0x1056ea670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x104a759c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x104a759c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104a75d40"/>
        <function-ref name="runTask" scoped="" ref="0x104a74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x104a79850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x104a79850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a75090"/>
        <function-ref name="fired" scoped="" ref="0x104a77090"/>
        <function-ref name="startAt" scoped="" ref="0x104a77a10"/>
        <function-ref name="isRunning" scoped="" ref="0x104a77550"/>
        <function-ref name="getAlarm" scoped="" ref="0x104a75550"/>
        <function-ref name="start" scoped="" ref="0x104a786a0"/>
        <function-ref name="stop" scoped="" ref="0x104a78bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x104a162f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x104a162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a12870"/>
        <function-ref name="fired" scoped="" ref="0x104a15e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104a14c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x104a14780"/>
        <function-ref name="getdt" scoped="" ref="0x104a791e0"/>
        <function-ref name="gett0" scoped="" ref="0x104a12cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x104a14300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104a15020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104a12260"/>
        <function-ref name="startOneShot" scoped="" ref="0x104a154f0"/>
        <function-ref name="stop" scoped="" ref="0x104a159c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x104a8da00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x104a8da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104a8dd80"/>
        <function-ref name="runTask" scoped="" ref="0x104a8c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x104a92640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x104a92640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a8ec40"/>
        <function-ref name="fired" scoped="" ref="0x104a901e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104a8e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x104a90ae0"/>
        <function-ref name="getdt" scoped="" ref="0x104a8d590"/>
        <function-ref name="gett0" scoped="" ref="0x104a8d110"/>
        <function-ref name="isRunning" scoped="" ref="0x104a90660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104a91390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104a8e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x104a91860"/>
        <function-ref name="stop" scoped="" ref="0x104a91d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x104a98150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x104a98150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104a94700"/>
        <function-ref name="fired" scoped="" ref="0x104a97c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104a95a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x104a955b0"/>
        <function-ref name="getdt" scoped="" ref="0x104a92090"/>
        <function-ref name="gett0" scoped="" ref="0x104a94ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x104a95110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104a98d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104a940d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x104a972a0"/>
        <function-ref name="stop" scoped="" ref="0x104a97790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x104a8a2b0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x104a8a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104a88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x104a88690" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x104a88690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x104a875b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x104a86020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x104a87a70"/>
        <function-ref name="overflow" scoped="" ref="0x104a864e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x104a808c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x104a808c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104ad6cf0"/>
        <function-ref name="fired" scoped="" ref="0x104ad7320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104ad60d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x104ad7c20"/>
        <function-ref name="getdt" scoped="" ref="0x104ad5660"/>
        <function-ref name="gett0" scoped="" ref="0x104ad51e0"/>
        <function-ref name="isRunning" scoped="" ref="0x104ad77a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104ad84e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104ad66e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x104ad89b0"/>
        <function-ref name="stop" scoped="" ref="0x104ad8e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x104ae02c0" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x104ae02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104add870"/>
        <function-ref name="fired" scoped="" ref="0x104adfe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104adec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x104ade780"/>
        <function-ref name="getdt" scoped="" ref="0x104adc1e0"/>
        <function-ref name="gett0" scoped="" ref="0x104addcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x104ade300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104adf020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104add260"/>
        <function-ref name="startOneShot" scoped="" ref="0x104adf4f0"/>
        <function-ref name="stop" scoped="" ref="0x104adf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x104ac4c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x104ac4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac3210"/>
        <function-ref name="write" scoped="" ref="0x104ac33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x104ace020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x104ace020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104ace3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x104ac8c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x104ac8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac7020"/>
        <function-ref name="write" scoped="" ref="0x104ac71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x104ac2670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x104ac2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac29f0"/>
        <function-ref name="write" scoped="" ref="0x104ac2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x104abbe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x104abbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104aba210"/>
        <function-ref name="write" scoped="" ref="0x104aba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x104ac2e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x104ac2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac1210"/>
        <function-ref name="write" scoped="" ref="0x104ac13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x104b192f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x104b192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104b19670"/>
        <function-ref name="write" scoped="" ref="0x104b19800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x104ab02f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x104ab02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab0670"/>
        <function-ref name="write" scoped="" ref="0x104ab0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x104acd370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x104acd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x104ab6670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x104ab6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab69f0"/>
        <function-ref name="write" scoped="" ref="0x104ab6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x104ab22f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x104ab22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab2670"/>
        <function-ref name="write" scoped="" ref="0x104ab2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x104ac7c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x104ac7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac5020"/>
        <function-ref name="write" scoped="" ref="0x104ac51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x104ac5c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x104ac5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac4020"/>
        <function-ref name="write" scoped="" ref="0x104ac41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x104abc670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x104abc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abc9f0"/>
        <function-ref name="write" scoped="" ref="0x104abcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x104abee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x104abee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abd210"/>
        <function-ref name="write" scoped="" ref="0x104abd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x104ac1670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x104ac1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac19f0"/>
        <function-ref name="write" scoped="" ref="0x104ac1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x104ad0970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x104ad0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x104ad0cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x104ad0e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x104acf030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x104acbd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x104acbd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104aca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x104aca370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x104aca370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104aca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x104ab5a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x104ab5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab5df0"/>
        <function-ref name="write" scoped="" ref="0x104ab4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x104acaac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x104acaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x104ab2ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x104ab2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab2e50"/>
        <function-ref name="write" scoped="" ref="0x104ab0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x104acb060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x104acb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acb3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x104ab7e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x104ab7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab6210"/>
        <function-ref name="write" scoped="" ref="0x104ab63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x104ac5480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x104ac5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac5800"/>
        <function-ref name="write" scoped="" ref="0x104ac5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x104ac7480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x104ac7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac7800"/>
        <function-ref name="write" scoped="" ref="0x104ac7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x104acf950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x104acf950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x104ab9e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x104ab9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab7210"/>
        <function-ref name="write" scoped="" ref="0x104ab73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x104aba670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x104aba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104aba9f0"/>
        <function-ref name="write" scoped="" ref="0x104abab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x104ab7670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x104ab7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab79f0"/>
        <function-ref name="write" scoped="" ref="0x104ab7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x104aafad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x104aafad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104aafe50"/>
        <function-ref name="write" scoped="" ref="0x104b19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x104ab0ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x104ab0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab0e50"/>
        <function-ref name="write" scoped="" ref="0x104aaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x104abd670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x104abd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abd9f0"/>
        <function-ref name="write" scoped="" ref="0x104abdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x104abae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x104abae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab9210"/>
        <function-ref name="write" scoped="" ref="0x104ab93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x104ab3ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x104ab3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab3e50"/>
        <function-ref name="write" scoped="" ref="0x104ab2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x104ac0670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x104ac0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac09f0"/>
        <function-ref name="write" scoped="" ref="0x104ac0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x104b19ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x104b19ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x104b19e50"/>
        <function-ref name="writeDone" scoped="" ref="0x104b18020"/>
        <function-ref name="write" scoped="" ref="0x104b181b0"/>
        <function-ref name="beginRead" scoped="" ref="0x104b18340"/>
        <function-ref name="readDone" scoped="" ref="0x104b184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x104acf300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x104acf300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acf680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x104ac8490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x104ac8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac8810"/>
        <function-ref name="write" scoped="" ref="0x104ac89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x104ac4480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x104ac4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac4800"/>
        <function-ref name="write" scoped="" ref="0x104ac4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x104abce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x104abce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abb210"/>
        <function-ref name="write" scoped="" ref="0x104abb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x104ac1e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x104ac1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac0210"/>
        <function-ref name="write" scoped="" ref="0x104ac03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x104abb670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x104abb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abb9f0"/>
        <function-ref name="write" scoped="" ref="0x104abbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x104ac3670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x104ac3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac39f0"/>
        <function-ref name="write" scoped="" ref="0x104ac3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x104ace670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x104ace670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104ace9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x104ac3e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x104ac3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ac2210"/>
        <function-ref name="write" scoped="" ref="0x104ac23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104ad1d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104ad1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104ad00a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104ad0230"/>
        <function-ref name="request" scoped="" ref="0x104ad03c0"/>
        <function-ref name="granted" scoped="" ref="0x104ad0550"/>
        <function-ref name="isOwner" scoped="" ref="0x104ad06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x104ac9160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x104ac9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104ac94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x104ac9e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x104ac9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104ac81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x104ab32f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x104ab32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab3670"/>
        <function-ref name="write" scoped="" ref="0x104ab3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x104ab4ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x104ab4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab4e50"/>
        <function-ref name="write" scoped="" ref="0x104ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x104acb6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x104acb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x104ab42f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x104ab42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab4670"/>
        <function-ref name="write" scoped="" ref="0x104ab4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x104aaf2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x104aaf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104aaf670"/>
        <function-ref name="write" scoped="" ref="0x104aaf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x104abde50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x104abde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abc210"/>
        <function-ref name="write" scoped="" ref="0x104abc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x104ab9670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x104ab9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab99f0"/>
        <function-ref name="write" scoped="" ref="0x104ab9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x104acecc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x104acecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x104acd9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x104acd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104acdd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x104ac0e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x104ac0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abe210"/>
        <function-ref name="write" scoped="" ref="0x104abe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x104ac97b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x104ac97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x104ac9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x104abe670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x104abe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104abe9f0"/>
        <function-ref name="write" scoped="" ref="0x104abeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x104ab6e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x104ab6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x104ab5610"/>
        <function-ref name="write" scoped="" ref="0x104ab57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x104b187a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x104b187a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x104b18b20"/>
        <function-ref name="writeDone" scoped="" ref="0x104b18cb0"/>
        <function-ref name="write" scoped="" ref="0x104b18e40"/>
        <function-ref name="beginRead" scoped="" ref="0x104b17020"/>
        <function-ref name="readDone" scoped="" ref="0x104b171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x104aeea20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x104aeea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x104aeeda0"/>
        <function-ref name="rand32" scoped="" ref="0x104aed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x104aec920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x104aec920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104aee560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104af2990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104af2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104af2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x104ae8a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x104ae8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x104ae8da0"/>
        <function-ref name="rand32" scoped="" ref="0x104ae6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x104ae9940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x104ae9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104ae8560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104ae9080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104ae9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104ae9400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x104af0aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x104af0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x104af0e20"/>
        <function-ref name="toIdle" scoped="" ref="0x104aea020"/>
        <function-ref name="isState" scoped="" ref="0x104aea1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x104aea340"/>
        <function-ref name="requestState" scoped="" ref="0x104aea4d0"/>
        <function-ref name="forceState" scoped="" ref="0x104aea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104b40020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104b40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b403a0"/>
        <function-ref name="getPayload" scoped="" ref="0x104b40530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b406c0"/>
        <function-ref name="cancel" scoped="" ref="0x104b40850"/>
        <function-ref name="sendDone" scoped="" ref="0x104b409e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x104b41220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104b41220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b415a0"/>
        <function-ref name="getPayload" scoped="" ref="0x104b41730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b418c0"/>
        <function-ref name="cancel" scoped="" ref="0x104b41a50"/>
        <function-ref name="sendDone" scoped="" ref="0x104b41be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104b3ce60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104b3ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b3b210"/>
        <function-ref name="getPayload" scoped="" ref="0x104b3b3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b3b530"/>
        <function-ref name="cancel" scoped="" ref="0x104b3b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x104b3b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x104b3fa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104b3fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b3fd90"/>
        <function-ref name="getPayload" scoped="" ref="0x104b3c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b3c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x104b3c340"/>
        <function-ref name="sendDone" scoped="" ref="0x104b3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x104b3a8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x104b3a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x104b3ac70"/>
        <function-ref name="rand32" scoped="" ref="0x104b3ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104b3c750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104b3c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104b3cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x104b39170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x104b39170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x104b394f0"/>
        <function-ref name="getHeader" scoped="" ref="0x104b39680"/>
        <function-ref name="getMetadata" scoped="" ref="0x104b39810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x104b3bae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x104b3bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x104b3be60"/>
        <function-ref name="toIdle" scoped="" ref="0x104b3a020"/>
        <function-ref name="isState" scoped="" ref="0x104b3a1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x104b3a340"/>
        <function-ref name="requestState" scoped="" ref="0x104b3a4d0"/>
        <function-ref name="forceState" scoped="" ref="0x104b3a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x104b3d690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x104b3d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x104b3da10"/>
        <function-ref name="toIdle" scoped="" ref="0x104b3dba0"/>
        <function-ref name="isState" scoped="" ref="0x104b3dd30"/>
        <function-ref name="isIdle" scoped="" ref="0x104b28020"/>
        <function-ref name="requestState" scoped="" ref="0x104b281b0"/>
        <function-ref name="forceState" scoped="" ref="0x104b28340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x104b21950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x104b21950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b21cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104b24aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104b24aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b24e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x104b21200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x104b21200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b21580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x104b893f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x104b893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b89770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104b8ab70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104b8ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104b89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104b20e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104b20e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b8a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x104b89a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x104b89a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x104b89df0"/>
        <function-ref name="getHeader" scoped="" ref="0x104b88020"/>
        <function-ref name="getMetadata" scoped="" ref="0x104b881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x104b8a570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x104b8a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b8a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x104b5b020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x104b5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b5b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104b5b6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104b5b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b5ba30"/>
        <function-ref name="getPayload" scoped="" ref="0x104b5bbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b5bd50"/>
        <function-ref name="cancel" scoped="" ref="0x104b5a020"/>
        <function-ref name="sendDone" scoped="" ref="0x104b5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x104b5f8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104b5f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b5fc60"/>
        <function-ref name="getPayload" scoped="" ref="0x104b5fdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b5e020"/>
        <function-ref name="cancel" scoped="" ref="0x104b5e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x104b5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x104b5ec90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x104b5ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104b5d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x104b5d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b5d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x104b5d550"/>
        <function-ref name="sendDone" scoped="" ref="0x104b5d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104b5e5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104b5e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b5e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104b60be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104b60be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104b5f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104b5f1b0"/>
        <function-ref name="request" scoped="" ref="0x104b5f340"/>
        <function-ref name="granted" scoped="" ref="0x104b5f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x104b5f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x104b5da50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x104b5da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104b5ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x104b5c170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x104b5c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104b5c4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x104b5c680"/>
        <function-ref name="getPayload" scoped="" ref="0x104b5c810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104b5c9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104b5cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104bc0d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104bc0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104bbf180"/>
        <function-ref name="getPayload" scoped="" ref="0x104bbf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104bbf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x104bbf630"/>
        <function-ref name="sendDone" scoped="" ref="0x104bbf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x104bbfb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x104bbfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104bbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x104b91db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x104b91db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104b8f180"/>
        <function-ref name="runTask" scoped="" ref="0x104b8f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x104bbe2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x104bbe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x104bbe670"/>
        <function-ref name="setNetwork" scoped="" ref="0x104bbe800"/>
        <function-ref name="getRssi" scoped="" ref="0x104bbe990"/>
        <function-ref name="getNetwork" scoped="" ref="0x104bbeb20"/>
        <function-ref name="getPower" scoped="" ref="0x104bbecb0"/>
        <function-ref name="getLqi" scoped="" ref="0x104bbee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x104bc2a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x104bc2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104bc2da0"/>
        <function-ref name="getPayload" scoped="" ref="0x104bc1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104bc11b0"/>
        <function-ref name="cancel" scoped="" ref="0x104bc1340"/>
        <function-ref name="sendDone" scoped="" ref="0x104bc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x104bbdb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x104bbdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x104bbc020"/>
        <function-ref name="isEmpty" scoped="" ref="0x104bbc1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x104bbc340"/>
        <function-ref name="dequeue" scoped="" ref="0x104bbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x104bbd170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x104bbd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x104bbd4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x104bbd680"/>
        <function-ref name="getMetadata" scoped="" ref="0x104bbd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x104bc2370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x104bc2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104bc26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x104b547b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x104b547b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104b54b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104b54cc0"/>
        <function-ref name="request" scoped="" ref="0x104b54e50"/>
        <function-ref name="granted" scoped="" ref="0x104bc3020"/>
        <function-ref name="isOwner" scoped="" ref="0x104bc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x104bc34d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x104bc34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104bc3850"/>
        <function-ref name="getPayload" scoped="" ref="0x104bc39e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104bc3b70"/>
        <function-ref name="cancel" scoped="" ref="0x104bc3d00"/>
        <function-ref name="sendDone" scoped="" ref="0x104bc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x104bc1840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x104bc1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104bc1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x104bc0020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x104bc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104bc03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x104bc0530"/>
        <function-ref name="getPayload" scoped="" ref="0x104bc06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104bc0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104bc09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104bdedd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104bdedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104bdd180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x104bdd410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x104bdd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x104bdd790"/>
        <function-ref name="isEmpty" scoped="" ref="0x104bdd920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x104bddab0"/>
        <function-ref name="dequeue" scoped="" ref="0x104bddc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x104bd2b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x104bd2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x104bd1020"/>
        <function-ref name="stopDone" scoped="" ref="0x104bd11b0"/>
        <function-ref name="start" scoped="" ref="0x104bd1340"/>
        <function-ref name="stop" scoped="" ref="0x104bd14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104bd0860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104bd0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104bd0be0"/>
        <function-ref name="getPayload" scoped="" ref="0x104bd0d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104bcf020"/>
        <function-ref name="cancel" scoped="" ref="0x104bcf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x104bcf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x104bcf690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x104bcf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104bcfa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x104bd6ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104bd6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104bd30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x104bd3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104bd33c0"/>
        <function-ref name="cancel" scoped="" ref="0x104bd3550"/>
        <function-ref name="sendDone" scoped="" ref="0x104bd36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x104bd2080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x104bd2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x104bd2400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x104bd2590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x104bd2720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x104bd28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x104bd1800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x104bd1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x104bd1b80"/>
        <function-ref name="toIdle" scoped="" ref="0x104bd1d10"/>
        <function-ref name="isState" scoped="" ref="0x104bd0020"/>
        <function-ref name="isIdle" scoped="" ref="0x104bd01b0"/>
        <function-ref name="requestState" scoped="" ref="0x104bd0340"/>
        <function-ref name="forceState" scoped="" ref="0x104bd04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x104bcfd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x104bcfd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x104bce180"/>
        <function-ref name="stopDone" scoped="" ref="0x104bce310"/>
        <function-ref name="start" scoped="" ref="0x104bce4a0"/>
        <function-ref name="stop" scoped="" ref="0x104bce630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104bd3980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104bd3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104bd3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x104bcb2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x104bcb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x104bcb650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x104bcb7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x104bcb970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x104bcbb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x104bcd580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x104bcd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x104bcd900"/>
        <function-ref name="toIdle" scoped="" ref="0x104bcda90"/>
        <function-ref name="isState" scoped="" ref="0x104bcdc20"/>
        <function-ref name="isIdle" scoped="" ref="0x104bcddb0"/>
        <function-ref name="requestState" scoped="" ref="0x104bcc020"/>
        <function-ref name="forceState" scoped="" ref="0x104bcc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104c2cd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104c2cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104c2b180"/>
        <function-ref name="getPayload" scoped="" ref="0x104c2b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104c2b4a0"/>
        <function-ref name="cancel" scoped="" ref="0x104c2b630"/>
        <function-ref name="sendDone" scoped="" ref="0x104c2b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x104c2f350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104c2f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104c2f6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x104c2f860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104c2f9f0"/>
        <function-ref name="cancel" scoped="" ref="0x104c2fb80"/>
        <function-ref name="sendDone" scoped="" ref="0x104c2fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x104c2c020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x104c2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x104c2c3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x104c2c530"/>
        <function-ref name="getRetries" scoped="" ref="0x104c2c6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x104c2c850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x104c2c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x104c271c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104c271c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x104c27540"/>
        <function-ref name="noAck" scoped="" ref="0x104c276d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x104c27860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x104c2a410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x104c2a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x104c2a790"/>
        <function-ref name="setRetries" scoped="" ref="0x104c2a920"/>
        <function-ref name="getRetries" scoped="" ref="0x104c2aab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x104c2ac40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x104c2add0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x104c08690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x104c08690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104c08a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104c09860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104c09860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104c09be0"/>
        <function-ref name="getPayload" scoped="" ref="0x104c09d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104c08020"/>
        <function-ref name="cancel" scoped="" ref="0x104c081b0"/>
        <function-ref name="sendDone" scoped="" ref="0x104c08340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x104c05610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x104c05610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x104c05990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x104c05b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x104c05cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x104c05e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x104c04020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x104c041b0"/>
        <function-ref name="setChannel" scoped="" ref="0x104c04340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x104c044d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x104c04660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x104c047f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x104c04980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x104c04b10"/>
        <function-ref name="sync" scoped="" ref="0x104c04ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x104c03020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x104c031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x104c0a8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x104c0a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x104c0ac30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x104c0adc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x104c09020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x104c091b0"/>
        <function-ref name="setCca" scoped="" ref="0x104c09340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x104c094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x104c0bce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x104c0bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x104c0a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x104c021f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x104c021f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x104c02570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x104c02700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x104c02890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x104c02a20"/>
        <function-ref name="setCca" scoped="" ref="0x104c02bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x104c02d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x104c0ca80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104c0ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104c0ce00"/>
        <function-ref name="payloadLength" scoped="" ref="0x104c0b020"/>
        <function-ref name="getPayload" scoped="" ref="0x104c0b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104c0b340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104c0b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x104c10020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x104c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104c103a0"/>
        <function-ref name="getPayload" scoped="" ref="0x104c10530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104c106c0"/>
        <function-ref name="cancel" scoped="" ref="0x104c10850"/>
        <function-ref name="sendDone" scoped="" ref="0x104c109e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x104c0edf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x104c0edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104c0d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x104c08ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x104c08ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x104c060a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x104c06230"/>
        <function-ref name="getRssi" scoped="" ref="0x104c063c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x104c06550"/>
        <function-ref name="getPower" scoped="" ref="0x104c066e0"/>
        <function-ref name="getLqi" scoped="" ref="0x104c06870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x104c034d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x104c034d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x104c03950"/>
        <function-ref name="changed" scoped="" ref="0x104c03ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x104c03c70"/>
        <function-ref name="setAddress" scoped="" ref="0x104c03e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x104c06b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x104c06b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x104c05020"/>
        <function-ref name="getHeader" scoped="" ref="0x104c051b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x104c05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104c0e210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104c0e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104c0e590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104c01d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104c01d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104c000e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104c00270"/>
        <function-ref name="led1On" scoped="" ref="0x104c00400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104c00590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104c00720"/>
        <function-ref name="get" scoped="" ref="0x104c008b0"/>
        <function-ref name="led1Off" scoped="" ref="0x104c00a40"/>
        <function-ref name="led2Off" scoped="" ref="0x104bff1b0"/>
        <function-ref name="set" scoped="" ref="0x104c00bd0"/>
        <function-ref name="led0On" scoped="" ref="0x104c00d60"/>
        <function-ref name="led2On" scoped="" ref="0x104bff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104c0d470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104c0d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104c0d7f0"/>
        <function-ref name="source" scoped="" ref="0x104c0d980"/>
        <function-ref name="address" scoped="" ref="0x104c0db10"/>
        <function-ref name="destination" scoped="" ref="0x104c0dca0"/>
        <function-ref name="setSource" scoped="" ref="0x104c0de30"/>
        <function-ref name="setDestination" scoped="" ref="0x104c0c020"/>
        <function-ref name="type" scoped="" ref="0x104c0c1b0"/>
        <function-ref name="setType" scoped="" ref="0x104c0c340"/>
        <function-ref name="isForMe" scoped="" ref="0x104c0c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x104c0c660"/>
        <function-ref name="localGroup" scoped="" ref="0x104c0c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x104c010f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x104c010f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x104c01470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x104c01600"/>
        <function-ref name="request" scoped="" ref="0x104c01790"/>
        <function-ref name="granted" scoped="" ref="0x104c01920"/>
        <function-ref name="isOwner" scoped="" ref="0x104c01ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x104cca5c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x104cca5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x104cca940"/>
        <function-ref name="stopDone" scoped="" ref="0x104ccaad0"/>
        <function-ref name="start" scoped="" ref="0x104ccac60"/>
        <function-ref name="stop" scoped="" ref="0x104ccadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x104cc7600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x104cc7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104cc7980"/>
        <function-ref name="getPayload" scoped="" ref="0x104cc7b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104cc7ca0"/>
        <function-ref name="cancel" scoped="" ref="0x104cc7e30"/>
        <function-ref name="sendDone" scoped="" ref="0x104cc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x104cc6e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104cc6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104cc51c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x104cc5350"/>
        <function-ref name="getPayload" scoped="" ref="0x104cc54e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104cc5670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104cc5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104cc6800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104cc6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104cc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104cc3b20" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104cc3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104cc2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104cc21b0"/>
        <function-ref name="led1On" scoped="" ref="0x104cc2340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104cc24d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104cc2660"/>
        <function-ref name="get" scoped="" ref="0x104cc27f0"/>
        <function-ref name="led1Off" scoped="" ref="0x104cc2980"/>
        <function-ref name="led2Off" scoped="" ref="0x104cc1020"/>
        <function-ref name="set" scoped="" ref="0x104cc2b10"/>
        <function-ref name="led0On" scoped="" ref="0x104cc2ca0"/>
        <function-ref name="led2On" scoped="" ref="0x104cc2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x104cc31a0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104cc31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x104cc3520"/>
        <function-ref name="noAck" scoped="" ref="0x104cc36b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x104cc3840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104cc5ab0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104cc5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104cc5e30"/>
        <function-ref name="source" scoped="" ref="0x104cc4020"/>
        <function-ref name="address" scoped="" ref="0x104cc41b0"/>
        <function-ref name="destination" scoped="" ref="0x104cc4340"/>
        <function-ref name="setSource" scoped="" ref="0x104cc44d0"/>
        <function-ref name="setDestination" scoped="" ref="0x104cc4660"/>
        <function-ref name="type" scoped="" ref="0x104cc47f0"/>
        <function-ref name="setType" scoped="" ref="0x104cc4980"/>
        <function-ref name="isForMe" scoped="" ref="0x104cc4b10"/>
        <function-ref name="setGroup" scoped="" ref="0x104cc4ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x104cc4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x104d51d90" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x104d51d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104d4f180"/>
        <function-ref name="getPayload" scoped="" ref="0x104d4f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104d4f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x104d4f630"/>
        <function-ref name="sendDone" scoped="" ref="0x104d4f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x104d4fa50" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x104d4fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104d4fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x104cbfb40" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x104cbfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104ce0020"/>
        <function-ref name="getPayload" scoped="" ref="0x104ce01b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104ce0340"/>
        <function-ref name="cancel" scoped="" ref="0x104ce04d0"/>
        <function-ref name="sendDone" scoped="" ref="0x104ce0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x104d52720" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x104d52720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x104d52aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x104d52c30"/>
        <function-ref name="getPayload" scoped="" ref="0x104d52dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104d51020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x104d511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104ce09e0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104ce09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104ce0d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x104d51400" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x104d51400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x104d51780"/>
        <function-ref name="noAck" scoped="" ref="0x104d51910"/>
        <function-ref name="wasAcked" scoped="" ref="0x104d51aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x104cdf020" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x104cdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x104cdf3a0"/>
        <function-ref name="source" scoped="" ref="0x104cdf530"/>
        <function-ref name="address" scoped="" ref="0x104cdf6c0"/>
        <function-ref name="destination" scoped="" ref="0x104cdf850"/>
        <function-ref name="setSource" scoped="" ref="0x104cdf9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x104cdfb70"/>
        <function-ref name="type" scoped="" ref="0x104cdfd00"/>
        <function-ref name="setType" scoped="" ref="0x104d52020"/>
        <function-ref name="isForMe" scoped="" ref="0x104d521b0"/>
        <function-ref name="setGroup" scoped="" ref="0x104d52340"/>
        <function-ref name="localGroup" scoped="" ref="0x104d524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x104d4a4e0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x104d4a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x104d4a860"/>
        <function-ref name="stopDone" scoped="" ref="0x104d4a9f0"/>
        <function-ref name="start" scoped="" ref="0x104d4ab80"/>
        <function-ref name="stop" scoped="" ref="0x104d4ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x104d48020" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104d48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10395ddf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104d483a0"/>
        <function-ref name="getPayload" scoped="" ref="0x104d48530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104d486c0"/>
        <function-ref name="cancel" scoped="" ref="0x104d48850"/>
        <function-ref name="sendDone" scoped="" ref="0x104d489e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104d4de50" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104d4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104d4a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104d494c0" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104d494c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10395ddf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104d49840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104d47940" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104d47940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104d47cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104d47e50"/>
        <function-ref name="led1On" scoped="" ref="0x104d46020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104d461b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104d46340"/>
        <function-ref name="get" scoped="" ref="0x104d464d0"/>
        <function-ref name="led1Off" scoped="" ref="0x104d46660"/>
        <function-ref name="led2Off" scoped="" ref="0x104d46ca0"/>
        <function-ref name="set" scoped="" ref="0x104d467f0"/>
        <function-ref name="led0On" scoped="" ref="0x104d46980"/>
        <function-ref name="led2On" scoped="" ref="0x104d46b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x104d47020" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x104d47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10395ddf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x104d473a0"/>
        <function-ref name="offset" scoped="" ref="0x104d47530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x104d476c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x104d41e00" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x104d41e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x104d3e1c0"/>
        <function-ref name="stopDone" scoped="" ref="0x104d3e350"/>
        <function-ref name="start" scoped="" ref="0x104d3e4e0"/>
        <function-ref name="stop" scoped="" ref="0x104d3e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x104dc4e40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x104dc4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104dc31e0"/>
        <function-ref name="runTask" scoped="" ref="0x104dc3370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x104d2c020" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x104d2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x104d2c3a0"/>
        <function-ref name="stop" scoped="" ref="0x104d2c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x104d85d10" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x104d85d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104d840e0"/>
        <function-ref name="runTask" scoped="" ref="0x104d84270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x104d417b0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x104d417b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x104d41b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x104d29bf0" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x104d29bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x104d2b020"/>
        <function-ref name="flush" scoped="" ref="0x104d2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x104dc6400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x104dc6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104dc6780"/>
        <function-ref name="runTask" scoped="" ref="0x104dc6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x104d2e680" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x104d2e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x104d2ea00"/>
        <function-ref name="resetSend" scoped="" ref="0x104d2eb90"/>
        <function-ref name="dataReceived" scoped="" ref="0x104d2ed20"/>
        <function-ref name="resetReceive" scoped="" ref="0x104d3c020"/>
        <function-ref name="putData" scoped="" ref="0x104d3c1b0"/>
        <function-ref name="putDone" scoped="" ref="0x104d3c340"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x104d3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104d3c750" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104d3c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104d3cad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104d3cc60"/>
        <function-ref name="led1On" scoped="" ref="0x104d3cdf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104d37020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104d371b0"/>
        <function-ref name="get" scoped="" ref="0x104d37340"/>
        <function-ref name="led1Off" scoped="" ref="0x104d374d0"/>
        <function-ref name="led2Off" scoped="" ref="0x104d37b10"/>
        <function-ref name="set" scoped="" ref="0x104d37660"/>
        <function-ref name="led0On" scoped="" ref="0x104d377f0"/>
        <function-ref name="led2On" scoped="" ref="0x104d37980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x104dbf0c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x104dbf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104dbf440"/>
        <function-ref name="runTask" scoped="" ref="0x104dbf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x104d38e50" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x104d38e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x104d3d210"/>
        <function-ref name="nextByte" scoped="" ref="0x104d3d3a0"/>
        <function-ref name="startSend" scoped="" ref="0x104d3d530"/>
        <function-ref name="sendCompleted" scoped="" ref="0x104d3d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x104d34340" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x104d34340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x104d346c0"/>
        <function-ref name="byteReceived" scoped="" ref="0x104d34850"/>
        <function-ref name="endPacket" scoped="" ref="0x104d349e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x104e5ac50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x104e5ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104e59020"/>
        <function-ref name="runTask" scoped="" ref="0x104e591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x104e5f830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x104e5f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10395ddf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104e5fbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x104e5fd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x104e5d020"/>
        <function-ref name="cancel" scoped="" ref="0x104e5d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x104e5d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x104e59480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x104e59480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x104e59800"/>
        <function-ref name="runTask" scoped="" ref="0x104e59990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x104e5f110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x104e5f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10395ddf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x104e5f4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x104e5d760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x104e5d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10395ddf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x104e5db00"/>
        <function-ref name="offset" scoped="" ref="0x104e5dc90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x104e5de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104e5b590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104e5b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104e5b910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104e5baa0"/>
        <function-ref name="led1On" scoped="" ref="0x104e5bc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104e5bdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104e5a020"/>
        <function-ref name="get" scoped="" ref="0x104e5a1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x104e5a340"/>
        <function-ref name="led2On" scoped="" ref="0x104e5a980"/>
        <function-ref name="set" scoped="" ref="0x104e5a660"/>
        <function-ref name="led2Off" scoped="" ref="0x104e5a4d0"/>
        <function-ref name="led0On" scoped="" ref="0x104e5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x104e5c9d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x104e5c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x104e5cd50"/>
        <function-ref name="nextByte" scoped="" ref="0x104e5b020"/>
        <function-ref name="startSend" scoped="" ref="0x104e5b1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x104e5b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x104e5c0e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x104e5c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x104e5c460"/>
        <function-ref name="byteReceived" scoped="" ref="0x104e5c5f0"/>
        <function-ref name="endPacket" scoped="" ref="0x104e5c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x104e54ca0" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x104e54ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x104e530a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x104e53230"/>
        <function-ref name="receive" scoped="" ref="0x104e533c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x104e53550"/>
        <function-ref name="receiveDone" scoped="" ref="0x104e536e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x104e53870"/>
        <function-ref name="sendDone" scoped="" ref="0x104e53a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x104e57b60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x104e57b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x104e54020"/>
        <function-ref name="resetSend" scoped="" ref="0x104e541b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x104e54340"/>
        <function-ref name="resetReceive" scoped="" ref="0x104e544d0"/>
        <function-ref name="putData" scoped="" ref="0x104e54660"/>
        <function-ref name="putDone" scoped="" ref="0x104e547f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x104e54980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x104e53c80" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x104e53c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x104e520a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x104e52230"/>
        <function-ref name="led1On" scoped="" ref="0x104e523c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x104e52550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x104e526e0"/>
        <function-ref name="get" scoped="" ref="0x104e52870"/>
        <function-ref name="led1Off" scoped="" ref="0x104e52a00"/>
        <function-ref name="led2Off" scoped="" ref="0x104e511b0"/>
        <function-ref name="set" scoped="" ref="0x104e52b90"/>
        <function-ref name="led0On" scoped="" ref="0x104e52d20"/>
        <function-ref name="led2On" scoped="" ref="0x104e51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x104eaa6b0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x104eaa6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x104eaaa30"/>
        <function-ref name="offset" scoped="" ref="0x104eaabc0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x104eaad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x104e99020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="ActuatorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x104e99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1039737d0"/>
            <typename><typedef-ref name="TMilli" ref="0x103973b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x104e95630"/>
        <function-ref name="fired" scoped="" ref="0x104e98a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x104e97920"/>
        <function-ref name="isOneShot" scoped="" ref="0x104e974a0"/>
        <function-ref name="getdt" scoped="" ref="0x104e94020"/>
        <function-ref name="gett0" scoped="" ref="0x104e95ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x104e97020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x104e99c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x104e95020"/>
        <function-ref name="startOneShot" scoped="" ref="0x104e98110"/>
        <function-ref name="stop" scoped="" ref="0x104e985e0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x103788a10" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x1037865d0" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x1037b1910" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x1037b3b70" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x1037b11f0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x1037b3490" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x1037b2350" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x1037b5650" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x1037b5d30" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x1037b2a70" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x103685070" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x1033b5670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x10381b020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10381ccc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x1037ff390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1037c75a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x1037c5440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10381b890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x10381a7b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x10381c560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10381a020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x1037ffb30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x1037fe350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x1037feda0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1037c75a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x1037c5440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x1037feb20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1037c75a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x1037c5440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10380e0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x10382b630" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x10382b3b0" loc="79:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10382a2a0" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10382a020" loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10382cbe0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10382c3e0" loc="63:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10380ea90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10380e810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x1038153e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x103815d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x103815ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x103813790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x103813510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x1038122a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x103812020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x103812990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x103805810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x1038022a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x103802020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x103804020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10380baa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x103804760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1038079b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x103805120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x103807270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1038060e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x1038069f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x103806770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x103802cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x103802a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x1038441f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x10375c670" loc="76:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x10340c910" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1032fa020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x103305020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x1032fa770" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10330c020" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10330c870" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x103986460" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1039861e0" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x103985ab0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x103985830" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1039887b0" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x103986cb0" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x103a020b0" loc="46:../../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x1039efdc0" loc="46:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x103a01020" loc="56:../../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x103a02920" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x103a02c80" loc="56:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1039e0560" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10395e540"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039e02e0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x1039ea110" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039ebe30" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x1039ec4b0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x1039eb020" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039eccf0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x1039e7b10" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039e7530" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1039e7880" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x1039e8600" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039e8020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1039e8370" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1039e3040" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039e6da0" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1039e13a0" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039e3dc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1039e1110" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10395e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x1039e5da0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039e5b20" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1039dfa30" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10395e540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1039df450" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1039df7a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10395e540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x103a04890" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10395e540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1039ce550" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1039ce2d0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x1039cd5f0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1039cd370" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1039f1970" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1039f1370" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1039f16a0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1039f0a10" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x1039ccab0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1039cc4f0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1039cc820" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1039fd7f0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
              <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103a00e60" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x1039fd1e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1039fd510" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x1039f3a00" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x1039f21f0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x1039f29d0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x103a18940" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x103a16120" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x103a16930" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x103a18190" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x103a154c0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x103a15240" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x1039f3270" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x103a17190" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x103a17920" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x1039d9ad0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1039d9180" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x1039d9500" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1039d9830" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1039d3620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1039d3020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1039d3350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1039d26d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1039d62a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1039d6020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1039d57f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1039d5210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1039d5560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103970350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103970350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10398f1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10396ea60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x103991820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x103991250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x103991590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x10396da60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10398e270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10398f980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10396d270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10396f020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x103970c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x103990820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x103990250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x103990590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10396fae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10396f860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10396e350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x103a300e0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x103a30810" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x103a31270" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x103a2f760" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x103a31970" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x103a2f020" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x103a33440" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x103a33b10" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x103a7f190" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x103a7f8e0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x103a7a2e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x103a7a060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x103a579c0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x103a7e7d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x103a7abd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x103a7e070" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x103a56990" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x103a7b020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x103a56190" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x103a5caa0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x103a7c020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x103a7b7c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x103a7c7b0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x103a57270" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x103cb02f0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x103cb4cc0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103cb0060" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x103cab020" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x103cadce0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x103cabdf0" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x103cab820" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103cabb60" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x103cacbc0" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x103ca8720" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x103ca9dc0" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103ca8130" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x103ca8480" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x103cad510" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x103cafbb0" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x103caf280" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103caf5c0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x103caf910" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x103cb5db0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x103cb2660" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x103d1b270" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x103d1bba0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x103d19d20" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x103cd6450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x103cd6870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x103d1e9c0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x103d1f990" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x103d1f020" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x103d1e1f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x103d1d470" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x103d103b0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x103d13b70" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x103d08d70" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x103d08af0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x103d08350" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x103d4a390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x103d22020" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x103d2fa20" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ca1360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x103ca1ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x103d2f7a0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ca1360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x103ca1ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x103d24020" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x103d2c020" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ccf2d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x103ccfb10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x103d2dc60" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ccf2d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x103ccfb10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x103d4f750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x103d4dcf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x103d2d4c0" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103cd1230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x103cd19c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x103d2c810" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ccf2d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x103ccfb10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x103d285e0" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x103d28360" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x103d29c10" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x103d4f020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x103d2ec90" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103cd1230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x103cd19c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x103d2ea10" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103cd1230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x103cd19c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x103d2aa50" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x103d4fe80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x103d29460" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x103d291e0" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x103d25020" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x103d257a0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x103d51070" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x103d53020" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x103d23020" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x103d517b0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x103d22800" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x103d4e5c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x103d28dc0" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x103cb1320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x103ca4a10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x103d4ed60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x103d4bbd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x103d2a2a0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x103d2a020" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x103d4ad30" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x103d4aab0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x103d2e270" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ca1360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x103ca1ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x103d24790" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x103d20020" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x103d52800" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x103cd6450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x103cd6870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x103d52580" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x103cd6450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x103cd6870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x103d53af0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x103cea420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x103cea840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x103d53870" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x103cea420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x103cea840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x103d49730" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x103d4d570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x103d275f0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x103d4b480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x103d20790" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x103d23800" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103d45ce0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103d45ce0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x103d41020" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103d41020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x103d41940" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103d41020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x103d40a50" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x103d401f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x103d3f1f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x103dab390" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x103dabbe0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x103e79c70" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x103e754f0" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x103e9b420" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x103ebb270" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x103eba350" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x103ebe9c0" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x103ebbae0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x103ebac80" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x103eaf4c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x103eb73f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x103eaf240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x103eb73f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x103eb13b0" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x103eb0020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x103eb73f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x103eb1c30" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x103eb73f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x103eb0930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x103eb73f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x103f30770" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x103f5f1e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103f5f1e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x103f5f420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103f5f420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x103f5a2a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103f5f420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f5a020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x103f58430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f581b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x103f5b020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f5fd60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x103f57740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103f5f420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f57150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x103f574b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103f5f420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x103f89990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f89370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x103f89700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x103f87b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f878b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x103f8aae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x103f8a120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x103f8de80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x103f615f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f61370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x103f607d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f60550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x103f5d940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f5d6c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x103f9e980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f9e700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x103fa1c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fa19b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x103fa2350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x103fa20d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x103fa5800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x103fa5580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x103fa2d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x103fa2b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x103f9fb10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f9f890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x103fcf2b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x103f9cc50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x103fcf020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x103fad810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103fad230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x103fad580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x103fa9e20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103fa9820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x103fa9b90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x103fac350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10306d110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103fac0d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x103faad30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103faaab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x103fae9c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103fae740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x103face80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103facc00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x103f96b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f968b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x103f9abc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f9a5a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x103f9a930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x103f99ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f99850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x103f99020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f989c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x103f98d50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x103f94b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103f948f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x103fa6780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fa6500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x103fcadd0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fca810" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103fcab40" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x103fc2620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fc2020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103fc2350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x103fc1660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x103fc52a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fc5020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x103fc4750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fc4170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x103fc44c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x103fe3ca0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103fe36e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x103fe3a10" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x103fe0020" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x103fdd930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x103fdfab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x103fdd360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103fdd690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x103fdf2b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x103fe0bb0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x103fdf020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x103fe1780" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x103fe1500" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x103fd9820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x103fd9020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x103fd3ae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fd3820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x103fd3020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x103981c00"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x1039a45a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fd5be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x103fd2de0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x1039a30c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x1039a2970"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103fd2ae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x103fe86e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x103fe6840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x103fe6070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x103fede20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x103feae80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x103fe7020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x103fe7840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x103fea6c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x10400c480" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x10400ea80" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x10400dc90" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x10400da10" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x10400d270" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x10400f730" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10400f4b0" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x10400e2a0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x10400e020" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x104071020" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x1040329f0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x104032d40" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x104033960" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x104033020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x104034820" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x104034c00" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x1040392a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x104039020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x104032270" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x104037d70" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x104037af0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x1040383e0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x104038160" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x104070270" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x104034020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x104035c50" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x104071a20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x104038b60" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x103f8ce10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x103f845a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x104037390" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x10403a850" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x1040399f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x104035530" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x10406fc50" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10406fc50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x10406c540" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10406b2b0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10406fc50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x10406ccc0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x10406b020" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x10406fc50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x104082520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x103989d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1040822a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x104081030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x103989d40"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104082d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x10405e640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x103f8ce10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x103f845a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1040618a0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1040618a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x104061ae0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x104058800" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10405a7e0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x104059e10" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x104059840" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
          </variable>
          <variable name="dt" ref="0x104059b80" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x104059020" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x104056020" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10405b680" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10405b400" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x104061ae0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10405a020" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x10408a0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x104089070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x10408a8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10395e540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x10408c860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10395e540"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x10408c280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10395e540"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x10408c5d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10395e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x10407b710" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x103989d40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x104087840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x103989d40"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x1040909b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x104087250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1040875a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x104084020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x103989d40"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x104086150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x1040869c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x104086d10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10408e7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10408e020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x10408f720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x104092db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x104254020" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x1042531f0" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x1042549c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x104254740" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x104256780" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10427a020" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x104279ac0" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x10427b7c0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x1042792a0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x104279020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x10427b020" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x10427a820" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x104374270" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x104374ac0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x104373350" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x10439bb60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10439b580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10439b8d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x104396dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104396490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1043967e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x104396b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1043976b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x103989d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1043970d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x104397420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x10439c730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x103989d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10439c150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10439c4a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x1043982c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104399930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x104399c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x104398020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1043c9cf0" loc="70:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x1043c9380" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1043c9710" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1043c9a50" loc="70:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1043c53c0" loc="82:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x1043c66a0" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1043c6a30" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1043c6d70" loc="82:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1043c5110" loc="83:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x1043cec90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x1043cea10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x104472120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x103cea420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x103cea840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x104429d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104429ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x1044252a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104425020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x104426610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x104425d30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104425ab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x10451a9d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x1044d8420" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x1044cd620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1044cd3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x1044e1af0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x1044cac50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x1044d25e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x1044da540" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x1044d72d0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x1044db500" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x1044db280" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x1044dda10" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x1044d4070" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x1044cc550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x10451a270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x1044cec30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x104514350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x1045119d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x1044e0980" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x1044d68b0" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x1044d31f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x1044dbdc0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x1044e38c0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x1044ce460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1044ce1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x1044e3190" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x1044ca4d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x104518190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x104513b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x104511270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x1044c9b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x1045188c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x1044cddb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x104516390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x1044df0e0" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x1044d17e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x1045177b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x1044c8ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x1044d3de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x1044d3b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x1045122d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x1044cfa60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x1044c9420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x1044e1390" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x103cf7240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x103cf7660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x1044e1110" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x103cf7240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x103cf7660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x1044d6190" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x1044dd2a0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1044dd020" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x1044d49d0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1044d4750" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x104516b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x1044dcb50" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x1044df850" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x1044cf2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x1044cf020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10306e520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x1044e0270" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x104517020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x1044c8350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x1044cccc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x1044d1020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x1044d2d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x1044d79f0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x1044dac80" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x104512a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x1044dc3c0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1044dc140" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x104514b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x1044d8b50" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x104513350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x10473a5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x10473a360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x104784b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x1047841c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x104784530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x104784860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x104782880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1047822c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1047825f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10476a530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10476a530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10476a770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10476a770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x1047692e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10476a770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x104769060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10476a770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x1047c3580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1047f49e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x1047f4020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x1047f4750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x1047f57f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x1047f5020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1047f8d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x10480a3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10480a150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x10480b3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x1032fe090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10480b150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x104807350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1048070d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x104808390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104808110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1049a6910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1049a6910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1049a3270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10306e920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x104aef5f0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x104aef5f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x104aec2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x104aef5f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x104aec020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x104aef5f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x104d42670" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104d42060" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x104d423e0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x104d45820" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x104d446d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x104d440d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x1039db350"/>
                <typename><typedef-ref name="message_t" ref="0x1039da9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x104d44440" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x104d29900" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x104d29190" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x104d33920" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x104d31d60" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x104d2fab0" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104d2f830" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x104d306a0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x104d314d0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104d31250" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x104d2e350" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x104d2f020" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x104d3a4a0" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x104d3add0" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x104d3bb10" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x104d3b890" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x104d389d0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x104d38750" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x104d365c0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x104d352a0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x104d35020" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10306e160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x104d35d70" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x104d35af0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x103301980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
