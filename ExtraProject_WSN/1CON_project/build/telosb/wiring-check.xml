<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:WiTempAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10140b020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x1014c78b0"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x1014c78b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x101699590"/></to>
    </wire>
    <wire loc="14:WiTempAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10141c330"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1016a4020"/></to>
    </wire>
    <wire loc="15:WiTempAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10142c770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101ac5370"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101ac5370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10190f9f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:WiTempAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1014a19f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x1029b3c30"/></to>
    </wire>
    <wire loc="65:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1029b3c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x10351b8b0"/></to>
    </wire>
    <wire loc="29:WiTempAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1014b1af0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x1029b28b0"/></to>
    </wire>
    <wire loc="66:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1029b28b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x10351a590"/></to>
    </wire>
    <wire loc="30:WiTempAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1014a79d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x1029b3020"/></to>
    </wire>
    <wire loc="64:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1029b3020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10351cb60"/></to>
    </wire>
    <wire loc="31:WiTempAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x1014b2840"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x101d70e20"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x101d70e20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x101d822f0"/></to>
    </wire>
    <wire loc="32:WiTempAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1014a8020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1029ac910"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1029ac910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x101d6a030"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:WiTempAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x101428020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x1029a38f0"/></to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x1029a38f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x102a25b90"/></to>
    </wire>
    <wire loc="35:WiTempAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x101445020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x101abb7c0"/></to>
    </wire>
    <wire loc="14:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x101abb7c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x101d3d060"/></to>
    </wire>
    <wire loc="59:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102a25540"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102864dd0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1027a2b50"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1027c0750"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10276d080"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10264a620"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10253fc60"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101f137d0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x103333140"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102188020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101e59cc0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10317cca0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10193a780"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x101699c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x100f8e3a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x100f8e3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x1013e6420"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x1016b46c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1014e4c90"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1014e4c90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1014de020"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x1016b4dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x1014de730"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x1014df590"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x1014df590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101502480"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x1014dee10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1014d61a0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x1014dd520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1016ccc40"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x101502480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10150b3c0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x1014f9a30"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x10150ba70"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x10130a510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x10150acc0"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x10154fa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10161e6d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x101560410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101617b30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x101569bb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101624160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x101570020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101649cb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x10156e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101625480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x101577570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101649020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x101591020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101658cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x10157ea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101643220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x101556020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x1015b99d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x101572020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1016322f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x101579890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101633610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x10155f8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101634220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x101568bb0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10161c7a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x10156f020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x1016412f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x101580020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10162d6d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x10156eda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10161dac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x1015577b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015c7540"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x1015763e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101642610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x1015555a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x101626020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x10157c020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10163b6d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x101563b60"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101606a90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x101571020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10162b7a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x10154c140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101607de0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x101578700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10162cac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x101592020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10165f7a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x10157f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10164bb30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x1015751f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10163aac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x101573020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101615cb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x101574020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101658020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x10157aa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x101615020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x10157b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10165ab30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x1015c5450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015c6d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x1015c5aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x101652a90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x1015c3120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x10164f260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101605930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015c7540"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x101603020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015c6d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101623020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015c7540"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1016217a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015c6d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10161b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015c7540"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10161ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015c6d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x1015bd2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x1015bd940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x10164f9f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x1015bc020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x10164e240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101614b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1016372f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101631160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1016307a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10162a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x101629c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101648b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1016462f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101640160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10163f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10165e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10165dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x101657b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x1016552f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x1015bebf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x1013e5320"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x1013e1990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x100fee760"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1016ccc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1016a78d0"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1016c47b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x1016cf360"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x1016cf360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1018d5020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1016a2980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x1016ce6a0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x1016ce6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1018fab90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x1016a1ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x1016cd9c0"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x1016cd9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1018f5710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1018fe2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10171c200"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10171c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101866740"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1018f9de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x101744200"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x101744200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101861100"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x1018f4930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x101742200"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x101742200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10185dd10"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x1016df020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017c0100"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x1016f5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017ead10"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x101753560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10180ad10"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x101785570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101895100"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x101751580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101805740"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x10171b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017e0100"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x101730200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10180de00"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x101735200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10186fd10"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x10174b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017fbd10"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x101766570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101853100"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x10177d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101891d10"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x101703020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017de100"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x101749580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017f6740"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x1016ff020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017d5740"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x101714020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017ff100"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x10172a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10182cd10"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x101740200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101858740"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x101759200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101891d10"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x1016e3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10179fd10"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x1016f9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017f3860"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x10170e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10181f100"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x101755580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10180ad10"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x10175f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101873100"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x10177f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101891d10"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x10176c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10183dd10"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x10170a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101816a60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x101720200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101842100"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x101739200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101878740"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x10175d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10186fd10"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x101747570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10184cd10"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x1016dd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017bcd10"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x1016f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017e5740"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x10173e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101853100"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x101719020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10180ad10"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x10172e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101835740"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x101733200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10186a740"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x10176e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101842100"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x1016f0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017a86d0"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x1016fd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017d0100"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x101712020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017fbd10"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x101728200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101827740"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x10176a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10181f100"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x101764570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10187ed10"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x101783570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101891d10"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x101724200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10184cd10"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x101768580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10181bd10"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x1016e1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017c6740"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x1016f7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017ee270"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x10170c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10181bd10"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x101770580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101847740"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x10175b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10186a740"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x101708200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101811460"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10171e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10183dd10"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x101737200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101873100"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x101705020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017b7740"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x10173b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10187ed10"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x101701020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017dad10"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x101716020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101805740"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x10172c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101830100"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x101731200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101895100"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x1016e5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017a3100"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x1016fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017ccd10"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x101710020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017f6740"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x101726200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101850100"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x10174d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017ff100"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x101762570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101878740"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x10174f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017ff100"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x101722200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101847740"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x101781570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101895100"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x10177b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x101858740"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x1017571f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x1017e0100"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10190f9f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x101937560"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x101937560"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101aae150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10193a780"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101a17020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x101931020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x101aa0790"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x101a17020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1030bec40"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x101aa8640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x101a562f0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x101a51850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x101a17870"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x101a17870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1030b6890"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x101a9fa60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1019bab50"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1019bab50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1019d2cf0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x1030bec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x1030a1660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x1030af0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1030bc4f0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x1030bc4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1030a0020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x1030b3c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1019bab50"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10309c190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x1030a6340"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1030a6340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10309b770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1030a5a80"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1030a5a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10309aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1030a4da0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1030a4da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x101560410"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x10157aa20"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x101580020"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x101578700"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x10157f5a0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x101577570"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x10157ea50"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x1015763e0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x10157c020"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x1015751f0"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x10157b5a0"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x101574020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x1019e90f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1019b8b70"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1019b8b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x1019b2b80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x1019d7c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x101a4d9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x101aa3a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x101d3d060"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x101b2d560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x101ae6660"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x101d3e0c0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x101d3e0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x101b2e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x101abc020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x101d7e790"/></to>
    </wire>
    <wire loc="18:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101d3d800"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101d7b020"/></to>
    </wire>
    <wire loc="19:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101d7b690"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101d41c00"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101d41c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101b334d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x101d408f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x10314cc70"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x10314cc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x101c7fbc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101b2b6c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101d3d800"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x103146d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x101b311d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x101b2c3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x10314c020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10314c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101c80850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x101b60c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1031465d0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1031465d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x101c81980"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x101b311d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x101bd0dc0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x101b2d560"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x101bcd890"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x101b2e020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x101bce6d0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101b334d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101bd0020"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101bcb020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101b2b6c0"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x101bcc230"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x101b2c3f0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x101bc6290"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x101b60c20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x101bcb690"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x101bf68b0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x101bf68b0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x101bec020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x101bc6c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x101c59080"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x101c59080"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1019b8b70"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x101bc4dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x101bf03b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x101be8dc0"/></to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x101bf6080"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x101bef710"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x101be76d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x101770580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x101be5670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x10176e580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x101be3670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x10176c580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x101be1670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x101768580"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x101bdf670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x10176a580"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x10314bbe0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x101bf68b0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10314b440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x101c7e4b0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x101c7e4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x101d31400"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x101c7d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x103146d70"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x101c7fbc0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x101d32020"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x101d32020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1031773a0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x101c81980"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x101c790d0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101c80850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101d34210"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101d34210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103178540"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x101d31400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1031768b0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x101ca80a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x101bf03b0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x101d31cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x101c7d280"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x101ca7020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x101d31400"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x101d599d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x101d327a0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x101d327a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103177b20"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x101d2cb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x101bf6080"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x103175210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x101d31cd0"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1031759d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x10317a330"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x103172c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x1031d63a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x101d2cb20"/></to>
    </wire>
    <wire loc="82:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x1031d6b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x101d59400"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1031d50f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x101d599d0"/></to>
    </wire>
    <wire loc="85:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x1031d5d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x101d57720"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x101d822f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x101de1020"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x101d6ce40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x101d81320"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x101d81320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x102898e80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x101d6ac10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x101d7f1d0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x101d7f1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x102894db0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x101d692b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x101dc1020"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x101dc1020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x102892a80"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x101d65430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x102694550"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x102694550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1026eda80"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x101d8e430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x101db6170"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x101db6170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x101dd0080"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x101d6a030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x101d80510"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x101d80510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1028941d0"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101d5e350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101dc0020"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101dc0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101dd2020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x101d68020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x101d7f800"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x101d7f800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x102893430"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x101d9a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1026f8660"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1026f8660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1026e9af0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x101de1020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x102858b80"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x101dbf2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x1028908b0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x101dab1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x102891ce0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x101db70f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x101dd3020"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x101dd3020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x101dd0080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x102858080"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101dd2020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x1026966e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x101da2430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x101dd0b70"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x101dd0b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x1028b2020"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x101db3170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x101dd29d0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x101dd29d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x102695a70"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x1028870f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101de01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x10288e860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x101ddd990"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x101ddd990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x1027e2c90"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x10288d690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x101dd5840"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x101dd5840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x1027e1a50"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1028894d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x102473b20"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10288dce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x1026f3d10"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10288cb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026ee640"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10288b610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x101e5d550"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x101e5d550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x101e520c0"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x1028881f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x101dca330"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x101dca330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x101dc57e0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102887d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x102858b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x102854d90"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x102695a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1026ed020"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x1028b2020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x1028b0400"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x1027e2c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x1027d8a20"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x102858080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x1028502d0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x101dde500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1027e25e0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1027e25e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x1027d8370"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1026966e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x1026efc50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101de01d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1027e5be0"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1027e5be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1027da7b0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x101dd46f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1027e48e0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1027e48e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x1027d94d0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x101ddebc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x1027e0170"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x1027e0170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x102845020"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x1027e1a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x1027d7840"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x102854d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x101dcc390"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x101dcc390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x101dc9e70"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1027df6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1027c6220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x1027c6220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1027c4a10"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1027c5020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x102846340"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x102846340"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1028b2d70"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1028b2d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10285cce0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10285cce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x102855860"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x102855860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x101dcce80"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x101dcce80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x101dc6990"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1027df020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x102859980"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x102859980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x102854690"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x102854690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1027a9a90"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x1027a9a90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x1027a5e20"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1027a6950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x101dcbb40"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x101dcbb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x10264e7c0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10264e7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x102648020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101dc4640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101e6b020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x101e6b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x101e54390"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x101e01b00"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x101e694b0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x101e694b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x101e50020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x101e07d40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10254e6c0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x101e07d40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x1026515c0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x1026515c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10264aca0"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x10254e6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x10253e320"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x101df99f0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x10254b020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x10254b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10253ebc0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x101e00890"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10254bcb0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x10254bcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x10253d970"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x101df6c90"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x101ded320"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x101df5cd0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x102773a20"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x102773a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x10276ca20"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x101de7890"/></from>
      <to><interface-ref name="State" scoped="" ref="0x102775aa0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x102775aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10218c280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x101df74f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x101e28360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x101e29470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x101de54f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x101e57850"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x101e4f500"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x101e943a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x101f10220"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x101f10220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x101f0aaf0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x101e8f5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x101f5fe60"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x101f5fe60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101f52b60"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x101e8e830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x101f5b6a0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x101f5b6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101f8ed70"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x101e8db50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x101f59ce0"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x101f59ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101f84710"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x101e865b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x101fbbd60"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x101fbbd60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1020c3a30"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x101e758f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102440e20"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x102440e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102117950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x101e74990"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x10243c7b0"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10243c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x101e76100"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x10243bae0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10243bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x101e751d0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x10243dad0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10243dad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x101e76830"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x10243a160"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10243a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x101e791d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x102431870"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x102431870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x101e79a80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x10242f880"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10242f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x101e7d3c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x10242e0a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10242e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x101e7dc90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x102436e50"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x102436e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x101e7c5f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x102435670"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x102435670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x101e829a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x102421500"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x102421500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x101e82020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x102422ce0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x102422ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x101e78020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x102433e50"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x102433e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x101e788c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x102435e50"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x102435e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x101e771d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x102434e50"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x102434e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x101e72560"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10246da80"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10246da80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102117950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x101e736f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10249f9e0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10249f9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102117950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x101e83dd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x102473b20"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x101e92970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x102472d20"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x102472d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1024b8310"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x101eae020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x101eaf020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x101f137d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x101f0a260"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x101f0a260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x103242720"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x101f0aaf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x103241020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x103242720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10323b760"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x103241020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x1032341d0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10323b760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10321e340"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10322eb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10323a020"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10323a020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10321ebd0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x103230690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x101f3e080"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x101f3e080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x101f39cd0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10321bdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x103225e70"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x103225e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x103218440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x1032225d0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x1032225d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x103217760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1032218f0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x1032218f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x101f350f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1019b8b70"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x101f5d090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101f4c710"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x101f5c390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101f921d0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x101f11b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101f56020"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x101f5a9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x101f89b60"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101f552f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x1016df020"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101f51de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x101730200"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101f96930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x1016e1020"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101f91480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x1016f0020"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101f8c020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x101728200"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101f88de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x101708200"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x101f83930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x10172a200"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x101fbb150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x101fb4a20"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x101fbaa20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x1020b4a70"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x101fa25d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x10155f8c0"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x101fa18f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x101572020"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x101fa07a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x101708200"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1020c2610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x101fdd8a0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x101fdd8a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x101fc98a0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x1020b3610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x101fdf8f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x101fdf8f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x101fcf810"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x101fd3a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x101fbfa30"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x101fda8a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x101fc68a0"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x101fd88a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x101fc48a0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x101fe38a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x101fcb8a0"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x101fd58a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x101fc18a0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x101fdc8a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x101fc88a0"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x101fd2a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x10200ba30"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x101fd78a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x101fc38a0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x101fde8a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x101fca8a0"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x101fd4a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x101fc0a30"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x101fdb8a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x101fc78a0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x101fd98a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x101fc58a0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x101fe48a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x101fcc8a0"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x101fd68a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x101fc28a0"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10243c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x102430880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x1024280a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10242f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10241c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10241f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10243b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x102425880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x102420500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x10242a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10242c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10243ea90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x102114670"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x102114670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10210d920"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10243ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x102438490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x102423c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x102438be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102420ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x1024250a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x102434670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x1024260a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x102428880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x102426880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10241dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10241fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x10242c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x1024270a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x102421ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10242e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10241cce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10243d480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x102436670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x102433670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x1024290a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x102429880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1024300a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x1024372f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x102436020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10243a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x102422500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10241d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x10242a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x102427880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10243ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10242d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x102437940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10242d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x1024230a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10241b9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x102112630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102109bb0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x1021118c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x102107020"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x1021106f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x102107db0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x102117950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10210a810"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x10210f510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x102106ba0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x102101020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x102190770"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x102190770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10218c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x102104400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1021c3c40"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1021c3c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x103314c30"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x102102080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1024068f0"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1024068f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1033100c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10214b680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x102405020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x102405020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x10330f2b0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102101df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x102146120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x10218c280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x102188b70"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x10330f2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1021ad850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1033100c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1021ae020"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103314c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1021b1430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1033118f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1033072c0"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1033072c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1023122c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x1021ae020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x1021fba10"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1033106d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x1021ae6a0"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x1021ae6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x1021f9060"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1021aba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10330fa50"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1032f9760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1021af6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1021ac690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x103308640"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x103308640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102313020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x1021a92a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x103302c10"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x103302c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x1023154d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1021af6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1021fb250"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x1021ad850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x1021f9c50"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x1021b1430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1021fc470"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1021f73e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1021aba40"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x1021f85b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x1021ac690"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x102248480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x1021a92a0"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x1021f7a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x10223e020"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x10223e020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x102237c70"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102248c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x1022462f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1022395e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x10222f150"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10223ad10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x102230780"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x102258bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x101755580"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x102256b20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x101751580"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x102254b20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x10174f580"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x102252b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x101749580"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x102250b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x10174b580"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x10225dd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x10234d430"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x103301440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x1023143f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x103301a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x1022ff530"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x1022ff530"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x10234d430"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x1033062b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x10223e020"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x103307a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x102312ad0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x102312ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x102308c30"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1023118a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1032f9760"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x1023122c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x102309850"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x102309850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x1033cc850"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x1023154d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x10230e060"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x102313020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10230aa80"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10230aa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x1033ce970"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x1023143f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x10230e990"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x102308c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x1033cbc30"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x102306570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x1023118a0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x10230de50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x102308c30"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x10230d060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10223ad10"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x10230d840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1022395e0"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x102308020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1033cb020"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x1033ca590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x102306570"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x1033cad50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x103333750"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x1033c7020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x102346250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x102237c70"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x102342d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x101755580"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x102340cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x10174f580"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x102460c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10246bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x102464b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10245e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x102457e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10245ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10244a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10244c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x102468120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x102452670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10244d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x102462c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x102461c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x102458670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10245ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10245c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10246c760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x102114670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x102467aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x102466120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x102451a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x102466870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10244dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x102468dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x102453e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x102461480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x102462480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10246b750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x102454e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x102455670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x102453670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10244bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10244cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x102459670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x102455e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x10244ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10245b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10244aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10246b100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x102464370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x102460480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x102458e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10245ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x102457670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10245f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10246a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10245fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x102465020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x102465cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x10244e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x102450ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x102467450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1024502f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10244b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x102459e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x102454670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10246aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x102468770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10245be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x102465670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10245a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x102452e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x1024497a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x102492c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x10249dda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x102496b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x102490670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x102489e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x102490e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10247c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x10247f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x10249b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x102484670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1024802f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x102495c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x102494c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x10248a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x10248de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10248f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10249e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x102114670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x10249aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x102498120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x102483a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x102498870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102480ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x10249bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x102486e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x102494480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x102495480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x10249d750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x102487e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x102488670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x102486670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10247dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x10247fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x10248b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x102488e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x102481ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10248e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10247cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x10249d100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x102496370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x102492480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x10248ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10248fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x102489670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x102491670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x10249c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x102491e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x102497020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x102497cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1024812f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x102482ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x10249a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1024822f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10247d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x10248be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x102487670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x10249caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x10249b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10248ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x102497670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x10248d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x102484e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10247b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1024b4880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x1024a9020"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x1024a9020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x1024a3140"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x1024ffbd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x1024a8c50"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x1024a8c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x1024ea150"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x1024a2530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x102502a10"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x1024ee540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x1024ef590"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x1024ef590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x1025009e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x1024e5910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x1024ecc90"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x1024ecc90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x102523a90"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x1024ea9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x1024ee540"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x102513020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x10250e530"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x10250e530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10250ae50"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x102506020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x1015577b0"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x102561c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x1016f9020"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x102547990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x10253c900"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x102549150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x10253b0f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x10253bae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x101f10220"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x102594500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x101f11b10"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x10258d820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x101f5fe60"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x10258cb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x101f5a9b0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x102595880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x101fbb150"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x10258a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x10261bc30"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x10261bc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102117950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10258ad10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x10261a8f0"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x10261a8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x102114670"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1025876d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x1026192f0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1026192f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x102587de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x102618cc0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x102618cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x102585530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x102617370"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x102617370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x102585c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x102616d00"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x102616d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x102588e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x102610c60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x102610c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x102589780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x10265d7a0"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x10265d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x102588550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1025fc2f0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1025fc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x1025843e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x102611480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x102611480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1025835e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x10260de50"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x10260de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x102582020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x10260c670"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x10260c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x102584e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x1026137b0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x1026137b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x1025819c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x10265fad0"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x10265fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x102582890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x1025fb2f0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x1025fb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x102581130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x1025fbad0"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x1025fbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x10257cd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x102651df0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x102651df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x102649550"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x102537d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x102536bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x102535950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x102694550"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10258fbe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1026f4480"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1026f4480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1026e58b0"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10257f6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x10260ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x102618020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x102612c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x102605e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x10260ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x10265e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x102600670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x102611c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x102606670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x102609e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x10260b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x102614370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1025ffa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x102614ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1025fcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x102616060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x102602e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x102610480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x102619940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x102603e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x102604670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x102602670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x102607670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x102604e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x1025fdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x10260a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x10265ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x102612490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10260e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x102606e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x10260be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x102605670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x10260d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x102618670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x102613160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x102613e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x1025fd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x1025fead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x1026166b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1025fe2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x10265f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x102607e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x102603670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x1026179c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x10260ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x102609670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x102600e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x10264d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x1026487c0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102633150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x102646020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x101f5fe60"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x102645380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x101f5d090"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x1026446b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x101f5c390"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x102643a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x101fbaa20"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x1026426e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102756520"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x102756520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x102117950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x102641530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x102733480"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x102733480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x102640ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x102750060"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x102750060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x1026403a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x102750d00"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x102750d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x10263f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x10263e1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x10263cd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x102694550"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x10263eb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x101e5d550"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x1026373e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x102748840"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x102748840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x102637cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x102746060"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x102746060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x102638b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x10274fae0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x10274fae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x1026356d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x102734c60"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x102734c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x102636590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x102736c60"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x102736c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x102636e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x102735480"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x102735480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102634020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102736480"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102736480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x1026348b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x102755c20"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x102755c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x10268e9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x102763020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x101f3e080"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x1026e33b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x102765cf0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x1026e26e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x101931020"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10275e0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10190f9f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x102749620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x102754940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x10274c620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x10273f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x102746840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x102752cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x10273b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x102737c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x10274b620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x10274a620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x102741060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x102743840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x102745060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x1027552b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x102114670"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x1027506b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10273a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x10274f490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x1027519c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x10273c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x10274be00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x10274ce00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x1027542f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x10273d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x10273e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x10273c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x102734480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x102742060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x10273e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x102737480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x102744060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x10274ee00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x10274ae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x102741840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x102745840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x10273f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x102748060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x102752020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x10274e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x102738c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x102738480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10273ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x102735c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x1021118c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x102742840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x10273d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x102752670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x102751370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x102744840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x10274e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x10210f510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x102743060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x10273b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x1021106f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x102731160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x102112630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x102771920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x10276d940"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x102777990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10276d080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x1027c0e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1027c5020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1027bfae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x1027c2690"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x1027c2690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10218c280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x1027be8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x102773a20"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1027bd170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x1027a6200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x1027a2550"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x1027a13f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x1027a6950"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x1027a1a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x102845d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x1027df6b0"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x102844b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x1027df020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x1028432f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x102842170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x102842b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x102863410"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x102816db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x102856800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x102852580"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x102852580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x10218c280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1028ad1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101dd2020"/></to>
    </wire>
    <wire loc="63:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x10351cb60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x10350e640"/></to>
    </wire>
    <wire loc="64:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10351b8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x101d692b0"/></to>
    </wire>
    <wire loc="65:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10351a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x101d68020"/></to>
    </wire>
    <wire loc="67:../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x1029b0020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x103519c10"/></to>
    </wire>
    <wire loc="66:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x103519c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101d5e350"/></to>
    </wire>
    <wire loc="60:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10350d2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x10292c930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10350c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x101d68020"/></to>
    </wire>
    <wire loc="53:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x10292c930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x1029c94b0"/></to>
    </wire>
    <wire loc="54:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1029c7400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x101d6ce40"/></to>
    </wire>
    <wire loc="55:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1029c6060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x101d68020"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1029c5720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x101d692b0"/></to>
    </wire>
    <wire loc="169:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x1029c4480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x1029c4c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x1029a6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x101d692b0"/></to>
    </wire>
    <wire loc="56:../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x1029a6c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x101d68020"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x102a25b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x102a177c0"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x1029a0980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x102a0c300"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x10299d330"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x102a2bd60"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x10299fcb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x102a2c0d0"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10299b800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x102a2aa10"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x10299c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x102a2c6c0"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x102a25540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x102a17170"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102a1f2b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x102a0f300"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x102a294a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x102a21790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x102a28120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x102a22c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x102a1a970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x102b8e6b0"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x102a21790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x102b40de0"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x102a22c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x102b406c0"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x102b3fc20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x102a1a970"/></to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102a82020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x102a1f2b0"/></to>
    </wire>
    <wire loc="71:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102b3d920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x102a1f2b0"/></to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x102bafdc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x102a1f2b0"/></to>
    </wire>
    <wire loc="74:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x102b3e590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x102a83c40"/></to>
    </wire>
    <wire loc="75:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x102b3ee80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x102a10720"/></to>
    </wire>
    <wire loc="77:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x102a85020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x102bb3e00"/></to>
    </wire>
    <wire loc="78:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x102a7c860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x101abc020"/></to>
    </wire>
    <wire loc="80:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x102bb0e40"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x101ae6660"/></to>
    </wire>
    <wire loc="332:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x102a9e6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x102a5e4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x102aa2c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x102a9aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x102bb5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x102bb5800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="WiTempC" loc="4:WiTempC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="WiTempAppC.TimerMilliC" loc="44(WiTempAppC.TimerMilliC):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WiTempAppC.AMSenderC" loc="47(WiTempAppC.AMSenderC):../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="WiTempAppC.AMSenderC.SenderC" loc="47(WiTempAppC.AMSenderC.SenderC):../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="WiTempAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(WiTempAppC.AMSenderC.SenderC.AMQueueEntryP):../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WiTempAppC.AMReceiverC" loc="43(WiTempAppC.AMReceiverC):../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10158d890" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10158dc30" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10158c020" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10158c3a0" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10158c720" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10158ca90" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10158ce20" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x10158a200" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x10158a5d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x1015bbe70" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x1015b8270" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x1017769f0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x101776da0" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x1017751a0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x101775550" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x1017758c0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1019883b0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1019883b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x1019b3c70" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x1019b3c70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1019d1570" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1019d1570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1019d1d40" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1019d1d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1019cf160" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1019cf160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1019cf940" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1019cf940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1019cfd10" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x1019ce540" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x1019ce540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x1019c06d0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x1019c06d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x1019e2020" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x1019e2020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x1019e2410" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x1019e2410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x1019e2bf0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x1019e2bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x1019e0020" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x101a12cc0" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x101a12cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x101a48230" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x101a48230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x101a48560" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x101aa1dd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x101aa1dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x101ca49b0" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x101cd8910" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x101cba020" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x102521020" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x102521020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1025217b0" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1025217b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x102950650" loc="47:../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x102947360" loc="47:../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1029400d0" loc="43:../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x102927c80" loc="45:../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x1029ab2c0" loc="43:../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x1014b2840" loc="20:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x1014b2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1014b2bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x1014b2d50"/>
        <function-ref name="start" scoped="" ref="0x1014b0020"/>
        <function-ref name="stop" scoped="" ref="0x1014b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x10140b020" loc="9:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10140b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10140b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x101428020" loc="13:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x101428020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1014283a0"/>
        <function-ref name="stopDone" scoped="" ref="0x101428530"/>
        <function-ref name="start" scoped="" ref="0x1014286c0"/>
        <function-ref name="stop" scoped="" ref="0x101428850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x101445020" loc="14:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x101445020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1014453a0"/>
        <function-ref name="receive" scoped="" ref="0x101445530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1014a19f0" loc="17:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1014a19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1014a1d70"/>
        <function-ref name="payloadLength" scoped="" ref="0x101440020"/>
        <function-ref name="getPayload" scoped="" ref="0x1014401b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101440340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1014404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1014a79d0" loc="19:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1014a79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1014a7d50"/>
        <function-ref name="getPayload" scoped="" ref="0x1014b2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1014b21b0"/>
        <function-ref name="cancel" scoped="" ref="0x1014b2340"/>
        <function-ref name="sendDone" scoped="" ref="0x1014b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x1014a8020" loc="21:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1014a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1014a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10141c330" loc="10:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10141c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10141c6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10141c840"/>
        <function-ref name="led1On" scoped="" ref="0x10141c9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10141cb60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10141ccf0"/>
        <function-ref name="get" scoped="" ref="0x10141ce80"/>
        <function-ref name="led1Off" scoped="" ref="0x10140a030"/>
        <function-ref name="led2Off" scoped="" ref="0x10140a670"/>
        <function-ref name="set" scoped="" ref="0x10140a1c0"/>
        <function-ref name="led0On" scoped="" ref="0x10140a350"/>
        <function-ref name="led2On" scoped="" ref="0x10140a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1014b1af0" loc="18:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1014b1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1014b1e70"/>
        <function-ref name="source" scoped="" ref="0x10143d030"/>
        <function-ref name="address" scoped="" ref="0x10143d1c0"/>
        <function-ref name="destination" scoped="" ref="0x10143d350"/>
        <function-ref name="setSource" scoped="" ref="0x10143d4e0"/>
        <function-ref name="setDestination" scoped="" ref="0x10143d670"/>
        <function-ref name="type" scoped="" ref="0x10143d800"/>
        <function-ref name="setType" scoped="" ref="0x10143d990"/>
        <function-ref name="isForMe" scoped="" ref="0x10143db20"/>
        <function-ref name="setGroup" scoped="" ref="0x10143dcb0"/>
        <function-ref name="localGroup" scoped="" ref="0x10143de40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10142c770" loc="11:WiTempC.nc">
      <component-ref qname="WiTempC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10142c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10142ac40"/>
        <function-ref name="fired" scoped="" ref="0x10142b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10142a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10142bae0"/>
        <function-ref name="getdt" scoped="" ref="0x101429590"/>
        <function-ref name="gett0" scoped="" ref="0x101429110"/>
        <function-ref name="isRunning" scoped="" ref="0x10142b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x101427390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10142a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x101427860"/>
        <function-ref name="stop" scoped="" ref="0x101427d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x1014e5d80" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x1014e5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014e4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x1014c78b0" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x1014c78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x1014c7c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1014e4c90" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1014e4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014e10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x1014dee10" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x1014dee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014dd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1014de020" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1014de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x1014de730" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x1014de730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014deab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x1014dd520" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x1014dd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014dd8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1014d61a0" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1014d61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014d6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x1014df590" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x1014df590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1014df910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x1014f9a30" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x1014f9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x1014ff980"/>
        <function-ref name="initTimerB" scoped="" ref="0x1014ff020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x1014ff1b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x1014ff340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x1014f9db0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x1014ff4d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1014ff660"/>
        <function-ref name="initClocks" scoped="" ref="0x1014ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101502480" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101502480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101502800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10150ba70" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10150ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10150a980"/>
        <function-ref name="initTimerB" scoped="" ref="0x10150a020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10150a1b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x10150a340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10150bdf0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10150a4d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10150a660"/>
        <function-ref name="initClocks" scoped="" ref="0x10150a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x10150acc0" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10150acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x1015090a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10150b3c0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10150b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10150b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x10154fa50" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x10154fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10154fdd0"/>
        <function-ref name="getControl" scoped="" ref="0x10154e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10154e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10154e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10154e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10154e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10154e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10154e980"/>
        <function-ref name="setControl" scoped="" ref="0x10154eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x101560410" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x101560410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101560790"/>
        <function-ref name="getControl" scoped="" ref="0x101560920"/>
        <function-ref name="enableEvents" scoped="" ref="0x101560ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101560c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101560dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10155f020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10155f1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10155f340"/>
        <function-ref name="setControl" scoped="" ref="0x10155f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x101569bb0" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x101569bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101568020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1015681b0"/>
        <function-ref name="captured" scoped="" ref="0x101568340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1015684d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101568660"/>
        <function-ref name="setEdge" scoped="" ref="0x1015687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x101570020" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x101570020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015703a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101570530"/>
        <function-ref name="captured" scoped="" ref="0x1015706c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101570850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015709e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101570b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x10156e020" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x10156e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10156e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10156e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10156e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10156e850"/>
        <function-ref name="fired" scoped="" ref="0x10156e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x101577570" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x101577570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015778f0"/>
        <function-ref name="setEvent" scoped="" ref="0x101577a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101577c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101577da0"/>
        <function-ref name="fired" scoped="" ref="0x101576020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x101591020" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x101591020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015913a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101591530"/>
        <function-ref name="captured" scoped="" ref="0x1015916c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101591850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015919e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101591b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x10157ea50" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x10157ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10157edd0"/>
        <function-ref name="getControl" scoped="" ref="0x10157d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10157d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10157d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10157d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10157d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10157d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10157d980"/>
        <function-ref name="setControl" scoped="" ref="0x10157db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x101556020" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x101556020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1015563a0"/>
        <function-ref name="getControl" scoped="" ref="0x101556530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1015566c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101556850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1015569e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101556b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101556d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101555020"/>
        <function-ref name="setControl" scoped="" ref="0x1015551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x101572020" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x101572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015723a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101572530"/>
        <function-ref name="captured" scoped="" ref="0x1015726c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101572850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015729e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101572b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x101579890" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x101579890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101579c10"/>
        <function-ref name="setEvent" scoped="" ref="0x101579da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101578020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1015781b0"/>
        <function-ref name="fired" scoped="" ref="0x101578340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x10155f8c0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x10155f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10155fd40"/>
        <function-ref name="getControl" scoped="" ref="0x10155e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10155e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10155e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10155e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10155e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10155e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10155e980"/>
        <function-ref name="setControl" scoped="" ref="0x10155eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x101568bb0" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x101568bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101562020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1015621b0"/>
        <function-ref name="captured" scoped="" ref="0x101562340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1015624d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101562660"/>
        <function-ref name="setEdge" scoped="" ref="0x1015627f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x10156f020" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x10156f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10156f3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10156f530"/>
        <function-ref name="captured" scoped="" ref="0x10156f6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10156f850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10156f9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10156fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x101580020" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x101580020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1015803a0"/>
        <function-ref name="getControl" scoped="" ref="0x101580530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1015806c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101580850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1015809e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101580b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101580d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10157f020"/>
        <function-ref name="setControl" scoped="" ref="0x10157f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x10156eda0" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x10156eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10156a180"/>
        <function-ref name="setEvent" scoped="" ref="0x10156a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10156a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10156a630"/>
        <function-ref name="fired" scoped="" ref="0x10156a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x1015577b0" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x1015577b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101557b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x101557cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101557e50"/>
        <function-ref name="get" scoped="" ref="0x10153e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10153e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10153e340"/>
        <function-ref name="getMode" scoped="" ref="0x10153e4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10153e660"/>
        <function-ref name="overflow" scoped="" ref="0x10153e7f0"/>
        <function-ref name="setMode" scoped="" ref="0x10153e980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10153eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x1015763e0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x1015763e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101576760"/>
        <function-ref name="setEvent" scoped="" ref="0x1015768f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101576a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101576c10"/>
        <function-ref name="fired" scoped="" ref="0x101576da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x1015555a0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x1015555a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101555920"/>
        <function-ref name="getControl" scoped="" ref="0x101555ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101555c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101555dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10154f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10154f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10154f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10154f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x10154f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x10157c020" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x10157c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10157c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x10157c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10157c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10157c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10157c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10157cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10157cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10157b020"/>
        <function-ref name="setControl" scoped="" ref="0x10157b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x101563b60" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x101563b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101569020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x1015691b0"/>
        <function-ref name="captured" scoped="" ref="0x101569340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1015694d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101569660"/>
        <function-ref name="setEdge" scoped="" ref="0x1015697f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x101571020" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x101571020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015713a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101571530"/>
        <function-ref name="captured" scoped="" ref="0x1015716c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101571850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015719e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101571b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x10154c140" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x10154c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10154c4c0"/>
        <function-ref name="setEvent" scoped="" ref="0x10154c650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10154c7e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10154c970"/>
        <function-ref name="fired" scoped="" ref="0x10154cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x101578700" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x101578700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101578a80"/>
        <function-ref name="setEvent" scoped="" ref="0x101578c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101578da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101577020"/>
        <function-ref name="fired" scoped="" ref="0x1015771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x101592020" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x101592020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015923a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101592530"/>
        <function-ref name="captured" scoped="" ref="0x1015926c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101592850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015929e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101592b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x10157f5a0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x10157f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10157f920"/>
        <function-ref name="getControl" scoped="" ref="0x10157fab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10157fc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10157fdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10157e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10157e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10157e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10157e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x10157e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x101562b70" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x101562b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101561020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1015611b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101561340"/>
        <function-ref name="get" scoped="" ref="0x1015614d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101561660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1015617f0"/>
        <function-ref name="getMode" scoped="" ref="0x101561980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101561b10"/>
        <function-ref name="overflow" scoped="" ref="0x101561ca0"/>
        <function-ref name="setMode" scoped="" ref="0x101561e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101560020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x1015751f0" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x1015751f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101575570"/>
        <function-ref name="setEvent" scoped="" ref="0x101575700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101575890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101575a20"/>
        <function-ref name="fired" scoped="" ref="0x101575bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x101573020" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x101573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015733a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101573530"/>
        <function-ref name="captured" scoped="" ref="0x1015736c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101573850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015739e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101573b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x101574020" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x101574020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1015745a0"/>
        <function-ref name="setEvent" scoped="" ref="0x101574730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1015748c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101574a50"/>
        <function-ref name="fired" scoped="" ref="0x101574be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x10157aa20" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x10157aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10157ada0"/>
        <function-ref name="setEvent" scoped="" ref="0x101579020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1015791b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101579340"/>
        <function-ref name="fired" scoped="" ref="0x1015794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x10157b5a0" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x10157b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10157b920"/>
        <function-ref name="getControl" scoped="" ref="0x10157bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10157bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10157bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10157a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10157a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10157a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10157a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x10157a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x1015c5aa0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x1015c5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015c5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x1015c5450" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x1015c5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015c57d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x1015c3120" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x1015c3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015c34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x1015c6d80" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1015c6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015c5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1015c7540" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1015c7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1015c78c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1015c7a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x1015c7be0"/>
        <function-ref name="get" scoped="" ref="0x1015c7d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x1015c6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1015c61b0"/>
        <function-ref name="getMode" scoped="" ref="0x1015c6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015c64d0"/>
        <function-ref name="overflow" scoped="" ref="0x1015c6660"/>
        <function-ref name="setMode" scoped="" ref="0x1015c67f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1015c6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x1015bd940" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x1015bd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015bdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x1015bd2f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x1015bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015bd670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x1015bc020" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x1015bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x1015bebf0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1015bebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1015bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x1015bf3e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x1015bf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1015bf760"/>
        <function-ref name="setClockSource" scoped="" ref="0x1015bf8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1015bfa80"/>
        <function-ref name="get" scoped="" ref="0x1015bfc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x1015bfda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1015be020"/>
        <function-ref name="getMode" scoped="" ref="0x1015be1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1015be340"/>
        <function-ref name="overflow" scoped="" ref="0x1015be4d0"/>
        <function-ref name="setMode" scoped="" ref="0x1015be660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1015be7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101606a90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101606a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101606e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101605020"/>
        <function-ref name="captured" scoped="" ref="0x1016051b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101605340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1016054d0"/>
        <function-ref name="setEdge" scoped="" ref="0x101605660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x1015b99d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x1015b99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1015b9d50"/>
        <function-ref name="getControl" scoped="" ref="0x101607020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1016071b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101607340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1016074d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101607660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1016077f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101607980"/>
        <function-ref name="setControl" scoped="" ref="0x101607b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x101603020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101603020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1016033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101607de0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101607de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101606180"/>
        <function-ref name="setEvent" scoped="" ref="0x101606310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1016064a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101606630"/>
        <function-ref name="fired" scoped="" ref="0x1016067c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101605930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101605930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101605cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101605e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x101604020"/>
        <function-ref name="get" scoped="" ref="0x1016041b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101604340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1016044d0"/>
        <function-ref name="getMode" scoped="" ref="0x101604660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1016047f0"/>
        <function-ref name="overflow" scoped="" ref="0x101604980"/>
        <function-ref name="setMode" scoped="" ref="0x101604b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101604ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101624160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101624160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1016244e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101624670"/>
        <function-ref name="captured" scoped="" ref="0x101624800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101624990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101624b20"/>
        <function-ref name="setEdge" scoped="" ref="0x101624cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101626020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101626020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1016263a0"/>
        <function-ref name="getControl" scoped="" ref="0x101626530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1016266c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101626850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1016269e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101626b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101626d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101625020"/>
        <function-ref name="setControl" scoped="" ref="0x1016251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1016217a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1016217a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101621b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101625480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101625480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101625800"/>
        <function-ref name="setEvent" scoped="" ref="0x101625990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101625b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101625cb0"/>
        <function-ref name="fired" scoped="" ref="0x101625e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101623020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101623020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1016233a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101623530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1016236c0"/>
        <function-ref name="get" scoped="" ref="0x101623850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1016239e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101623b70"/>
        <function-ref name="getMode" scoped="" ref="0x101623d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101621020"/>
        <function-ref name="overflow" scoped="" ref="0x1016211b0"/>
        <function-ref name="setMode" scoped="" ref="0x101621340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1016214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10161c7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10161c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10161cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10161ccb0"/>
        <function-ref name="captured" scoped="" ref="0x10161ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10161b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10161b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10161b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10161e6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10161e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10161ea50"/>
        <function-ref name="getControl" scoped="" ref="0x10161ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10161ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10161d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10161d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10161d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10161d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10161d660"/>
        <function-ref name="setControl" scoped="" ref="0x10161d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10161ac50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10161ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101619020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10161dac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10161dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10161de40"/>
        <function-ref name="setEvent" scoped="" ref="0x10161c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10161c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10161c340"/>
        <function-ref name="fired" scoped="" ref="0x10161c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10161b610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10161b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10161b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10161bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10161bcb0"/>
        <function-ref name="get" scoped="" ref="0x10161be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10161a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10161a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10161a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10161a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10161a660"/>
        <function-ref name="setMode" scoped="" ref="0x10161a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10161a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101615cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101615cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1016140a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101614230"/>
        <function-ref name="captured" scoped="" ref="0x1016143c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101614550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1016146e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101614870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101617b30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101617b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101616020"/>
        <function-ref name="getControl" scoped="" ref="0x1016161b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101616340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1016164d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101616660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1016167f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101616980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101616b10"/>
        <function-ref name="setControl" scoped="" ref="0x101616ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1016372f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1016372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101637670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101615020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1016153a0"/>
        <function-ref name="setEvent" scoped="" ref="0x101615530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1016156c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101615850"/>
        <function-ref name="fired" scoped="" ref="0x1016159e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101614b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101614b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101638020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1016381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101638340"/>
        <function-ref name="get" scoped="" ref="0x1016384d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101638660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1016387f0"/>
        <function-ref name="getMode" scoped="" ref="0x101638980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101638b10"/>
        <function-ref name="overflow" scoped="" ref="0x101638ca0"/>
        <function-ref name="setMode" scoped="" ref="0x101638e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101637020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1016322f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1016322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101632670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101632800"/>
        <function-ref name="captured" scoped="" ref="0x101632990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101632b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101632cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x101632e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101634220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101634220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1016345a0"/>
        <function-ref name="getControl" scoped="" ref="0x101634730"/>
        <function-ref name="enableEvents" scoped="" ref="0x1016348c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101634a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101634be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101634d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101633020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1016331b0"/>
        <function-ref name="setControl" scoped="" ref="0x101633340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1016307a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1016307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101630b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101633610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101633610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101633990"/>
        <function-ref name="setEvent" scoped="" ref="0x101633b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101633cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101633e40"/>
        <function-ref name="fired" scoped="" ref="0x101632020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101631160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101631160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1016314e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101631670"/>
        <function-ref name="enableEvents" scoped="" ref="0x101631800"/>
        <function-ref name="get" scoped="" ref="0x101631990"/>
        <function-ref name="disableEvents" scoped="" ref="0x101631b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101631cb0"/>
        <function-ref name="getMode" scoped="" ref="0x101631e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101630020"/>
        <function-ref name="overflow" scoped="" ref="0x1016301b0"/>
        <function-ref name="setMode" scoped="" ref="0x101630340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1016304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10162b7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10162b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10162bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10162bcb0"/>
        <function-ref name="captured" scoped="" ref="0x10162be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10162a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10162a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10162a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10162d6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10162d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10162da50"/>
        <function-ref name="getControl" scoped="" ref="0x10162dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10162dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10162c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10162c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10162c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10162c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10162c660"/>
        <function-ref name="setControl" scoped="" ref="0x10162c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x101629c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x101629c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101627020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10162cac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10162cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10162ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x10162b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10162b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10162b340"/>
        <function-ref name="fired" scoped="" ref="0x10162b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10162a610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10162a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10162a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10162ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10162acb0"/>
        <function-ref name="get" scoped="" ref="0x10162ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x101629020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1016291b0"/>
        <function-ref name="getMode" scoped="" ref="0x101629340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1016294d0"/>
        <function-ref name="overflow" scoped="" ref="0x101629660"/>
        <function-ref name="setMode" scoped="" ref="0x1016297f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101629980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101649cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101649cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1016480a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101648230"/>
        <function-ref name="captured" scoped="" ref="0x1016483c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101648550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1016486e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101648870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10164bb30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10164bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10164a020"/>
        <function-ref name="getControl" scoped="" ref="0x10164a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10164a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10164a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10164a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10164a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10164a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10164ab10"/>
        <function-ref name="setControl" scoped="" ref="0x10164aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1016462f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1016462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101646670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101649020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101649020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1016493a0"/>
        <function-ref name="setEvent" scoped="" ref="0x101649530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1016496c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101649850"/>
        <function-ref name="fired" scoped="" ref="0x1016499e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101648b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101648b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101647020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1016471b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101647340"/>
        <function-ref name="get" scoped="" ref="0x1016474d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101647660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1016477f0"/>
        <function-ref name="getMode" scoped="" ref="0x101647980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101647b10"/>
        <function-ref name="overflow" scoped="" ref="0x101647ca0"/>
        <function-ref name="setMode" scoped="" ref="0x101647e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101646020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x1016412f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x1016412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101641670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101641800"/>
        <function-ref name="captured" scoped="" ref="0x101641990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101641b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101641cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x101641e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x101643220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x101643220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1016435a0"/>
        <function-ref name="getControl" scoped="" ref="0x101643730"/>
        <function-ref name="enableEvents" scoped="" ref="0x1016438c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101643a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101643be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101643d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101642020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1016421b0"/>
        <function-ref name="setControl" scoped="" ref="0x101642340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10163f7a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10163f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10163fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101642610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101642610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101642990"/>
        <function-ref name="setEvent" scoped="" ref="0x101642b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101642cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101642e40"/>
        <function-ref name="fired" scoped="" ref="0x101641020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101640160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101640160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1016404e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x101640670"/>
        <function-ref name="enableEvents" scoped="" ref="0x101640800"/>
        <function-ref name="get" scoped="" ref="0x101640990"/>
        <function-ref name="disableEvents" scoped="" ref="0x101640b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101640cb0"/>
        <function-ref name="getMode" scoped="" ref="0x101640e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10163f020"/>
        <function-ref name="overflow" scoped="" ref="0x10163f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x10163f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10163f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10165f7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10165f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10165fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10165fcb0"/>
        <function-ref name="captured" scoped="" ref="0x10165fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10165e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10165e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10165e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10163b6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10163b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10163ba50"/>
        <function-ref name="getControl" scoped="" ref="0x10163bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10163bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10163a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10163a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10163a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10163a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10163a660"/>
        <function-ref name="setControl" scoped="" ref="0x10163a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10165dc50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10165dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10165c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10163aac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10163aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10163ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x10165f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10165f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10165f340"/>
        <function-ref name="fired" scoped="" ref="0x10165f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10165e610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10165e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10165e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10165eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10165ecb0"/>
        <function-ref name="get" scoped="" ref="0x10165ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10165d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10165d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10165d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10165d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10165d660"/>
        <function-ref name="setMode" scoped="" ref="0x10165d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10165d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101658cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101658cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1016570a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101657230"/>
        <function-ref name="captured" scoped="" ref="0x1016573c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101657550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1016576e0"/>
        <function-ref name="setEdge" scoped="" ref="0x101657870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10165ab30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10165ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101659020"/>
        <function-ref name="getControl" scoped="" ref="0x1016591b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101659340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1016594d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101659660"/>
        <function-ref name="disableEvents" scoped="" ref="0x1016597f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101659980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101659b10"/>
        <function-ref name="setControl" scoped="" ref="0x101659ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x1016552f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x1016552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101655670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x101658020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x101658020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1016583a0"/>
        <function-ref name="setEvent" scoped="" ref="0x101658530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1016586c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101658850"/>
        <function-ref name="fired" scoped="" ref="0x1016589e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x101657b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101657b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101656020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1016561b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101656340"/>
        <function-ref name="get" scoped="" ref="0x1016564d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101656660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1016567f0"/>
        <function-ref name="getMode" scoped="" ref="0x101656980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101656b10"/>
        <function-ref name="overflow" scoped="" ref="0x101656ca0"/>
        <function-ref name="setMode" scoped="" ref="0x101656e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x10164e240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x10164e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10164e5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x101652a90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x101652a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101652e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x10164f260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x10164f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10164f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x10164f9f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x10164f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10164fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x10130a510" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10130a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10130a890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x100fee760" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x100fee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x100feeae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x101093cc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x101093cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x1011280a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x101500b40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x101500b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x101698b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x1016981b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x101698340"/>
        <function-ref name="initTimerA" scoped="" ref="0x1016984d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x101698020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x101698660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x1016987f0"/>
        <function-ref name="initClocks" scoped="" ref="0x101698980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x1016b4dc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x1016b4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1016b3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x101699590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x101699590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x101699910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x1016b46c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x1016b46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1016b4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x101699c00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x101699c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1016b4020"/>
        <function-ref name="taskLoop" scoped="" ref="0x1016b41b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x1016b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x100f1a1d0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x100f1a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x100f1a550"/>
        <function-ref name="runTask" scoped="" ref="0x100f1a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x100f8e3a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x100f8e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x100f8e720"/>
        <function-ref name="taskLoop" scoped="" ref="0x100f8e8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x100f8ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x1013e5320" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x1013e5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1013e56a0"/>
        <function-ref name="runTask" scoped="" ref="0x1013e5830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x1013e1990" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x1013e1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x1013e1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x1013e6420" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x1013e6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1013e67a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x1013e6930"/>
        <function-ref name="runNextTask" scoped="" ref="0x1013e6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1014c5590" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1014c5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1014c5910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1014c5aa0"/>
        <function-ref name="led1On" scoped="" ref="0x1014c5c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1014c5dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1016a8020"/>
        <function-ref name="get" scoped="" ref="0x1016a81b0"/>
        <function-ref name="led1Off" scoped="" ref="0x1016a8340"/>
        <function-ref name="led2Off" scoped="" ref="0x1016a8980"/>
        <function-ref name="set" scoped="" ref="0x1016a84d0"/>
        <function-ref name="led0On" scoped="" ref="0x1016a8660"/>
        <function-ref name="led2On" scoped="" ref="0x1016a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x1016c47b0" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x1016c47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016c4b30"/>
        <function-ref name="isInput" scoped="" ref="0x1016c4cc0"/>
        <function-ref name="toggle" scoped="" ref="0x1016c4e50"/>
        <function-ref name="isOutput" scoped="" ref="0x1016a2020"/>
        <function-ref name="get" scoped="" ref="0x1016a21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016a2340"/>
        <function-ref name="set" scoped="" ref="0x1016a24d0"/>
        <function-ref name="clr" scoped="" ref="0x1016a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1016a78d0" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1016a78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1016a7c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x1016a2980" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x1016a2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016a2d00"/>
        <function-ref name="isInput" scoped="" ref="0x1016a1020"/>
        <function-ref name="toggle" scoped="" ref="0x1016a11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1016a1340"/>
        <function-ref name="get" scoped="" ref="0x1016a14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016a1660"/>
        <function-ref name="set" scoped="" ref="0x1016a17f0"/>
        <function-ref name="clr" scoped="" ref="0x1016a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x1016a4020" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1016a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1016a43a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1016a4530"/>
        <function-ref name="led1On" scoped="" ref="0x1016a46c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1016a4850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1016a49e0"/>
        <function-ref name="get" scoped="" ref="0x1016a4b70"/>
        <function-ref name="led1Off" scoped="" ref="0x1016a4d00"/>
        <function-ref name="led2Off" scoped="" ref="0x1016a34d0"/>
        <function-ref name="set" scoped="" ref="0x1016a3020"/>
        <function-ref name="led0On" scoped="" ref="0x1016a31b0"/>
        <function-ref name="led2On" scoped="" ref="0x1016a3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x1016a1ca0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x1016a1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016c30a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016c3230"/>
        <function-ref name="toggle" scoped="" ref="0x1016c33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1016c3550"/>
        <function-ref name="get" scoped="" ref="0x1016c36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016c3870"/>
        <function-ref name="set" scoped="" ref="0x1016c3a00"/>
        <function-ref name="clr" scoped="" ref="0x1016c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x1016cf360" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x1016cf360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016cf6e0"/>
        <function-ref name="isInput" scoped="" ref="0x1016cf870"/>
        <function-ref name="toggle" scoped="" ref="0x1016cfa00"/>
        <function-ref name="isOutput" scoped="" ref="0x1016cfb90"/>
        <function-ref name="get" scoped="" ref="0x1016cfd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016ce020"/>
        <function-ref name="set" scoped="" ref="0x1016ce1b0"/>
        <function-ref name="clr" scoped="" ref="0x1016ce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x1016ce6a0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x1016ce6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016cea20"/>
        <function-ref name="isInput" scoped="" ref="0x1016cebb0"/>
        <function-ref name="toggle" scoped="" ref="0x1016ced40"/>
        <function-ref name="isOutput" scoped="" ref="0x1016cd020"/>
        <function-ref name="get" scoped="" ref="0x1016cd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016cd340"/>
        <function-ref name="set" scoped="" ref="0x1016cd4d0"/>
        <function-ref name="clr" scoped="" ref="0x1016cd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x1016ccc40" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1016ccc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1016cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x1016cd9c0" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x1016cd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016cdd40"/>
        <function-ref name="isInput" scoped="" ref="0x1016cc020"/>
        <function-ref name="toggle" scoped="" ref="0x1016cc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1016cc340"/>
        <function-ref name="get" scoped="" ref="0x1016cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016cc660"/>
        <function-ref name="set" scoped="" ref="0x1016cc7f0"/>
        <function-ref name="clr" scoped="" ref="0x1016cc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x1016df020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x1016df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016df530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016df6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016df850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016df9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016dfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016dfd00"/>
        <function-ref name="get" scoped="" ref="0x1016de020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016de1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016de340"/>
        <function-ref name="set" scoped="" ref="0x1016de4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016de660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016de7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016dea80"/>
        <function-ref name="clr" scoped="" ref="0x1016dec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x1016f5020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x1016f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016f53a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016f5530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016f56c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016f5850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016f59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016f5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016f5d00"/>
        <function-ref name="get" scoped="" ref="0x1016f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016f41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016f4340"/>
        <function-ref name="set" scoped="" ref="0x1016f44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016f4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016f47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016f4a80"/>
        <function-ref name="clr" scoped="" ref="0x1016f4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x101753560" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x101753560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017538e0"/>
        <function-ref name="isInput" scoped="" ref="0x101753a70"/>
        <function-ref name="setResistor" scoped="" ref="0x101753c00"/>
        <function-ref name="toggle" scoped="" ref="0x101753d90"/>
        <function-ref name="isOutput" scoped="" ref="0x101752020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101752340"/>
        <function-ref name="get" scoped="" ref="0x1017524d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101752660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017527f0"/>
        <function-ref name="set" scoped="" ref="0x101752980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101752b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101752ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101751020"/>
        <function-ref name="clr" scoped="" ref="0x1017511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x101785570" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x101785570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017858f0"/>
        <function-ref name="isInput" scoped="" ref="0x101785a80"/>
        <function-ref name="setResistor" scoped="" ref="0x101785c10"/>
        <function-ref name="toggle" scoped="" ref="0x101785da0"/>
        <function-ref name="isOutput" scoped="" ref="0x101784020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101784340"/>
        <function-ref name="get" scoped="" ref="0x1017844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101784660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017847f0"/>
        <function-ref name="set" scoped="" ref="0x101784980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101784b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101784ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101783020"/>
        <function-ref name="clr" scoped="" ref="0x1017831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x101751580" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x101751580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101751900"/>
        <function-ref name="isInput" scoped="" ref="0x101751a90"/>
        <function-ref name="setResistor" scoped="" ref="0x101751c20"/>
        <function-ref name="toggle" scoped="" ref="0x101751db0"/>
        <function-ref name="isOutput" scoped="" ref="0x101750020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101750340"/>
        <function-ref name="get" scoped="" ref="0x1017504d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101750660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017507f0"/>
        <function-ref name="set" scoped="" ref="0x101750980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101750b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101750ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10174f020"/>
        <function-ref name="clr" scoped="" ref="0x10174f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x10171b020" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x10171b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10171b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10171b530"/>
        <function-ref name="setResistor" scoped="" ref="0x10171b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10171b850"/>
        <function-ref name="isOutput" scoped="" ref="0x10171b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10171bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10171bd00"/>
        <function-ref name="get" scoped="" ref="0x10171a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10171a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10171a340"/>
        <function-ref name="set" scoped="" ref="0x10171a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10171a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10171a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10171aa80"/>
        <function-ref name="clr" scoped="" ref="0x10171ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x101730200" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x101730200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101730580"/>
        <function-ref name="isInput" scoped="" ref="0x101730710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017308a0"/>
        <function-ref name="toggle" scoped="" ref="0x101730a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101730bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101730d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10172f020"/>
        <function-ref name="get" scoped="" ref="0x10172f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10172f340"/>
        <function-ref name="getRaw" scoped="" ref="0x10172f4d0"/>
        <function-ref name="set" scoped="" ref="0x10172f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10172f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10172f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10172fc10"/>
        <function-ref name="clr" scoped="" ref="0x10172fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10171c200" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10171c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10171c580"/>
        <function-ref name="isInput" scoped="" ref="0x10171c710"/>
        <function-ref name="setResistor" scoped="" ref="0x10171c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10171ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x10171cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10171cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101745020"/>
        <function-ref name="get" scoped="" ref="0x1017451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101745340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017454d0"/>
        <function-ref name="set" scoped="" ref="0x101745660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101745980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101745c10"/>
        <function-ref name="clr" scoped="" ref="0x101745da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x101735200" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x101735200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101735580"/>
        <function-ref name="isInput" scoped="" ref="0x101735710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017358a0"/>
        <function-ref name="toggle" scoped="" ref="0x101735a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101735bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101735d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101734020"/>
        <function-ref name="get" scoped="" ref="0x1017341b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101734340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017344d0"/>
        <function-ref name="set" scoped="" ref="0x101734660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017347f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101734980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101734c10"/>
        <function-ref name="clr" scoped="" ref="0x101734da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x10174b580" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x10174b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10174b900"/>
        <function-ref name="isInput" scoped="" ref="0x10174ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x10174bc20"/>
        <function-ref name="toggle" scoped="" ref="0x10174bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10174a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10174a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10174a340"/>
        <function-ref name="get" scoped="" ref="0x10174a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10174a660"/>
        <function-ref name="getRaw" scoped="" ref="0x10174a7f0"/>
        <function-ref name="set" scoped="" ref="0x10174a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10174ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10174aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101749020"/>
        <function-ref name="clr" scoped="" ref="0x1017491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x101766570" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x101766570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017668f0"/>
        <function-ref name="isInput" scoped="" ref="0x101766a80"/>
        <function-ref name="setResistor" scoped="" ref="0x101766c10"/>
        <function-ref name="toggle" scoped="" ref="0x101766da0"/>
        <function-ref name="isOutput" scoped="" ref="0x101765020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101765340"/>
        <function-ref name="get" scoped="" ref="0x1017654d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101765660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017657f0"/>
        <function-ref name="set" scoped="" ref="0x101765980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101765b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101765ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101764020"/>
        <function-ref name="clr" scoped="" ref="0x1017641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x10177d580" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x10177d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10177d900"/>
        <function-ref name="isInput" scoped="" ref="0x10177da90"/>
        <function-ref name="setResistor" scoped="" ref="0x10177dc20"/>
        <function-ref name="toggle" scoped="" ref="0x10177ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10177c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10177c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10177c340"/>
        <function-ref name="get" scoped="" ref="0x10177c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10177c660"/>
        <function-ref name="getRaw" scoped="" ref="0x10177c7f0"/>
        <function-ref name="set" scoped="" ref="0x10177c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10177cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10177cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10177b020"/>
        <function-ref name="clr" scoped="" ref="0x10177b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x101703020" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x101703020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017033a0"/>
        <function-ref name="isInput" scoped="" ref="0x101703530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017036c0"/>
        <function-ref name="toggle" scoped="" ref="0x101703850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017039e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101703b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101703d00"/>
        <function-ref name="get" scoped="" ref="0x101702020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101702340"/>
        <function-ref name="set" scoped="" ref="0x1017024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101702660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101702a80"/>
        <function-ref name="clr" scoped="" ref="0x101702c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x101749580" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x101749580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101749900"/>
        <function-ref name="isInput" scoped="" ref="0x101749a90"/>
        <function-ref name="setResistor" scoped="" ref="0x101749c20"/>
        <function-ref name="toggle" scoped="" ref="0x101749db0"/>
        <function-ref name="isOutput" scoped="" ref="0x101748020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017481b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101748340"/>
        <function-ref name="get" scoped="" ref="0x1017484d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101748660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017487f0"/>
        <function-ref name="set" scoped="" ref="0x101748980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101748b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101748ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101747020"/>
        <function-ref name="clr" scoped="" ref="0x1017471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x1016ff020" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x1016ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016ff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016ff530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016ff6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016ff850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016ff9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016ffb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016ffd00"/>
        <function-ref name="get" scoped="" ref="0x1016fe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016fe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016fe340"/>
        <function-ref name="set" scoped="" ref="0x1016fe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016fe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016fe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016fea80"/>
        <function-ref name="clr" scoped="" ref="0x1016fec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x101714020" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x101714020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017143a0"/>
        <function-ref name="isInput" scoped="" ref="0x101714530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017146c0"/>
        <function-ref name="toggle" scoped="" ref="0x101714850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017149e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101714b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101714d00"/>
        <function-ref name="get" scoped="" ref="0x101713020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101713340"/>
        <function-ref name="set" scoped="" ref="0x1017134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101713660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101713a80"/>
        <function-ref name="clr" scoped="" ref="0x101713c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x10172a200" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x10172a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10172a580"/>
        <function-ref name="isInput" scoped="" ref="0x10172a710"/>
        <function-ref name="setResistor" scoped="" ref="0x10172a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10172aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x10172abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10172ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101729020"/>
        <function-ref name="get" scoped="" ref="0x1017291b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101729340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017294d0"/>
        <function-ref name="set" scoped="" ref="0x101729660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017297f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101729980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101729c10"/>
        <function-ref name="clr" scoped="" ref="0x101729da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x101740200" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x101740200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101740580"/>
        <function-ref name="isInput" scoped="" ref="0x101740710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017408a0"/>
        <function-ref name="toggle" scoped="" ref="0x101740a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101740bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101740d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10173f020"/>
        <function-ref name="get" scoped="" ref="0x10173f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10173f340"/>
        <function-ref name="getRaw" scoped="" ref="0x10173f4d0"/>
        <function-ref name="set" scoped="" ref="0x10173f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10173f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10173f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10173fc10"/>
        <function-ref name="clr" scoped="" ref="0x10173fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x101759200" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x101759200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101759580"/>
        <function-ref name="isInput" scoped="" ref="0x101759710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017598a0"/>
        <function-ref name="toggle" scoped="" ref="0x101759a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101759bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101759d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101758020"/>
        <function-ref name="get" scoped="" ref="0x1017581b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101758340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017584d0"/>
        <function-ref name="set" scoped="" ref="0x101758660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017587f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101758980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101758c10"/>
        <function-ref name="clr" scoped="" ref="0x101758da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x1016e3020" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x1016e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016e33a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016e3530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016e36c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016e3850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016e39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016e3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016e3d00"/>
        <function-ref name="get" scoped="" ref="0x1016e2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016e21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016e2340"/>
        <function-ref name="set" scoped="" ref="0x1016e24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016e2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016e27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016e2a80"/>
        <function-ref name="clr" scoped="" ref="0x1016e2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x1016f9020" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x1016f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016f94a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016f9630"/>
        <function-ref name="setResistor" scoped="" ref="0x1016f97c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016f9950"/>
        <function-ref name="isOutput" scoped="" ref="0x1016f9ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016f9c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016f9e00"/>
        <function-ref name="get" scoped="" ref="0x1016f8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016f81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016f8340"/>
        <function-ref name="set" scoped="" ref="0x1016f84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016f8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016f87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016f8a80"/>
        <function-ref name="clr" scoped="" ref="0x1016f8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x10170e020" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x10170e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10170e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10170e530"/>
        <function-ref name="setResistor" scoped="" ref="0x10170e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10170e850"/>
        <function-ref name="isOutput" scoped="" ref="0x10170e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10170eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10170ed00"/>
        <function-ref name="get" scoped="" ref="0x10170d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10170d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10170d340"/>
        <function-ref name="set" scoped="" ref="0x10170d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10170d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10170d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10170da80"/>
        <function-ref name="clr" scoped="" ref="0x10170dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x101755580" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x101755580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101755900"/>
        <function-ref name="isInput" scoped="" ref="0x101755a90"/>
        <function-ref name="setResistor" scoped="" ref="0x101755c20"/>
        <function-ref name="toggle" scoped="" ref="0x101755db0"/>
        <function-ref name="isOutput" scoped="" ref="0x101754020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101754340"/>
        <function-ref name="get" scoped="" ref="0x1017544d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101754660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017547f0"/>
        <function-ref name="set" scoped="" ref="0x101754980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101754b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101754ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101753020"/>
        <function-ref name="clr" scoped="" ref="0x1017531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x10175f570" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x10175f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10175f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10175fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x10175fc10"/>
        <function-ref name="toggle" scoped="" ref="0x10175fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10175e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10175e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10175e340"/>
        <function-ref name="get" scoped="" ref="0x10175e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10175e660"/>
        <function-ref name="getRaw" scoped="" ref="0x10175e7f0"/>
        <function-ref name="set" scoped="" ref="0x10175e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10175eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10175eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10175d020"/>
        <function-ref name="clr" scoped="" ref="0x10175d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x10177f570" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x10177f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10177f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10177fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x10177fc10"/>
        <function-ref name="toggle" scoped="" ref="0x10177fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10177e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10177e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10177e340"/>
        <function-ref name="get" scoped="" ref="0x10177e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10177e660"/>
        <function-ref name="getRaw" scoped="" ref="0x10177e7f0"/>
        <function-ref name="set" scoped="" ref="0x10177e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10177eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10177eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10177d020"/>
        <function-ref name="clr" scoped="" ref="0x10177d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x10176c580" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x10176c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10176c900"/>
        <function-ref name="isInput" scoped="" ref="0x10176ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x10176cc20"/>
        <function-ref name="toggle" scoped="" ref="0x10176cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10176b020"/>
        <function-ref name="getResistor" scoped="" ref="0x10176b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10176b340"/>
        <function-ref name="get" scoped="" ref="0x10176b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10176b660"/>
        <function-ref name="getRaw" scoped="" ref="0x10176b7f0"/>
        <function-ref name="set" scoped="" ref="0x10176b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10176bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10176bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10176a020"/>
        <function-ref name="clr" scoped="" ref="0x10176a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x10170a020" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x10170a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10170a5a0"/>
        <function-ref name="isInput" scoped="" ref="0x10170a730"/>
        <function-ref name="setResistor" scoped="" ref="0x10170a8c0"/>
        <function-ref name="toggle" scoped="" ref="0x10170aa50"/>
        <function-ref name="isOutput" scoped="" ref="0x10170abe0"/>
        <function-ref name="getResistor" scoped="" ref="0x10170ad70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101709020"/>
        <function-ref name="get" scoped="" ref="0x1017091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101709340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017094d0"/>
        <function-ref name="set" scoped="" ref="0x101709660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101709980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101709c10"/>
        <function-ref name="clr" scoped="" ref="0x101709da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x101720200" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x101720200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101720580"/>
        <function-ref name="isInput" scoped="" ref="0x101720710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017208a0"/>
        <function-ref name="toggle" scoped="" ref="0x101720a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101720bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101720d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10171f020"/>
        <function-ref name="get" scoped="" ref="0x10171f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10171f340"/>
        <function-ref name="getRaw" scoped="" ref="0x10171f4d0"/>
        <function-ref name="set" scoped="" ref="0x10171f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10171f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10171f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10171fc10"/>
        <function-ref name="clr" scoped="" ref="0x10171fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x101739200" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x101739200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101739580"/>
        <function-ref name="isInput" scoped="" ref="0x101739710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017398a0"/>
        <function-ref name="toggle" scoped="" ref="0x101739a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101739bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101739d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101738020"/>
        <function-ref name="get" scoped="" ref="0x1017381b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101738340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017384d0"/>
        <function-ref name="set" scoped="" ref="0x101738660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017387f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101738980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101738c10"/>
        <function-ref name="clr" scoped="" ref="0x101738da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x10175d570" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x10175d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10175d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10175da80"/>
        <function-ref name="setResistor" scoped="" ref="0x10175dc10"/>
        <function-ref name="toggle" scoped="" ref="0x10175dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10175c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10175c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10175c340"/>
        <function-ref name="get" scoped="" ref="0x10175c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10175c660"/>
        <function-ref name="getRaw" scoped="" ref="0x10175c7f0"/>
        <function-ref name="set" scoped="" ref="0x10175c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10175cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10175cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10175b020"/>
        <function-ref name="clr" scoped="" ref="0x10175b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x101747570" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x101747570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017478f0"/>
        <function-ref name="isInput" scoped="" ref="0x101747a80"/>
        <function-ref name="setResistor" scoped="" ref="0x101747c10"/>
        <function-ref name="toggle" scoped="" ref="0x101747da0"/>
        <function-ref name="isOutput" scoped="" ref="0x101746020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101746340"/>
        <function-ref name="get" scoped="" ref="0x1017464d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101746660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017467f0"/>
        <function-ref name="set" scoped="" ref="0x101746980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101746b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101746ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101770020"/>
        <function-ref name="clr" scoped="" ref="0x1017701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x1016dd020" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x1016dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016dd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016dd530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016dd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016dd850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016dd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016ddb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016ddd00"/>
        <function-ref name="get" scoped="" ref="0x101706020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101706340"/>
        <function-ref name="set" scoped="" ref="0x1017064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101706660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101706a80"/>
        <function-ref name="clr" scoped="" ref="0x101706c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x1016f3020" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x1016f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016f3530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016f36c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016f3850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016f39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016f3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016f3d00"/>
        <function-ref name="get" scoped="" ref="0x1016f2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016f21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016f2340"/>
        <function-ref name="set" scoped="" ref="0x1016f24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016f2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016f27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016f2a80"/>
        <function-ref name="clr" scoped="" ref="0x1016f2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x10173e200" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x10173e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10173e580"/>
        <function-ref name="isInput" scoped="" ref="0x10173e710"/>
        <function-ref name="setResistor" scoped="" ref="0x10173e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10173ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10173ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10173ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10173d020"/>
        <function-ref name="get" scoped="" ref="0x10173d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10173d340"/>
        <function-ref name="getRaw" scoped="" ref="0x10173d4d0"/>
        <function-ref name="set" scoped="" ref="0x10173d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10173d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10173d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10173dc10"/>
        <function-ref name="clr" scoped="" ref="0x10173dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x101719020" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x101719020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017193a0"/>
        <function-ref name="isInput" scoped="" ref="0x101719530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017196c0"/>
        <function-ref name="toggle" scoped="" ref="0x101719850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017199e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101719b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101719d00"/>
        <function-ref name="get" scoped="" ref="0x101718020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101718340"/>
        <function-ref name="set" scoped="" ref="0x1017184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101718660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101718a80"/>
        <function-ref name="clr" scoped="" ref="0x101718c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x10172e200" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x10172e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10172e580"/>
        <function-ref name="isInput" scoped="" ref="0x10172e710"/>
        <function-ref name="setResistor" scoped="" ref="0x10172e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10172ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10172ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10172ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10172d020"/>
        <function-ref name="get" scoped="" ref="0x10172d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10172d340"/>
        <function-ref name="getRaw" scoped="" ref="0x10172d4d0"/>
        <function-ref name="set" scoped="" ref="0x10172d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10172d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10172d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10172dc10"/>
        <function-ref name="clr" scoped="" ref="0x10172dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x101744200" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x101744200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101744580"/>
        <function-ref name="isInput" scoped="" ref="0x101744710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017448a0"/>
        <function-ref name="toggle" scoped="" ref="0x101744a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101744bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101744d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101743020"/>
        <function-ref name="get" scoped="" ref="0x1017431b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101743340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017434d0"/>
        <function-ref name="set" scoped="" ref="0x101743660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017437f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101743980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101743c10"/>
        <function-ref name="clr" scoped="" ref="0x101743da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x101733200" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x101733200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101733580"/>
        <function-ref name="isInput" scoped="" ref="0x101733710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017338a0"/>
        <function-ref name="toggle" scoped="" ref="0x101733a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101733bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101733d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101732020"/>
        <function-ref name="get" scoped="" ref="0x1017321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101732340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017324d0"/>
        <function-ref name="set" scoped="" ref="0x101732660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017327f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101732980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101732c10"/>
        <function-ref name="clr" scoped="" ref="0x101732da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x10176e580" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x10176e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10176e900"/>
        <function-ref name="isInput" scoped="" ref="0x10176ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x10176ec20"/>
        <function-ref name="toggle" scoped="" ref="0x10176edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10176d020"/>
        <function-ref name="getResistor" scoped="" ref="0x10176d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10176d340"/>
        <function-ref name="get" scoped="" ref="0x10176d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10176d660"/>
        <function-ref name="getRaw" scoped="" ref="0x10176d7f0"/>
        <function-ref name="set" scoped="" ref="0x10176d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10176db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10176dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10176c020"/>
        <function-ref name="clr" scoped="" ref="0x10176c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x1016f0020" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x1016f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016f03a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016f0530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016f06c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016f0850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016f09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016f0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016f0d00"/>
        <function-ref name="get" scoped="" ref="0x1016ef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016ef1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016ef340"/>
        <function-ref name="set" scoped="" ref="0x1016ef4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016ef660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016ef7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016efa80"/>
        <function-ref name="clr" scoped="" ref="0x1016efc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x1016fd020" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x1016fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016fd530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016fd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016fd850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016fd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016fdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016fdd00"/>
        <function-ref name="get" scoped="" ref="0x1016fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016fc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016fc340"/>
        <function-ref name="set" scoped="" ref="0x1016fc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016fc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016fc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016fca80"/>
        <function-ref name="clr" scoped="" ref="0x1016fcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x101712020" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x101712020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017123a0"/>
        <function-ref name="isInput" scoped="" ref="0x101712530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017126c0"/>
        <function-ref name="toggle" scoped="" ref="0x101712850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017129e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101712b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101712d00"/>
        <function-ref name="get" scoped="" ref="0x101711020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101711340"/>
        <function-ref name="set" scoped="" ref="0x1017114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101711660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101711a80"/>
        <function-ref name="clr" scoped="" ref="0x101711c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x101728200" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x101728200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101728580"/>
        <function-ref name="isInput" scoped="" ref="0x101728710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017288a0"/>
        <function-ref name="toggle" scoped="" ref="0x101728a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101728bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101728d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101727020"/>
        <function-ref name="get" scoped="" ref="0x1017271b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101727340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017274d0"/>
        <function-ref name="set" scoped="" ref="0x101727660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017277f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101727980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101727c10"/>
        <function-ref name="clr" scoped="" ref="0x101727da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x10176a580" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x10176a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10176a900"/>
        <function-ref name="isInput" scoped="" ref="0x10176aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x10176ac20"/>
        <function-ref name="toggle" scoped="" ref="0x10176adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x101769020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101769340"/>
        <function-ref name="get" scoped="" ref="0x1017694d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101769660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017697f0"/>
        <function-ref name="set" scoped="" ref="0x101769980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101769b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101769ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101768020"/>
        <function-ref name="clr" scoped="" ref="0x1017681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x101764570" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x101764570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017648f0"/>
        <function-ref name="isInput" scoped="" ref="0x101764a80"/>
        <function-ref name="setResistor" scoped="" ref="0x101764c10"/>
        <function-ref name="toggle" scoped="" ref="0x101764da0"/>
        <function-ref name="isOutput" scoped="" ref="0x101763020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101763340"/>
        <function-ref name="get" scoped="" ref="0x1017634d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101763660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017637f0"/>
        <function-ref name="set" scoped="" ref="0x101763980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101763b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101763ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101762020"/>
        <function-ref name="clr" scoped="" ref="0x1017621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x101783570" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x101783570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017838f0"/>
        <function-ref name="isInput" scoped="" ref="0x101783a80"/>
        <function-ref name="setResistor" scoped="" ref="0x101783c10"/>
        <function-ref name="toggle" scoped="" ref="0x101783da0"/>
        <function-ref name="isOutput" scoped="" ref="0x101782020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101782340"/>
        <function-ref name="get" scoped="" ref="0x1017824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101782660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017827f0"/>
        <function-ref name="set" scoped="" ref="0x101782980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101782b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101782ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101781020"/>
        <function-ref name="clr" scoped="" ref="0x1017811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x101724200" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x101724200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101724580"/>
        <function-ref name="isInput" scoped="" ref="0x101724710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017248a0"/>
        <function-ref name="toggle" scoped="" ref="0x101724a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101724bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101724d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101723020"/>
        <function-ref name="get" scoped="" ref="0x1017231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101723340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017234d0"/>
        <function-ref name="set" scoped="" ref="0x101723660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017237f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101723980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101723c10"/>
        <function-ref name="clr" scoped="" ref="0x101723da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x101768580" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x101768580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101768900"/>
        <function-ref name="isInput" scoped="" ref="0x101768a90"/>
        <function-ref name="setResistor" scoped="" ref="0x101768c20"/>
        <function-ref name="toggle" scoped="" ref="0x101768db0"/>
        <function-ref name="isOutput" scoped="" ref="0x101767020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101767340"/>
        <function-ref name="get" scoped="" ref="0x1017674d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101767660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017677f0"/>
        <function-ref name="set" scoped="" ref="0x101767980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101767b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101767ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101766020"/>
        <function-ref name="clr" scoped="" ref="0x1017661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x1016e1020" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x1016e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016e13a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016e1530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016e16c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016e1850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016e19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016e1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016e1d00"/>
        <function-ref name="get" scoped="" ref="0x1016e0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016e01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016e0340"/>
        <function-ref name="set" scoped="" ref="0x1016e04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016e0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016e07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016e0a80"/>
        <function-ref name="clr" scoped="" ref="0x1016e0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x1016f7020" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x1016f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016f7530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016f76c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016f7850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016f79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016f7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016f7d00"/>
        <function-ref name="get" scoped="" ref="0x1016f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016f61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016f6340"/>
        <function-ref name="set" scoped="" ref="0x1016f64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016f6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016f67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016f6a80"/>
        <function-ref name="clr" scoped="" ref="0x1016f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x10170c020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x10170c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10170c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10170c530"/>
        <function-ref name="setResistor" scoped="" ref="0x10170c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10170c850"/>
        <function-ref name="isOutput" scoped="" ref="0x10170c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10170cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10170cd00"/>
        <function-ref name="get" scoped="" ref="0x10170b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10170b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10170b340"/>
        <function-ref name="set" scoped="" ref="0x10170b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10170b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10170b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10170ba80"/>
        <function-ref name="clr" scoped="" ref="0x10170bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x101770580" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x101770580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101770900"/>
        <function-ref name="isInput" scoped="" ref="0x101770a90"/>
        <function-ref name="setResistor" scoped="" ref="0x101770c20"/>
        <function-ref name="toggle" scoped="" ref="0x101770db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10176f020"/>
        <function-ref name="getResistor" scoped="" ref="0x10176f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10176f340"/>
        <function-ref name="get" scoped="" ref="0x10176f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10176f660"/>
        <function-ref name="getRaw" scoped="" ref="0x10176f7f0"/>
        <function-ref name="set" scoped="" ref="0x10176f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10176fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10176fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10176e020"/>
        <function-ref name="clr" scoped="" ref="0x10176e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x10175b570" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x10175b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10175b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10175ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x10175bc10"/>
        <function-ref name="toggle" scoped="" ref="0x10175bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x101786020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101786340"/>
        <function-ref name="get" scoped="" ref="0x1017864d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101786660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017867f0"/>
        <function-ref name="set" scoped="" ref="0x101786980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101786b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101786ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101785020"/>
        <function-ref name="clr" scoped="" ref="0x1017851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x101708200" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x101708200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101708580"/>
        <function-ref name="isInput" scoped="" ref="0x101708710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017088a0"/>
        <function-ref name="toggle" scoped="" ref="0x101708a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101708bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101708d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101707020"/>
        <function-ref name="get" scoped="" ref="0x1017071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101707340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017074d0"/>
        <function-ref name="set" scoped="" ref="0x101707660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101707980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101707c10"/>
        <function-ref name="clr" scoped="" ref="0x101707da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10171e200" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10171e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10171e580"/>
        <function-ref name="isInput" scoped="" ref="0x10171e710"/>
        <function-ref name="setResistor" scoped="" ref="0x10171e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10171ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10171ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10171ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10171d020"/>
        <function-ref name="get" scoped="" ref="0x10171d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10171d340"/>
        <function-ref name="getRaw" scoped="" ref="0x10171d4d0"/>
        <function-ref name="set" scoped="" ref="0x10171d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10171d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10171d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10171dc10"/>
        <function-ref name="clr" scoped="" ref="0x10171dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x101737200" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x101737200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101737580"/>
        <function-ref name="isInput" scoped="" ref="0x101737710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017378a0"/>
        <function-ref name="toggle" scoped="" ref="0x101737a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101737bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101737d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101736020"/>
        <function-ref name="get" scoped="" ref="0x1017361b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101736340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017364d0"/>
        <function-ref name="set" scoped="" ref="0x101736660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017367f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101736980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101736c10"/>
        <function-ref name="clr" scoped="" ref="0x101736da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x101705020" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x101705020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017053a0"/>
        <function-ref name="isInput" scoped="" ref="0x101705530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017056c0"/>
        <function-ref name="toggle" scoped="" ref="0x101705850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017059e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101705b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101705d00"/>
        <function-ref name="get" scoped="" ref="0x101704020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101704340"/>
        <function-ref name="set" scoped="" ref="0x1017044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101704660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101704a80"/>
        <function-ref name="clr" scoped="" ref="0x101704c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x10173b200" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x10173b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10173b580"/>
        <function-ref name="isInput" scoped="" ref="0x10173b710"/>
        <function-ref name="setResistor" scoped="" ref="0x10173b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10173ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x10173bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10173bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10173a020"/>
        <function-ref name="get" scoped="" ref="0x10173a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10173a340"/>
        <function-ref name="getRaw" scoped="" ref="0x10173a4d0"/>
        <function-ref name="set" scoped="" ref="0x10173a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10173a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10173a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10173ac10"/>
        <function-ref name="clr" scoped="" ref="0x10173ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x101701020" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x101701020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017013a0"/>
        <function-ref name="isInput" scoped="" ref="0x101701530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017016c0"/>
        <function-ref name="toggle" scoped="" ref="0x101701850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017019e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101701b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101701d00"/>
        <function-ref name="get" scoped="" ref="0x101700020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101700340"/>
        <function-ref name="set" scoped="" ref="0x1017004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101700660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101700a80"/>
        <function-ref name="clr" scoped="" ref="0x101700c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x101716020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x101716020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017163a0"/>
        <function-ref name="isInput" scoped="" ref="0x101716530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017166c0"/>
        <function-ref name="toggle" scoped="" ref="0x101716850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017169e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101716b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101716d00"/>
        <function-ref name="get" scoped="" ref="0x101715020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101715340"/>
        <function-ref name="set" scoped="" ref="0x1017154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101715660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101715a80"/>
        <function-ref name="clr" scoped="" ref="0x101715c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x10172c200" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x10172c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10172c580"/>
        <function-ref name="isInput" scoped="" ref="0x10172c710"/>
        <function-ref name="setResistor" scoped="" ref="0x10172c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10172ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x10172cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10172cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10172b020"/>
        <function-ref name="get" scoped="" ref="0x10172b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10172b340"/>
        <function-ref name="getRaw" scoped="" ref="0x10172b4d0"/>
        <function-ref name="set" scoped="" ref="0x10172b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10172b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10172b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10172bc10"/>
        <function-ref name="clr" scoped="" ref="0x10172bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x101742200" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x101742200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101742580"/>
        <function-ref name="isInput" scoped="" ref="0x101742710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017428a0"/>
        <function-ref name="toggle" scoped="" ref="0x101742a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101742bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101742d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101741020"/>
        <function-ref name="get" scoped="" ref="0x1017411b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101741340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017414d0"/>
        <function-ref name="set" scoped="" ref="0x101741660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017417f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101741980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101741c10"/>
        <function-ref name="clr" scoped="" ref="0x101741da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x101731200" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x101731200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101731580"/>
        <function-ref name="isInput" scoped="" ref="0x101731710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017318a0"/>
        <function-ref name="toggle" scoped="" ref="0x101731a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101731bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101731d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10175a020"/>
        <function-ref name="get" scoped="" ref="0x10175a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10175a340"/>
        <function-ref name="getRaw" scoped="" ref="0x10175a4d0"/>
        <function-ref name="set" scoped="" ref="0x10175a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10175a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10175a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10175ac10"/>
        <function-ref name="clr" scoped="" ref="0x10175ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x1016e5020" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x1016e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016e53a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016e5530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016e56c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016e5850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016e59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016e5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016e5d00"/>
        <function-ref name="get" scoped="" ref="0x1016e4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016e41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016e4340"/>
        <function-ref name="set" scoped="" ref="0x1016e44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016e4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016e47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016e4a80"/>
        <function-ref name="clr" scoped="" ref="0x1016e4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x1016fb020" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x1016fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1016fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x1016fb530"/>
        <function-ref name="setResistor" scoped="" ref="0x1016fb6c0"/>
        <function-ref name="toggle" scoped="" ref="0x1016fb850"/>
        <function-ref name="isOutput" scoped="" ref="0x1016fb9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x1016fbb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x1016fbd00"/>
        <function-ref name="get" scoped="" ref="0x1016fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1016fa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1016fa340"/>
        <function-ref name="set" scoped="" ref="0x1016fa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1016fa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1016fa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1016faa80"/>
        <function-ref name="clr" scoped="" ref="0x1016fac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x101710020" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x101710020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017103a0"/>
        <function-ref name="isInput" scoped="" ref="0x101710530"/>
        <function-ref name="setResistor" scoped="" ref="0x1017106c0"/>
        <function-ref name="toggle" scoped="" ref="0x101710850"/>
        <function-ref name="isOutput" scoped="" ref="0x1017109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101710b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101710d00"/>
        <function-ref name="get" scoped="" ref="0x10170f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10170f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10170f340"/>
        <function-ref name="set" scoped="" ref="0x10170f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10170f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10170f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10170fa80"/>
        <function-ref name="clr" scoped="" ref="0x10170fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x101726200" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x101726200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101726580"/>
        <function-ref name="isInput" scoped="" ref="0x101726710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017268a0"/>
        <function-ref name="toggle" scoped="" ref="0x101726a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101726bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101726d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101725020"/>
        <function-ref name="get" scoped="" ref="0x1017251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101725340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017254d0"/>
        <function-ref name="set" scoped="" ref="0x101725660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017257f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101725980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101725c10"/>
        <function-ref name="clr" scoped="" ref="0x101725da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x10174d560" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x10174d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10174d8e0"/>
        <function-ref name="isInput" scoped="" ref="0x10174da70"/>
        <function-ref name="setResistor" scoped="" ref="0x10174dc00"/>
        <function-ref name="toggle" scoped="" ref="0x10174dd90"/>
        <function-ref name="isOutput" scoped="" ref="0x10174c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10174c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10174c340"/>
        <function-ref name="get" scoped="" ref="0x10174c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10174c660"/>
        <function-ref name="getRaw" scoped="" ref="0x10174c7f0"/>
        <function-ref name="set" scoped="" ref="0x10174c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10174cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10174cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10174b020"/>
        <function-ref name="clr" scoped="" ref="0x10174b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x101762570" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x101762570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017628f0"/>
        <function-ref name="isInput" scoped="" ref="0x101762a80"/>
        <function-ref name="setResistor" scoped="" ref="0x101762c10"/>
        <function-ref name="toggle" scoped="" ref="0x101762da0"/>
        <function-ref name="isOutput" scoped="" ref="0x101760020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101760340"/>
        <function-ref name="get" scoped="" ref="0x1017604d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101760660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017607f0"/>
        <function-ref name="set" scoped="" ref="0x101760980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101760b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101760ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10175f020"/>
        <function-ref name="clr" scoped="" ref="0x10175f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x10174f580" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x10174f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10174f900"/>
        <function-ref name="isInput" scoped="" ref="0x10174fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x10174fc20"/>
        <function-ref name="toggle" scoped="" ref="0x10174fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10174e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10174e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10174e340"/>
        <function-ref name="get" scoped="" ref="0x10174e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10174e660"/>
        <function-ref name="getRaw" scoped="" ref="0x10174e7f0"/>
        <function-ref name="set" scoped="" ref="0x10174e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10174eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10174eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10174d020"/>
        <function-ref name="clr" scoped="" ref="0x10174d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x101722200" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x101722200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101722580"/>
        <function-ref name="isInput" scoped="" ref="0x101722710"/>
        <function-ref name="setResistor" scoped="" ref="0x1017228a0"/>
        <function-ref name="toggle" scoped="" ref="0x101722a30"/>
        <function-ref name="isOutput" scoped="" ref="0x101722bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x101722d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101721020"/>
        <function-ref name="get" scoped="" ref="0x1017211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101721340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017214d0"/>
        <function-ref name="set" scoped="" ref="0x101721660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101721980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101721c10"/>
        <function-ref name="clr" scoped="" ref="0x101721da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x101781570" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x101781570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017818f0"/>
        <function-ref name="isInput" scoped="" ref="0x101781a80"/>
        <function-ref name="setResistor" scoped="" ref="0x101781c10"/>
        <function-ref name="toggle" scoped="" ref="0x101781da0"/>
        <function-ref name="isOutput" scoped="" ref="0x101780020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101780340"/>
        <function-ref name="get" scoped="" ref="0x1017804d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101780660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017807f0"/>
        <function-ref name="set" scoped="" ref="0x101780980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101780b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101780ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10177f020"/>
        <function-ref name="clr" scoped="" ref="0x10177f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x10177b580" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x10177b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10177b900"/>
        <function-ref name="isInput" scoped="" ref="0x10177ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x10177bc20"/>
        <function-ref name="toggle" scoped="" ref="0x10177bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10177a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10177a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10177a340"/>
        <function-ref name="get" scoped="" ref="0x10177a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10177a660"/>
        <function-ref name="getRaw" scoped="" ref="0x10177a7f0"/>
        <function-ref name="set" scoped="" ref="0x10177a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10177ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10177aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101779020"/>
        <function-ref name="clr" scoped="" ref="0x1017791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x1017571f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x1017571f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101757970"/>
        <function-ref name="isInput" scoped="" ref="0x101757b00"/>
        <function-ref name="setResistor" scoped="" ref="0x101757c90"/>
        <function-ref name="toggle" scoped="" ref="0x101757e20"/>
        <function-ref name="isOutput" scoped="" ref="0x101756020"/>
        <function-ref name="getResistor" scoped="" ref="0x1017561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101756340"/>
        <function-ref name="get" scoped="" ref="0x1017564d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101756660"/>
        <function-ref name="getRaw" scoped="" ref="0x1017567f0"/>
        <function-ref name="set" scoped="" ref="0x101756980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101756b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101756ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101755020"/>
        <function-ref name="clr" scoped="" ref="0x1017551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017a86d0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017a86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017a8a50"/>
        <function-ref name="isInput" scoped="" ref="0x1017a8be0"/>
        <function-ref name="setResistor" scoped="" ref="0x1017a8d70"/>
        <function-ref name="toggle" scoped="" ref="0x1017a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x1017a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017a74d0"/>
        <function-ref name="get" scoped="" ref="0x1017a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017a7980"/>
        <function-ref name="set" scoped="" ref="0x1017a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017a6120"/>
        <function-ref name="clr" scoped="" ref="0x1017a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017a3100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017a3480"/>
        <function-ref name="isInput" scoped="" ref="0x1017a3610"/>
        <function-ref name="setResistor" scoped="" ref="0x1017a37a0"/>
        <function-ref name="toggle" scoped="" ref="0x1017a3930"/>
        <function-ref name="isOutput" scoped="" ref="0x1017a3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017a3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017a3de0"/>
        <function-ref name="get" scoped="" ref="0x1017a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017a2340"/>
        <function-ref name="set" scoped="" ref="0x1017a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017a2a80"/>
        <function-ref name="clr" scoped="" ref="0x1017a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10179fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10179fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10179e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10179e270"/>
        <function-ref name="setResistor" scoped="" ref="0x10179e400"/>
        <function-ref name="toggle" scoped="" ref="0x10179e590"/>
        <function-ref name="isOutput" scoped="" ref="0x10179e720"/>
        <function-ref name="getResistor" scoped="" ref="0x10179e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10179ea40"/>
        <function-ref name="get" scoped="" ref="0x10179ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10179ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x10179d020"/>
        <function-ref name="set" scoped="" ref="0x10179d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10179d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10179d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10179d760"/>
        <function-ref name="clr" scoped="" ref="0x10179d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017c6740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017c6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017c6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1017c6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1017c6de0"/>
        <function-ref name="toggle" scoped="" ref="0x1017c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x1017c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017c44d0"/>
        <function-ref name="get" scoped="" ref="0x1017c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017c4980"/>
        <function-ref name="set" scoped="" ref="0x1017c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017c3120"/>
        <function-ref name="clr" scoped="" ref="0x1017c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017c0100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017c0480"/>
        <function-ref name="isInput" scoped="" ref="0x1017c0610"/>
        <function-ref name="setResistor" scoped="" ref="0x1017c07a0"/>
        <function-ref name="toggle" scoped="" ref="0x1017c0930"/>
        <function-ref name="isOutput" scoped="" ref="0x1017c0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017c0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017c0de0"/>
        <function-ref name="get" scoped="" ref="0x1017bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017bf340"/>
        <function-ref name="set" scoped="" ref="0x1017bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017bfa80"/>
        <function-ref name="clr" scoped="" ref="0x1017bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017bcd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1017bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x1017bb400"/>
        <function-ref name="toggle" scoped="" ref="0x1017bb590"/>
        <function-ref name="isOutput" scoped="" ref="0x1017bb720"/>
        <function-ref name="getResistor" scoped="" ref="0x1017bb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017bba40"/>
        <function-ref name="get" scoped="" ref="0x1017bbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017bbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x1017ba020"/>
        <function-ref name="set" scoped="" ref="0x1017ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017ba760"/>
        <function-ref name="clr" scoped="" ref="0x1017ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017b7740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017b7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017b7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1017b7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1017b7de0"/>
        <function-ref name="toggle" scoped="" ref="0x1017b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x1017b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017b64d0"/>
        <function-ref name="get" scoped="" ref="0x1017b6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017b6980"/>
        <function-ref name="set" scoped="" ref="0x1017b6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017b6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017b6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017b5120"/>
        <function-ref name="clr" scoped="" ref="0x1017b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017de100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017de480"/>
        <function-ref name="isInput" scoped="" ref="0x1017de610"/>
        <function-ref name="setResistor" scoped="" ref="0x1017de7a0"/>
        <function-ref name="toggle" scoped="" ref="0x1017de930"/>
        <function-ref name="isOutput" scoped="" ref="0x1017deac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017dec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017dede0"/>
        <function-ref name="get" scoped="" ref="0x1017dd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017dd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017dd340"/>
        <function-ref name="set" scoped="" ref="0x1017dd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017dd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017dd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017dda80"/>
        <function-ref name="clr" scoped="" ref="0x1017ddc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017dad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017dad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017d90e0"/>
        <function-ref name="isInput" scoped="" ref="0x1017d9270"/>
        <function-ref name="setResistor" scoped="" ref="0x1017d9400"/>
        <function-ref name="toggle" scoped="" ref="0x1017d9590"/>
        <function-ref name="isOutput" scoped="" ref="0x1017d9720"/>
        <function-ref name="getResistor" scoped="" ref="0x1017d98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017d9a40"/>
        <function-ref name="get" scoped="" ref="0x1017d9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017d9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x1017d8020"/>
        <function-ref name="set" scoped="" ref="0x1017d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017d8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017d84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017d8760"/>
        <function-ref name="clr" scoped="" ref="0x1017d88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017d5740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017d5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017d5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1017d5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1017d5de0"/>
        <function-ref name="toggle" scoped="" ref="0x1017d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x1017d41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017d4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017d44d0"/>
        <function-ref name="get" scoped="" ref="0x1017d4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017d47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017d4980"/>
        <function-ref name="set" scoped="" ref="0x1017d4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017d4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017d4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017d3120"/>
        <function-ref name="clr" scoped="" ref="0x1017d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017d0100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017d0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017d0480"/>
        <function-ref name="isInput" scoped="" ref="0x1017d0610"/>
        <function-ref name="setResistor" scoped="" ref="0x1017d07a0"/>
        <function-ref name="toggle" scoped="" ref="0x1017d0930"/>
        <function-ref name="isOutput" scoped="" ref="0x1017d0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017d0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017d0de0"/>
        <function-ref name="get" scoped="" ref="0x1017cf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017cf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017cf340"/>
        <function-ref name="set" scoped="" ref="0x1017cf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017cf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017cf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017cfa80"/>
        <function-ref name="clr" scoped="" ref="0x1017cfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017ccd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017ccd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017ca0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1017ca270"/>
        <function-ref name="setResistor" scoped="" ref="0x1017ca400"/>
        <function-ref name="toggle" scoped="" ref="0x1017ca590"/>
        <function-ref name="isOutput" scoped="" ref="0x1017ca720"/>
        <function-ref name="getResistor" scoped="" ref="0x1017ca8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017caa40"/>
        <function-ref name="get" scoped="" ref="0x1017cabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017cad60"/>
        <function-ref name="getRaw" scoped="" ref="0x1017c9020"/>
        <function-ref name="set" scoped="" ref="0x1017c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017c9760"/>
        <function-ref name="clr" scoped="" ref="0x1017c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017f3860" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017f3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017f3be0"/>
        <function-ref name="isInput" scoped="" ref="0x1017f3d70"/>
        <function-ref name="setResistor" scoped="" ref="0x1017f2020"/>
        <function-ref name="toggle" scoped="" ref="0x1017f21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1017f2340"/>
        <function-ref name="getResistor" scoped="" ref="0x1017f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017f2660"/>
        <function-ref name="get" scoped="" ref="0x1017f27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017f2980"/>
        <function-ref name="getRaw" scoped="" ref="0x1017f2b10"/>
        <function-ref name="set" scoped="" ref="0x1017f2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017f2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017f1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017f12b0"/>
        <function-ref name="clr" scoped="" ref="0x1017f1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017ee270" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017ee270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017ee5f0"/>
        <function-ref name="isInput" scoped="" ref="0x1017ee780"/>
        <function-ref name="setResistor" scoped="" ref="0x1017ee910"/>
        <function-ref name="toggle" scoped="" ref="0x1017eeaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x1017eec30"/>
        <function-ref name="getResistor" scoped="" ref="0x1017eedc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017ed020"/>
        <function-ref name="get" scoped="" ref="0x1017ed1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017ed340"/>
        <function-ref name="getRaw" scoped="" ref="0x1017ed4d0"/>
        <function-ref name="set" scoped="" ref="0x1017ed660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017ed7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017ed980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017edc10"/>
        <function-ref name="clr" scoped="" ref="0x1017edda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017ead10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017ead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017e90e0"/>
        <function-ref name="isInput" scoped="" ref="0x1017e9270"/>
        <function-ref name="setResistor" scoped="" ref="0x1017e9400"/>
        <function-ref name="toggle" scoped="" ref="0x1017e9590"/>
        <function-ref name="isOutput" scoped="" ref="0x1017e9720"/>
        <function-ref name="getResistor" scoped="" ref="0x1017e98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017e9a40"/>
        <function-ref name="get" scoped="" ref="0x1017e9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017e9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x1017e8020"/>
        <function-ref name="set" scoped="" ref="0x1017e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017e8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017e84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017e8760"/>
        <function-ref name="clr" scoped="" ref="0x1017e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017e5740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017e5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017e5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1017e5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1017e5de0"/>
        <function-ref name="toggle" scoped="" ref="0x1017e4020"/>
        <function-ref name="isOutput" scoped="" ref="0x1017e41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017e4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017e44d0"/>
        <function-ref name="get" scoped="" ref="0x1017e4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017e47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017e4980"/>
        <function-ref name="set" scoped="" ref="0x1017e4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017e4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017e4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017e3120"/>
        <function-ref name="clr" scoped="" ref="0x1017e32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017e0100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017e0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017e0480"/>
        <function-ref name="isInput" scoped="" ref="0x1017e0610"/>
        <function-ref name="setResistor" scoped="" ref="0x1017e07a0"/>
        <function-ref name="toggle" scoped="" ref="0x1017e0930"/>
        <function-ref name="isOutput" scoped="" ref="0x1017e0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017e0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017e0de0"/>
        <function-ref name="get" scoped="" ref="0x1017df020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017df1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017df340"/>
        <function-ref name="set" scoped="" ref="0x1017df4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017df660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017df7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017dfa80"/>
        <function-ref name="clr" scoped="" ref="0x1017dfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10180ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10180ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018090e0"/>
        <function-ref name="isInput" scoped="" ref="0x101809270"/>
        <function-ref name="setResistor" scoped="" ref="0x101809400"/>
        <function-ref name="toggle" scoped="" ref="0x101809590"/>
        <function-ref name="isOutput" scoped="" ref="0x101809720"/>
        <function-ref name="getResistor" scoped="" ref="0x1018098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101809a40"/>
        <function-ref name="get" scoped="" ref="0x101809bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101809d60"/>
        <function-ref name="getRaw" scoped="" ref="0x101808020"/>
        <function-ref name="set" scoped="" ref="0x1018081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101808340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101808760"/>
        <function-ref name="clr" scoped="" ref="0x1018088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101805740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101805740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101805ac0"/>
        <function-ref name="isInput" scoped="" ref="0x101805c50"/>
        <function-ref name="setResistor" scoped="" ref="0x101805de0"/>
        <function-ref name="toggle" scoped="" ref="0x101804020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101804340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018044d0"/>
        <function-ref name="get" scoped="" ref="0x101804660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101804980"/>
        <function-ref name="set" scoped="" ref="0x101804b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101804ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101804e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101803120"/>
        <function-ref name="clr" scoped="" ref="0x1018032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017ff100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017ff480"/>
        <function-ref name="isInput" scoped="" ref="0x1017ff610"/>
        <function-ref name="setResistor" scoped="" ref="0x1017ff7a0"/>
        <function-ref name="toggle" scoped="" ref="0x1017ff930"/>
        <function-ref name="isOutput" scoped="" ref="0x1017ffac0"/>
        <function-ref name="getResistor" scoped="" ref="0x1017ffc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017ffde0"/>
        <function-ref name="get" scoped="" ref="0x1017fe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017fe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x1017fe340"/>
        <function-ref name="set" scoped="" ref="0x1017fe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017fe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017fe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017fea80"/>
        <function-ref name="clr" scoped="" ref="0x1017fec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017fbd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017fbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017fa0e0"/>
        <function-ref name="isInput" scoped="" ref="0x1017fa270"/>
        <function-ref name="setResistor" scoped="" ref="0x1017fa400"/>
        <function-ref name="toggle" scoped="" ref="0x1017fa590"/>
        <function-ref name="isOutput" scoped="" ref="0x1017fa720"/>
        <function-ref name="getResistor" scoped="" ref="0x1017fa8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1017faa40"/>
        <function-ref name="get" scoped="" ref="0x1017fabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1017fad60"/>
        <function-ref name="getRaw" scoped="" ref="0x1017f9020"/>
        <function-ref name="set" scoped="" ref="0x1017f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1017f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1017f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1017f9760"/>
        <function-ref name="clr" scoped="" ref="0x1017f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x1017f6740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x1017f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1017f6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x1017f6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x1017f6de0"/>
        <function-ref name="toggle" scoped="" ref="0x101823020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101823340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018234d0"/>
        <function-ref name="get" scoped="" ref="0x101823660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101823980"/>
        <function-ref name="set" scoped="" ref="0x101823b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101823ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101823e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101822120"/>
        <function-ref name="clr" scoped="" ref="0x1018222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10181f100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10181f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10181f480"/>
        <function-ref name="isInput" scoped="" ref="0x10181f610"/>
        <function-ref name="setResistor" scoped="" ref="0x10181f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10181f930"/>
        <function-ref name="isOutput" scoped="" ref="0x10181fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10181fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10181fde0"/>
        <function-ref name="get" scoped="" ref="0x10181e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10181e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10181e340"/>
        <function-ref name="set" scoped="" ref="0x10181e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10181e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10181e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10181ea80"/>
        <function-ref name="clr" scoped="" ref="0x10181ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10181bd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10181bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10181a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10181a270"/>
        <function-ref name="setResistor" scoped="" ref="0x10181a400"/>
        <function-ref name="toggle" scoped="" ref="0x10181a590"/>
        <function-ref name="isOutput" scoped="" ref="0x10181a720"/>
        <function-ref name="getResistor" scoped="" ref="0x10181a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10181aa40"/>
        <function-ref name="get" scoped="" ref="0x10181abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10181ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x101819020"/>
        <function-ref name="set" scoped="" ref="0x1018191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101819340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101819760"/>
        <function-ref name="clr" scoped="" ref="0x1018198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101816a60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101816a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101816de0"/>
        <function-ref name="isInput" scoped="" ref="0x101815020"/>
        <function-ref name="setResistor" scoped="" ref="0x1018151b0"/>
        <function-ref name="toggle" scoped="" ref="0x101815340"/>
        <function-ref name="isOutput" scoped="" ref="0x1018154d0"/>
        <function-ref name="getResistor" scoped="" ref="0x101815660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018157f0"/>
        <function-ref name="get" scoped="" ref="0x101815980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101815b10"/>
        <function-ref name="getRaw" scoped="" ref="0x101815ca0"/>
        <function-ref name="set" scoped="" ref="0x101815e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101814020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018141b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101814440"/>
        <function-ref name="clr" scoped="" ref="0x1018145d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101811460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101811460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018117e0"/>
        <function-ref name="isInput" scoped="" ref="0x101811970"/>
        <function-ref name="setResistor" scoped="" ref="0x101811b00"/>
        <function-ref name="toggle" scoped="" ref="0x101811c90"/>
        <function-ref name="isOutput" scoped="" ref="0x101811e20"/>
        <function-ref name="getResistor" scoped="" ref="0x101810020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018101b0"/>
        <function-ref name="get" scoped="" ref="0x101810340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018104d0"/>
        <function-ref name="getRaw" scoped="" ref="0x101810660"/>
        <function-ref name="set" scoped="" ref="0x1018107f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101810980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101810b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101810da0"/>
        <function-ref name="clr" scoped="" ref="0x10180f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10180de00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10180de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018391c0"/>
        <function-ref name="isInput" scoped="" ref="0x101839350"/>
        <function-ref name="setResistor" scoped="" ref="0x1018394e0"/>
        <function-ref name="toggle" scoped="" ref="0x101839670"/>
        <function-ref name="isOutput" scoped="" ref="0x101839800"/>
        <function-ref name="getResistor" scoped="" ref="0x101839990"/>
        <function-ref name="makeOutput" scoped="" ref="0x101839b20"/>
        <function-ref name="get" scoped="" ref="0x101839cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101839e40"/>
        <function-ref name="getRaw" scoped="" ref="0x101838020"/>
        <function-ref name="set" scoped="" ref="0x1018381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101838340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101838760"/>
        <function-ref name="clr" scoped="" ref="0x1018388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101835740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101835740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101835ac0"/>
        <function-ref name="isInput" scoped="" ref="0x101835c50"/>
        <function-ref name="setResistor" scoped="" ref="0x101835de0"/>
        <function-ref name="toggle" scoped="" ref="0x101834020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101834340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018344d0"/>
        <function-ref name="get" scoped="" ref="0x101834660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101834980"/>
        <function-ref name="set" scoped="" ref="0x101834b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101834ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101834e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101833120"/>
        <function-ref name="clr" scoped="" ref="0x1018332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101830100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101830100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101830480"/>
        <function-ref name="isInput" scoped="" ref="0x101830610"/>
        <function-ref name="setResistor" scoped="" ref="0x1018307a0"/>
        <function-ref name="toggle" scoped="" ref="0x101830930"/>
        <function-ref name="isOutput" scoped="" ref="0x101830ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x101830c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101830de0"/>
        <function-ref name="get" scoped="" ref="0x10182f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10182f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10182f340"/>
        <function-ref name="set" scoped="" ref="0x10182f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10182f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10182f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10182fa80"/>
        <function-ref name="clr" scoped="" ref="0x10182fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10182cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10182cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10182b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10182b270"/>
        <function-ref name="setResistor" scoped="" ref="0x10182b400"/>
        <function-ref name="toggle" scoped="" ref="0x10182b590"/>
        <function-ref name="isOutput" scoped="" ref="0x10182b720"/>
        <function-ref name="getResistor" scoped="" ref="0x10182b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10182ba40"/>
        <function-ref name="get" scoped="" ref="0x10182bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10182bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10182a020"/>
        <function-ref name="set" scoped="" ref="0x10182a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10182a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10182a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10182a760"/>
        <function-ref name="clr" scoped="" ref="0x10182a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101827740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101827740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101827ac0"/>
        <function-ref name="isInput" scoped="" ref="0x101827c50"/>
        <function-ref name="setResistor" scoped="" ref="0x101827de0"/>
        <function-ref name="toggle" scoped="" ref="0x101826020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101826340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018264d0"/>
        <function-ref name="get" scoped="" ref="0x101826660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101826980"/>
        <function-ref name="set" scoped="" ref="0x101826b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101826ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101826e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101825120"/>
        <function-ref name="clr" scoped="" ref="0x1018252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101850100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101850100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101850480"/>
        <function-ref name="isInput" scoped="" ref="0x101850610"/>
        <function-ref name="setResistor" scoped="" ref="0x1018507a0"/>
        <function-ref name="toggle" scoped="" ref="0x101850930"/>
        <function-ref name="isOutput" scoped="" ref="0x101850ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x101850c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101850de0"/>
        <function-ref name="get" scoped="" ref="0x10184f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10184f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10184f340"/>
        <function-ref name="set" scoped="" ref="0x10184f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10184f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10184f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10184fa80"/>
        <function-ref name="clr" scoped="" ref="0x10184fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10184cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10184cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10184b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10184b270"/>
        <function-ref name="setResistor" scoped="" ref="0x10184b400"/>
        <function-ref name="toggle" scoped="" ref="0x10184b590"/>
        <function-ref name="isOutput" scoped="" ref="0x10184b720"/>
        <function-ref name="getResistor" scoped="" ref="0x10184b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10184ba40"/>
        <function-ref name="get" scoped="" ref="0x10184bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10184bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10184a020"/>
        <function-ref name="set" scoped="" ref="0x10184a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10184a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10184a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10184a760"/>
        <function-ref name="clr" scoped="" ref="0x10184a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101847740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101847740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101847ac0"/>
        <function-ref name="isInput" scoped="" ref="0x101847c50"/>
        <function-ref name="setResistor" scoped="" ref="0x101847de0"/>
        <function-ref name="toggle" scoped="" ref="0x101846020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101846340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018464d0"/>
        <function-ref name="get" scoped="" ref="0x101846660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101846980"/>
        <function-ref name="set" scoped="" ref="0x101846b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101846ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101846e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101845120"/>
        <function-ref name="clr" scoped="" ref="0x1018452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101842100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101842100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101842480"/>
        <function-ref name="isInput" scoped="" ref="0x101842610"/>
        <function-ref name="setResistor" scoped="" ref="0x1018427a0"/>
        <function-ref name="toggle" scoped="" ref="0x101842930"/>
        <function-ref name="isOutput" scoped="" ref="0x101842ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x101842c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101842de0"/>
        <function-ref name="get" scoped="" ref="0x101840020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101840340"/>
        <function-ref name="set" scoped="" ref="0x1018404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101840660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101840a80"/>
        <function-ref name="clr" scoped="" ref="0x101840c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10183dd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10183dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10183c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10183c270"/>
        <function-ref name="setResistor" scoped="" ref="0x10183c400"/>
        <function-ref name="toggle" scoped="" ref="0x10183c590"/>
        <function-ref name="isOutput" scoped="" ref="0x10183c720"/>
        <function-ref name="getResistor" scoped="" ref="0x10183c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10183ca40"/>
        <function-ref name="get" scoped="" ref="0x10183cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10183cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10183b020"/>
        <function-ref name="set" scoped="" ref="0x10183b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10183b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10183b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10183b760"/>
        <function-ref name="clr" scoped="" ref="0x10183b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101866740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101866740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101866ac0"/>
        <function-ref name="isInput" scoped="" ref="0x101866c50"/>
        <function-ref name="setResistor" scoped="" ref="0x101866de0"/>
        <function-ref name="toggle" scoped="" ref="0x101865020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101865340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018654d0"/>
        <function-ref name="get" scoped="" ref="0x101865660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101865980"/>
        <function-ref name="set" scoped="" ref="0x101865b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101865ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101865e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101864120"/>
        <function-ref name="clr" scoped="" ref="0x1018642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101861100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101861100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101861480"/>
        <function-ref name="isInput" scoped="" ref="0x101861610"/>
        <function-ref name="setResistor" scoped="" ref="0x1018617a0"/>
        <function-ref name="toggle" scoped="" ref="0x101861930"/>
        <function-ref name="isOutput" scoped="" ref="0x101861ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x101861c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101861de0"/>
        <function-ref name="get" scoped="" ref="0x101860020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101860340"/>
        <function-ref name="set" scoped="" ref="0x1018604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101860660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101860a80"/>
        <function-ref name="clr" scoped="" ref="0x101860c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10185dd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10185dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10185c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10185c270"/>
        <function-ref name="setResistor" scoped="" ref="0x10185c400"/>
        <function-ref name="toggle" scoped="" ref="0x10185c590"/>
        <function-ref name="isOutput" scoped="" ref="0x10185c720"/>
        <function-ref name="getResistor" scoped="" ref="0x10185c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10185ca40"/>
        <function-ref name="get" scoped="" ref="0x10185cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10185cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10185b020"/>
        <function-ref name="set" scoped="" ref="0x10185b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10185b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10185b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10185b760"/>
        <function-ref name="clr" scoped="" ref="0x10185b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101858740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101858740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101858ac0"/>
        <function-ref name="isInput" scoped="" ref="0x101858c50"/>
        <function-ref name="setResistor" scoped="" ref="0x101858de0"/>
        <function-ref name="toggle" scoped="" ref="0x101857020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101857340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018574d0"/>
        <function-ref name="get" scoped="" ref="0x101857660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101857980"/>
        <function-ref name="set" scoped="" ref="0x101857b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101857ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101857e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101856120"/>
        <function-ref name="clr" scoped="" ref="0x1018562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101853100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101853100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101853480"/>
        <function-ref name="isInput" scoped="" ref="0x101853610"/>
        <function-ref name="setResistor" scoped="" ref="0x1018537a0"/>
        <function-ref name="toggle" scoped="" ref="0x101853930"/>
        <function-ref name="isOutput" scoped="" ref="0x101853ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x101853c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101853de0"/>
        <function-ref name="get" scoped="" ref="0x101852020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101852340"/>
        <function-ref name="set" scoped="" ref="0x1018524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101852660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101852a80"/>
        <function-ref name="clr" scoped="" ref="0x101852c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10187ed10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10187ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10187d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10187d270"/>
        <function-ref name="setResistor" scoped="" ref="0x10187d400"/>
        <function-ref name="toggle" scoped="" ref="0x10187d590"/>
        <function-ref name="isOutput" scoped="" ref="0x10187d720"/>
        <function-ref name="getResistor" scoped="" ref="0x10187d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10187da40"/>
        <function-ref name="get" scoped="" ref="0x10187dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10187dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10187c020"/>
        <function-ref name="set" scoped="" ref="0x10187c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10187c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10187c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10187c760"/>
        <function-ref name="clr" scoped="" ref="0x10187c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101878740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101878740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101878ac0"/>
        <function-ref name="isInput" scoped="" ref="0x101878c50"/>
        <function-ref name="setResistor" scoped="" ref="0x101878de0"/>
        <function-ref name="toggle" scoped="" ref="0x101877020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018771b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101877340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018774d0"/>
        <function-ref name="get" scoped="" ref="0x101877660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018777f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101877980"/>
        <function-ref name="set" scoped="" ref="0x101877b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101877ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101877e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101876120"/>
        <function-ref name="clr" scoped="" ref="0x1018762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101873100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101873100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101873480"/>
        <function-ref name="isInput" scoped="" ref="0x101873610"/>
        <function-ref name="setResistor" scoped="" ref="0x1018737a0"/>
        <function-ref name="toggle" scoped="" ref="0x101873930"/>
        <function-ref name="isOutput" scoped="" ref="0x101873ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x101873c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101873de0"/>
        <function-ref name="get" scoped="" ref="0x101872020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101872340"/>
        <function-ref name="set" scoped="" ref="0x1018724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101872660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101872a80"/>
        <function-ref name="clr" scoped="" ref="0x101872c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10186fd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10186fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10186e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10186e270"/>
        <function-ref name="setResistor" scoped="" ref="0x10186e400"/>
        <function-ref name="toggle" scoped="" ref="0x10186e590"/>
        <function-ref name="isOutput" scoped="" ref="0x10186e720"/>
        <function-ref name="getResistor" scoped="" ref="0x10186e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10186ea40"/>
        <function-ref name="get" scoped="" ref="0x10186ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10186ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x10186d020"/>
        <function-ref name="set" scoped="" ref="0x10186d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10186d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10186d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10186d760"/>
        <function-ref name="clr" scoped="" ref="0x10186d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10186a740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10186a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10186aac0"/>
        <function-ref name="isInput" scoped="" ref="0x10186ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x10186ade0"/>
        <function-ref name="toggle" scoped="" ref="0x101869020"/>
        <function-ref name="isOutput" scoped="" ref="0x1018691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101869340"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018694d0"/>
        <function-ref name="get" scoped="" ref="0x101869660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101869980"/>
        <function-ref name="set" scoped="" ref="0x101869b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101869ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101869e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101898120"/>
        <function-ref name="clr" scoped="" ref="0x1018982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101895100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101895100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101895480"/>
        <function-ref name="isInput" scoped="" ref="0x101895610"/>
        <function-ref name="setResistor" scoped="" ref="0x1018957a0"/>
        <function-ref name="toggle" scoped="" ref="0x101895930"/>
        <function-ref name="isOutput" scoped="" ref="0x101895ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x101895c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101895de0"/>
        <function-ref name="get" scoped="" ref="0x101894020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101894340"/>
        <function-ref name="set" scoped="" ref="0x1018944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101894660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101894a80"/>
        <function-ref name="clr" scoped="" ref="0x101894c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x101891d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x101891d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018900e0"/>
        <function-ref name="isInput" scoped="" ref="0x101890270"/>
        <function-ref name="setResistor" scoped="" ref="0x101890400"/>
        <function-ref name="toggle" scoped="" ref="0x101890590"/>
        <function-ref name="isOutput" scoped="" ref="0x101890720"/>
        <function-ref name="getResistor" scoped="" ref="0x1018908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101890a40"/>
        <function-ref name="get" scoped="" ref="0x101890bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101890d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10188f020"/>
        <function-ref name="set" scoped="" ref="0x10188f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10188f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10188f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10188f760"/>
        <function-ref name="clr" scoped="" ref="0x10188f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1018fe2f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1018fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018fe670"/>
        <function-ref name="isInput" scoped="" ref="0x1018fe800"/>
        <function-ref name="setResistor" scoped="" ref="0x1018fe990"/>
        <function-ref name="toggle" scoped="" ref="0x1018feb20"/>
        <function-ref name="isOutput" scoped="" ref="0x1018fecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x1018fee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018fd020"/>
        <function-ref name="get" scoped="" ref="0x1018fd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018fd340"/>
        <function-ref name="getRaw" scoped="" ref="0x1018fd4d0"/>
        <function-ref name="set" scoped="" ref="0x1018fd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1018fd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018fd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1018fdc10"/>
        <function-ref name="clr" scoped="" ref="0x1018fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1018d5020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1018d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018d53a0"/>
        <function-ref name="isInput" scoped="" ref="0x1018d5530"/>
        <function-ref name="toggle" scoped="" ref="0x1018d56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x1018d5850"/>
        <function-ref name="get" scoped="" ref="0x1018d59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018d5b70"/>
        <function-ref name="set" scoped="" ref="0x1018d5d00"/>
        <function-ref name="clr" scoped="" ref="0x1018fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1018f9de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1018f9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018f8180"/>
        <function-ref name="isInput" scoped="" ref="0x1018f8310"/>
        <function-ref name="setResistor" scoped="" ref="0x1018f84a0"/>
        <function-ref name="toggle" scoped="" ref="0x1018f8630"/>
        <function-ref name="isOutput" scoped="" ref="0x1018f87c0"/>
        <function-ref name="getResistor" scoped="" ref="0x1018f8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018f8ae0"/>
        <function-ref name="get" scoped="" ref="0x1018f8c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x1018f8e00"/>
        <function-ref name="getRaw" scoped="" ref="0x1018f7020"/>
        <function-ref name="set" scoped="" ref="0x1018f71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1018f7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1018f74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1018f7760"/>
        <function-ref name="clr" scoped="" ref="0x1018f78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1018fab90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1018fab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018f9020"/>
        <function-ref name="isInput" scoped="" ref="0x1018f91b0"/>
        <function-ref name="toggle" scoped="" ref="0x1018f9340"/>
        <function-ref name="isOutput" scoped="" ref="0x1018f94d0"/>
        <function-ref name="get" scoped="" ref="0x1018f9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018f97f0"/>
        <function-ref name="set" scoped="" ref="0x1018f9980"/>
        <function-ref name="clr" scoped="" ref="0x1018f9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x1018f4930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x1018f4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018f4cb0"/>
        <function-ref name="isInput" scoped="" ref="0x1018f4e40"/>
        <function-ref name="setResistor" scoped="" ref="0x101925020"/>
        <function-ref name="toggle" scoped="" ref="0x1019251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x101925340"/>
        <function-ref name="getResistor" scoped="" ref="0x1019254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101925660"/>
        <function-ref name="get" scoped="" ref="0x1019257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101925980"/>
        <function-ref name="getRaw" scoped="" ref="0x101925b10"/>
        <function-ref name="set" scoped="" ref="0x101925ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101925e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101924020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1019242b0"/>
        <function-ref name="clr" scoped="" ref="0x101924440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1018f5710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1018f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1018f5a90"/>
        <function-ref name="isInput" scoped="" ref="0x1018f5c20"/>
        <function-ref name="toggle" scoped="" ref="0x1018f5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x1018f4020"/>
        <function-ref name="get" scoped="" ref="0x1018f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1018f4340"/>
        <function-ref name="set" scoped="" ref="0x1018f44d0"/>
        <function-ref name="clr" scoped="" ref="0x1018f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x101ac5370" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="WiTempAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101ac5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101ac2870"/>
        <function-ref name="fired" scoped="" ref="0x101ac4e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x101ac3c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x101ac3780"/>
        <function-ref name="getdt" scoped="" ref="0x101ac11e0"/>
        <function-ref name="gett0" scoped="" ref="0x101ac2cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x101ac3300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x101ac4020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x101ac2260"/>
        <function-ref name="startOneShot" scoped="" ref="0x101ac44f0"/>
        <function-ref name="stop" scoped="" ref="0x101ac49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10190f9f0" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10190f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10193c020"/>
        <function-ref name="fired" scoped="" ref="0x10190d510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10193d300"/>
        <function-ref name="isOneShot" scoped="" ref="0x10190de10"/>
        <function-ref name="getdt" scoped="" ref="0x10193c920"/>
        <function-ref name="gett0" scoped="" ref="0x10193c4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x10190d990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10190e670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10193d910"/>
        <function-ref name="startOneShot" scoped="" ref="0x10190eb40"/>
        <function-ref name="stop" scoped="" ref="0x10190d090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x101937560" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x101937560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101933a20"/>
        <function-ref name="fired" scoped="" ref="0x101935020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x101935da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x101935920"/>
        <function-ref name="getdt" scoped="" ref="0x1019324a0"/>
        <function-ref name="gett0" scoped="" ref="0x101932020"/>
        <function-ref name="isRunning" scoped="" ref="0x1019354a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x1019361b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x101933410"/>
        <function-ref name="startOneShot" scoped="" ref="0x101936680"/>
        <function-ref name="stop" scoped="" ref="0x101936b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x101931020" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x101931020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101931c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10193a780" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10193a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10193ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x101a17870" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x101a17870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101a13090"/>
        <function-ref name="fired" scoped="" ref="0x101a14090"/>
        <function-ref name="startAt" scoped="" ref="0x101a14a10"/>
        <function-ref name="isRunning" scoped="" ref="0x101a14550"/>
        <function-ref name="getAlarm" scoped="" ref="0x101a13550"/>
        <function-ref name="start" scoped="" ref="0x101a156a0"/>
        <function-ref name="stop" scoped="" ref="0x101a15bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101a17020" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101a17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101a173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1030bc4f0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1030bc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1030badb0"/>
        <function-ref name="fired" scoped="" ref="0x1030bbda0"/>
        <function-ref name="startAt" scoped="" ref="0x1030ba760"/>
        <function-ref name="isRunning" scoped="" ref="0x1030ba2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x1030b92a0"/>
        <function-ref name="start" scoped="" ref="0x1030bb3d0"/>
        <function-ref name="stop" scoped="" ref="0x1030bb8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1030bec40" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1030bec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1030bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1030a4da0" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1030a4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x1030a3180"/>
        <function-ref name="setEvent" scoped="" ref="0x1030a3310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1030a34a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1030a3630"/>
        <function-ref name="fired" scoped="" ref="0x1030a37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x1030a6340" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1030a6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1030a66c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1030a6850"/>
        <function-ref name="enableEvents" scoped="" ref="0x1030a69e0"/>
        <function-ref name="get" scoped="" ref="0x1030a6b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x1030a6d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1030a5020"/>
        <function-ref name="getMode" scoped="" ref="0x1030a51b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1030a5340"/>
        <function-ref name="overflow" scoped="" ref="0x1030a54d0"/>
        <function-ref name="setMode" scoped="" ref="0x1030a5660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1030a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1030a5a80" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1030a5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1030a5e00"/>
        <function-ref name="getControl" scoped="" ref="0x1030a4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1030a41b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x1030a4340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1030a44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1030a4660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1030a47f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1030a4980"/>
        <function-ref name="setControl" scoped="" ref="0x1030a4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1019701d0" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1019701d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101970550"/>
        <function-ref name="setEvent" scoped="" ref="0x1019706e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x101970870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x101970a00"/>
        <function-ref name="fired" scoped="" ref="0x101970b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x101942990" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x101942990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101942d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x101941020"/>
        <function-ref name="enableEvents" scoped="" ref="0x1019411b0"/>
        <function-ref name="get" scoped="" ref="0x101941340"/>
        <function-ref name="disableEvents" scoped="" ref="0x1019414d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101941660"/>
        <function-ref name="getMode" scoped="" ref="0x1019417f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101941980"/>
        <function-ref name="overflow" scoped="" ref="0x101941b10"/>
        <function-ref name="setMode" scoped="" ref="0x101941ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x101941e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10193f720" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10193f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10193faa0"/>
        <function-ref name="getControl" scoped="" ref="0x10193fc30"/>
        <function-ref name="enableEvents" scoped="" ref="0x10193fdc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101971020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x1019711b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x101971340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1019714d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101971660"/>
        <function-ref name="setControl" scoped="" ref="0x1019717f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x10309aa80" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10309aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10309ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x103099020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x1030991b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x103099340"/>
        <function-ref name="fired" scoped="" ref="0x1030994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10309c190" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10309c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10309c510"/>
        <function-ref name="setClockSource" scoped="" ref="0x10309c6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10309c830"/>
        <function-ref name="get" scoped="" ref="0x10309c9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10309cb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10309cce0"/>
        <function-ref name="getMode" scoped="" ref="0x10309ce70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10309b030"/>
        <function-ref name="overflow" scoped="" ref="0x10309b1c0"/>
        <function-ref name="setMode" scoped="" ref="0x10309b350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10309b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1030a0020" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1030a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10309d870"/>
        <function-ref name="fired" scoped="" ref="0x10309e840"/>
        <function-ref name="startAt" scoped="" ref="0x10309d220"/>
        <function-ref name="isRunning" scoped="" ref="0x10309ed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x10309dd30"/>
        <function-ref name="start" scoped="" ref="0x1030a0e30"/>
        <function-ref name="stop" scoped="" ref="0x10309e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1030a1660" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1030a1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1030a19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10309b770" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10309b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10309baf0"/>
        <function-ref name="getControl" scoped="" ref="0x10309bc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x10309be10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10309a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10309a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10309a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10309a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10309a660"/>
        <function-ref name="setControl" scoped="" ref="0x10309a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1019bab50" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1019bab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1019bf9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1019be360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1019bfe70"/>
        <function-ref name="overflow" scoped="" ref="0x1019be820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x1019b8b70" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x1019b8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1019b59b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1019b4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1019b5e70"/>
        <function-ref name="overflow" scoped="" ref="0x1019b4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x1019d7c50" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x1019d7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1019d6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x1019d61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x1019d6340"/>
        <function-ref name="get" scoped="" ref="0x1019d64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x1019d6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1019d67f0"/>
        <function-ref name="getMode" scoped="" ref="0x1019d6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1019d6b10"/>
        <function-ref name="overflow" scoped="" ref="0x1019d6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x1019d6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1019d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1019b2b80" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1019b2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1019d89b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1019d7360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1019d8e70"/>
        <function-ref name="overflow" scoped="" ref="0x1019d7820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x1019e90f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x1019e90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1019e8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1019e89a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1019e84e0"/>
        <function-ref name="overflow" scoped="" ref="0x1019e8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x1019d2cf0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1019d2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1019ebb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1019ea550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1019ea090"/>
        <function-ref name="overflow" scoped="" ref="0x1019eaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1030b6890" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1030b6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1030b30d0"/>
        <function-ref name="fired" scoped="" ref="0x1030b40d0"/>
        <function-ref name="startAt" scoped="" ref="0x1030b4a50"/>
        <function-ref name="isRunning" scoped="" ref="0x1030b4590"/>
        <function-ref name="getAlarm" scoped="" ref="0x1030b3590"/>
        <function-ref name="start" scoped="" ref="0x1030b56e0"/>
        <function-ref name="stop" scoped="" ref="0x1030b5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x1030af0a0" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x1030af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x1030adb30"/>
        <function-ref name="fired" scoped="" ref="0x1030ae9f0"/>
        <function-ref name="startAt" scoped="" ref="0x1030ad4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x1030ad020"/>
        <function-ref name="getAlarm" scoped="" ref="0x1030ac020"/>
        <function-ref name="start" scoped="" ref="0x1030ae020"/>
        <function-ref name="stop" scoped="" ref="0x1030ae530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x1030b3c00" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x1030b3c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1030b2a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1030b14e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1030b1020"/>
        <function-ref name="overflow" scoped="" ref="0x1030b19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x101a4d9c0" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x101a4d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101a4dd40"/>
        <function-ref name="runTask" scoped="" ref="0x101a4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x101a51850" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x101a51850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101a4d090"/>
        <function-ref name="fired" scoped="" ref="0x101a4f090"/>
        <function-ref name="startAt" scoped="" ref="0x101a4fa10"/>
        <function-ref name="isRunning" scoped="" ref="0x101a4f550"/>
        <function-ref name="getAlarm" scoped="" ref="0x101a4d550"/>
        <function-ref name="start" scoped="" ref="0x101a506a0"/>
        <function-ref name="stop" scoped="" ref="0x101a50bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x101a562f0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101a562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101a52870"/>
        <function-ref name="fired" scoped="" ref="0x101a55e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x101a54c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x101a54780"/>
        <function-ref name="getdt" scoped="" ref="0x101a511e0"/>
        <function-ref name="gett0" scoped="" ref="0x101a52cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x101a54300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x101a55020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x101a52260"/>
        <function-ref name="startOneShot" scoped="" ref="0x101a554f0"/>
        <function-ref name="stop" scoped="" ref="0x101a559c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x101aa3a00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x101aa3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101aa3d80"/>
        <function-ref name="runTask" scoped="" ref="0x101aa2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x101aa8640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x101aa8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101aa4c40"/>
        <function-ref name="fired" scoped="" ref="0x101aa61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x101aa4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x101aa6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x101aa3590"/>
        <function-ref name="gett0" scoped="" ref="0x101aa3110"/>
        <function-ref name="isRunning" scoped="" ref="0x101aa6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x101aa7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x101aa4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x101aa7860"/>
        <function-ref name="stop" scoped="" ref="0x101aa7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x101aae150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x101aae150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101aaa700"/>
        <function-ref name="fired" scoped="" ref="0x101aadc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x101aaba50"/>
        <function-ref name="isOneShot" scoped="" ref="0x101aab5b0"/>
        <function-ref name="getdt" scoped="" ref="0x101aa8090"/>
        <function-ref name="gett0" scoped="" ref="0x101aaaba0"/>
        <function-ref name="isRunning" scoped="" ref="0x101aab110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x101aaed60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x101aaa0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x101aad2a0"/>
        <function-ref name="stop" scoped="" ref="0x101aad790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x101aa0790" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x101aa0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101a9f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x101a9fa60" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101a9fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101acd890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101acb260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101acdd50"/>
        <function-ref name="overflow" scoped="" ref="0x101acb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x101abb7c0" loc="6:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x101abb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101abbb40"/>
        <function-ref name="receive" scoped="" ref="0x101abbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x101ae6660" loc="5:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x101ae6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101ae69e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x101ae6b70"/>
        <function-ref name="receive" scoped="" ref="0x101ae6d00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x101abb020"/>
        <function-ref name="receiveDone" scoped="" ref="0x101abb1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x101abb340"/>
        <function-ref name="sendDone" scoped="" ref="0x101abb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x101abc020" loc="4:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x101abc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x101abc3a0"/>
        <function-ref name="stop" scoped="" ref="0x101abc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x101d408f0" loc="45:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x101d408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x101d40c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x101d40e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x101d3d060" loc="47:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x101d3d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101d3d3e0"/>
        <function-ref name="receive" scoped="" ref="0x101d3d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x101d3d800" loc="49:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101d3d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x101d3db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x101d3e0c0" loc="46:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x101d3e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101d3e440"/>
        <function-ref name="receivedByte" scoped="" ref="0x101d3e5d0"/>
        <function-ref name="receive" scoped="" ref="0x101d3e760"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x101d3e8f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x101d3ea80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x101d3ec10"/>
        <function-ref name="sendDone" scoped="" ref="0x101d3eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101d41c00" loc="44:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101d41c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101d40020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101d401b0"/>
        <function-ref name="request" scoped="" ref="0x101d40340"/>
        <function-ref name="granted" scoped="" ref="0x101d404d0"/>
        <function-ref name="isOwner" scoped="" ref="0x101d40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x101b311d0" loc="42:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x101b311d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x101b31550"/>
        <function-ref name="configure" scoped="" ref="0x101b316e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x101b2d560" loc="44:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x101b2d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101b2d8e0"/>
        <function-ref name="receive" scoped="" ref="0x101b2da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x101b2b6c0" loc="47:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101b2b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x101b2ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x101b2e020" loc="43:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x101b2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101b2e3a0"/>
        <function-ref name="receivedByte" scoped="" ref="0x101b2e530"/>
        <function-ref name="receive" scoped="" ref="0x101b2e6c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x101b2e850"/>
        <function-ref name="receiveDone" scoped="" ref="0x101b2e9e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x101b2eb70"/>
        <function-ref name="sendDone" scoped="" ref="0x101b2ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x101b2c3f0" loc="46:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x101b2c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101b2c770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101b2c900"/>
        <function-ref name="request" scoped="" ref="0x101b2ca90"/>
        <function-ref name="granted" scoped="" ref="0x101b2cc20"/>
        <function-ref name="isOwner" scoped="" ref="0x101b2cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101b334d0" loc="41:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101b334d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101b33850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101b339e0"/>
        <function-ref name="request" scoped="" ref="0x101b33b70"/>
        <function-ref name="granted" scoped="" ref="0x101b33d00"/>
        <function-ref name="isOwner" scoped="" ref="0x101b32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x101b60c20" loc="48:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x101b60c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x101b62020"/>
        <function-ref name="txDone" scoped="" ref="0x101b621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x101bd0dc0" loc="44:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x101bd0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x101bce180"/>
        <function-ref name="configure" scoped="" ref="0x101bce310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x101bcd890" loc="46:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x101bcd890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101bcdc30"/>
        <function-ref name="receive" scoped="" ref="0x101bcddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x101bcb020" loc="49:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101bcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x101bcb3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x101bcb690" loc="50:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x101bcb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x101bcba10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x101bcbba0"/>
        <function-ref name="setUctl" scoped="" ref="0x101bcbd30"/>
        <function-ref name="enableUart" scoped="" ref="0x101bca020"/>
        <function-ref name="setUrctl" scoped="" ref="0x101bca1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x101bca340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x101bca4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x101bca660"/>
        <function-ref name="getUrctl" scoped="" ref="0x101bca7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x101bca980"/>
        <function-ref name="getUmctl" scoped="" ref="0x101bcab10"/>
        <function-ref name="disableIntr" scoped="" ref="0x101bcaca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x101bcae30"/>
        <function-ref name="getUbr" scoped="" ref="0x101bc9120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x101bc92b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x101bc9440"/>
        <function-ref name="isUartRx" scoped="" ref="0x101bc95d0"/>
        <function-ref name="isUart" scoped="" ref="0x101bc9760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x101bc98f0"/>
        <function-ref name="isSpi" scoped="" ref="0x101bc9a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x101bc9c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x101bc9da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x101bc8020"/>
        <function-ref name="enableIntr" scoped="" ref="0x101bc81b0"/>
        <function-ref name="getMode" scoped="" ref="0x101bc8340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x101bc86d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x101bc8860"/>
        <function-ref name="setUbr" scoped="" ref="0x101bc89f0"/>
        <function-ref name="tx" scoped="" ref="0x101bc8b80"/>
        <function-ref name="getUctl" scoped="" ref="0x101bc8d10"/>
        <function-ref name="disableUart" scoped="" ref="0x101bc7020"/>
        <function-ref name="enableSpi" scoped="" ref="0x101bc71b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x101bc7340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x101bc74d0"/>
        <function-ref name="rx" scoped="" ref="0x101bc7660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x101bc77f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x101bc7980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x101bc7b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x101bc7ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x101bc7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x101bce6d0" loc="45:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x101bce6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101bcea70"/>
        <function-ref name="receivedByte" scoped="" ref="0x101bcec00"/>
        <function-ref name="receive" scoped="" ref="0x101bced90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x101bcd020"/>
        <function-ref name="receiveDone" scoped="" ref="0x101bcd1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x101bcd340"/>
        <function-ref name="sendDone" scoped="" ref="0x101bcd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x101bc6c90" loc="52:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101bc6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101bc5ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101bc44e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101bc4020"/>
        <function-ref name="overflow" scoped="" ref="0x101bc49a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x101bcc230" loc="48:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x101bcc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101bcc5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101bcc760"/>
        <function-ref name="request" scoped="" ref="0x101bcc8f0"/>
        <function-ref name="granted" scoped="" ref="0x101bcca80"/>
        <function-ref name="isOwner" scoped="" ref="0x101bccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101bd0020" loc="43:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101bd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101bd03c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101bd0550"/>
        <function-ref name="request" scoped="" ref="0x101bd06e0"/>
        <function-ref name="granted" scoped="" ref="0x101bd0870"/>
        <function-ref name="isOwner" scoped="" ref="0x101bd0a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x101bc6290" loc="51:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x101bc6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x101bc6630"/>
        <function-ref name="txDone" scoped="" ref="0x101bc67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x101bc4dd0" loc="53:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x101bc4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x101bc2180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x101bc2310"/>
        <function-ref name="led1On" scoped="" ref="0x101bc24a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x101bc2630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x101bc27c0"/>
        <function-ref name="get" scoped="" ref="0x101bc2950"/>
        <function-ref name="led1Off" scoped="" ref="0x101bc2ae0"/>
        <function-ref name="led2On" scoped="" ref="0x101bc11b0"/>
        <function-ref name="set" scoped="" ref="0x101bc2e00"/>
        <function-ref name="led2Off" scoped="" ref="0x101bc2c70"/>
        <function-ref name="led0On" scoped="" ref="0x101bc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x101bf03b0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x101bf03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x101bf0730"/>
        <function-ref name="txDone" scoped="" ref="0x101bf08c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x101bf6080" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x101bf6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x101bf6400"/>
        <function-ref name="stop" scoped="" ref="0x101bf6590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x101bf68b0" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x101bf68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x101bf6c30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x101bf6dc0"/>
        <function-ref name="setUctl" scoped="" ref="0x101bf5020"/>
        <function-ref name="enableUart" scoped="" ref="0x101bf51b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x101bf5340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x101bf54d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x101bf5660"/>
        <function-ref name="getUtctl" scoped="" ref="0x101bf57f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x101bf5980"/>
        <function-ref name="resetUsart" scoped="" ref="0x101bf5b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x101bf5ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x101bf5e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x101bf3020"/>
        <function-ref name="getUbr" scoped="" ref="0x101bf32b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x101bf3440"/>
        <function-ref name="setUmctl" scoped="" ref="0x101bf35d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x101bf3760"/>
        <function-ref name="isUart" scoped="" ref="0x101bf38f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x101bf3a80"/>
        <function-ref name="isSpi" scoped="" ref="0x101bf3c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x101bf3da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x101bf2020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x101bf21b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x101bf2340"/>
        <function-ref name="getMode" scoped="" ref="0x101bf24d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x101bf2860"/>
        <function-ref name="clrIntr" scoped="" ref="0x101bf29f0"/>
        <function-ref name="setUbr" scoped="" ref="0x101bf2b80"/>
        <function-ref name="tx" scoped="" ref="0x101bf2d10"/>
        <function-ref name="getUctl" scoped="" ref="0x101bf1020"/>
        <function-ref name="disableUart" scoped="" ref="0x101bf11b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x101bf1340"/>
        <function-ref name="setModeUart" scoped="" ref="0x101bf14d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x101bf1660"/>
        <function-ref name="rx" scoped="" ref="0x101bf17f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x101bf1980"/>
        <function-ref name="isUartTx" scoped="" ref="0x101bf1b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x101bf1ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x101bf1e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x101bf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x101be3670" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x101be3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101be39f0"/>
        <function-ref name="isInput" scoped="" ref="0x101be3b80"/>
        <function-ref name="setResistor" scoped="" ref="0x101be3d10"/>
        <function-ref name="toggle" scoped="" ref="0x101be2020"/>
        <function-ref name="isOutput" scoped="" ref="0x101be21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101be2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x101be24d0"/>
        <function-ref name="get" scoped="" ref="0x101be2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101be27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101be2980"/>
        <function-ref name="set" scoped="" ref="0x101be2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101be2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101be2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101be1120"/>
        <function-ref name="clr" scoped="" ref="0x101be12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x101be8dc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x101be8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x101be7180"/>
        <function-ref name="txDone" scoped="" ref="0x101be7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x101be1670" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x101be1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101be19f0"/>
        <function-ref name="isInput" scoped="" ref="0x101be1b80"/>
        <function-ref name="setResistor" scoped="" ref="0x101be1d10"/>
        <function-ref name="toggle" scoped="" ref="0x101be0020"/>
        <function-ref name="isOutput" scoped="" ref="0x101be01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101be0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x101be04d0"/>
        <function-ref name="get" scoped="" ref="0x101be0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101be07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101be0980"/>
        <function-ref name="set" scoped="" ref="0x101be0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101be0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101be0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101bdf120"/>
        <function-ref name="clr" scoped="" ref="0x101bdf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x101bdf670" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x101bdf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101bdf9f0"/>
        <function-ref name="isInput" scoped="" ref="0x101bdfb80"/>
        <function-ref name="setResistor" scoped="" ref="0x101bdfd10"/>
        <function-ref name="toggle" scoped="" ref="0x101bde020"/>
        <function-ref name="isOutput" scoped="" ref="0x101bde1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101bde340"/>
        <function-ref name="makeOutput" scoped="" ref="0x101bde4d0"/>
        <function-ref name="get" scoped="" ref="0x101bde660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101bde7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101bde980"/>
        <function-ref name="set" scoped="" ref="0x101bdeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101bdeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101bdee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101bdd120"/>
        <function-ref name="clr" scoped="" ref="0x101bdd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x101bec020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x101bec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x101bec3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x101bec530"/>
        <function-ref name="setUctl" scoped="" ref="0x101bec6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x101bec850"/>
        <function-ref name="setUrctl" scoped="" ref="0x101bec9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x101becb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x101becd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x101beb020"/>
        <function-ref name="getUrctl" scoped="" ref="0x101beb1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x101beb340"/>
        <function-ref name="getUmctl" scoped="" ref="0x101beb4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x101beb660"/>
        <function-ref name="setUtctl" scoped="" ref="0x101beb7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x101beba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x101bebc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x101bebda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x101bea020"/>
        <function-ref name="isUart" scoped="" ref="0x101bea1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x101bea340"/>
        <function-ref name="isSpi" scoped="" ref="0x101bea4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x101bea660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x101bea7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x101bea980"/>
        <function-ref name="enableIntr" scoped="" ref="0x101beab10"/>
        <function-ref name="getMode" scoped="" ref="0x101beaca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x101be9220"/>
        <function-ref name="clrIntr" scoped="" ref="0x101be93b0"/>
        <function-ref name="setUbr" scoped="" ref="0x101be9540"/>
        <function-ref name="tx" scoped="" ref="0x101be96d0"/>
        <function-ref name="getUctl" scoped="" ref="0x101be9860"/>
        <function-ref name="disableUart" scoped="" ref="0x101be99f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x101be9b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x101be9d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x101be8020"/>
        <function-ref name="rx" scoped="" ref="0x101be81b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x101be8340"/>
        <function-ref name="isUartTx" scoped="" ref="0x101be84d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x101be8660"/>
        <function-ref name="disableSpi" scoped="" ref="0x101be87f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x101be8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x101bef710" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x101bef710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x101befa90"/>
        <function-ref name="stop" scoped="" ref="0x101befc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x101be5670" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x101be5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101be59f0"/>
        <function-ref name="isInput" scoped="" ref="0x101be5b80"/>
        <function-ref name="setResistor" scoped="" ref="0x101be5d10"/>
        <function-ref name="toggle" scoped="" ref="0x101be4020"/>
        <function-ref name="isOutput" scoped="" ref="0x101be41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101be4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x101be44d0"/>
        <function-ref name="get" scoped="" ref="0x101be4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101be47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101be4980"/>
        <function-ref name="set" scoped="" ref="0x101be4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101be4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101be4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101be3120"/>
        <function-ref name="clr" scoped="" ref="0x101be32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x101be76d0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x101be76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101be7a50"/>
        <function-ref name="isInput" scoped="" ref="0x101be7be0"/>
        <function-ref name="setResistor" scoped="" ref="0x101be7d70"/>
        <function-ref name="toggle" scoped="" ref="0x101be6020"/>
        <function-ref name="isOutput" scoped="" ref="0x101be61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101be6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x101be64d0"/>
        <function-ref name="get" scoped="" ref="0x101be6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101be67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101be6980"/>
        <function-ref name="set" scoped="" ref="0x101be6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101be6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101be6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101be5120"/>
        <function-ref name="clr" scoped="" ref="0x101be52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x101c59080" loc="43:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101c59080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101c58020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101c589a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101c584e0"/>
        <function-ref name="overflow" scoped="" ref="0x101c58e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x10314cc70" loc="43:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x10314cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x10314b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x10314b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x103146d70" loc="48:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x103146d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x103145180"/>
        <function-ref name="configure" scoped="" ref="0x103145310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x1031465d0" loc="46:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x1031465d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103146950"/>
        <function-ref name="txDone" scoped="" ref="0x103146ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10314c020" loc="42:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10314c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10314c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10314c530"/>
        <function-ref name="request" scoped="" ref="0x10314c6c0"/>
        <function-ref name="granted" scoped="" ref="0x10314c850"/>
        <function-ref name="isOwner" scoped="" ref="0x10314c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x10314bbe0" loc="45:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x10314bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10314a020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10314a1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x10314a340"/>
        <function-ref name="enableUart" scoped="" ref="0x10314a4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x10314a660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10314a7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10314a980"/>
        <function-ref name="getUtctl" scoped="" ref="0x10314ab10"/>
        <function-ref name="getUrctl" scoped="" ref="0x10314aca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x10314ae30"/>
        <function-ref name="getUmctl" scoped="" ref="0x103149020"/>
        <function-ref name="disableIntr" scoped="" ref="0x1031491b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x103149340"/>
        <function-ref name="getUbr" scoped="" ref="0x1031495d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x103149760"/>
        <function-ref name="setUmctl" scoped="" ref="0x1031498f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x103149a80"/>
        <function-ref name="isUart" scoped="" ref="0x103149c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x103149da0"/>
        <function-ref name="isSpi" scoped="" ref="0x103148020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1031481b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x103148340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1031484d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x103148660"/>
        <function-ref name="getMode" scoped="" ref="0x1031487f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x103148b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x103148d10"/>
        <function-ref name="setUbr" scoped="" ref="0x103147020"/>
        <function-ref name="tx" scoped="" ref="0x1031471b0"/>
        <function-ref name="getUctl" scoped="" ref="0x103147340"/>
        <function-ref name="disableUart" scoped="" ref="0x1031474d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x103147660"/>
        <function-ref name="setModeUart" scoped="" ref="0x1031477f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x103147980"/>
        <function-ref name="rx" scoped="" ref="0x103147b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x103147ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x103147e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x103146020"/>
        <function-ref name="disableSpi" scoped="" ref="0x1031461b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x103146340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x10314b440" loc="44:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10314b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10314b7c0"/>
        <function-ref name="userId" scoped="" ref="0x10314b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x101c7fbc0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x101c7fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x101c7e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x101c7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x101c7d280" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x101c7d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x101c7d600"/>
        <function-ref name="configure" scoped="" ref="0x101c7d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x101c81980" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x101c81980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x101c81d00"/>
        <function-ref name="txDone" scoped="" ref="0x101c80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101c80850" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101c80850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101c80bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101c80d60"/>
        <function-ref name="request" scoped="" ref="0x101c7f020"/>
        <function-ref name="granted" scoped="" ref="0x101c7f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x101c7f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x101c7e4b0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x101c7e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x101c7e830"/>
        <function-ref name="userId" scoped="" ref="0x101c7e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x101ca7020" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x101ca7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x101ca73a0"/>
        <function-ref name="userId" scoped="" ref="0x101ca7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x101c790d0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x101c790d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x101c79470"/>
        <function-ref name="txDone" scoped="" ref="0x101c79600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x101ca8880" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x101ca8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101ca8c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x101c79a00" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x101c79a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101c79da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x101ca80a0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x101ca80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x101ca8420"/>
        <function-ref name="txDone" scoped="" ref="0x101ca85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x101d32020" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x101d32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x101d323c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x101d32550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x101d31cd0" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x101d31cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x101d300a0"/>
        <function-ref name="configure" scoped="" ref="0x101d30230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x101d327a0" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x101d327a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101d32b20"/>
        <function-ref name="requested" scoped="" ref="0x101d32cb0"/>
        <function-ref name="granted" scoped="" ref="0x101d32e40"/>
        <function-ref name="isOwner" scoped="" ref="0x101d31020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x101d311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101d34210" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101d34210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101d345b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101d34740"/>
        <function-ref name="request" scoped="" ref="0x101d348d0"/>
        <function-ref name="granted" scoped="" ref="0x101d34a60"/>
        <function-ref name="isOwner" scoped="" ref="0x101d34bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x101d31400" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x101d31400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x101d31780"/>
        <function-ref name="userId" scoped="" ref="0x101d31910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10317cca0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10317cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10317a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x10317a330" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x10317a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x10317a6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x10317a840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x10317a9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x10317ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1031773a0" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1031773a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x103177740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1031778d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x103175210" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x103175210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1031755b0"/>
        <function-ref name="configure" scoped="" ref="0x103175740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1031759d0" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1031759d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x103175d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x103174020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1031741b0"/>
        <function-ref name="dequeue" scoped="" ref="0x103174340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x103177b20" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x103177b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103176020"/>
        <function-ref name="requested" scoped="" ref="0x1031761b0"/>
        <function-ref name="granted" scoped="" ref="0x103176340"/>
        <function-ref name="isOwner" scoped="" ref="0x1031764d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x103176660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x103174590" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x103174590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x103174910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x103174aa0"/>
        <function-ref name="led1On" scoped="" ref="0x103174c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x103174dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x103172020"/>
        <function-ref name="get" scoped="" ref="0x1031721b0"/>
        <function-ref name="led1Off" scoped="" ref="0x103172340"/>
        <function-ref name="led0On" scoped="" ref="0x103172980"/>
        <function-ref name="set" scoped="" ref="0x103172660"/>
        <function-ref name="led2On" scoped="" ref="0x1031724d0"/>
        <function-ref name="led2Off" scoped="" ref="0x1031727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103178540" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103178540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1031788e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103178a70"/>
        <function-ref name="request" scoped="" ref="0x103178c00"/>
        <function-ref name="granted" scoped="" ref="0x103178d90"/>
        <function-ref name="isOwner" scoped="" ref="0x103177020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1031768b0" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1031768b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x103176c30"/>
        <function-ref name="userId" scoped="" ref="0x103176dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x103172c50" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x103172c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x103171020"/>
        <function-ref name="runTask" scoped="" ref="0x1031711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x101d59400" loc="72:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x101d59400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x101d59780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x101d599d0" loc="73:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x101d599d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101d59d50"/>
        <function-ref name="requested" scoped="" ref="0x101d57020"/>
        <function-ref name="granted" scoped="" ref="0x101d571b0"/>
        <function-ref name="isOwner" scoped="" ref="0x101d57340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x101d574d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x101d2cb20" loc="70:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x101d2cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x101d59020"/>
        <function-ref name="stop" scoped="" ref="0x101d591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x101d57720" loc="74:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x101d57720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x101d57aa0"/>
        <function-ref name="userId" scoped="" ref="0x101d57c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x1031d6b00" loc="62:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x1031d6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x1031d6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x1031d50f0" loc="63:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1031d50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1031d5470"/>
        <function-ref name="requested" scoped="" ref="0x1031d5600"/>
        <function-ref name="granted" scoped="" ref="0x1031d5790"/>
        <function-ref name="isOwner" scoped="" ref="0x1031d5920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1031d5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x1031d63a0" loc="60:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x1031d63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1031d6720"/>
        <function-ref name="stop" scoped="" ref="0x1031d68b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x1031d5d00" loc="64:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1031d5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1031d40a0"/>
        <function-ref name="userId" scoped="" ref="0x1031d4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x101d7b020" loc="3:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x101d7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x101d7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x101d7b690" loc="4:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101d7b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101d7ba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101d7bba0"/>
        <function-ref name="request" scoped="" ref="0x101d7bd30"/>
        <function-ref name="granted" scoped="" ref="0x101d7a020"/>
        <function-ref name="isOwner" scoped="" ref="0x101d7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x101d7e790" loc="2:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x101d7e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x101d7eb10"/>
        <function-ref name="stop" scoped="" ref="0x101d7eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x101d70e20" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x101d70e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x101d6c1c0"/>
        <function-ref name="stopDone" scoped="" ref="0x101d6c350"/>
        <function-ref name="start" scoped="" ref="0x101d6c4e0"/>
        <function-ref name="stop" scoped="" ref="0x101d6c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x101d6ce40" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x101d6ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101d6b1e0"/>
        <function-ref name="getPayload" scoped="" ref="0x101d6b370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101d6b500"/>
        <function-ref name="cancel" scoped="" ref="0x101d6b690"/>
        <function-ref name="sendDone" scoped="" ref="0x101d6b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x101d6ac10" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x101d6ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x101d69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x101d692b0" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x101d692b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101d69630"/>
        <function-ref name="payloadLength" scoped="" ref="0x101d697c0"/>
        <function-ref name="getPayload" scoped="" ref="0x101d69950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101d69ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x101d69c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x101d65430" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x101d65430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x101d9cb00"/>
        <function-ref name="clear" scoped="" ref="0x101d9b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x101d9c3d0"/>
        <function-ref name="set" scoped="" ref="0x101d9b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x101d8e430" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x101d8e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x101d8e7b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x101d8e940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x101d8ead0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x101d8ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x101d6a030" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x101d6a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x101d6a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x101d5e350" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101d5e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x101d5e6d0"/>
        <function-ref name="noAck" scoped="" ref="0x101d5e860"/>
        <function-ref name="wasAcked" scoped="" ref="0x101d5e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x101d68020" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x101d68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x101d683a0"/>
        <function-ref name="source" scoped="" ref="0x101d68530"/>
        <function-ref name="address" scoped="" ref="0x101d686c0"/>
        <function-ref name="destination" scoped="" ref="0x101d68850"/>
        <function-ref name="setSource" scoped="" ref="0x101d689e0"/>
        <function-ref name="setDestination" scoped="" ref="0x101d68b70"/>
        <function-ref name="type" scoped="" ref="0x101d68d00"/>
        <function-ref name="setType" scoped="" ref="0x101d67020"/>
        <function-ref name="isForMe" scoped="" ref="0x101d671b0"/>
        <function-ref name="setGroup" scoped="" ref="0x101d67340"/>
        <function-ref name="localGroup" scoped="" ref="0x101d674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x101d9a660" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x101d9a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x101d98ce0"/>
        <function-ref name="clear" scoped="" ref="0x101d97460"/>
        <function-ref name="isValid" scoped="" ref="0x101d985b0"/>
        <function-ref name="set" scoped="" ref="0x101d97b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x101d822f0" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x101d822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x101d82670"/>
        <function-ref name="stopDone" scoped="" ref="0x101d82800"/>
        <function-ref name="start" scoped="" ref="0x101d82990"/>
        <function-ref name="stop" scoped="" ref="0x101d82b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x101dbf2c0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x101dbf2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x101dbf640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x101dbf7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x101dbf960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x101dbfaf0"/>
        <function-ref name="setCca" scoped="" ref="0x101dbfc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x101dbfe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x101dab1d0" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x101dab1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x101dab650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x101dc1020" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x101dc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101dc13a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x101dc1530"/>
        <function-ref name="getPayload" scoped="" ref="0x101dc16c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101dc1850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x101dc19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x101d81320" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x101d81320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101d816a0"/>
        <function-ref name="getPayload" scoped="" ref="0x101d81830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101d819c0"/>
        <function-ref name="cancel" scoped="" ref="0x101d81b50"/>
        <function-ref name="sendDone" scoped="" ref="0x101d81ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x101d7f1d0" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x101d7f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x101d7f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x101db70f0" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x101db70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x101db7470"/>
        <function-ref name="setNetwork" scoped="" ref="0x101db7600"/>
        <function-ref name="getRssi" scoped="" ref="0x101db7790"/>
        <function-ref name="getNetwork" scoped="" ref="0x101db7920"/>
        <function-ref name="getPower" scoped="" ref="0x101db7ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x101db7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x101db6170" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x101db6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x101db64f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x101db6680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x101db6810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x101db69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x101d80510" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x101d80510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x101d80890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x101dc0020" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101dc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x101dc03a0"/>
        <function-ref name="noAck" scoped="" ref="0x101dc0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x101dc06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x101da2430" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x101da2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x101da27b0"/>
        <function-ref name="setRetries" scoped="" ref="0x101da2940"/>
        <function-ref name="getRetries" scoped="" ref="0x101da2ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x101da2c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x101da2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x101d7f800" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x101d7f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x101d7fb80"/>
        <function-ref name="source" scoped="" ref="0x101d7fd10"/>
        <function-ref name="address" scoped="" ref="0x101dc2020"/>
        <function-ref name="destination" scoped="" ref="0x101dc21b0"/>
        <function-ref name="setSource" scoped="" ref="0x101dc2340"/>
        <function-ref name="setDestination" scoped="" ref="0x101dc24d0"/>
        <function-ref name="type" scoped="" ref="0x101dc2660"/>
        <function-ref name="setType" scoped="" ref="0x101dc27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x101dc2980"/>
        <function-ref name="setGroup" scoped="" ref="0x101dc2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x101dc2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x101db3170" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x101db3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x101db34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x101de1020" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x101de1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x101de13a0"/>
        <function-ref name="stopDone" scoped="" ref="0x101de1530"/>
        <function-ref name="start" scoped="" ref="0x101de16c0"/>
        <function-ref name="stop" scoped="" ref="0x101de1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x101dd29d0" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x101dd29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x101dd2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x101dd0b70" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x101dd0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x101dcf020"/>
        <function-ref name="setRetries" scoped="" ref="0x101dcf1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x101dcf340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x101dcf4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x101dcf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x101dd3020" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x101dd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x101dd33a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x101dd3530"/>
        <function-ref name="getRssi" scoped="" ref="0x101dd36c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x101dd3850"/>
        <function-ref name="getPower" scoped="" ref="0x101dd39e0"/>
        <function-ref name="getLqi" scoped="" ref="0x101dd3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x101ddd990" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x101ddd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101dddd10"/>
        <function-ref name="getPayload" scoped="" ref="0x101dd5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101dd51b0"/>
        <function-ref name="cancel" scoped="" ref="0x101dd5340"/>
        <function-ref name="sendDone" scoped="" ref="0x101dd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x101dd0080" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x101dd0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x101dd0400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x101dd0590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x101dd0720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x101dd08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x101dde500" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x101dde500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x101dde880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x101dd2020" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x101dd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x101dd23a0"/>
        <function-ref name="noAck" scoped="" ref="0x101dd2530"/>
        <function-ref name="wasAcked" scoped="" ref="0x101dd26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101de01d0" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101de01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101de0550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101de06e0"/>
        <function-ref name="request" scoped="" ref="0x101de0870"/>
        <function-ref name="granted" scoped="" ref="0x101de0a00"/>
        <function-ref name="isOwner" scoped="" ref="0x101de0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x101dd46f0" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x101dd46f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101dd4a70"/>
        <function-ref name="getPayload" scoped="" ref="0x101dd4c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101dd4d90"/>
        <function-ref name="cancel" scoped="" ref="0x101dde020"/>
        <function-ref name="sendDone" scoped="" ref="0x101dde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x101ddebc0" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x101ddebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101ddd020"/>
        <function-ref name="payloadLength" scoped="" ref="0x101ddd1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x101ddd340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101ddd4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x101ddd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x101dd5840" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x101dd5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x101dd5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x101dcc390" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x101dcc390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x101dcc710"/>
        <function-ref name="stopDone" scoped="" ref="0x101dcc8a0"/>
        <function-ref name="start" scoped="" ref="0x101dcca30"/>
        <function-ref name="stop" scoped="" ref="0x101dccbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x101dca330" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x101dca330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x101dca6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x101dca840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x101dca9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x101dcab60"/>
        <function-ref name="setCca" scoped="" ref="0x101dcacf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x101dcae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x101dcce80" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x101dcce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101dcb220"/>
        <function-ref name="getPayload" scoped="" ref="0x101dcb3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101dcb540"/>
        <function-ref name="cancel" scoped="" ref="0x101dcb6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x101dcb860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x101dcbb40" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x101dcbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x101dca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x101dc9e70" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x101dc9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x101dc6220"/>
        <function-ref name="stopDone" scoped="" ref="0x101dc63b0"/>
        <function-ref name="start" scoped="" ref="0x101dc6540"/>
        <function-ref name="stop" scoped="" ref="0x101dc66d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x101dc57e0" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x101dc57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x101dc5b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x101dc5cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x101dc5e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x101dc4030"/>
        <function-ref name="setCca" scoped="" ref="0x101dc41c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x101dc4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x101e00890" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x101e00890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x101e00c10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x101e00da0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x101dff020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x101dff1b0"/>
        <function-ref name="setCca" scoped="" ref="0x101dff340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x101dff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x101df6c90" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x101df6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x101df40a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x101df4230"/>
        <function-ref name="getRssi" scoped="" ref="0x101df43c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x101df4550"/>
        <function-ref name="getPower" scoped="" ref="0x101df46e0"/>
        <function-ref name="getLqi" scoped="" ref="0x101df4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x101df99f0" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x101df99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101df9d70"/>
        <function-ref name="cancel" scoped="" ref="0x101e00020"/>
        <function-ref name="modify" scoped="" ref="0x101e001b0"/>
        <function-ref name="sendDone" scoped="" ref="0x101e00340"/>
        <function-ref name="resend" scoped="" ref="0x101e004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x101dc6990" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x101dc6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x101dc6d10"/>
        <function-ref name="getPayload" scoped="" ref="0x101dc5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x101dc51b0"/>
        <function-ref name="cancel" scoped="" ref="0x101dc5340"/>
        <function-ref name="sendDone" scoped="" ref="0x101dc54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x101df5cd0" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x101df5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x101df70a0"/>
        <function-ref name="rand32" scoped="" ref="0x101df7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x101e07d40" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x101e07d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x101e060e0"/>
        <function-ref name="stop" scoped="" ref="0x101e06270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x101ded320" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x101ded320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x101ded6a0"/>
        <function-ref name="getHeader" scoped="" ref="0x101ded830"/>
        <function-ref name="getMetadata" scoped="" ref="0x101ded9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x101e01b00" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x101e01b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x101e01e80"/>
        <function-ref name="rfOff" scoped="" ref="0x101e07030"/>
        <function-ref name="rxOn" scoped="" ref="0x101e071c0"/>
        <function-ref name="startVReg" scoped="" ref="0x101e07350"/>
        <function-ref name="stopVReg" scoped="" ref="0x101e074e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x101e07670"/>
        <function-ref name="stopOscillator" scoped="" ref="0x101e07800"/>
        <function-ref name="startVRegDone" scoped="" ref="0x101e07990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x101df74f0" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x101df74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x101df7870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x101df7a00"/>
        <function-ref name="led1On" scoped="" ref="0x101df7b90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x101df7d20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x101df6020"/>
        <function-ref name="get" scoped="" ref="0x101df61b0"/>
        <function-ref name="led1Off" scoped="" ref="0x101df6340"/>
        <function-ref name="led2Off" scoped="" ref="0x101df6980"/>
        <function-ref name="set" scoped="" ref="0x101df64d0"/>
        <function-ref name="led0On" scoped="" ref="0x101df6660"/>
        <function-ref name="led2On" scoped="" ref="0x101df67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x101dc4640" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101dc4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101dc49c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101dc4b50"/>
        <function-ref name="request" scoped="" ref="0x101dc4ce0"/>
        <function-ref name="granted" scoped="" ref="0x101dc4e70"/>
        <function-ref name="isOwner" scoped="" ref="0x101dc3030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x101de7890" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x101de7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x101de7d10"/>
        <function-ref name="toIdle" scoped="" ref="0x101df3020"/>
        <function-ref name="isState" scoped="" ref="0x101df31b0"/>
        <function-ref name="isIdle" scoped="" ref="0x101df3340"/>
        <function-ref name="requestState" scoped="" ref="0x101df34d0"/>
        <function-ref name="forceState" scoped="" ref="0x101df3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x101e28360" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x101e28360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101e286e0"/>
        <function-ref name="runTask" scoped="" ref="0x101e28870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x101e29470" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x101e29470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101e297f0"/>
        <function-ref name="runTask" scoped="" ref="0x101e29980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x101de54f0" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x101de54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101de5870"/>
        <function-ref name="runTask" scoped="" ref="0x101de5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x101e5d550" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x101e5d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x101e5d8d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x101e5da60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x101e5dbf0"/>
        <function-ref name="syncDone" scoped="" ref="0x101e5dd80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x101e6a020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x101e6a1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x101e6a340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x101e6a4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x101e6a660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x101e6a7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x101e6a980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x101e6ab10"/>
        <function-ref name="sync" scoped="" ref="0x101e6aca0"/>
        <function-ref name="getChannel" scoped="" ref="0x101e69020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x101e691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x101e57850" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x101e57850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e5a480"/>
        <function-ref name="readDone" scoped="" ref="0x101e5a900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x101e694b0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x101e694b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x101e69830"/>
        <function-ref name="rfOff" scoped="" ref="0x101e699c0"/>
        <function-ref name="rxOn" scoped="" ref="0x101e69b50"/>
        <function-ref name="startVReg" scoped="" ref="0x101e69ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x101e69e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x101e5b030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x101e5b1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x101e5b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101e6b020" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101e6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101e6b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101e6b530"/>
        <function-ref name="request" scoped="" ref="0x101e6b6c0"/>
        <function-ref name="granted" scoped="" ref="0x101e6b850"/>
        <function-ref name="isOwner" scoped="" ref="0x101e6b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x101e520c0" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x101e520c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x101e52440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x101e525d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x101e52760"/>
        <function-ref name="syncDone" scoped="" ref="0x101e528f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x101e52a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x101e52c10"/>
        <function-ref name="setChannel" scoped="" ref="0x101e52da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x101e51020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x101e511b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x101e51340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x101e514d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x101e51660"/>
        <function-ref name="sync" scoped="" ref="0x101e517f0"/>
        <function-ref name="getChannel" scoped="" ref="0x101e51a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x101e51c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x101e78020" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x101e78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e783a0"/>
        <function-ref name="write" scoped="" ref="0x101e78530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x101e92970" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x101e92970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x101e92cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x101e943a0" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x101e943a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101e90be0"/>
        <function-ref name="fired" scoped="" ref="0x101e93bc0"/>
        <function-ref name="startAt" scoped="" ref="0x101e90590"/>
        <function-ref name="isRunning" scoped="" ref="0x101e900d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x101e8f0d0"/>
        <function-ref name="start" scoped="" ref="0x101e931f0"/>
        <function-ref name="stop" scoped="" ref="0x101e93700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x101e7dc90" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x101e7dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e7c0a0"/>
        <function-ref name="write" scoped="" ref="0x101e7c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x101e8e830" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x101e8e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101e8ebb0"/>
        <function-ref name="isInput" scoped="" ref="0x101e8ed40"/>
        <function-ref name="toggle" scoped="" ref="0x101e8d020"/>
        <function-ref name="isOutput" scoped="" ref="0x101e8d1b0"/>
        <function-ref name="get" scoped="" ref="0x101e8d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x101e8d4d0"/>
        <function-ref name="set" scoped="" ref="0x101e8d660"/>
        <function-ref name="clr" scoped="" ref="0x101e8d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x101e4f500" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x101e4f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e4e130"/>
        <function-ref name="readDone" scoped="" ref="0x101e4e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x101eae020" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x101eae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101eae3a0"/>
        <function-ref name="runTask" scoped="" ref="0x101eae530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x101e788c0" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x101e788c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e78c40"/>
        <function-ref name="write" scoped="" ref="0x101e78dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x101e771d0" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x101e771d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e77550"/>
        <function-ref name="write" scoped="" ref="0x101e776e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x101e79a80" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x101e79a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e79e00"/>
        <function-ref name="write" scoped="" ref="0x101e7d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x101e83dd0" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x101e83dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x101e89180"/>
        <function-ref name="changed" scoped="" ref="0x101e89310"/>
        <function-ref name="amGroup" scoped="" ref="0x101e894a0"/>
        <function-ref name="setAddress" scoped="" ref="0x101e89630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x101e8f5c0" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x101e8f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101e8f940"/>
        <function-ref name="isInput" scoped="" ref="0x101e8fad0"/>
        <function-ref name="toggle" scoped="" ref="0x101e8fc60"/>
        <function-ref name="isOutput" scoped="" ref="0x101e8fdf0"/>
        <function-ref name="get" scoped="" ref="0x101e8e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x101e8e1b0"/>
        <function-ref name="set" scoped="" ref="0x101e8e340"/>
        <function-ref name="clr" scoped="" ref="0x101e8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x101e76830" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x101e76830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x101e76db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x101e8db50" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x101e8db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101e8c020"/>
        <function-ref name="isInput" scoped="" ref="0x101e8c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x101e8c340"/>
        <function-ref name="isOutput" scoped="" ref="0x101e8c4d0"/>
        <function-ref name="get" scoped="" ref="0x101e8c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x101e8c7f0"/>
        <function-ref name="set" scoped="" ref="0x101e8c980"/>
        <function-ref name="clr" scoped="" ref="0x101e8cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101e59cc0" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101e59cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101e540a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x101e7c5f0" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x101e7c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e7c970"/>
        <function-ref name="write" scoped="" ref="0x101e7cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x101e751d0" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x101e751d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x101e75550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x101e758f0" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x101e758f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101e75c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101e75e00"/>
        <function-ref name="request" scoped="" ref="0x101e73020"/>
        <function-ref name="granted" scoped="" ref="0x101e731b0"/>
        <function-ref name="isOwner" scoped="" ref="0x101e73340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x101e72560" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x101e72560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101e728e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101e72a70"/>
        <function-ref name="request" scoped="" ref="0x101e72c00"/>
        <function-ref name="granted" scoped="" ref="0x101e72d90"/>
        <function-ref name="isOwner" scoped="" ref="0x101eb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x101e50020" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x101e50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x101e503a0"/>
        <function-ref name="rfOff" scoped="" ref="0x101e50530"/>
        <function-ref name="rxOn" scoped="" ref="0x101e506c0"/>
        <function-ref name="startVReg" scoped="" ref="0x101e50850"/>
        <function-ref name="stopVReg" scoped="" ref="0x101e509e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x101e50b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x101e50d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x101e4f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x101e7d3c0" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x101e7d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e7d740"/>
        <function-ref name="write" scoped="" ref="0x101e7d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x101e791d0" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x101e791d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e79550"/>
        <function-ref name="write" scoped="" ref="0x101e796e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x101e74990" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x101e74990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x101e74d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x101eb82e0" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x101eb82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x101eb8660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x101eb87f0"/>
        <function-ref name="led1On" scoped="" ref="0x101eb8980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x101eb8b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x101eb8ca0"/>
        <function-ref name="get" scoped="" ref="0x101eb8e30"/>
        <function-ref name="led1Off" scoped="" ref="0x101eb7020"/>
        <function-ref name="led2Off" scoped="" ref="0x101eb7660"/>
        <function-ref name="set" scoped="" ref="0x101eb71b0"/>
        <function-ref name="led0On" scoped="" ref="0x101eb7340"/>
        <function-ref name="led2On" scoped="" ref="0x101eb74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x101eaf020" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x101eaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x101eaf3a0"/>
        <function-ref name="runTask" scoped="" ref="0x101eaf530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x101e54390" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x101e54390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101e54710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101e548a0"/>
        <function-ref name="request" scoped="" ref="0x101e54a30"/>
        <function-ref name="granted" scoped="" ref="0x101e54bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x101e54d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x101e829a0" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x101e829a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e82d20"/>
        <function-ref name="write" scoped="" ref="0x101e81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x101e82020" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x101e82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x101e824a0"/>
        <function-ref name="write" scoped="" ref="0x101e82630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x101e865b0" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x101e865b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101e86930"/>
        <function-ref name="disable" scoped="" ref="0x101e86ac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x101e86c50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x101e86de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x101e736f0" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x101e736f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x101e73a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x101e73c00"/>
        <function-ref name="request" scoped="" ref="0x101e73d90"/>
        <function-ref name="granted" scoped="" ref="0x101e72020"/>
        <function-ref name="isOwner" scoped="" ref="0x101e721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x101e76100" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x101e76100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x101e76480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101f137d0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101f137d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101f13b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x101f10220" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x101f10220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101f0eb30"/>
        <function-ref name="fired" scoped="" ref="0x101f0fa60"/>
        <function-ref name="startAt" scoped="" ref="0x101f0e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x101f0e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x101f0c020"/>
        <function-ref name="start" scoped="" ref="0x101f0f090"/>
        <function-ref name="stop" scoped="" ref="0x101f0f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x101f0a260" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x101f0a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x101f0a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x101f0aaf0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x101f0aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x101f64390"/>
        <function-ref name="fired" scoped="" ref="0x101f65360"/>
        <function-ref name="startAt" scoped="" ref="0x101f65ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x101f65820"/>
        <function-ref name="getAlarm" scoped="" ref="0x101f64850"/>
        <function-ref name="start" scoped="" ref="0x101f66970"/>
        <function-ref name="stop" scoped="" ref="0x101f66e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x103241020" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x103241020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10323f870"/>
        <function-ref name="fired" scoped="" ref="0x103240840"/>
        <function-ref name="startAt" scoped="" ref="0x10323f220"/>
        <function-ref name="isRunning" scoped="" ref="0x103240d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x10323fd30"/>
        <function-ref name="start" scoped="" ref="0x103241e30"/>
        <function-ref name="stop" scoped="" ref="0x103240380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x103242720" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x103242720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x103242aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10323a020" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10323a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x103237870"/>
        <function-ref name="fired" scoped="" ref="0x103238840"/>
        <function-ref name="startAt" scoped="" ref="0x103237220"/>
        <function-ref name="isRunning" scoped="" ref="0x103238d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x103237d30"/>
        <function-ref name="start" scoped="" ref="0x10323ae30"/>
        <function-ref name="stop" scoped="" ref="0x103238380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10323b760" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10323b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10323bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x1032218f0" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x1032218f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103221c70"/>
        <function-ref name="setEvent" scoped="" ref="0x103221e00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x103220020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x1032201b0"/>
        <function-ref name="fired" scoped="" ref="0x103220340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x103225e70" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x103225e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103223220"/>
        <function-ref name="setClockSource" scoped="" ref="0x1032233b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103223540"/>
        <function-ref name="get" scoped="" ref="0x1032236d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x103223860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x1032239f0"/>
        <function-ref name="getMode" scoped="" ref="0x103223b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103223d10"/>
        <function-ref name="overflow" scoped="" ref="0x103222020"/>
        <function-ref name="setMode" scoped="" ref="0x1032221b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x103222340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x1032225d0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x1032225d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x103222950"/>
        <function-ref name="getControl" scoped="" ref="0x103222ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x103222c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103222e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103221020"/>
        <function-ref name="disableEvents" scoped="" ref="0x1032211b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x103221340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x1032214d0"/>
        <function-ref name="setControl" scoped="" ref="0x103221660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x103217760" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x103217760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x103217ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x103217c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x103217e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x103216020"/>
        <function-ref name="fired" scoped="" ref="0x1032161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10321bdd0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10321bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x103219180"/>
        <function-ref name="setClockSource" scoped="" ref="0x103219310"/>
        <function-ref name="enableEvents" scoped="" ref="0x1032194a0"/>
        <function-ref name="get" scoped="" ref="0x103219630"/>
        <function-ref name="disableEvents" scoped="" ref="0x1032197c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x103219950"/>
        <function-ref name="getMode" scoped="" ref="0x103219ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x103219c70"/>
        <function-ref name="overflow" scoped="" ref="0x103219e00"/>
        <function-ref name="setMode" scoped="" ref="0x103218020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1032181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10321ebd0" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10321ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10321b4e0"/>
        <function-ref name="fired" scoped="" ref="0x10321c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x10321ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x10321c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x10321b9a0"/>
        <function-ref name="start" scoped="" ref="0x10321da80"/>
        <function-ref name="stop" scoped="" ref="0x10321c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10321e340" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10321e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10321e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x103218440" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x103218440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x1032187c0"/>
        <function-ref name="getControl" scoped="" ref="0x103218950"/>
        <function-ref name="enableEvents" scoped="" ref="0x103218ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x103218c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x103218e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x103217020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x1032171b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x103217340"/>
        <function-ref name="setControl" scoped="" ref="0x1032174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x101f3e080" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101f3e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101f3d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101f3d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101f3d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x101f3de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x101f350f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x101f350f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101f34020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101f349a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101f344e0"/>
        <function-ref name="overflow" scoped="" ref="0x101f34e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x101f39cd0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x101f39cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x101f38b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101f37550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101f37090"/>
        <function-ref name="overflow" scoped="" ref="0x101f37a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x1032341d0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x1032341d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x103231b30"/>
        <function-ref name="fired" scoped="" ref="0x1032339f0"/>
        <function-ref name="startAt" scoped="" ref="0x1032314e0"/>
        <function-ref name="isRunning" scoped="" ref="0x103231020"/>
        <function-ref name="getAlarm" scoped="" ref="0x103230020"/>
        <function-ref name="start" scoped="" ref="0x103233020"/>
        <function-ref name="stop" scoped="" ref="0x103233530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10322eb90" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10322eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10322a4e0"/>
        <function-ref name="fired" scoped="" ref="0x10322c4e0"/>
        <function-ref name="startAt" scoped="" ref="0x10322ce60"/>
        <function-ref name="isRunning" scoped="" ref="0x10322c9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x10322a9a0"/>
        <function-ref name="start" scoped="" ref="0x10322d9d0"/>
        <function-ref name="stop" scoped="" ref="0x10322c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x103230690" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x103230690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10322f5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10322e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10322fa70"/>
        <function-ref name="overflow" scoped="" ref="0x10322e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x101f5d090" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x101f5d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f5d410"/>
        <function-ref name="isInput" scoped="" ref="0x101f5d5a0"/>
        <function-ref name="toggle" scoped="" ref="0x101f5d730"/>
        <function-ref name="isOutput" scoped="" ref="0x101f5d8c0"/>
        <function-ref name="get" scoped="" ref="0x101f5da50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f5dbe0"/>
        <function-ref name="set" scoped="" ref="0x101f5dd70"/>
        <function-ref name="clr" scoped="" ref="0x101f5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x101f5c390" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x101f5c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f5c710"/>
        <function-ref name="isInput" scoped="" ref="0x101f5c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x101f5ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x101f5cbc0"/>
        <function-ref name="get" scoped="" ref="0x101f5cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f5b020"/>
        <function-ref name="set" scoped="" ref="0x101f5b1b0"/>
        <function-ref name="clr" scoped="" ref="0x101f5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x101f5b6a0" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x101f5b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f5ba20"/>
        <function-ref name="isInput" scoped="" ref="0x101f5bbb0"/>
        <function-ref name="toggle" scoped="" ref="0x101f5bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x101f5a020"/>
        <function-ref name="get" scoped="" ref="0x101f5a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f5a340"/>
        <function-ref name="set" scoped="" ref="0x101f5a4d0"/>
        <function-ref name="clr" scoped="" ref="0x101f5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x101f5fe60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x101f5fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f5e210"/>
        <function-ref name="isInput" scoped="" ref="0x101f5e3a0"/>
        <function-ref name="toggle" scoped="" ref="0x101f5e530"/>
        <function-ref name="isOutput" scoped="" ref="0x101f5e6c0"/>
        <function-ref name="get" scoped="" ref="0x101f5e850"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f5e9e0"/>
        <function-ref name="set" scoped="" ref="0x101f5eb70"/>
        <function-ref name="clr" scoped="" ref="0x101f5ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x101f59ce0" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x101f59ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f580a0"/>
        <function-ref name="isInput" scoped="" ref="0x101f58230"/>
        <function-ref name="toggle" scoped="" ref="0x101f583c0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f58550"/>
        <function-ref name="get" scoped="" ref="0x101f586e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f58870"/>
        <function-ref name="set" scoped="" ref="0x101f58a00"/>
        <function-ref name="clr" scoped="" ref="0x101f58b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x101f11b10" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x101f11b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f5f020"/>
        <function-ref name="isInput" scoped="" ref="0x101f5f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x101f5f340"/>
        <function-ref name="isOutput" scoped="" ref="0x101f5f4d0"/>
        <function-ref name="get" scoped="" ref="0x101f5f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f5f7f0"/>
        <function-ref name="set" scoped="" ref="0x101f5f980"/>
        <function-ref name="clr" scoped="" ref="0x101f5fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x101f5a9b0" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x101f5a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f5ad30"/>
        <function-ref name="isInput" scoped="" ref="0x101f59020"/>
        <function-ref name="toggle" scoped="" ref="0x101f591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f59340"/>
        <function-ref name="get" scoped="" ref="0x101f594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f59660"/>
        <function-ref name="set" scoped="" ref="0x101f597f0"/>
        <function-ref name="clr" scoped="" ref="0x101f59980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101f552f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101f552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f55670"/>
        <function-ref name="isInput" scoped="" ref="0x101f55800"/>
        <function-ref name="setResistor" scoped="" ref="0x101f55990"/>
        <function-ref name="toggle" scoped="" ref="0x101f55b20"/>
        <function-ref name="isOutput" scoped="" ref="0x101f55cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x101f55e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f54020"/>
        <function-ref name="get" scoped="" ref="0x101f541b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f54340"/>
        <function-ref name="getRaw" scoped="" ref="0x101f544d0"/>
        <function-ref name="set" scoped="" ref="0x101f54660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f547f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f54980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f54c10"/>
        <function-ref name="clr" scoped="" ref="0x101f54da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101f56020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101f56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f563a0"/>
        <function-ref name="isInput" scoped="" ref="0x101f56530"/>
        <function-ref name="toggle" scoped="" ref="0x101f566c0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f56850"/>
        <function-ref name="get" scoped="" ref="0x101f569e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f56b70"/>
        <function-ref name="set" scoped="" ref="0x101f56d00"/>
        <function-ref name="clr" scoped="" ref="0x101f55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101f51de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101f51de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f50180"/>
        <function-ref name="isInput" scoped="" ref="0x101f50310"/>
        <function-ref name="setResistor" scoped="" ref="0x101f504a0"/>
        <function-ref name="toggle" scoped="" ref="0x101f50630"/>
        <function-ref name="isOutput" scoped="" ref="0x101f507c0"/>
        <function-ref name="getResistor" scoped="" ref="0x101f50950"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f50ae0"/>
        <function-ref name="get" scoped="" ref="0x101f50c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f50e00"/>
        <function-ref name="getRaw" scoped="" ref="0x101f4f020"/>
        <function-ref name="set" scoped="" ref="0x101f4f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f4f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f4f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f4f760"/>
        <function-ref name="clr" scoped="" ref="0x101f4f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101f52b60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101f52b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f51020"/>
        <function-ref name="isInput" scoped="" ref="0x101f511b0"/>
        <function-ref name="toggle" scoped="" ref="0x101f51340"/>
        <function-ref name="isOutput" scoped="" ref="0x101f514d0"/>
        <function-ref name="get" scoped="" ref="0x101f51660"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f517f0"/>
        <function-ref name="set" scoped="" ref="0x101f51980"/>
        <function-ref name="clr" scoped="" ref="0x101f51b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101f96930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101f96930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f96cb0"/>
        <function-ref name="isInput" scoped="" ref="0x101f96e40"/>
        <function-ref name="setResistor" scoped="" ref="0x101f95020"/>
        <function-ref name="toggle" scoped="" ref="0x101f951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f95340"/>
        <function-ref name="getResistor" scoped="" ref="0x101f954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f95660"/>
        <function-ref name="get" scoped="" ref="0x101f957f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f95980"/>
        <function-ref name="getRaw" scoped="" ref="0x101f95b10"/>
        <function-ref name="set" scoped="" ref="0x101f95ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f95e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f94020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f942b0"/>
        <function-ref name="clr" scoped="" ref="0x101f94440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101f4c710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101f4c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f4ca90"/>
        <function-ref name="isInput" scoped="" ref="0x101f4cc20"/>
        <function-ref name="toggle" scoped="" ref="0x101f4cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f96020"/>
        <function-ref name="get" scoped="" ref="0x101f961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f96340"/>
        <function-ref name="set" scoped="" ref="0x101f964d0"/>
        <function-ref name="clr" scoped="" ref="0x101f96660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101f91480" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101f91480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f91800"/>
        <function-ref name="isInput" scoped="" ref="0x101f91990"/>
        <function-ref name="setResistor" scoped="" ref="0x101f91b20"/>
        <function-ref name="toggle" scoped="" ref="0x101f91cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f91e40"/>
        <function-ref name="getResistor" scoped="" ref="0x101f90020"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f901b0"/>
        <function-ref name="get" scoped="" ref="0x101f90340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f904d0"/>
        <function-ref name="getRaw" scoped="" ref="0x101f90660"/>
        <function-ref name="set" scoped="" ref="0x101f907f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f90980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f90b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f90da0"/>
        <function-ref name="clr" scoped="" ref="0x101f8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101f921d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101f921d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f92550"/>
        <function-ref name="isInput" scoped="" ref="0x101f926e0"/>
        <function-ref name="toggle" scoped="" ref="0x101f92870"/>
        <function-ref name="isOutput" scoped="" ref="0x101f92a00"/>
        <function-ref name="get" scoped="" ref="0x101f92b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f92d20"/>
        <function-ref name="set" scoped="" ref="0x101f91020"/>
        <function-ref name="clr" scoped="" ref="0x101f911b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101f8c020" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101f8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f8c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x101f8c530"/>
        <function-ref name="setResistor" scoped="" ref="0x101f8c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x101f8c850"/>
        <function-ref name="isOutput" scoped="" ref="0x101f8c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x101f8cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f8cd00"/>
        <function-ref name="get" scoped="" ref="0x101f8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f8b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x101f8b340"/>
        <function-ref name="set" scoped="" ref="0x101f8b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f8b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f8b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f8ba80"/>
        <function-ref name="clr" scoped="" ref="0x101f8bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101f8ed70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101f8ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f8d180"/>
        <function-ref name="isInput" scoped="" ref="0x101f8d310"/>
        <function-ref name="toggle" scoped="" ref="0x101f8d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f8d630"/>
        <function-ref name="get" scoped="" ref="0x101f8d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f8d950"/>
        <function-ref name="set" scoped="" ref="0x101f8dae0"/>
        <function-ref name="clr" scoped="" ref="0x101f8dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101f88de0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101f88de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f87180"/>
        <function-ref name="isInput" scoped="" ref="0x101f87310"/>
        <function-ref name="setResistor" scoped="" ref="0x101f874a0"/>
        <function-ref name="toggle" scoped="" ref="0x101f87630"/>
        <function-ref name="isOutput" scoped="" ref="0x101f877c0"/>
        <function-ref name="getResistor" scoped="" ref="0x101f87950"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f87ae0"/>
        <function-ref name="get" scoped="" ref="0x101f87c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f87e00"/>
        <function-ref name="getRaw" scoped="" ref="0x101f86020"/>
        <function-ref name="set" scoped="" ref="0x101f861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f86340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f86760"/>
        <function-ref name="clr" scoped="" ref="0x101f868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101f89b60" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101f89b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f88020"/>
        <function-ref name="isInput" scoped="" ref="0x101f881b0"/>
        <function-ref name="toggle" scoped="" ref="0x101f88340"/>
        <function-ref name="isOutput" scoped="" ref="0x101f884d0"/>
        <function-ref name="get" scoped="" ref="0x101f88660"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f887f0"/>
        <function-ref name="set" scoped="" ref="0x101f88980"/>
        <function-ref name="clr" scoped="" ref="0x101f88b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x101f83930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x101f83930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f83cb0"/>
        <function-ref name="isInput" scoped="" ref="0x101f83e40"/>
        <function-ref name="setResistor" scoped="" ref="0x101f81020"/>
        <function-ref name="toggle" scoped="" ref="0x101f811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f81340"/>
        <function-ref name="getResistor" scoped="" ref="0x101f814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f81660"/>
        <function-ref name="get" scoped="" ref="0x101f817f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f81980"/>
        <function-ref name="getRaw" scoped="" ref="0x101f81b10"/>
        <function-ref name="set" scoped="" ref="0x101f81ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f81e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f80020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f802b0"/>
        <function-ref name="clr" scoped="" ref="0x101f80440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x101f84710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101f84710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101f84a90"/>
        <function-ref name="isInput" scoped="" ref="0x101f84c20"/>
        <function-ref name="toggle" scoped="" ref="0x101f84db0"/>
        <function-ref name="isOutput" scoped="" ref="0x101f83020"/>
        <function-ref name="get" scoped="" ref="0x101f831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f83340"/>
        <function-ref name="set" scoped="" ref="0x101f834d0"/>
        <function-ref name="clr" scoped="" ref="0x101f83660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x101fbb150" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x101fbb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x101fbb4d0"/>
        <function-ref name="disable" scoped="" ref="0x101fbb660"/>
        <function-ref name="captured" scoped="" ref="0x101fbb7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x101fbb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x101fbbd60" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x101fbbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101fba180"/>
        <function-ref name="disable" scoped="" ref="0x101fba310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x101fba4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x101fba630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x101fbaa20" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x101fbaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x101fbada0"/>
        <function-ref name="disable" scoped="" ref="0x101fb7020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x101fb71b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x101fb7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x101fa18f0" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x101fa18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x101fa1c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x101fa1e00"/>
        <function-ref name="captured" scoped="" ref="0x101fa0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x101fa01b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x101fa0340"/>
        <function-ref name="setEdge" scoped="" ref="0x101fa04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x101fb4a20" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x101fb4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x101fb4da0"/>
        <function-ref name="disable" scoped="" ref="0x101fa2020"/>
        <function-ref name="captured" scoped="" ref="0x101fa21b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x101fa2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x101fa25d0" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x101fa25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x101fa2950"/>
        <function-ref name="getControl" scoped="" ref="0x101fa2ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x101fa2c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x101fa2e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x101fa1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x101fa11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x101fa1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x101fa14d0"/>
        <function-ref name="setControl" scoped="" ref="0x101fa1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x101fa07a0" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x101fa07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x101fa0b20"/>
        <function-ref name="isInput" scoped="" ref="0x101fa0cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x101fa0e40"/>
        <function-ref name="toggle" scoped="" ref="0x101f9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x101f9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x101f9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x101f9f4d0"/>
        <function-ref name="get" scoped="" ref="0x101f9f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x101f9f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x101f9f980"/>
        <function-ref name="set" scoped="" ref="0x101f9fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x101f9fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x101f9fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x101f9e120"/>
        <function-ref name="clr" scoped="" ref="0x101f9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x101fdd8a0" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x101fdd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fddc20"/>
        <function-ref name="fired" scoped="" ref="0x101fdddb0"/>
        <function-ref name="disable" scoped="" ref="0x101fdc020"/>
        <function-ref name="edge" scoped="" ref="0x101fdc1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fdc340"/>
        <function-ref name="getValue" scoped="" ref="0x101fdc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x101fd3a30" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x101fd3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd3db0"/>
        <function-ref name="fired" scoped="" ref="0x101fd2020"/>
        <function-ref name="disable" scoped="" ref="0x101fd21b0"/>
        <function-ref name="edge" scoped="" ref="0x101fd2340"/>
        <function-ref name="enable" scoped="" ref="0x101fd24d0"/>
        <function-ref name="getValue" scoped="" ref="0x101fd2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x101fda8a0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x101fda8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fdac20"/>
        <function-ref name="fired" scoped="" ref="0x101fdadb0"/>
        <function-ref name="disable" scoped="" ref="0x101fd9020"/>
        <function-ref name="edge" scoped="" ref="0x101fd91b0"/>
        <function-ref name="enable" scoped="" ref="0x101fd9340"/>
        <function-ref name="getValue" scoped="" ref="0x101fd94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x101fd88a0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x101fd88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd8c20"/>
        <function-ref name="fired" scoped="" ref="0x101fd8db0"/>
        <function-ref name="disable" scoped="" ref="0x101fd7020"/>
        <function-ref name="edge" scoped="" ref="0x101fd71b0"/>
        <function-ref name="enable" scoped="" ref="0x101fd7340"/>
        <function-ref name="getValue" scoped="" ref="0x101fd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x101fe38a0" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x101fe38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fe3c20"/>
        <function-ref name="fired" scoped="" ref="0x101fe3db0"/>
        <function-ref name="disable" scoped="" ref="0x101fde020"/>
        <function-ref name="edge" scoped="" ref="0x101fde1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fde340"/>
        <function-ref name="getValue" scoped="" ref="0x101fde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x101fd58a0" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x101fd58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd5d20"/>
        <function-ref name="fired" scoped="" ref="0x101fd4020"/>
        <function-ref name="disable" scoped="" ref="0x101fd41b0"/>
        <function-ref name="edge" scoped="" ref="0x101fd4340"/>
        <function-ref name="enable" scoped="" ref="0x101fd44d0"/>
        <function-ref name="getValue" scoped="" ref="0x101fd4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x101fdc8a0" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x101fdc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fdcc20"/>
        <function-ref name="fired" scoped="" ref="0x101fdcdb0"/>
        <function-ref name="disable" scoped="" ref="0x101fdb020"/>
        <function-ref name="edge" scoped="" ref="0x101fdb1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fdb340"/>
        <function-ref name="getValue" scoped="" ref="0x101fdb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x101fd2a30" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x101fd2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd2db0"/>
        <function-ref name="fired" scoped="" ref="0x101fd0020"/>
        <function-ref name="disable" scoped="" ref="0x101fd01b0"/>
        <function-ref name="edge" scoped="" ref="0x101fd0340"/>
        <function-ref name="enable" scoped="" ref="0x101fd04d0"/>
        <function-ref name="getValue" scoped="" ref="0x101fd0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x101fdf8f0" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x101fdf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fdfc70"/>
        <function-ref name="fired" scoped="" ref="0x101fdfe00"/>
        <function-ref name="disable" scoped="" ref="0x101fe4020"/>
        <function-ref name="edge" scoped="" ref="0x101fe41b0"/>
        <function-ref name="enable" scoped="" ref="0x101fe4340"/>
        <function-ref name="getValue" scoped="" ref="0x101fe44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x101fd78a0" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x101fd78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd7c20"/>
        <function-ref name="fired" scoped="" ref="0x101fd7db0"/>
        <function-ref name="disable" scoped="" ref="0x101fd6020"/>
        <function-ref name="edge" scoped="" ref="0x101fd61b0"/>
        <function-ref name="enable" scoped="" ref="0x101fd6340"/>
        <function-ref name="getValue" scoped="" ref="0x101fd64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x101fde8a0" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x101fde8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fdec20"/>
        <function-ref name="fired" scoped="" ref="0x101fdedb0"/>
        <function-ref name="disable" scoped="" ref="0x101fdd020"/>
        <function-ref name="edge" scoped="" ref="0x101fdd1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fdd340"/>
        <function-ref name="getValue" scoped="" ref="0x101fdd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x101fd4a30" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x101fd4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd4db0"/>
        <function-ref name="fired" scoped="" ref="0x101fd3020"/>
        <function-ref name="disable" scoped="" ref="0x101fd31b0"/>
        <function-ref name="edge" scoped="" ref="0x101fd3340"/>
        <function-ref name="enable" scoped="" ref="0x101fd34d0"/>
        <function-ref name="getValue" scoped="" ref="0x101fd3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x101fdb8a0" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x101fdb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fdbc20"/>
        <function-ref name="fired" scoped="" ref="0x101fdbdb0"/>
        <function-ref name="disable" scoped="" ref="0x101fda020"/>
        <function-ref name="edge" scoped="" ref="0x101fda1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fda340"/>
        <function-ref name="getValue" scoped="" ref="0x101fda4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x101fd98a0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x101fd98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd9c20"/>
        <function-ref name="fired" scoped="" ref="0x101fd9db0"/>
        <function-ref name="disable" scoped="" ref="0x101fd8020"/>
        <function-ref name="edge" scoped="" ref="0x101fd81b0"/>
        <function-ref name="enable" scoped="" ref="0x101fd8340"/>
        <function-ref name="getValue" scoped="" ref="0x101fd84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x101fe48a0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x101fe48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fe4c20"/>
        <function-ref name="fired" scoped="" ref="0x101fe4db0"/>
        <function-ref name="disable" scoped="" ref="0x101fe3020"/>
        <function-ref name="edge" scoped="" ref="0x101fe31b0"/>
        <function-ref name="enable" scoped="" ref="0x101fe3340"/>
        <function-ref name="getValue" scoped="" ref="0x101fe34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x101fd68a0" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x101fd68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fd6c20"/>
        <function-ref name="fired" scoped="" ref="0x101fd6db0"/>
        <function-ref name="disable" scoped="" ref="0x101fd5020"/>
        <function-ref name="edge" scoped="" ref="0x101fd51b0"/>
        <function-ref name="enable" scoped="" ref="0x101fd5340"/>
        <function-ref name="getValue" scoped="" ref="0x101fd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x101fc98a0" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x101fc98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc9c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc9db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc8020"/>
        <function-ref name="edge" scoped="" ref="0x101fc81b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc8340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x101fbfa30" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x101fbfa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fbfdb0"/>
        <function-ref name="fired" scoped="" ref="0x10200b020"/>
        <function-ref name="disable" scoped="" ref="0x10200b1b0"/>
        <function-ref name="edge" scoped="" ref="0x10200b340"/>
        <function-ref name="enable" scoped="" ref="0x10200b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10200b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x101fc68a0" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x101fc68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc6c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc6db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc5020"/>
        <function-ref name="edge" scoped="" ref="0x101fc51b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc5340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x101fc48a0" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x101fc48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc4c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc4db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc3020"/>
        <function-ref name="edge" scoped="" ref="0x101fc31b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc3340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x101fcb8a0" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x101fcb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fcbc20"/>
        <function-ref name="fired" scoped="" ref="0x101fcbdb0"/>
        <function-ref name="disable" scoped="" ref="0x101fca020"/>
        <function-ref name="edge" scoped="" ref="0x101fca1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fca340"/>
        <function-ref name="getValue" scoped="" ref="0x101fca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x101fc18a0" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x101fc18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc1d20"/>
        <function-ref name="fired" scoped="" ref="0x101fc0020"/>
        <function-ref name="disable" scoped="" ref="0x101fc01b0"/>
        <function-ref name="edge" scoped="" ref="0x101fc0340"/>
        <function-ref name="enable" scoped="" ref="0x101fc04d0"/>
        <function-ref name="getValue" scoped="" ref="0x101fc0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x101fc88a0" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x101fc88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc8c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc8db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc7020"/>
        <function-ref name="edge" scoped="" ref="0x101fc71b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc7340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10200ba30" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10200ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10200bdb0"/>
        <function-ref name="fired" scoped="" ref="0x10200a020"/>
        <function-ref name="disable" scoped="" ref="0x10200a1b0"/>
        <function-ref name="edge" scoped="" ref="0x10200a340"/>
        <function-ref name="enable" scoped="" ref="0x10200a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x10200a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x101fcf810" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x101fcf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fcfb90"/>
        <function-ref name="fired" scoped="" ref="0x101fcfd20"/>
        <function-ref name="disable" scoped="" ref="0x101fcc020"/>
        <function-ref name="edge" scoped="" ref="0x101fcc1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fcc340"/>
        <function-ref name="getValue" scoped="" ref="0x101fcc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x101fc38a0" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x101fc38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc3c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc3db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc2020"/>
        <function-ref name="edge" scoped="" ref="0x101fc21b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc2340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x101fca8a0" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x101fca8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fcac20"/>
        <function-ref name="fired" scoped="" ref="0x101fcadb0"/>
        <function-ref name="disable" scoped="" ref="0x101fc9020"/>
        <function-ref name="edge" scoped="" ref="0x101fc91b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc9340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x101fc0a30" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x101fc0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc0db0"/>
        <function-ref name="fired" scoped="" ref="0x101fbf020"/>
        <function-ref name="disable" scoped="" ref="0x101fbf1b0"/>
        <function-ref name="edge" scoped="" ref="0x101fbf340"/>
        <function-ref name="enable" scoped="" ref="0x101fbf4d0"/>
        <function-ref name="getValue" scoped="" ref="0x101fbf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x101fc78a0" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x101fc78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc7c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc7db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc6020"/>
        <function-ref name="edge" scoped="" ref="0x101fc61b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc6340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x101fc58a0" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x101fc58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc5c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc5db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc4020"/>
        <function-ref name="edge" scoped="" ref="0x101fc41b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc4340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x101fcc8a0" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x101fcc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fccc20"/>
        <function-ref name="fired" scoped="" ref="0x101fccdb0"/>
        <function-ref name="disable" scoped="" ref="0x101fcb020"/>
        <function-ref name="edge" scoped="" ref="0x101fcb1b0"/>
        <function-ref name="enable" scoped="" ref="0x101fcb340"/>
        <function-ref name="getValue" scoped="" ref="0x101fcb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x101fc28a0" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x101fc28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x101fc2c20"/>
        <function-ref name="fired" scoped="" ref="0x101fc2db0"/>
        <function-ref name="disable" scoped="" ref="0x101fc1020"/>
        <function-ref name="edge" scoped="" ref="0x101fc11b0"/>
        <function-ref name="enable" scoped="" ref="0x101fc1340"/>
        <function-ref name="getValue" scoped="" ref="0x101fc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1020c2610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1020c2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1020c2990"/>
        <function-ref name="fired" scoped="" ref="0x1020c2b20"/>
        <function-ref name="disable" scoped="" ref="0x1020c2cb0"/>
        <function-ref name="edge" scoped="" ref="0x1020c2e40"/>
        <function-ref name="enable" scoped="" ref="0x1020b5020"/>
        <function-ref name="getValue" scoped="" ref="0x1020b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1020c3a30" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x1020c3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1020c3db0"/>
        <function-ref name="disable" scoped="" ref="0x1020c2020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1020c21b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1020c2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x1020b3610" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x1020b3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1020b3990"/>
        <function-ref name="fired" scoped="" ref="0x1020b3b20"/>
        <function-ref name="disable" scoped="" ref="0x1020b3cb0"/>
        <function-ref name="edge" scoped="" ref="0x1020b3e40"/>
        <function-ref name="enable" scoped="" ref="0x1020b2020"/>
        <function-ref name="getValue" scoped="" ref="0x1020b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x1020b4a70" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x1020b4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1020b4df0"/>
        <function-ref name="disable" scoped="" ref="0x1020b3020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1020b31b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x1020b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x102433e50" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x102433e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102431410"/>
        <function-ref name="write" scoped="" ref="0x1024315a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10243c160" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10243c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x102436e50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x102436e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102435210"/>
        <function-ref name="write" scoped="" ref="0x1024353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x102430880" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x102430880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102430c00"/>
        <function-ref name="write" scoped="" ref="0x102430d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x1024280a0" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x1024280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102428420"/>
        <function-ref name="write" scoped="" ref="0x1024285b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10242f0a0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10242f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242f420"/>
        <function-ref name="write" scoped="" ref="0x10242f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10241c500" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10241c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10241c880"/>
        <function-ref name="write" scoped="" ref="0x10241ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10241f500" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10241f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10241f880"/>
        <function-ref name="write" scoped="" ref="0x10241fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x10243b490" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10243b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x102425880" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x102425880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102425c00"/>
        <function-ref name="write" scoped="" ref="0x102425d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x102420500" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x102420500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102420880"/>
        <function-ref name="write" scoped="" ref="0x102420a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x102435e50" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x102435e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102434210"/>
        <function-ref name="write" scoped="" ref="0x1024343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x102434e50" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x102434e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102433210"/>
        <function-ref name="write" scoped="" ref="0x1024333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x10242a880" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x10242a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242ac00"/>
        <function-ref name="write" scoped="" ref="0x10242ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10242c0a0" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10242c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242c420"/>
        <function-ref name="write" scoped="" ref="0x10242c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10242f880" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10242f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242fc00"/>
        <function-ref name="write" scoped="" ref="0x10242fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10243ea90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10243ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10243ee10"/>
        <function-ref name="abortRelease" scoped="" ref="0x10243d020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10243d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x10243ae00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10243ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024381c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x102438490" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x102438490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102438910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x102423c80" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x102423c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024220a0"/>
        <function-ref name="write" scoped="" ref="0x102422230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x102438be0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x102438be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102437020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x102420ce0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102420ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10241f0a0"/>
        <function-ref name="write" scoped="" ref="0x10241f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x10243a160" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10243a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x1024250a0" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x1024250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102425420"/>
        <function-ref name="write" scoped="" ref="0x1024255b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x102434670" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x102434670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024349f0"/>
        <function-ref name="write" scoped="" ref="0x102434b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x102435670" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x102435670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024359f0"/>
        <function-ref name="write" scoped="" ref="0x102435b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10243dad0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10243dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x1024260a0" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x1024260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102426420"/>
        <function-ref name="write" scoped="" ref="0x1024265b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x102428880" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x102428880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102428c00"/>
        <function-ref name="write" scoped="" ref="0x102428d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x102426880" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x102426880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102426c00"/>
        <function-ref name="write" scoped="" ref="0x102426d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10241dce0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10241dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10241c0a0"/>
        <function-ref name="write" scoped="" ref="0x10241c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10241fce0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10241fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10241d0a0"/>
        <function-ref name="write" scoped="" ref="0x10241d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x10242c880" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x10242c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242cc00"/>
        <function-ref name="write" scoped="" ref="0x10242cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x1024270a0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x1024270a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102427420"/>
        <function-ref name="write" scoped="" ref="0x1024275b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x102421ce0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x102421ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024200a0"/>
        <function-ref name="write" scoped="" ref="0x102420230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10242e880" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10242e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242ec00"/>
        <function-ref name="write" scoped="" ref="0x10242ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10241cce0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10241cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10241b0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x10241b230"/>
        <function-ref name="write" scoped="" ref="0x10241b3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x10241b550"/>
        <function-ref name="readDone" scoped="" ref="0x10241b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10243d480" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10243d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x102436670" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x102436670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024369f0"/>
        <function-ref name="write" scoped="" ref="0x102436b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x102433670" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x102433670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024339f0"/>
        <function-ref name="write" scoped="" ref="0x102433b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x1024290a0" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x1024290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102429420"/>
        <function-ref name="write" scoped="" ref="0x1024295b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10242e0a0" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10242e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242e420"/>
        <function-ref name="write" scoped="" ref="0x10242e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x102429880" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x102429880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102429c00"/>
        <function-ref name="write" scoped="" ref="0x102429d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x102431870" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x102431870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102431bf0"/>
        <function-ref name="write" scoped="" ref="0x102431d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10243c7b0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10243c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x1024300a0" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1024300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102430420"/>
        <function-ref name="write" scoped="" ref="0x1024305b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x102440e20" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x102440e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10243e1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10243e350"/>
        <function-ref name="request" scoped="" ref="0x10243e4e0"/>
        <function-ref name="granted" scoped="" ref="0x10243e670"/>
        <function-ref name="isOwner" scoped="" ref="0x10243e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x1024372f0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x1024372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102437670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x102436020" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x102436020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x102421500" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x102421500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102421880"/>
        <function-ref name="write" scoped="" ref="0x102421a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x102422ce0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x102422ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024210a0"/>
        <function-ref name="write" scoped="" ref="0x102421230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x10243a7b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10243a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x102422500" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x102422500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102422880"/>
        <function-ref name="write" scoped="" ref="0x102422a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10241d500" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10241d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10241d880"/>
        <function-ref name="write" scoped="" ref="0x10241da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x10242a0a0" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x10242a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242a420"/>
        <function-ref name="write" scoped="" ref="0x10242a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x102427880" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x102427880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102427c00"/>
        <function-ref name="write" scoped="" ref="0x102427d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10243ce00" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10243ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x10243bae0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10243bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10243be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10242d0a0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10242d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242d420"/>
        <function-ref name="write" scoped="" ref="0x10242d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x102437940" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x102437940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102437cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10242d880" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10242d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10242dc00"/>
        <function-ref name="write" scoped="" ref="0x10242dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x1024230a0" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x1024230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102423820"/>
        <function-ref name="write" scoped="" ref="0x1024239b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10241b9b0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10241b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10241bd30"/>
        <function-ref name="writeDone" scoped="" ref="0x10241a020"/>
        <function-ref name="write" scoped="" ref="0x10241a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10241a340"/>
        <function-ref name="readDone" scoped="" ref="0x10241a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x102112630" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x102112630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1021129b0"/>
        <function-ref name="writeDone" scoped="" ref="0x102112b40"/>
        <function-ref name="write" scoped="" ref="0x102112cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x102112e60"/>
        <function-ref name="readDone" scoped="" ref="0x102111020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x102114670" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x102114670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1021149f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x102114b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x102114d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x1021118c0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x1021118c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102111c40"/>
        <function-ref name="write" scoped="" ref="0x102111dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x1021106f0" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x1021106f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102110a70"/>
        <function-ref name="write" scoped="" ref="0x102110c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x102117950" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x102117950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x102117cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x102117e60"/>
        <function-ref name="request" scoped="" ref="0x102114020"/>
        <function-ref name="granted" scoped="" ref="0x1021141b0"/>
        <function-ref name="isOwner" scoped="" ref="0x102114340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x10210f510" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x10210f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10210f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x10214b680" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10214b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10214ba00"/>
        <function-ref name="sendDone" scoped="" ref="0x10214bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x102109bb0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x102109bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x102108020"/>
        <function-ref name="writeDone" scoped="" ref="0x1021081b0"/>
        <function-ref name="write" scoped="" ref="0x102108340"/>
        <function-ref name="beginRead" scoped="" ref="0x1021084d0"/>
        <function-ref name="readDone" scoped="" ref="0x102108660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10210d920" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10210d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10210dca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10210de30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10210a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x102102080" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x102102080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x102102400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x102101020" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x102101020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1021013a0"/>
        <function-ref name="toIdle" scoped="" ref="0x102101530"/>
        <function-ref name="isState" scoped="" ref="0x1021016c0"/>
        <function-ref name="isIdle" scoped="" ref="0x102101850"/>
        <function-ref name="requestState" scoped="" ref="0x1021019e0"/>
        <function-ref name="forceState" scoped="" ref="0x102101b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x102104400" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x102104400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x102104780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x102104910"/>
        <function-ref name="request" scoped="" ref="0x102104aa0"/>
        <function-ref name="granted" scoped="" ref="0x102104c30"/>
        <function-ref name="isOwner" scoped="" ref="0x102104dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x102107020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x102107020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1021073a0"/>
        <function-ref name="write" scoped="" ref="0x102107530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x102107db0" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x102107db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102106180"/>
        <function-ref name="write" scoped="" ref="0x102106310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102101df0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102101df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1021001c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102100350"/>
        <function-ref name="led1On" scoped="" ref="0x1021004e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102100670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102100800"/>
        <function-ref name="get" scoped="" ref="0x102100990"/>
        <function-ref name="led1Off" scoped="" ref="0x102100b20"/>
        <function-ref name="led2Off" scoped="" ref="0x1020fa1b0"/>
        <function-ref name="set" scoped="" ref="0x102100cb0"/>
        <function-ref name="led0On" scoped="" ref="0x102100e40"/>
        <function-ref name="led2On" scoped="" ref="0x1020fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10210a810" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10210a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10210ab90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10210ad20"/>
        <function-ref name="request" scoped="" ref="0x102109020"/>
        <function-ref name="granted" scoped="" ref="0x1021091b0"/>
        <function-ref name="isOwner" scoped="" ref="0x102109340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x102146120" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x102146120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1021464a0"/>
        <function-ref name="runTask" scoped="" ref="0x102146630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x102106ba0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x102106ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102104020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x102190770" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x102190770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x102190af0"/>
        <function-ref name="toIdle" scoped="" ref="0x102190c80"/>
        <function-ref name="isState" scoped="" ref="0x102190e10"/>
        <function-ref name="isIdle" scoped="" ref="0x10218d020"/>
        <function-ref name="requestState" scoped="" ref="0x10218d1b0"/>
        <function-ref name="forceState" scoped="" ref="0x10218d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x10218c280" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x10218c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x10218c600"/>
        <function-ref name="toIdle" scoped="" ref="0x10218c790"/>
        <function-ref name="isState" scoped="" ref="0x10218c920"/>
        <function-ref name="isIdle" scoped="" ref="0x10218cab0"/>
        <function-ref name="requestState" scoped="" ref="0x10218cc40"/>
        <function-ref name="forceState" scoped="" ref="0x10218cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102188020" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102188020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1021883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x102188b70" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x102188b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x102187020"/>
        <function-ref name="toIdle" scoped="" ref="0x1021871b0"/>
        <function-ref name="isState" scoped="" ref="0x102187340"/>
        <function-ref name="isIdle" scoped="" ref="0x1021874d0"/>
        <function-ref name="requestState" scoped="" ref="0x102187660"/>
        <function-ref name="forceState" scoped="" ref="0x1021877f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x102405020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x102405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1024053a0"/>
        <function-ref name="sendDone" scoped="" ref="0x102405530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1024068f0" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1024068f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x102406c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1021c3c40" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1021c3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x102406020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1024061b0"/>
        <function-ref name="request" scoped="" ref="0x102406340"/>
        <function-ref name="granted" scoped="" ref="0x1024064d0"/>
        <function-ref name="isOwner" scoped="" ref="0x102406660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1033118f0" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1033118f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x103311c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x103311e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x10330f2b0" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x10330f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10330f630"/>
        <function-ref name="sendDone" scoped="" ref="0x10330f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x10330fa50" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x10330fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x10330fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1033100c0" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1033100c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x103310440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103314c30" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103314c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x103311020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1033111b0"/>
        <function-ref name="request" scoped="" ref="0x103311340"/>
        <function-ref name="granted" scoped="" ref="0x1033114d0"/>
        <function-ref name="isOwner" scoped="" ref="0x103311660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1033106d0" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1033106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x103310a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x103310be0"/>
        <function-ref name="splitRead" scoped="" ref="0x103310d70"/>
        <function-ref name="write" scoped="" ref="0x10330f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1021af6b0" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1021af6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1021afa30"/>
        <function-ref name="configure" scoped="" ref="0x1021afbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1021ad850" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1021ad850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1021adbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x1021add60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1021aba40" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1021aba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1021abdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1021ae020" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1021ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1021ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1021ac690" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1021ac690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1021aca10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1021acba0"/>
        <function-ref name="request" scoped="" ref="0x1021acd30"/>
        <function-ref name="granted" scoped="" ref="0x1021ab020"/>
        <function-ref name="isOwner" scoped="" ref="0x1021ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1021b1430" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1021b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1021b17b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1021b1940"/>
        <function-ref name="request" scoped="" ref="0x1021b1ad0"/>
        <function-ref name="granted" scoped="" ref="0x1021b1c60"/>
        <function-ref name="isOwner" scoped="" ref="0x1021b1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1021ae6a0" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1021ae6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1021aea20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1021aebb0"/>
        <function-ref name="splitRead" scoped="" ref="0x1021aed40"/>
        <function-ref name="write" scoped="" ref="0x1021ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x1021a92a0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x1021a92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1021a9620"/>
        <function-ref name="txDone" scoped="" ref="0x1021a97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x1021fb250" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1021fb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1021fb5f0"/>
        <function-ref name="configure" scoped="" ref="0x1021fb780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x1021f9c50" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x1021f9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1021f8020"/>
        <function-ref name="sendDone" scoped="" ref="0x1021f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x1021f73e0" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x1021f73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x1021f7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x1021fba10" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x1021fba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x1021fbd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x1021f7a50" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x1021f7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1021f7dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1021f6020"/>
        <function-ref name="setUctl" scoped="" ref="0x1021f61b0"/>
        <function-ref name="enableUart" scoped="" ref="0x1021f6340"/>
        <function-ref name="setUrctl" scoped="" ref="0x1021f64d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1021f6660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x1021f67f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x1021f6980"/>
        <function-ref name="getUrctl" scoped="" ref="0x1021f6b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x1021f6ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x1021f6e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x1021f5020"/>
        <function-ref name="setUtctl" scoped="" ref="0x1021f51b0"/>
        <function-ref name="getUbr" scoped="" ref="0x1021f5440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x1021f55d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x1021f5760"/>
        <function-ref name="isUartRx" scoped="" ref="0x1021f58f0"/>
        <function-ref name="isUart" scoped="" ref="0x1021f5a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1021f5c10"/>
        <function-ref name="isSpi" scoped="" ref="0x1021f5da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1021f4020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x1021f41b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1021f4340"/>
        <function-ref name="enableIntr" scoped="" ref="0x1021f44d0"/>
        <function-ref name="getMode" scoped="" ref="0x1021f4660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x1021f49f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x1021f4b80"/>
        <function-ref name="setUbr" scoped="" ref="0x1021f4d10"/>
        <function-ref name="tx" scoped="" ref="0x1021f3020"/>
        <function-ref name="getUctl" scoped="" ref="0x1021f31b0"/>
        <function-ref name="disableUart" scoped="" ref="0x1021f3340"/>
        <function-ref name="enableSpi" scoped="" ref="0x1021f34d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x1021f3660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x1021f37f0"/>
        <function-ref name="rx" scoped="" ref="0x1021f3980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x1021f3b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x1021f3ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x1021f3e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x102248020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x1022481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102248c20" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102248c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102247020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1022471b0"/>
        <function-ref name="led1On" scoped="" ref="0x102247340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1022474d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102247660"/>
        <function-ref name="get" scoped="" ref="0x1022477f0"/>
        <function-ref name="led1Off" scoped="" ref="0x102247980"/>
        <function-ref name="led2On" scoped="" ref="0x102246020"/>
        <function-ref name="set" scoped="" ref="0x102247ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x102247b10"/>
        <function-ref name="led0On" scoped="" ref="0x102247e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x1021f85b0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x1021f85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1021f8950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1021f8ae0"/>
        <function-ref name="request" scoped="" ref="0x1021f8c70"/>
        <function-ref name="granted" scoped="" ref="0x1021f8e00"/>
        <function-ref name="isOwner" scoped="" ref="0x1021f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1021fc470" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1021fc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1021fc810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1021fc9a0"/>
        <function-ref name="request" scoped="" ref="0x1021fcb30"/>
        <function-ref name="granted" scoped="" ref="0x1021fccc0"/>
        <function-ref name="isOwner" scoped="" ref="0x1021fce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x1021f9060" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x1021f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x1021f93e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x1021f9570"/>
        <function-ref name="splitRead" scoped="" ref="0x1021f9700"/>
        <function-ref name="write" scoped="" ref="0x1021f9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x102248480" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x102248480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x102248800"/>
        <function-ref name="txDone" scoped="" ref="0x102248990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x1022462f0" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x1022462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102246670"/>
        <function-ref name="runTask" scoped="" ref="0x102246800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x1022395e0" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x1022395e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x102239960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x10223ad10" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x10223ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x1022390e0"/>
        <function-ref name="txDone" scoped="" ref="0x102239270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x10223e020" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x10223e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x10223e3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x10223e530"/>
        <function-ref name="setUctl" scoped="" ref="0x10223e6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x10223e850"/>
        <function-ref name="setUrctl" scoped="" ref="0x10223e9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x10223eb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x10223ed00"/>
        <function-ref name="getUtctl" scoped="" ref="0x10223d020"/>
        <function-ref name="getUrctl" scoped="" ref="0x10223d1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x10223d340"/>
        <function-ref name="getUmctl" scoped="" ref="0x10223d4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x10223d660"/>
        <function-ref name="setUtctl" scoped="" ref="0x10223d7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x10223da80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x10223dc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x10223dda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x10223c020"/>
        <function-ref name="isUart" scoped="" ref="0x10223c1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x10223c340"/>
        <function-ref name="isSpi" scoped="" ref="0x10223c4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x10223c660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x10223c7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x10223c980"/>
        <function-ref name="enableIntr" scoped="" ref="0x10223cb10"/>
        <function-ref name="getMode" scoped="" ref="0x10223cca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x10223b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x10223b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x10223b540"/>
        <function-ref name="tx" scoped="" ref="0x10223b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x10223b860"/>
        <function-ref name="disableUart" scoped="" ref="0x10223b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x10223bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x10223bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x10223a020"/>
        <function-ref name="rx" scoped="" ref="0x10223a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x10223a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x10223a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x10223a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x10223a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x10223a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x102254b20" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x102254b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102253020"/>
        <function-ref name="isInput" scoped="" ref="0x1022531b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102253340"/>
        <function-ref name="toggle" scoped="" ref="0x1022534d0"/>
        <function-ref name="isOutput" scoped="" ref="0x102253660"/>
        <function-ref name="getResistor" scoped="" ref="0x1022537f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102253980"/>
        <function-ref name="get" scoped="" ref="0x102253b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102253ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x102253e30"/>
        <function-ref name="set" scoped="" ref="0x102252020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022521b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102252340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022525d0"/>
        <function-ref name="clr" scoped="" ref="0x102252760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x102230780" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x102230780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x102230b00"/>
        <function-ref name="txDone" scoped="" ref="0x102230c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x102252b20" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x102252b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102251020"/>
        <function-ref name="isInput" scoped="" ref="0x1022511b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102251340"/>
        <function-ref name="toggle" scoped="" ref="0x1022514d0"/>
        <function-ref name="isOutput" scoped="" ref="0x102251660"/>
        <function-ref name="getResistor" scoped="" ref="0x1022517f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102251980"/>
        <function-ref name="get" scoped="" ref="0x102251b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102251ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x102251e30"/>
        <function-ref name="set" scoped="" ref="0x102250020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022501b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102250340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022505d0"/>
        <function-ref name="clr" scoped="" ref="0x102250760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x102250b20" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x102250b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10224f020"/>
        <function-ref name="isInput" scoped="" ref="0x10224f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x10224f340"/>
        <function-ref name="toggle" scoped="" ref="0x10224f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x10224f660"/>
        <function-ref name="getResistor" scoped="" ref="0x10224f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10224f980"/>
        <function-ref name="get" scoped="" ref="0x10224fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10224fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x10224fe30"/>
        <function-ref name="set" scoped="" ref="0x10224e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10224e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10224e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10224e5d0"/>
        <function-ref name="clr" scoped="" ref="0x10224e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x102237c70" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x102237c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x102234020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1022341b0"/>
        <function-ref name="setUctl" scoped="" ref="0x102234340"/>
        <function-ref name="enableUart" scoped="" ref="0x1022344d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x102234660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x1022347f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x102234980"/>
        <function-ref name="getUtctl" scoped="" ref="0x102234b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x102234ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x102234e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x102233020"/>
        <function-ref name="disableIntr" scoped="" ref="0x1022331b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x102233340"/>
        <function-ref name="getUbr" scoped="" ref="0x1022335d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x102233760"/>
        <function-ref name="setUmctl" scoped="" ref="0x1022338f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x102233a80"/>
        <function-ref name="isUart" scoped="" ref="0x102233c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x102233da0"/>
        <function-ref name="isSpi" scoped="" ref="0x102232020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1022321b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x102232340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x1022324d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x102232660"/>
        <function-ref name="getMode" scoped="" ref="0x1022327f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x102232b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x102232d10"/>
        <function-ref name="setUbr" scoped="" ref="0x102231020"/>
        <function-ref name="tx" scoped="" ref="0x1022311b0"/>
        <function-ref name="getUctl" scoped="" ref="0x102231340"/>
        <function-ref name="disableUart" scoped="" ref="0x1022314d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x102231660"/>
        <function-ref name="setModeUart" scoped="" ref="0x1022317f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x102231980"/>
        <function-ref name="rx" scoped="" ref="0x102231b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x102231ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x102231e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x102230020"/>
        <function-ref name="disableSpi" scoped="" ref="0x1022301b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x102230340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x10225dd10" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x10225dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x10222e0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x10222e270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10222e400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10222e590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x10222e720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x10222e8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10222ea40"/>
        <function-ref name="getStopBit" scoped="" ref="0x10222ebd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10222ed60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x10222d020"/>
        <function-ref name="getData" scoped="" ref="0x10222d1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x10222d340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x10222d4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10222d760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x10222d8f0"/>
        <function-ref name="getIV" scoped="" ref="0x10222da80"/>
        <function-ref name="enableI2C" scoped="" ref="0x10222dc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x10222dda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10225c020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10225c1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x10225c340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10225c4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x10225c660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x10225c7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x10225c980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x10225cd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x10225b020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x10225b1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x10225b340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x10225b4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x10225b660"/>
        <function-ref name="disableI2C" scoped="" ref="0x10225b7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x10225b980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x10225bb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x10225bca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x10225be30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x10225a020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x10225a1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x10225a340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x10225a4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x10225a660"/>
        <function-ref name="setWordMode" scoped="" ref="0x10225a7f0"/>
        <function-ref name="setData" scoped="" ref="0x10225a980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x10225ab10"/>
        <function-ref name="getClockSource" scoped="" ref="0x10225aca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x10225ae30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x102259020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1022591b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x102259340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x1022598d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x102259a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x102259bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x102259d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x102258020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1022581b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x102258340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x1022584d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x102258660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x1022587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x102256b20" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x102256b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102255020"/>
        <function-ref name="isInput" scoped="" ref="0x1022551b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102255340"/>
        <function-ref name="toggle" scoped="" ref="0x1022554d0"/>
        <function-ref name="isOutput" scoped="" ref="0x102255660"/>
        <function-ref name="getResistor" scoped="" ref="0x1022557f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102255980"/>
        <function-ref name="get" scoped="" ref="0x102255b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102255ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x102255e30"/>
        <function-ref name="set" scoped="" ref="0x102254020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022541b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102254340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022545d0"/>
        <function-ref name="clr" scoped="" ref="0x102254760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x10222f150" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x10222f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10222f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x102258bb0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x102258bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102257020"/>
        <function-ref name="isInput" scoped="" ref="0x1022571b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102257340"/>
        <function-ref name="toggle" scoped="" ref="0x1022574d0"/>
        <function-ref name="isOutput" scoped="" ref="0x102257660"/>
        <function-ref name="getResistor" scoped="" ref="0x1022577f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102257980"/>
        <function-ref name="get" scoped="" ref="0x102257b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102257ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x102257e30"/>
        <function-ref name="set" scoped="" ref="0x102256020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x1022561b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x102256340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x1022565d0"/>
        <function-ref name="clr" scoped="" ref="0x102256760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1033072c0" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1033072c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x103307640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1033077d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x103301440" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x103301440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x1033017c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1032f9760" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1032f9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1032f9ae0"/>
        <function-ref name="configure" scoped="" ref="0x1032f9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x103301a50" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x103301a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x103301dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x1032ff020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1032ff1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1032ff340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1032ff4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1032ff660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1032ff7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x1032ff980"/>
        <function-ref name="setClockSource" scoped="" ref="0x1032ffb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1032ffca0"/>
        <function-ref name="getData" scoped="" ref="0x1032ffe30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1032fe020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1032fe1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1032fe440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1032fe5d0"/>
        <function-ref name="getIV" scoped="" ref="0x1032fe760"/>
        <function-ref name="enableI2C" scoped="" ref="0x1032fe8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x1032fea80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1032fec10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1032feda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1032fd020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1032fd1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x1032fd340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1032fd4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1032fd660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1032fd9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1032fdb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1032fdd10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1032fc020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1032fc1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1032fc340"/>
        <function-ref name="disableI2C" scoped="" ref="0x1032fc4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1032fc660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x1032fc7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1032fc980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x1032fcb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1032fcca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x1032fce30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x1032fb020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x1032fb1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x1032fb340"/>
        <function-ref name="setWordMode" scoped="" ref="0x1032fb4d0"/>
        <function-ref name="setData" scoped="" ref="0x1032fb660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x1032fb7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x1032fb980"/>
        <function-ref name="getWordMode" scoped="" ref="0x1032fbb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1032fbca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1032fbe30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x1032fa020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x1032fa5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1032fa740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x1032fa8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x1032faa60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x1032fabf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1032fad80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x1032f9020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x1032f91b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x1032f9340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x1032f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x103302c10" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x103302c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x103301020"/>
        <function-ref name="txDone" scoped="" ref="0x1033011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x103308640" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x103308640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1033089c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x103308b50"/>
        <function-ref name="request" scoped="" ref="0x103308ce0"/>
        <function-ref name="granted" scoped="" ref="0x103308e70"/>
        <function-ref name="isOwner" scoped="" ref="0x103307030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x1033062b0" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x1033062b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x103306630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x1033067c0"/>
        <function-ref name="setUctl" scoped="" ref="0x103306950"/>
        <function-ref name="enableUart" scoped="" ref="0x103306ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x103306c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x103306e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x103305020"/>
        <function-ref name="getUtctl" scoped="" ref="0x1033051b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x103305340"/>
        <function-ref name="resetUsart" scoped="" ref="0x1033054d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x103305660"/>
        <function-ref name="disableIntr" scoped="" ref="0x1033057f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x103305980"/>
        <function-ref name="getUbr" scoped="" ref="0x103305c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x103305da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x103304020"/>
        <function-ref name="isUartRx" scoped="" ref="0x1033041b0"/>
        <function-ref name="isUart" scoped="" ref="0x103304340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1033044d0"/>
        <function-ref name="isSpi" scoped="" ref="0x103304660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1033047f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x103304980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x103304b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x103304ca0"/>
        <function-ref name="getMode" scoped="" ref="0x103304e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x103303220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1033033b0"/>
        <function-ref name="setUbr" scoped="" ref="0x103303540"/>
        <function-ref name="tx" scoped="" ref="0x1033036d0"/>
        <function-ref name="getUctl" scoped="" ref="0x103303860"/>
        <function-ref name="disableUart" scoped="" ref="0x1033039f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x103303b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x103303d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x103302020"/>
        <function-ref name="rx" scoped="" ref="0x1033021b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x103302340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1033024d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x103302660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1033027f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x103302980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x103307a60" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x103307a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x103307de0"/>
        <function-ref name="userId" scoped="" ref="0x103306020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1023122c0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1023122c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x102312640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1023127d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1023118a0" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1023118a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x102311c20"/>
        <function-ref name="configure" scoped="" ref="0x102311db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x1023154d0" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x1023154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x102315850"/>
        <function-ref name="txDone" scoped="" ref="0x1023159e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x102313020" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x102313020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1023133a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x102313530"/>
        <function-ref name="request" scoped="" ref="0x1023136c0"/>
        <function-ref name="granted" scoped="" ref="0x102313850"/>
        <function-ref name="isOwner" scoped="" ref="0x1023139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x1023143f0" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x1023143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x102314770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x102312ad0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x102312ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x102312e50"/>
        <function-ref name="userId" scoped="" ref="0x102311020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x10230de50" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x10230de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x10230c210"/>
        <function-ref name="userId" scoped="" ref="0x10230c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x10230e060" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x10230e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10230e400"/>
        <function-ref name="txDone" scoped="" ref="0x10230e590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x10230d840" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x10230d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10230dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x10230e990" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x10230e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10230ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x10230d060" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x10230d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x10230d3e0"/>
        <function-ref name="txDone" scoped="" ref="0x10230d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x102309850" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x102309850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x102309bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x102309d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x102306570" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x102306570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x102306910"/>
        <function-ref name="configure" scoped="" ref="0x102306aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x102308020" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x102308020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1023083a0"/>
        <function-ref name="requested" scoped="" ref="0x102308530"/>
        <function-ref name="granted" scoped="" ref="0x1023086c0"/>
        <function-ref name="isOwner" scoped="" ref="0x102308850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1023089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10230aa80" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10230aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10230ae20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x102309020"/>
        <function-ref name="request" scoped="" ref="0x1023091b0"/>
        <function-ref name="granted" scoped="" ref="0x102309340"/>
        <function-ref name="isOwner" scoped="" ref="0x1023094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x102308c30" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x102308c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x102306020"/>
        <function-ref name="userId" scoped="" ref="0x1023061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x103333140" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x103333140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1033334c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x103333750" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x103333750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x103333ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x103333c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x103333df0"/>
        <function-ref name="dequeue" scoped="" ref="0x103332020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x1033cc850" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x1033cc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x1033ccbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1033ccd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x1033ca590" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x1033ca590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x1033ca930"/>
        <function-ref name="configure" scoped="" ref="0x1033caac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x1033cad50" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x1033cad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x1033c9100"/>
        <function-ref name="isEmpty" scoped="" ref="0x1033c9290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x1033c9420"/>
        <function-ref name="dequeue" scoped="" ref="0x1033c95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x1033cb020" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x1033cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1033cb3a0"/>
        <function-ref name="requested" scoped="" ref="0x1033cb530"/>
        <function-ref name="granted" scoped="" ref="0x1033cb6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x1033cb850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x1033cb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x1033c9800" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x1033c9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1033c9b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x1033c9d10"/>
        <function-ref name="led1On" scoped="" ref="0x1033c8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x1033c81b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x1033c8340"/>
        <function-ref name="get" scoped="" ref="0x1033c84d0"/>
        <function-ref name="led1Off" scoped="" ref="0x1033c8660"/>
        <function-ref name="led0On" scoped="" ref="0x1033c8ca0"/>
        <function-ref name="set" scoped="" ref="0x1033c8980"/>
        <function-ref name="led2On" scoped="" ref="0x1033c87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x1033c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1033ce970" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1033ce970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1033ced10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1033cc020"/>
        <function-ref name="request" scoped="" ref="0x1033cc1b0"/>
        <function-ref name="granted" scoped="" ref="0x1033cc340"/>
        <function-ref name="isOwner" scoped="" ref="0x1033cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x1033cbc30" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x1033cbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x1033ca020"/>
        <function-ref name="userId" scoped="" ref="0x1033ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x1033c7020" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x1033c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1033c73a0"/>
        <function-ref name="runTask" scoped="" ref="0x1033c7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x1022ff530" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x1022ff530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x1022ff8b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x1022ffa40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x1022ffbd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x1022ffd60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x1022fc020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x1022fc1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x1022fc340"/>
        <function-ref name="getStopBit" scoped="" ref="0x1022fc4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x1022fc660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x1022fc7f0"/>
        <function-ref name="getData" scoped="" ref="0x1022fc980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x1022fcb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x1022fcca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x1022fb020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x1022fb1b0"/>
        <function-ref name="getIV" scoped="" ref="0x1022fb340"/>
        <function-ref name="enableI2C" scoped="" ref="0x1022fb4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x1022fb660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x1022fb7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x1022fb980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x1022fbb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x1022fbca0"/>
        <function-ref name="isI2C" scoped="" ref="0x1022fbe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x1022fa020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x1022fa1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x1022fa540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x1022fa6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x1022fa860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x1022fa9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x1022fab80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x1022fad10"/>
        <function-ref name="disableI2C" scoped="" ref="0x102353020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x1023531b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x102353340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x1023534d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x102353660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x1023537f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x102353980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x102353b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x102353ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x102353e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x102352020"/>
        <function-ref name="setData" scoped="" ref="0x1023521b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x102352340"/>
        <function-ref name="getClockSource" scoped="" ref="0x1023524d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x102352660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x1023527f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x102352980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x102352b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x102351420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1023515b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x102351740"/>
        <function-ref name="setStopBit" scoped="" ref="0x1023518d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x102351a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x102351bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x102351d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x102350020"/>
        <function-ref name="setStartByte" scoped="" ref="0x1023501b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x102350340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x102346250" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x102346250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x1023465d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x102346760"/>
        <function-ref name="setUctl" scoped="" ref="0x1023468f0"/>
        <function-ref name="enableUart" scoped="" ref="0x102346a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x102346c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x102346da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x102345020"/>
        <function-ref name="getUtctl" scoped="" ref="0x1023451b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x102345340"/>
        <function-ref name="resetUsart" scoped="" ref="0x1023454d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x102345660"/>
        <function-ref name="disableIntr" scoped="" ref="0x1023457f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x102345980"/>
        <function-ref name="getUbr" scoped="" ref="0x102345c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x102345da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x102344020"/>
        <function-ref name="isUartRx" scoped="" ref="0x1023441b0"/>
        <function-ref name="isUart" scoped="" ref="0x102344340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x1023444d0"/>
        <function-ref name="isSpi" scoped="" ref="0x102344660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x1023447f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x102344980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x102344b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x102344ca0"/>
        <function-ref name="getMode" scoped="" ref="0x102344e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x102343220"/>
        <function-ref name="clrIntr" scoped="" ref="0x1023433b0"/>
        <function-ref name="setUbr" scoped="" ref="0x102343540"/>
        <function-ref name="tx" scoped="" ref="0x1023436d0"/>
        <function-ref name="getUctl" scoped="" ref="0x102343860"/>
        <function-ref name="disableUart" scoped="" ref="0x1023439f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x102343b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x102343d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x102342020"/>
        <function-ref name="rx" scoped="" ref="0x1023421b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x102342340"/>
        <function-ref name="isUartTx" scoped="" ref="0x1023424d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x102342660"/>
        <function-ref name="disableSpi" scoped="" ref="0x1023427f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x102342980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x102340cb0" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x102340cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10233f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x10233f230"/>
        <function-ref name="setResistor" scoped="" ref="0x10233f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x10233f550"/>
        <function-ref name="isOutput" scoped="" ref="0x10233f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10233f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x10233fa00"/>
        <function-ref name="get" scoped="" ref="0x10233fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10233fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x10233e020"/>
        <function-ref name="set" scoped="" ref="0x10233e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10233e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10233e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10233e760"/>
        <function-ref name="clr" scoped="" ref="0x10233e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x10234d430" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x10234d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x10234d7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x10234d940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x10234dad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x10234dc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x10234ddf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x10234c020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x10234c1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x10234c340"/>
        <function-ref name="setClockSource" scoped="" ref="0x10234c4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x10234c660"/>
        <function-ref name="getData" scoped="" ref="0x10234c7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x10234c980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x10234cb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x10234cda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x10234b020"/>
        <function-ref name="getIV" scoped="" ref="0x10234b1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x10234b340"/>
        <function-ref name="setStartBit" scoped="" ref="0x10234b4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x10234b660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x10234b7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x10234b980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x10234bb10"/>
        <function-ref name="isI2C" scoped="" ref="0x10234bca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x10234be30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x10234a020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x10234a3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x10234a540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x10234a6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x10234a860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x10234a9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x10234ab80"/>
        <function-ref name="disableI2C" scoped="" ref="0x10234ad10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x102349020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x1023491b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x102349340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x1023494d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x102349660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x1023497f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x102349980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x102349b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x102349ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x102349e30"/>
        <function-ref name="setData" scoped="" ref="0x102348020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x1023481b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x102348340"/>
        <function-ref name="getWordMode" scoped="" ref="0x1023484d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x102348660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x1023487f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x102348980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x102347020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x1023471b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x102347340"/>
        <function-ref name="setStopBit" scoped="" ref="0x1023474d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x102347660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x1023477f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x102347980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x102347b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x102347ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x102347e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x102342d40" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x102342d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1023410e0"/>
        <function-ref name="isInput" scoped="" ref="0x102341270"/>
        <function-ref name="setResistor" scoped="" ref="0x102341400"/>
        <function-ref name="toggle" scoped="" ref="0x102341590"/>
        <function-ref name="isOutput" scoped="" ref="0x102341720"/>
        <function-ref name="getResistor" scoped="" ref="0x1023418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102341a40"/>
        <function-ref name="get" scoped="" ref="0x102341bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102341d60"/>
        <function-ref name="getRaw" scoped="" ref="0x102340020"/>
        <function-ref name="set" scoped="" ref="0x1023401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x102340340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x1023404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x102340760"/>
        <function-ref name="clr" scoped="" ref="0x1023408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x102460c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x102460c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245f210"/>
        <function-ref name="write" scoped="" ref="0x10245f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10246bda0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10246bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10246a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x102464b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x102464b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102462020"/>
        <function-ref name="write" scoped="" ref="0x1024621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10245e670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10245e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245e9f0"/>
        <function-ref name="write" scoped="" ref="0x10245eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x102457e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x102457e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102455210"/>
        <function-ref name="write" scoped="" ref="0x1024553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10245ee50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10245ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245c210"/>
        <function-ref name="write" scoped="" ref="0x10245c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10244a2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10244a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244a670"/>
        <function-ref name="write" scoped="" ref="0x10244a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10244c2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10244c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244c670"/>
        <function-ref name="write" scoped="" ref="0x10244c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x102468120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x102468120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024684a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x102452670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x102452670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024529f0"/>
        <function-ref name="write" scoped="" ref="0x102452b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x10244d2f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x10244d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244d670"/>
        <function-ref name="write" scoped="" ref="0x10244d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x102462c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x102462c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102461020"/>
        <function-ref name="write" scoped="" ref="0x1024611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x102461c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x102461c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102460020"/>
        <function-ref name="write" scoped="" ref="0x1024601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x102458670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x102458670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024589f0"/>
        <function-ref name="write" scoped="" ref="0x102458b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10245ae50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10245ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102459210"/>
        <function-ref name="write" scoped="" ref="0x1024593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10245c670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10245c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245c9f0"/>
        <function-ref name="write" scoped="" ref="0x10245cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10246c760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10246c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10246cae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10246cc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10246ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x102467aa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x102467aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102467e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x102466120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x102466120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024665a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x102451a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x102451a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102451df0"/>
        <function-ref name="write" scoped="" ref="0x102450020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x102466870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x102466870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102466bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x10244dad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x10244dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244de50"/>
        <function-ref name="write" scoped="" ref="0x10244c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x102468dc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x102468dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102467180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x102453e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x102453e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102452210"/>
        <function-ref name="write" scoped="" ref="0x1024523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x102461480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x102461480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102461800"/>
        <function-ref name="write" scoped="" ref="0x102461990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x102462480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x102462480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102462800"/>
        <function-ref name="write" scoped="" ref="0x102462990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10246b750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10246b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10246bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x102454e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x102454e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102453210"/>
        <function-ref name="write" scoped="" ref="0x1024533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x102455670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x102455670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024559f0"/>
        <function-ref name="write" scoped="" ref="0x102455b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x102453670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x102453670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024539f0"/>
        <function-ref name="write" scoped="" ref="0x102453b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10244bad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10244bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244be50"/>
        <function-ref name="write" scoped="" ref="0x10244a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10244cad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10244cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244ce50"/>
        <function-ref name="write" scoped="" ref="0x10244b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x102459670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x102459670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024599f0"/>
        <function-ref name="write" scoped="" ref="0x102459b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x102455e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x102455e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102454210"/>
        <function-ref name="write" scoped="" ref="0x1024543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x10244ead0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x10244ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244ee50"/>
        <function-ref name="write" scoped="" ref="0x10244d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10245b670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10245b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245b9f0"/>
        <function-ref name="write" scoped="" ref="0x10245bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10244aad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10244aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10244ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x102449020"/>
        <function-ref name="write" scoped="" ref="0x1024491b0"/>
        <function-ref name="beginRead" scoped="" ref="0x102449340"/>
        <function-ref name="readDone" scoped="" ref="0x1024494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10246b100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10246b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10246b480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x102464370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x102464370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024646f0"/>
        <function-ref name="write" scoped="" ref="0x102464880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x102460480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x102460480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102460800"/>
        <function-ref name="write" scoped="" ref="0x102460990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x102458e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x102458e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102457210"/>
        <function-ref name="write" scoped="" ref="0x1024573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10245ce50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10245ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245b210"/>
        <function-ref name="write" scoped="" ref="0x10245b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x102457670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x102457670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024579f0"/>
        <function-ref name="write" scoped="" ref="0x102457b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10245f670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10245f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245f9f0"/>
        <function-ref name="write" scoped="" ref="0x10245fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10246a450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10246a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10246a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10245fe50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10245fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245e210"/>
        <function-ref name="write" scoped="" ref="0x10245e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10246da80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10246da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10246de00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10246c020"/>
        <function-ref name="request" scoped="" ref="0x10246c1b0"/>
        <function-ref name="granted" scoped="" ref="0x10246c340"/>
        <function-ref name="isOwner" scoped="" ref="0x10246c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x102465020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x102465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x102465cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x102465cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024640a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x10244e2f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x10244e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244e670"/>
        <function-ref name="write" scoped="" ref="0x10244e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x102450ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x102450ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102450e50"/>
        <function-ref name="write" scoped="" ref="0x10244e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x102467450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x102467450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024677d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1024502f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1024502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102450670"/>
        <function-ref name="write" scoped="" ref="0x102450800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10244b2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10244b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10244b670"/>
        <function-ref name="write" scoped="" ref="0x10244b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x102459e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x102459e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102458210"/>
        <function-ref name="write" scoped="" ref="0x1024583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x102454670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x102454670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024549f0"/>
        <function-ref name="write" scoped="" ref="0x102454b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10246aaa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10246aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10246ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x102468770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x102468770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102468af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10245be50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10245be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245a210"/>
        <function-ref name="write" scoped="" ref="0x10245a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x102465670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x102465670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024659f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10245a670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10245a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10245a9f0"/>
        <function-ref name="write" scoped="" ref="0x10245ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x102452e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x102452e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102451610"/>
        <function-ref name="write" scoped="" ref="0x1024517a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x1024497a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x1024497a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x102449b20"/>
        <function-ref name="writeDone" scoped="" ref="0x102449cb0"/>
        <function-ref name="write" scoped="" ref="0x102449e40"/>
        <function-ref name="beginRead" scoped="" ref="0x102448020"/>
        <function-ref name="readDone" scoped="" ref="0x1024481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x102492c60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x102492c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102491210"/>
        <function-ref name="write" scoped="" ref="0x1024913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x10249dda0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x10249dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x102496b50" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x102496b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102495020"/>
        <function-ref name="write" scoped="" ref="0x1024951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x102490670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x102490670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024909f0"/>
        <function-ref name="write" scoped="" ref="0x102490b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x102489e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x102489e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102488210"/>
        <function-ref name="write" scoped="" ref="0x1024883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x102490e50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x102490e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248f210"/>
        <function-ref name="write" scoped="" ref="0x10248f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10247c2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10247c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10247c670"/>
        <function-ref name="write" scoped="" ref="0x10247c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x10247f2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x10247f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10247f670"/>
        <function-ref name="write" scoped="" ref="0x10247f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x10249b120" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x10249b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x102484670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x102484670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024849f0"/>
        <function-ref name="write" scoped="" ref="0x102484b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1024802f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1024802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102480670"/>
        <function-ref name="write" scoped="" ref="0x102480800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x102495c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x102495c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102494020"/>
        <function-ref name="write" scoped="" ref="0x1024941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x102494c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x102494c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102492020"/>
        <function-ref name="write" scoped="" ref="0x1024921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x10248a670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x10248a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248a9f0"/>
        <function-ref name="write" scoped="" ref="0x10248ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x10248de50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x10248de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248b210"/>
        <function-ref name="write" scoped="" ref="0x10248b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10248f670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10248f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248f9f0"/>
        <function-ref name="write" scoped="" ref="0x10248fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10249e760" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10249e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10249eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x10249ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x10249ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x10249aaa0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x10249aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x102498120" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x102498120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024985a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x102483a70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x102483a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102483df0"/>
        <function-ref name="write" scoped="" ref="0x102482020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x102498870" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x102498870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102498bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x102480ad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102480ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102480e50"/>
        <function-ref name="write" scoped="" ref="0x10247f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x10249bdc0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x10249bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x102486e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x102486e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102484210"/>
        <function-ref name="write" scoped="" ref="0x1024843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x102494480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x102494480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102494800"/>
        <function-ref name="write" scoped="" ref="0x102494990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x102495480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x102495480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102495800"/>
        <function-ref name="write" scoped="" ref="0x102495990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x10249d750" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x10249d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x102487e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x102487e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102486210"/>
        <function-ref name="write" scoped="" ref="0x1024863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x102488670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x102488670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024889f0"/>
        <function-ref name="write" scoped="" ref="0x102488b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x102486670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x102486670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024869f0"/>
        <function-ref name="write" scoped="" ref="0x102486b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10247dad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10247dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10247de50"/>
        <function-ref name="write" scoped="" ref="0x10247c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x10247fad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x10247fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10247fe50"/>
        <function-ref name="write" scoped="" ref="0x10247d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x10248b670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x10248b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248b9f0"/>
        <function-ref name="write" scoped="" ref="0x10248bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x102488e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x102488e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102487210"/>
        <function-ref name="write" scoped="" ref="0x1024873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x102481ad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x102481ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102481e50"/>
        <function-ref name="write" scoped="" ref="0x102480020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10248e670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10248e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248e9f0"/>
        <function-ref name="write" scoped="" ref="0x10248eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10247cad0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10247cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10247ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x10247b020"/>
        <function-ref name="write" scoped="" ref="0x10247b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10247b340"/>
        <function-ref name="readDone" scoped="" ref="0x10247b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x10249d100" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x10249d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249d480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x102496370" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x102496370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024966f0"/>
        <function-ref name="write" scoped="" ref="0x102496880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x102492480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x102492480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102492800"/>
        <function-ref name="write" scoped="" ref="0x102492990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x10248ae50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x10248ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102489210"/>
        <function-ref name="write" scoped="" ref="0x1024893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10248fe50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10248fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248e210"/>
        <function-ref name="write" scoped="" ref="0x10248e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x102489670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x102489670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024899f0"/>
        <function-ref name="write" scoped="" ref="0x102489b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x102491670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x102491670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024919f0"/>
        <function-ref name="write" scoped="" ref="0x102491b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x10249c450" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x10249c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x102491e50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x102491e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102490210"/>
        <function-ref name="write" scoped="" ref="0x1024903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10249f9e0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10249f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10249fd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10249e020"/>
        <function-ref name="request" scoped="" ref="0x10249e1b0"/>
        <function-ref name="granted" scoped="" ref="0x10249e340"/>
        <function-ref name="isOwner" scoped="" ref="0x10249e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x102497020" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x102497020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x102497cc0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x102497cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024960a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1024812f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1024812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102481670"/>
        <function-ref name="write" scoped="" ref="0x102481800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x102482ad0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x102482ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102482e50"/>
        <function-ref name="write" scoped="" ref="0x102481020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x10249a450" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x10249a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1024822f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1024822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102482670"/>
        <function-ref name="write" scoped="" ref="0x102482800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10247d2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10247d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10247d670"/>
        <function-ref name="write" scoped="" ref="0x10247d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x10248be50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x10248be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248a210"/>
        <function-ref name="write" scoped="" ref="0x10248a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x102487670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x102487670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024879f0"/>
        <function-ref name="write" scoped="" ref="0x102487b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x10249caa0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x10249caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x10249b770" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x10249b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10249baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10248ee50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10248ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248d210"/>
        <function-ref name="write" scoped="" ref="0x10248d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x102497670" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x102497670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1024979f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x10248d670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x10248d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10248d9f0"/>
        <function-ref name="write" scoped="" ref="0x10248db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x102484e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x102484e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102483610"/>
        <function-ref name="write" scoped="" ref="0x1024837a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10247b7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10247b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10247bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x10247bcb0"/>
        <function-ref name="write" scoped="" ref="0x10247be40"/>
        <function-ref name="beginRead" scoped="" ref="0x10247a020"/>
        <function-ref name="readDone" scoped="" ref="0x10247a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x102473b20" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x102473b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x102470020"/>
        <function-ref name="changed" scoped="" ref="0x1024701b0"/>
        <function-ref name="amGroup" scoped="" ref="0x102470340"/>
        <function-ref name="setAddress" scoped="" ref="0x1024704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x102472d20" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x102472d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x1024bc0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x1024b8310" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x1024b8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x1024b8690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x1024b4880" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1024b4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024b4c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x1024a9020" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1024a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x1024ffbd0" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1024ffbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024a2020"/>
        <function-ref name="write" scoped="" ref="0x1024a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x1024a2530" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x1024a2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1024a28b0"/>
        <function-ref name="stop" scoped="" ref="0x1024a2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x1024a3140" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x1024a3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024a34c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x1024a8c50" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1024a8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024ee020"/>
        <function-ref name="write" scoped="" ref="0x1024ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x1024ee540" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x1024ee540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1024ee8c0"/>
        <function-ref name="isInput" scoped="" ref="0x1024eea50"/>
        <function-ref name="toggle" scoped="" ref="0x1024eebe0"/>
        <function-ref name="isOutput" scoped="" ref="0x1024eed70"/>
        <function-ref name="get" scoped="" ref="0x1024ed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1024ed1b0"/>
        <function-ref name="set" scoped="" ref="0x1024ed340"/>
        <function-ref name="clr" scoped="" ref="0x1024ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x1024e5910" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1024e5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1024e8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x1024ea150" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x1024ea150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1024ea4d0"/>
        <function-ref name="write" scoped="" ref="0x1024ea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x1024ea9f0" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x1024ea9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1024ead70"/>
        <function-ref name="isInput" scoped="" ref="0x1024e9020"/>
        <function-ref name="toggle" scoped="" ref="0x1024e91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x1024e9340"/>
        <function-ref name="get" scoped="" ref="0x1024e94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x1024e9660"/>
        <function-ref name="set" scoped="" ref="0x1024e97f0"/>
        <function-ref name="clr" scoped="" ref="0x1024e9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x1024ecc90" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x1024ecc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x102526ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x102523a90" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x102523a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x1025228d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x102513020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x102513020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x102513e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x102512800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x102512340"/>
        <function-ref name="overflow" scoped="" ref="0x102512cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x10250e530" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x10250e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10250c3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10250cd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10250c890"/>
        <function-ref name="overflow" scoped="" ref="0x10250b260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x102506020" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x102506020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1025063a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x102506530"/>
        <function-ref name="enableEvents" scoped="" ref="0x1025066c0"/>
        <function-ref name="get" scoped="" ref="0x102506850"/>
        <function-ref name="disableEvents" scoped="" ref="0x1025069e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x102506b70"/>
        <function-ref name="getMode" scoped="" ref="0x102506d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x102505020"/>
        <function-ref name="overflow" scoped="" ref="0x1025051b0"/>
        <function-ref name="setMode" scoped="" ref="0x102505340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x1025054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10250ae50" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10250ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014367d0"/>
            <typename><typedef-ref name="TMicro" ref="0x101436b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x102509ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x102508670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x1025081b0"/>
        <function-ref name="overflow" scoped="" ref="0x102508b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x1024ef590" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x1024ef590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1024ef910"/>
        <function-ref name="isInput" scoped="" ref="0x1024efaa0"/>
        <function-ref name="toggle" scoped="" ref="0x1024efc30"/>
        <function-ref name="isOutput" scoped="" ref="0x1024efdc0"/>
        <function-ref name="get" scoped="" ref="0x102501020"/>
        <function-ref name="makeOutput" scoped="" ref="0x1025011b0"/>
        <function-ref name="set" scoped="" ref="0x102501340"/>
        <function-ref name="clr" scoped="" ref="0x1025014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x102561c50" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x102561c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102560020"/>
        <function-ref name="isInput" scoped="" ref="0x1025601b0"/>
        <function-ref name="setResistor" scoped="" ref="0x102560340"/>
        <function-ref name="toggle" scoped="" ref="0x1025604d0"/>
        <function-ref name="isOutput" scoped="" ref="0x102560660"/>
        <function-ref name="getResistor" scoped="" ref="0x1025607f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102560980"/>
        <function-ref name="get" scoped="" ref="0x102560b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x102560ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x102560e30"/>
        <function-ref name="set" scoped="" ref="0x10255f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10255f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10255f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10255f5d0"/>
        <function-ref name="clr" scoped="" ref="0x10255f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x1025009e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x1025009e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102500d60"/>
        <function-ref name="isInput" scoped="" ref="0x102561020"/>
        <function-ref name="toggle" scoped="" ref="0x1025611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x102561340"/>
        <function-ref name="get" scoped="" ref="0x1025614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102561660"/>
        <function-ref name="set" scoped="" ref="0x1025617f0"/>
        <function-ref name="clr" scoped="" ref="0x102561980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x102502a10" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x102502a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x102502d90"/>
        <function-ref name="stop" scoped="" ref="0x10255a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10254bcb0" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10254bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10254a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10254a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10254a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10254a550"/>
        <function-ref name="setCca" scoped="" ref="0x10254a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10254a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x102547990" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x102547990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x102547d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x10254b020" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x10254b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10254b3a0"/>
        <function-ref name="cancel" scoped="" ref="0x10254b530"/>
        <function-ref name="modify" scoped="" ref="0x10254b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x10254b850"/>
        <function-ref name="resend" scoped="" ref="0x10254b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10254e6c0" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10254e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10254ea40"/>
        <function-ref name="stop" scoped="" ref="0x10254ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x102549150" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x102549150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x1025494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x10253d970" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x10253d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x10253dcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x10253de80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10253c030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10253c1c0"/>
        <function-ref name="setCca" scoped="" ref="0x10253c350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10253c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x102535950" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x102535950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x102532020"/>
        <function-ref name="clear" scoped="" ref="0x102532750"/>
        <function-ref name="isValid" scoped="" ref="0x102533780"/>
        <function-ref name="set" scoped="" ref="0x102532e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x102582020" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x102582020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025823a0"/>
        <function-ref name="write" scoped="" ref="0x102582530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x102582890" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x102582890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102582c10"/>
        <function-ref name="write" scoped="" ref="0x102582da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x10253c900" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x10253c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10253cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x102585530" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x102585530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1025858b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x102595880" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x102595880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x102595c00"/>
        <function-ref name="disable" scoped="" ref="0x102595d90"/>
        <function-ref name="captured" scoped="" ref="0x102594020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x1025941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x10253bae0" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x10253bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x102537390"/>
        <function-ref name="fired" scoped="" ref="0x102538360"/>
        <function-ref name="startAt" scoped="" ref="0x102538ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x102538820"/>
        <function-ref name="getAlarm" scoped="" ref="0x102537850"/>
        <function-ref name="start" scoped="" ref="0x10253a970"/>
        <function-ref name="stop" scoped="" ref="0x10253ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x102537d00" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x102537d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1025360a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x102536230"/>
        <function-ref name="getRssi" scoped="" ref="0x1025363c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x102536550"/>
        <function-ref name="getPower" scoped="" ref="0x1025366e0"/>
        <function-ref name="getLqi" scoped="" ref="0x102536870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x102588550" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x102588550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025888d0"/>
        <function-ref name="write" scoped="" ref="0x102588a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x102588e00" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x102588e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025871c0"/>
        <function-ref name="write" scoped="" ref="0x102587350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x10257cd40" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x10257cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10257f0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x10257f270"/>
        <function-ref name="sfd" scoped="" ref="0x10257f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10253ebc0" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10253ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10253d020"/>
        <function-ref name="cancel" scoped="" ref="0x10253d1b0"/>
        <function-ref name="modify" scoped="" ref="0x10253d340"/>
        <function-ref name="sendDone" scoped="" ref="0x10253d4d0"/>
        <function-ref name="resend" scoped="" ref="0x10253d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x10258ad10" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10258ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x1025890e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x102589270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x102589400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x102585c60" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x102585c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102584020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x10258d820" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x10258d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10258dba0"/>
        <function-ref name="isInput" scoped="" ref="0x10258dd30"/>
        <function-ref name="toggle" scoped="" ref="0x10258c020"/>
        <function-ref name="isOutput" scoped="" ref="0x10258c1b0"/>
        <function-ref name="get" scoped="" ref="0x10258c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10258c4d0"/>
        <function-ref name="set" scoped="" ref="0x10258c660"/>
        <function-ref name="clr" scoped="" ref="0x10258c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10253fc60" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10253fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10253e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x102536bb0" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x102536bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x102535020"/>
        <function-ref name="getHeader" scoped="" ref="0x1025351b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x102535340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x10258fbe0" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x10258fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x102595020"/>
        <function-ref name="isSet" scoped="" ref="0x1025951b0"/>
        <function-ref name="cancel" scoped="" ref="0x102595340"/>
        <function-ref name="set" scoped="" ref="0x1025954d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x1025843e0" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x1025843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102584960"/>
        <function-ref name="write" scoped="" ref="0x102584af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x10258a020" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x10258a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10258a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10258a530"/>
        <function-ref name="request" scoped="" ref="0x10258a6c0"/>
        <function-ref name="granted" scoped="" ref="0x10258a850"/>
        <function-ref name="isOwner" scoped="" ref="0x10258a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x102594500" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x102594500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102594980"/>
        <function-ref name="isInput" scoped="" ref="0x102594b10"/>
        <function-ref name="toggle" scoped="" ref="0x102594ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x102594e30"/>
        <function-ref name="get" scoped="" ref="0x10258d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10258d1b0"/>
        <function-ref name="set" scoped="" ref="0x10258d340"/>
        <function-ref name="clr" scoped="" ref="0x10258d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x102581130" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x102581130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025814b0"/>
        <function-ref name="write" scoped="" ref="0x102581640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x1025819c0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x1025819c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102581d40"/>
        <function-ref name="write" scoped="" ref="0x102580020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x1025876d0" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1025876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102587a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x10258cb40" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x10258cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10258b020"/>
        <function-ref name="isInput" scoped="" ref="0x10258b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10258b340"/>
        <function-ref name="isOutput" scoped="" ref="0x10258b4d0"/>
        <function-ref name="get" scoped="" ref="0x10258b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10258b7f0"/>
        <function-ref name="set" scoped="" ref="0x10258b980"/>
        <function-ref name="clr" scoped="" ref="0x10258bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10257f6c0" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10257f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10257fa40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10257fbd0"/>
        <function-ref name="led1On" scoped="" ref="0x10257fd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10257e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10257e1b0"/>
        <function-ref name="get" scoped="" ref="0x10257e340"/>
        <function-ref name="led1Off" scoped="" ref="0x10257e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x10257eb10"/>
        <function-ref name="set" scoped="" ref="0x10257e660"/>
        <function-ref name="led0On" scoped="" ref="0x10257e7f0"/>
        <function-ref name="led2On" scoped="" ref="0x10257e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x1025835e0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1025835e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102583960"/>
        <function-ref name="write" scoped="" ref="0x102583af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10253e320" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10253e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x10253e6a0"/>
        <function-ref name="stop" scoped="" ref="0x10253e830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x102589780" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x102589780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x102589b00"/>
        <function-ref name="writeDone" scoped="" ref="0x102589c90"/>
        <function-ref name="write" scoped="" ref="0x102589e20"/>
        <function-ref name="beginRead" scoped="" ref="0x102588020"/>
        <function-ref name="readDone" scoped="" ref="0x1025881b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x102587de0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x102587de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102585180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x102584e80" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x102584e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102583220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x10253b0f0" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x10253b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10253b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x10260ec60" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x10260ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260d210"/>
        <function-ref name="write" scoped="" ref="0x10260d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x102618020" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x102618020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x102612c70" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x102612c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102611020"/>
        <function-ref name="write" scoped="" ref="0x1026111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x10260c670" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x10260c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260c9f0"/>
        <function-ref name="write" scoped="" ref="0x10260cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x102605e50" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x102605e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102604210"/>
        <function-ref name="write" scoped="" ref="0x1026043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x10260ce50" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x10260ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260b210"/>
        <function-ref name="write" scoped="" ref="0x10260b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x10265e2f0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x10265e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10265e670"/>
        <function-ref name="write" scoped="" ref="0x10265e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x1025fb2f0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x1025fb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fb670"/>
        <function-ref name="write" scoped="" ref="0x1025fb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x102617370" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x102617370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026176f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x102600670" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x102600670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026009f0"/>
        <function-ref name="write" scoped="" ref="0x102600b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x1025fc2f0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x1025fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fc670"/>
        <function-ref name="write" scoped="" ref="0x1025fc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x102611c60" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x102611c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102610020"/>
        <function-ref name="write" scoped="" ref="0x1026101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x102610c60" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x102610c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260e020"/>
        <function-ref name="write" scoped="" ref="0x10260e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x102606670" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x102606670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026069f0"/>
        <function-ref name="write" scoped="" ref="0x102606b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x102609e50" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x102609e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102607210"/>
        <function-ref name="write" scoped="" ref="0x1026073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x10260b670" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x10260b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260b9f0"/>
        <function-ref name="write" scoped="" ref="0x10260bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x10261a8f0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x10261a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x10261ac70"/>
        <function-ref name="abortRelease" scoped="" ref="0x10261ae00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x102619020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x102616d00" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x102616d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026140a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x102614370" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x102614370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x1025ffa70" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x1025ffa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025ffdf0"/>
        <function-ref name="write" scoped="" ref="0x1025fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x102614ac0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x102614ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102614e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x1025fcad0" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x1025fcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fce50"/>
        <function-ref name="write" scoped="" ref="0x1025fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x102616060" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x102616060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026163e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x102602e50" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x102602e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102600210"/>
        <function-ref name="write" scoped="" ref="0x1026003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x102610480" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x102610480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102610800"/>
        <function-ref name="write" scoped="" ref="0x102610990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x102611480" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x102611480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102611800"/>
        <function-ref name="write" scoped="" ref="0x102611990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x102619940" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x102619940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102619cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x102603e50" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x102603e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102602210"/>
        <function-ref name="write" scoped="" ref="0x1026023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x102604670" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x102604670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026049f0"/>
        <function-ref name="write" scoped="" ref="0x102604b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x102602670" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x102602670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026029f0"/>
        <function-ref name="write" scoped="" ref="0x102602b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x10265fad0" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x10265fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10265fe50"/>
        <function-ref name="write" scoped="" ref="0x10265e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x1025fbad0" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x1025fbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fbe50"/>
        <function-ref name="write" scoped="" ref="0x10265f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x102607670" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x102607670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026079f0"/>
        <function-ref name="write" scoped="" ref="0x102607b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x102604e50" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x102604e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102603210"/>
        <function-ref name="write" scoped="" ref="0x1026033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x1025fdad0" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x1025fdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fde50"/>
        <function-ref name="write" scoped="" ref="0x1025fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x10260a670" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x10260a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260a9f0"/>
        <function-ref name="write" scoped="" ref="0x10260ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x10265ead0" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x10265ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10265ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x10265d020"/>
        <function-ref name="write" scoped="" ref="0x10265d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x10265d340"/>
        <function-ref name="readDone" scoped="" ref="0x10265d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x1026192f0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1026192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102619670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x102612490" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x102612490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102612810"/>
        <function-ref name="write" scoped="" ref="0x1026129a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10260e480" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10260e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260e800"/>
        <function-ref name="write" scoped="" ref="0x10260e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x102606e50" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x102606e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102605210"/>
        <function-ref name="write" scoped="" ref="0x1026053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x10260be50" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x10260be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260a210"/>
        <function-ref name="write" scoped="" ref="0x10260a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x102605670" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x102605670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026059f0"/>
        <function-ref name="write" scoped="" ref="0x102605b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x10260d670" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x10260d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260d9f0"/>
        <function-ref name="write" scoped="" ref="0x10260db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x102618670" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x102618670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026189f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x10260de50" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x10260de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10260c210"/>
        <function-ref name="write" scoped="" ref="0x10260c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x10261bc30" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x10261bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x10261a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x10261a1b0"/>
        <function-ref name="request" scoped="" ref="0x10261a340"/>
        <function-ref name="granted" scoped="" ref="0x10261a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x10261a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x102613160" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x102613160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026134e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x102613e00" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x102613e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026121c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x1025fd2f0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x1025fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fd670"/>
        <function-ref name="write" scoped="" ref="0x1025fd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x1025fead0" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x1025fead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fee50"/>
        <function-ref name="write" scoped="" ref="0x1025fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x1026166b0" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x1026166b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102616a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x1025fe2f0" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x1025fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025fe670"/>
        <function-ref name="write" scoped="" ref="0x1025fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x10265f2f0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x10265f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10265f670"/>
        <function-ref name="write" scoped="" ref="0x10265f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x102607e50" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x102607e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102606210"/>
        <function-ref name="write" scoped="" ref="0x1026063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x102603670" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x102603670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026039f0"/>
        <function-ref name="write" scoped="" ref="0x102603b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x102618cc0" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x102618cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1026170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x1026179c0" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x1026179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102617d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x10260ae50" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x10260ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102609210"/>
        <function-ref name="write" scoped="" ref="0x1026093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x1026137b0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x1026137b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102613b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x102609670" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x102609670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026099f0"/>
        <function-ref name="write" scoped="" ref="0x102609b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x102600e50" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x102600e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1025ff610"/>
        <function-ref name="write" scoped="" ref="0x1025ff7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x10265d7a0" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x10265d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x10265db20"/>
        <function-ref name="writeDone" scoped="" ref="0x10265dcb0"/>
        <function-ref name="write" scoped="" ref="0x10265de40"/>
        <function-ref name="beginRead" scoped="" ref="0x10265c020"/>
        <function-ref name="readDone" scoped="" ref="0x10265c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x102651df0" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x102651df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10264e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x10264e350"/>
        <function-ref name="sfd" scoped="" ref="0x10264e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10264e7c0" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10264e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10264eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x10264d020" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x10264d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x10264d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x1026515c0" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x1026515c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x102651940"/>
        <function-ref name="stop" scoped="" ref="0x102651ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x102645380" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x102645380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102645700"/>
        <function-ref name="isInput" scoped="" ref="0x102645890"/>
        <function-ref name="toggle" scoped="" ref="0x102645a20"/>
        <function-ref name="isOutput" scoped="" ref="0x102645bb0"/>
        <function-ref name="get" scoped="" ref="0x102645d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x102644020"/>
        <function-ref name="set" scoped="" ref="0x1026441b0"/>
        <function-ref name="clr" scoped="" ref="0x102644340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x10263eb90" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10263eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10263d020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10263d1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10263d340"/>
        <function-ref name="syncDone" scoped="" ref="0x10263d4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10263d660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10263d7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x10263d980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10263db10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10263dca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10263de30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10263c020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10263c1b0"/>
        <function-ref name="sync" scoped="" ref="0x10263c340"/>
        <function-ref name="getChannel" scoped="" ref="0x10263c5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x10263c760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x10268e9d0" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x10268e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10268ed50"/>
        <function-ref name="runTask" scoped="" ref="0x10268d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x10263cd70" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x10263cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x10263a330"/>
        <function-ref name="clear" scoped="" ref="0x10263aa60"/>
        <function-ref name="isValid" scoped="" ref="0x10263bba0"/>
        <function-ref name="set" scoped="" ref="0x102638210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x1026446b0" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x1026446b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x102644a30"/>
        <function-ref name="isInput" scoped="" ref="0x102644bc0"/>
        <function-ref name="toggle" scoped="" ref="0x102644d50"/>
        <function-ref name="isOutput" scoped="" ref="0x102643020"/>
        <function-ref name="get" scoped="" ref="0x1026431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102643340"/>
        <function-ref name="set" scoped="" ref="0x1026434d0"/>
        <function-ref name="clr" scoped="" ref="0x102643660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x102637cb0" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x102637cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026360a0"/>
        <function-ref name="write" scoped="" ref="0x102636230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x102636590" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x102636590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102636910"/>
        <function-ref name="write" scoped="" ref="0x102636aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x1026356d0" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x1026356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102635a50"/>
        <function-ref name="write" scoped="" ref="0x102635be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10263f330" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10263f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10263f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10263f840"/>
        <function-ref name="getRssi" scoped="" ref="0x10263f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10263fb60"/>
        <function-ref name="getPower" scoped="" ref="0x10263fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x10263fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x102649550" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x102649550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1026498d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x102649a60"/>
        <function-ref name="sfd" scoped="" ref="0x102649bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x1026403a0" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x1026403a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102640720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x102646020" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x102646020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x1026463a0"/>
        <function-ref name="isInput" scoped="" ref="0x102646530"/>
        <function-ref name="toggle" scoped="" ref="0x1026466c0"/>
        <function-ref name="isOutput" scoped="" ref="0x102646850"/>
        <function-ref name="get" scoped="" ref="0x1026469e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x102646b70"/>
        <function-ref name="set" scoped="" ref="0x102646d00"/>
        <function-ref name="clr" scoped="" ref="0x102645020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x102634020" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102634020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026343a0"/>
        <function-ref name="write" scoped="" ref="0x102634530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10264a620" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10264a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10264a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10263e1e0" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10263e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10263e560"/>
        <function-ref name="getHeader" scoped="" ref="0x10263e6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10263e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x102648020" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x102648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1026483a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x1026426e0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x1026426e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x102642a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x102642bf0"/>
        <function-ref name="request" scoped="" ref="0x102642d80"/>
        <function-ref name="granted" scoped="" ref="0x102641020"/>
        <function-ref name="isOwner" scoped="" ref="0x1026411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x102636e00" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x102636e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1026351c0"/>
        <function-ref name="write" scoped="" ref="0x102635350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x102641530" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x102641530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1026418b0"/>
        <function-ref name="writeDone" scoped="" ref="0x102641a40"/>
        <function-ref name="write" scoped="" ref="0x102641bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x102641d60"/>
        <function-ref name="readDone" scoped="" ref="0x102640020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x1026348b0" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x1026348b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102634e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x1026487c0" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x1026487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x102648b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102633150" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102633150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1026334d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102633660"/>
        <function-ref name="led1On" scoped="" ref="0x1026337f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102633980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102633b10"/>
        <function-ref name="get" scoped="" ref="0x102633ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x102633e30"/>
        <function-ref name="led2Off" scoped="" ref="0x1026324d0"/>
        <function-ref name="set" scoped="" ref="0x102632020"/>
        <function-ref name="led0On" scoped="" ref="0x1026321b0"/>
        <function-ref name="led2On" scoped="" ref="0x102632340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x1026373e0" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x1026373e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102637760"/>
        <function-ref name="write" scoped="" ref="0x1026378f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x102638b10" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x102638b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102637020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x102643a50" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x102643a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x102643dd0"/>
        <function-ref name="disable" scoped="" ref="0x102642020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x1026421b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x102642340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x102640ad0" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x102640ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10263f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x10264aca0" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x10264aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x1026490a0"/>
        <function-ref name="stop" scoped="" ref="0x102649230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x102695a70" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x102695a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x102695df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x102699660" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x102699660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1026999e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x102699b70"/>
        <function-ref name="getRssi" scoped="" ref="0x102699d00"/>
        <function-ref name="getNetwork" scoped="" ref="0x102696020"/>
        <function-ref name="getPower" scoped="" ref="0x1026961b0"/>
        <function-ref name="getLqi" scoped="" ref="0x102696340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x102694550" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x102694550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1026fbb00"/>
        <function-ref name="clear" scoped="" ref="0x1026fa2a0"/>
        <function-ref name="isValid" scoped="" ref="0x1026fb3d0"/>
        <function-ref name="set" scoped="" ref="0x1026fa9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x1026950c0" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026950c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x102695440"/>
        <function-ref name="getHeader" scoped="" ref="0x1026955d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x102695760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x1026f4480" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1026f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026f4800"/>
        <function-ref name="isSet" scoped="" ref="0x1026f4990"/>
        <function-ref name="cancel" scoped="" ref="0x1026f4b20"/>
        <function-ref name="set" scoped="" ref="0x1026f4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x1026f8660" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1026f8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1026f7ce0"/>
        <function-ref name="clear" scoped="" ref="0x1026f6460"/>
        <function-ref name="isValid" scoped="" ref="0x1026f75b0"/>
        <function-ref name="set" scoped="" ref="0x1026f6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1026966e0" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1026966e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x102696a60"/>
        <function-ref name="noAck" scoped="" ref="0x102696bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x102696d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x1026ed020" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x1026ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x1026ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x1026f3d10" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1026f3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x1026ef0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x1026ef270"/>
        <function-ref name="getRssi" scoped="" ref="0x1026ef400"/>
        <function-ref name="getNetwork" scoped="" ref="0x1026ef590"/>
        <function-ref name="getPower" scoped="" ref="0x1026ef720"/>
        <function-ref name="getLqi" scoped="" ref="0x1026ef8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1026e44a0" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1026e44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1026e4820"/>
        <function-ref name="payloadLength" scoped="" ref="0x1026e49b0"/>
        <function-ref name="getPayload" scoped="" ref="0x1026e4b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1026e4cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1026e4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x1026eda80" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x1026eda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1026eb020"/>
        <function-ref name="clear" scoped="" ref="0x1026eb750"/>
        <function-ref name="isValid" scoped="" ref="0x1026ec8d0"/>
        <function-ref name="set" scoped="" ref="0x1026ebe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x1026ee640" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1026ee640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1026ee9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x1026eeb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x1026eece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x1026e58b0" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x1026e58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026e5c30"/>
        <function-ref name="isSet" scoped="" ref="0x1026e5dc0"/>
        <function-ref name="cancel" scoped="" ref="0x1026e4020"/>
        <function-ref name="set" scoped="" ref="0x1026e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x1026e33b0" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x1026e33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x1026e26e0" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x1026e26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x1026e13d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x1026e9af0" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x1026e9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x1026e70d0"/>
        <function-ref name="clear" scoped="" ref="0x1026e7800"/>
        <function-ref name="isValid" scoped="" ref="0x1026e8970"/>
        <function-ref name="set" scoped="" ref="0x1026e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1026efc50" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1026efc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1026ee020"/>
        <function-ref name="noAck" scoped="" ref="0x1026ee1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1026ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x102765cf0" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x102765cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x102764980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x102763020" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x102763020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x101436020"/>
            <typename><typedef-ref name="T32khz" ref="0x101436390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x102763e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x102761800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x102761340"/>
        <function-ref name="overflow" scoped="" ref="0x102761cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10275e0b0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10275e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x1014197d0"/>
            <typename><typedef-ref name="TMilli" ref="0x101419b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10275a630"/>
        <function-ref name="fired" scoped="" ref="0x10275db00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10275c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x10275c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x102759020"/>
        <function-ref name="gett0" scoped="" ref="0x10275aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x10275c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10275eca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10275a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10275d1b0"/>
        <function-ref name="stop" scoped="" ref="0x10275d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x102749620" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x102749620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102749ba0"/>
        <function-ref name="write" scoped="" ref="0x102749d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x102754940" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x102754940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102754cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x10274c620" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x10274c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10274c9a0"/>
        <function-ref name="write" scoped="" ref="0x10274cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x102746060" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x102746060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027463e0"/>
        <function-ref name="write" scoped="" ref="0x102746570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x10273f840" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x10273f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273fbc0"/>
        <function-ref name="write" scoped="" ref="0x10273fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x102746840" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x102746840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102746bc0"/>
        <function-ref name="write" scoped="" ref="0x102746d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x102734c60" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x102734c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102733020"/>
        <function-ref name="write" scoped="" ref="0x1027331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x102736c60" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x102736c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102735020"/>
        <function-ref name="write" scoped="" ref="0x1027351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x102752cc0" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x102752cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1027510a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x10273b060" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x10273b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273b3e0"/>
        <function-ref name="write" scoped="" ref="0x10273b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x102737c60" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x102737c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102736020"/>
        <function-ref name="write" scoped="" ref="0x1027361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x10274b620" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x10274b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10274b9a0"/>
        <function-ref name="write" scoped="" ref="0x10274bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x10274a620" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x10274a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10274a9a0"/>
        <function-ref name="write" scoped="" ref="0x10274ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x102741060" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x102741060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027413e0"/>
        <function-ref name="write" scoped="" ref="0x102741570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x102743840" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x102743840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102743bc0"/>
        <function-ref name="write" scoped="" ref="0x102743d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x102745060" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x102745060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027453e0"/>
        <function-ref name="write" scoped="" ref="0x102745570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x1027552b0" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x1027552b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x102755630"/>
        <function-ref name="abortRelease" scoped="" ref="0x1027557c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x102755950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x1027506b0" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x1027506b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102750a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x102750d00" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x102750d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10274f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x10273a480" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x10273a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273a800"/>
        <function-ref name="write" scoped="" ref="0x10273a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x10274f490" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x10274f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10274f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x102736480" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x102736480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102736800"/>
        <function-ref name="write" scoped="" ref="0x102736990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x1027519c0" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x1027519c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102751d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x10273c840" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x10273c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273cbc0"/>
        <function-ref name="write" scoped="" ref="0x10273cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x10274be00" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x10274be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10274a1c0"/>
        <function-ref name="write" scoped="" ref="0x10274a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x10274ce00" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x10274ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10274b1c0"/>
        <function-ref name="write" scoped="" ref="0x10274b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x1027542f0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x1027542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102754670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x10273d840" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x10273d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273dbc0"/>
        <function-ref name="write" scoped="" ref="0x10273dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x10273e060" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x10273e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273e3e0"/>
        <function-ref name="write" scoped="" ref="0x10273e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x10273c060" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x10273c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273c3e0"/>
        <function-ref name="write" scoped="" ref="0x10273c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x102734480" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x102734480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102734800"/>
        <function-ref name="write" scoped="" ref="0x102734990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x102735480" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x102735480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102735800"/>
        <function-ref name="write" scoped="" ref="0x102735990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x102742060" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x102742060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027423e0"/>
        <function-ref name="write" scoped="" ref="0x102742570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x10273e840" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x10273e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273ebc0"/>
        <function-ref name="write" scoped="" ref="0x10273ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x102737480" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x102737480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102737800"/>
        <function-ref name="write" scoped="" ref="0x102737990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x102744060" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x102744060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027443e0"/>
        <function-ref name="write" scoped="" ref="0x102744570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x102733480" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x102733480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x102733800"/>
        <function-ref name="writeDone" scoped="" ref="0x102733990"/>
        <function-ref name="write" scoped="" ref="0x102733b20"/>
        <function-ref name="beginRead" scoped="" ref="0x102733cb0"/>
        <function-ref name="readDone" scoped="" ref="0x102733e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x102755c20" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x102755c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x102754020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x10274ee00" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x10274ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10274c1c0"/>
        <function-ref name="write" scoped="" ref="0x10274c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x10274ae00" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x10274ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027491c0"/>
        <function-ref name="write" scoped="" ref="0x102749350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x102741840" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x102741840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102741bc0"/>
        <function-ref name="write" scoped="" ref="0x102741d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x102745840" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x102745840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102745bc0"/>
        <function-ref name="write" scoped="" ref="0x102745d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x10273f060" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x10273f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273f3e0"/>
        <function-ref name="write" scoped="" ref="0x10273f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x102748060" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x102748060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027483e0"/>
        <function-ref name="write" scoped="" ref="0x102748570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x102752020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x102752020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1027523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x102748840" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x102748840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102748bc0"/>
        <function-ref name="write" scoped="" ref="0x102748d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x102756520" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x102756520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1027568a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x102756a30"/>
        <function-ref name="request" scoped="" ref="0x102756bc0"/>
        <function-ref name="granted" scoped="" ref="0x102756d50"/>
        <function-ref name="isOwner" scoped="" ref="0x102755020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x10274fae0" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x10274fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10274fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x10274e7b0" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x10274e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10274eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x102738c60" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x102738c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102737020"/>
        <function-ref name="write" scoped="" ref="0x1027371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x102738480" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x102738480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102738800"/>
        <function-ref name="write" scoped="" ref="0x102738990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x102750060" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x102750060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1027503e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x10273ac60" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x10273ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102738020"/>
        <function-ref name="write" scoped="" ref="0x1027381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x102735c60" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x102735c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102734020"/>
        <function-ref name="write" scoped="" ref="0x1027341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x102742840" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x102742840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102742bc0"/>
        <function-ref name="write" scoped="" ref="0x102742d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x10273d060" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x10273d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273d3e0"/>
        <function-ref name="write" scoped="" ref="0x10273d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x102752670" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x102752670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1027529f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x102751370" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x102751370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x1027516f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x102744840" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x102744840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x102744bc0"/>
        <function-ref name="write" scoped="" ref="0x102744d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x10274e160" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x10274e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x10274e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x102743060" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x102743060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x1027433e0"/>
        <function-ref name="write" scoped="" ref="0x102743570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x10273b840" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x10273b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x10273a020"/>
        <function-ref name="write" scoped="" ref="0x10273a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x102731160" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x102731160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x1027314e0"/>
        <function-ref name="writeDone" scoped="" ref="0x102731670"/>
        <function-ref name="write" scoped="" ref="0x102731800"/>
        <function-ref name="beginRead" scoped="" ref="0x102731990"/>
        <function-ref name="readDone" scoped="" ref="0x102731b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x102773a20" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x102773a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x102773da0"/>
        <function-ref name="rand32" scoped="" ref="0x102770020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x102771920" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x102771920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102773560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102777990" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102777990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102777d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x10276ca20" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x10276ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x10276cda0"/>
        <function-ref name="rand32" scoped="" ref="0x10276b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x10276d940" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x10276d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10276c560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10276d080" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10276d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10276d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x102775aa0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x102775aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x102775e20"/>
        <function-ref name="toIdle" scoped="" ref="0x10276e020"/>
        <function-ref name="isState" scoped="" ref="0x10276e1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x10276e340"/>
        <function-ref name="requestState" scoped="" ref="0x10276e4d0"/>
        <function-ref name="forceState" scoped="" ref="0x10276e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1027c5020" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1027c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027c53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1027c5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027c56c0"/>
        <function-ref name="cancel" scoped="" ref="0x1027c5850"/>
        <function-ref name="sendDone" scoped="" ref="0x1027c59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1027c6220" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1027c6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027c65a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1027c6730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027c68c0"/>
        <function-ref name="cancel" scoped="" ref="0x1027c6a50"/>
        <function-ref name="sendDone" scoped="" ref="0x1027c6be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1027c0e60" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1027c0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027bf210"/>
        <function-ref name="getPayload" scoped="" ref="0x1027bf3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027bf530"/>
        <function-ref name="cancel" scoped="" ref="0x1027bf6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x1027bf850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1027c4a10" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1027c4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027c4d90"/>
        <function-ref name="getPayload" scoped="" ref="0x1027c0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027c01b0"/>
        <function-ref name="cancel" scoped="" ref="0x1027c0340"/>
        <function-ref name="sendDone" scoped="" ref="0x1027c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x1027be8f0" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x1027be8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x1027bec70"/>
        <function-ref name="rand32" scoped="" ref="0x1027bee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1027c0750" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1027c0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1027c0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1027bd170" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1027bd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1027bd4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x1027bd680"/>
        <function-ref name="getMetadata" scoped="" ref="0x1027bd810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x1027bfae0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1027bfae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1027bfe60"/>
        <function-ref name="toIdle" scoped="" ref="0x1027be020"/>
        <function-ref name="isState" scoped="" ref="0x1027be1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x1027be340"/>
        <function-ref name="requestState" scoped="" ref="0x1027be4d0"/>
        <function-ref name="forceState" scoped="" ref="0x1027be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x1027c2690" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x1027c2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x1027c2a10"/>
        <function-ref name="toIdle" scoped="" ref="0x1027c2ba0"/>
        <function-ref name="isState" scoped="" ref="0x1027c2d30"/>
        <function-ref name="isIdle" scoped="" ref="0x1027ac020"/>
        <function-ref name="requestState" scoped="" ref="0x1027ac1b0"/>
        <function-ref name="forceState" scoped="" ref="0x1027ac340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1027a6950" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1027a6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027a6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1027a9a90" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1027a9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027a9e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1027a6200" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1027a6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027a6580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1027a13f0" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1027a13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027a1770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x1027a2b50" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x1027a2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x1027a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1027a5e20" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1027a5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027a21c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x1027a1a70" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x1027a1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1027a1df0"/>
        <function-ref name="getHeader" scoped="" ref="0x1027a0020"/>
        <function-ref name="getMetadata" scoped="" ref="0x1027a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x1027a2550" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x1027a2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027a28d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x1027df020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x1027df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1027df6b0" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1027df6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027dfa30"/>
        <function-ref name="getPayload" scoped="" ref="0x1027dfbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027dfd50"/>
        <function-ref name="cancel" scoped="" ref="0x1027de020"/>
        <function-ref name="sendDone" scoped="" ref="0x1027de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1027e48e0" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1027e48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027e4c60"/>
        <function-ref name="getPayload" scoped="" ref="0x1027e4df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027e2020"/>
        <function-ref name="cancel" scoped="" ref="0x1027e21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x1027e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x1027e2c90" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x1027e2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027e10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1027e1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027e13c0"/>
        <function-ref name="cancel" scoped="" ref="0x1027e1550"/>
        <function-ref name="sendDone" scoped="" ref="0x1027e16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1027e25e0" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1027e25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027e2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1027e5be0" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1027e5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1027e4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1027e41b0"/>
        <function-ref name="request" scoped="" ref="0x1027e4340"/>
        <function-ref name="granted" scoped="" ref="0x1027e44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x1027e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x1027e1a50" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x1027e1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027e1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x1027e0170" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x1027e0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1027e04f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1027e0680"/>
        <function-ref name="getPayload" scoped="" ref="0x1027e0810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027e09a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1027e0b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x102845d70" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x102845d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102844180"/>
        <function-ref name="getPayload" scoped="" ref="0x102844310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1028444a0"/>
        <function-ref name="cancel" scoped="" ref="0x102844630"/>
        <function-ref name="sendDone" scoped="" ref="0x1028447c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x102844b10" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x102844b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102843020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x102816db0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x102816db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102815180"/>
        <function-ref name="runTask" scoped="" ref="0x102815310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x1028432f0" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x1028432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x102843670"/>
        <function-ref name="setNetwork" scoped="" ref="0x102843800"/>
        <function-ref name="getRssi" scoped="" ref="0x102843990"/>
        <function-ref name="getNetwork" scoped="" ref="0x102843b20"/>
        <function-ref name="getPower" scoped="" ref="0x102843cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x102843e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x1027d8a20" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x1027d8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027d8da0"/>
        <function-ref name="getPayload" scoped="" ref="0x1027d7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027d71b0"/>
        <function-ref name="cancel" scoped="" ref="0x1027d7340"/>
        <function-ref name="sendDone" scoped="" ref="0x1027d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x102842b70" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x102842b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x102841020"/>
        <function-ref name="isEmpty" scoped="" ref="0x1028411b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x102841340"/>
        <function-ref name="dequeue" scoped="" ref="0x1028414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x102842170" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x102842170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x1028424f0"/>
        <function-ref name="getHeader" scoped="" ref="0x102842680"/>
        <function-ref name="getMetadata" scoped="" ref="0x102842810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x1027d8370" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x1027d8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027d86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x1027da7b0" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x1027da7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x1027dab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x1027dacc0"/>
        <function-ref name="request" scoped="" ref="0x1027dae50"/>
        <function-ref name="granted" scoped="" ref="0x1027d9020"/>
        <function-ref name="isOwner" scoped="" ref="0x1027d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x1027d94d0" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x1027d94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1027d9850"/>
        <function-ref name="getPayload" scoped="" ref="0x1027d99e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1027d9b70"/>
        <function-ref name="cancel" scoped="" ref="0x1027d9d00"/>
        <function-ref name="sendDone" scoped="" ref="0x1027d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x1027d7840" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x1027d7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1027d7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x102845020" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x102845020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1028453a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x102845530"/>
        <function-ref name="getPayload" scoped="" ref="0x1028456c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102845850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1028459e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102864dd0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102864dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102863180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x102863410" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x102863410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x102863790"/>
        <function-ref name="isEmpty" scoped="" ref="0x102863920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x102863ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x102863c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x102858b80" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x102858b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x102856020"/>
        <function-ref name="stopDone" scoped="" ref="0x1028561b0"/>
        <function-ref name="start" scoped="" ref="0x102856340"/>
        <function-ref name="stop" scoped="" ref="0x1028564d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x102855860" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x102855860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102855be0"/>
        <function-ref name="getPayload" scoped="" ref="0x102855d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102854020"/>
        <function-ref name="cancel" scoped="" ref="0x1028541b0"/>
        <function-ref name="sendDone" scoped="" ref="0x102854340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x102854690" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x102854690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102854a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10285cce0" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10285cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1028590a0"/>
        <function-ref name="getPayload" scoped="" ref="0x102859230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1028593c0"/>
        <function-ref name="cancel" scoped="" ref="0x102859550"/>
        <function-ref name="sendDone" scoped="" ref="0x1028596e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x102858080" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x102858080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x102858400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x102858590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x102858720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x1028588b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x102856800" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x102856800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x102856b80"/>
        <function-ref name="toIdle" scoped="" ref="0x102856d10"/>
        <function-ref name="isState" scoped="" ref="0x102855020"/>
        <function-ref name="isIdle" scoped="" ref="0x1028551b0"/>
        <function-ref name="requestState" scoped="" ref="0x102855340"/>
        <function-ref name="forceState" scoped="" ref="0x1028554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x102854d90" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x102854d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x102853180"/>
        <function-ref name="stopDone" scoped="" ref="0x102853310"/>
        <function-ref name="start" scoped="" ref="0x1028534a0"/>
        <function-ref name="stop" scoped="" ref="0x102853630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x102859980" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x102859980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102859d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x1028502d0" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x1028502d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x102850650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x1028507e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x102850970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x102850b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x102852580" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x102852580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x102852900"/>
        <function-ref name="toIdle" scoped="" ref="0x102852a90"/>
        <function-ref name="isState" scoped="" ref="0x102852c20"/>
        <function-ref name="isIdle" scoped="" ref="0x102852db0"/>
        <function-ref name="requestState" scoped="" ref="0x102851020"/>
        <function-ref name="forceState" scoped="" ref="0x1028511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x1028b2d70" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x1028b2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1028b1180"/>
        <function-ref name="getPayload" scoped="" ref="0x1028b1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1028b14a0"/>
        <function-ref name="cancel" scoped="" ref="0x1028b1630"/>
        <function-ref name="sendDone" scoped="" ref="0x1028b17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x102846340" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x102846340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1028466c0"/>
        <function-ref name="getPayload" scoped="" ref="0x102846850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1028469e0"/>
        <function-ref name="cancel" scoped="" ref="0x102846b70"/>
        <function-ref name="sendDone" scoped="" ref="0x102846d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x1028b2020" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x1028b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x1028b23a0"/>
        <function-ref name="setRetries" scoped="" ref="0x1028b2530"/>
        <function-ref name="getRetries" scoped="" ref="0x1028b26c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x1028b2850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x1028b29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x1028ad1a0" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x1028ad1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1028ad520"/>
        <function-ref name="noAck" scoped="" ref="0x1028ad6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x1028ad840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x1028b0400" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x1028b0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x1028b0780"/>
        <function-ref name="setRetries" scoped="" ref="0x1028b0910"/>
        <function-ref name="getRetries" scoped="" ref="0x1028b0aa0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x1028b0c30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x1028b0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x10288d690" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x10288d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10288da10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x10288e860" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x10288e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10288ebe0"/>
        <function-ref name="getPayload" scoped="" ref="0x10288ed70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10288d020"/>
        <function-ref name="cancel" scoped="" ref="0x10288d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x10288d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x10288b610" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x10288b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x10288b990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x10288bb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x10288bcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x10288be40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x10288a020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x10288a1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x10288a340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x10288a4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x10288a660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x10288a7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x10288a980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x10288ab10"/>
        <function-ref name="sync" scoped="" ref="0x10288aca0"/>
        <function-ref name="getChannel" scoped="" ref="0x102889020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x1028891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x1028908b0" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x1028908b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x102890c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x102890dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x10288e020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x10288e1b0"/>
        <function-ref name="setCca" scoped="" ref="0x10288e340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x10288e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x102891ce0" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x102891ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x1028900a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x1028881f0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x1028881f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x102888570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x102888700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x102888890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x102888a20"/>
        <function-ref name="setCca" scoped="" ref="0x102888bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x102888d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x102892a80" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x102892a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x102892e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x102891020"/>
        <function-ref name="getPayload" scoped="" ref="0x1028911b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102891340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1028914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x102898e80" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x102898e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102895220"/>
        <function-ref name="getPayload" scoped="" ref="0x1028953b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102895540"/>
        <function-ref name="cancel" scoped="" ref="0x1028956d0"/>
        <function-ref name="sendDone" scoped="" ref="0x102895860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x102894db0" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x102894db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102893180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x10288dce0" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x10288dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x10288c0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x10288c230"/>
        <function-ref name="getRssi" scoped="" ref="0x10288c3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x10288c550"/>
        <function-ref name="getPower" scoped="" ref="0x10288c6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x10288c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x1028894d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x1028894d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x102889950"/>
        <function-ref name="changed" scoped="" ref="0x102889ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x102889c70"/>
        <function-ref name="setAddress" scoped="" ref="0x102889e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x10288cb70" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x10288cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x10288b020"/>
        <function-ref name="getHeader" scoped="" ref="0x10288b1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x10288b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1028941d0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1028941d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102894550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102887d30" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102887d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x1028860e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102886270"/>
        <function-ref name="led1On" scoped="" ref="0x102886400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102886590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102886720"/>
        <function-ref name="get" scoped="" ref="0x1028868b0"/>
        <function-ref name="led1Off" scoped="" ref="0x102886a40"/>
        <function-ref name="led2Off" scoped="" ref="0x1028851b0"/>
        <function-ref name="set" scoped="" ref="0x102886bd0"/>
        <function-ref name="led0On" scoped="" ref="0x102886d60"/>
        <function-ref name="led2On" scoped="" ref="0x102885020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x102893430" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x102893430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1028937b0"/>
        <function-ref name="source" scoped="" ref="0x102893940"/>
        <function-ref name="address" scoped="" ref="0x102893ad0"/>
        <function-ref name="destination" scoped="" ref="0x102893c60"/>
        <function-ref name="setSource" scoped="" ref="0x102893df0"/>
        <function-ref name="setDestination" scoped="" ref="0x102892020"/>
        <function-ref name="type" scoped="" ref="0x1028921b0"/>
        <function-ref name="setType" scoped="" ref="0x102892340"/>
        <function-ref name="isForMe" scoped="" ref="0x1028924d0"/>
        <function-ref name="setGroup" scoped="" ref="0x102892660"/>
        <function-ref name="localGroup" scoped="" ref="0x1028927f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x1028870f0" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x1028870f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x102887470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x102887600"/>
        <function-ref name="request" scoped="" ref="0x102887790"/>
        <function-ref name="granted" scoped="" ref="0x102887920"/>
        <function-ref name="isOwner" scoped="" ref="0x102887ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1029b3020" loc="49:../../tos/system/AMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1029b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1029b33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1029b3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1029b36c0"/>
        <function-ref name="cancel" scoped="" ref="0x1029b3850"/>
        <function-ref name="sendDone" scoped="" ref="0x1029b39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1029b3c30" loc="50:../../tos/system/AMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1029b3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1029b2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x1029b21b0"/>
        <function-ref name="getPayload" scoped="" ref="0x1029b2340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1029b24d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1029b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1029b28b0" loc="51:../../tos/system/AMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1029b28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1029b2c30"/>
        <function-ref name="source" scoped="" ref="0x1029b2dc0"/>
        <function-ref name="address" scoped="" ref="0x1029b1020"/>
        <function-ref name="destination" scoped="" ref="0x1029b11b0"/>
        <function-ref name="setSource" scoped="" ref="0x1029b1340"/>
        <function-ref name="setDestination" scoped="" ref="0x1029b14d0"/>
        <function-ref name="type" scoped="" ref="0x1029b1660"/>
        <function-ref name="setType" scoped="" ref="0x1029b17f0"/>
        <function-ref name="isForMe" scoped="" ref="0x1029b1980"/>
        <function-ref name="setGroup" scoped="" ref="0x1029b1b10"/>
        <function-ref name="localGroup" scoped="" ref="0x1029b1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x1029b0020" loc="52:../../tos/system/AMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x1029b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x1029b03a0"/>
        <function-ref name="noAck" scoped="" ref="0x1029b0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x1029b06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10351cb60" loc="49:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10351cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10351b020"/>
        <function-ref name="getPayload" scoped="" ref="0x10351b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10351b340"/>
        <function-ref name="cancel" scoped="" ref="0x10351b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x10351b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10351b8b0" loc="50:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10351b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10351bc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x10351bdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x10351a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10351a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10351a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10351a590" loc="51:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10351a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10351a910"/>
        <function-ref name="source" scoped="" ref="0x10351aaa0"/>
        <function-ref name="address" scoped="" ref="0x10351ac30"/>
        <function-ref name="destination" scoped="" ref="0x10351adc0"/>
        <function-ref name="setSource" scoped="" ref="0x103519020"/>
        <function-ref name="setDestination" scoped="" ref="0x1035191b0"/>
        <function-ref name="type" scoped="" ref="0x103519340"/>
        <function-ref name="setType" scoped="" ref="0x1035194d0"/>
        <function-ref name="isForMe" scoped="" ref="0x103519660"/>
        <function-ref name="setGroup" scoped="" ref="0x1035197f0"/>
        <function-ref name="localGroup" scoped="" ref="0x103519980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x103519c10" loc="52:../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="WiTempAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x103519c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x103517020"/>
        <function-ref name="noAck" scoped="" ref="0x1035171b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x103517340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x10350e640" loc="44:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="WiTempAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x10350e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10350e9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x10350eb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10350ece0"/>
        <function-ref name="cancel" scoped="" ref="0x10350ee70"/>
        <function-ref name="sendDone" scoped="" ref="0x10350d030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x10350d2e0" loc="46:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="WiTempAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10350d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10350d660"/>
        <function-ref name="getPayload" scoped="" ref="0x10350d7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10350d980"/>
        <function-ref name="cancel" scoped="" ref="0x10350db10"/>
        <function-ref name="sendDone" scoped="" ref="0x10350dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x10350c020" loc="47:../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="WiTempAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10350c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10350c3a0"/>
        <function-ref name="source" scoped="" ref="0x10350c530"/>
        <function-ref name="address" scoped="" ref="0x10350c6c0"/>
        <function-ref name="destination" scoped="" ref="0x10350c850"/>
        <function-ref name="setSource" scoped="" ref="0x10350c9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x10350cb70"/>
        <function-ref name="type" scoped="" ref="0x10350cd00"/>
        <function-ref name="setType" scoped="" ref="0x10350b020"/>
        <function-ref name="isForMe" scoped="" ref="0x10350b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x10350b340"/>
        <function-ref name="localGroup" scoped="" ref="0x10350b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x10292c930" loc="43:../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x10292c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x10292ccb0"/>
        <function-ref name="getPayload" scoped="" ref="0x10292ce40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102929020"/>
        <function-ref name="cancel" scoped="" ref="0x1029291b0"/>
        <function-ref name="sendDone" scoped="" ref="0x102929340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x1029c7400" loc="48:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1029c7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1029c77a0"/>
        <function-ref name="getPayload" scoped="" ref="0x1029c7930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1029c7ac0"/>
        <function-ref name="cancel" scoped="" ref="0x1029c7c50"/>
        <function-ref name="sendDone" scoped="" ref="0x1029c7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x1029c94b0" loc="46:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x1029c94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1029c9850"/>
        <function-ref name="getPayload" scoped="" ref="0x1029c99e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1029c9b70"/>
        <function-ref name="cancel" scoped="" ref="0x1029c9d00"/>
        <function-ref name="sendDone" scoped="" ref="0x1029c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x1029c5720" loc="50:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1029c5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1029c5aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1029c5c30"/>
        <function-ref name="getPayload" scoped="" ref="0x1029c5dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1029c4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1029c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x1029c4480" loc="169:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x1029c4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1029c4800"/>
        <function-ref name="runTask" scoped="" ref="0x1029c4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x1029c4c60" loc="126:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x1029c4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x1029c3020"/>
        <function-ref name="runTask" scoped="" ref="0x1029c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x1029c6060" loc="49:../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1029c6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1029c63e0"/>
        <function-ref name="source" scoped="" ref="0x1029c6570"/>
        <function-ref name="address" scoped="" ref="0x1029c6700"/>
        <function-ref name="destination" scoped="" ref="0x1029c6890"/>
        <function-ref name="setSource" scoped="" ref="0x1029c6a20"/>
        <function-ref name="setDestination" scoped="" ref="0x1029c6bb0"/>
        <function-ref name="type" scoped="" ref="0x1029c6d40"/>
        <function-ref name="setType" scoped="" ref="0x1029c5020"/>
        <function-ref name="isForMe" scoped="" ref="0x1029c51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x1029c5340"/>
        <function-ref name="localGroup" scoped="" ref="0x1029c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x1029a6020" loc="46:../../tos/system/AMReceiverC.nc">
      <component-ref qname="WiTempAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x1029a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x1029a63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x1029a6530"/>
        <function-ref name="getPayload" scoped="" ref="0x1029a66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x1029a6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x1029a69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x1029ac910" loc="45:../../tos/system/AMReceiverC.nc">
      <component-ref qname="WiTempAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x1029ac910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x1029acc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x1029a6c30" loc="47:../../tos/system/AMReceiverC.nc">
      <component-ref qname="WiTempAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x1029a6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x1029a5020"/>
        <function-ref name="source" scoped="" ref="0x1029a51b0"/>
        <function-ref name="address" scoped="" ref="0x1029a5340"/>
        <function-ref name="destination" scoped="" ref="0x1029a54d0"/>
        <function-ref name="setSource" scoped="" ref="0x1029a5660"/>
        <function-ref name="setDestination" scoped="" ref="0x1029a57f0"/>
        <function-ref name="type" scoped="" ref="0x1029a5980"/>
        <function-ref name="setType" scoped="" ref="0x1029a5b10"/>
        <function-ref name="isForMe" scoped="" ref="0x1029a5ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x1029a5e30"/>
        <function-ref name="localGroup" scoped="" ref="0x1029a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x1029a38f0" loc="46:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x1029a38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x1029a3c70"/>
        <function-ref name="stopDone" scoped="" ref="0x1029a3e00"/>
        <function-ref name="start" scoped="" ref="0x1029a0020"/>
        <function-ref name="stop" scoped="" ref="0x1029a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x1029a0980" loc="47:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x1029a0980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x1029a0d00"/>
        <function-ref name="getPayload" scoped="" ref="0x10299f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10299f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x10299f340"/>
        <function-ref name="sendDone" scoped="" ref="0x10299f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x10299d330" loc="49:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x10299d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10299d6b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x10299d840"/>
        <function-ref name="getPayload" scoped="" ref="0x10299d9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x10299db60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x10299dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x10299fcb0" loc="48:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x10299fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x10299d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102a0f300" loc="53:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102a0f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102a0f680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102a0f810"/>
        <function-ref name="led1On" scoped="" ref="0x102a0f9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102a0fb30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102a0fcc0"/>
        <function-ref name="get" scoped="" ref="0x102a0fe50"/>
        <function-ref name="led1Off" scoped="" ref="0x102a0e020"/>
        <function-ref name="led2Off" scoped="" ref="0x102a0e660"/>
        <function-ref name="set" scoped="" ref="0x102a0e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x102a0e340"/>
        <function-ref name="led2On" scoped="" ref="0x102a0e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x10299b800" loc="51:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x10299b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x10299bb80"/>
        <function-ref name="noAck" scoped="" ref="0x10299bd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x102a0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x10299c020" loc="50:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x10299c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x10299c3a0"/>
        <function-ref name="source" scoped="" ref="0x10299c530"/>
        <function-ref name="address" scoped="" ref="0x10299c6c0"/>
        <function-ref name="destination" scoped="" ref="0x10299c850"/>
        <function-ref name="setSource" scoped="" ref="0x10299c9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x10299cb70"/>
        <function-ref name="type" scoped="" ref="0x10299cd00"/>
        <function-ref name="setType" scoped="" ref="0x10299b020"/>
        <function-ref name="isForMe" scoped="" ref="0x10299b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x10299b340"/>
        <function-ref name="localGroup" scoped="" ref="0x10299b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x102a294a0" loc="54:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x102a294a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102a29820"/>
        <function-ref name="getPayload" scoped="" ref="0x102a299b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102a29b40"/>
        <function-ref name="cancel" scoped="" ref="0x102a29cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x102a29e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x102a28120" loc="55:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x102a28120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102a284a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x102a0c300" loc="47:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x102a0c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102a0c6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x102a0c830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102a0c9c0"/>
        <function-ref name="cancel" scoped="" ref="0x102a0cb50"/>
        <function-ref name="sendDone" scoped="" ref="0x102a0cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x102a2bd60" loc="50:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x102a2bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x102a2a180"/>
        <function-ref name="payloadLength" scoped="" ref="0x102a2a310"/>
        <function-ref name="getPayload" scoped="" ref="0x102a2a4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102a2a630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x102a2a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x102a2c0d0" loc="48:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x102a2c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102a2c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x102a2aa10" loc="51:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x102a2aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x102a2ad90"/>
        <function-ref name="noAck" scoped="" ref="0x102a29020"/>
        <function-ref name="wasAcked" scoped="" ref="0x102a291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x102a2c6c0" loc="49:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x102a2c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x102a2ca40"/>
        <function-ref name="source" scoped="" ref="0x102a2cbd0"/>
        <function-ref name="address" scoped="" ref="0x102a2cd60"/>
        <function-ref name="destination" scoped="" ref="0x102a2b020"/>
        <function-ref name="setSource" scoped="" ref="0x102a2b1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x102a2b340"/>
        <function-ref name="type" scoped="" ref="0x102a2b4d0"/>
        <function-ref name="setType" scoped="" ref="0x102a2b660"/>
        <function-ref name="isForMe" scoped="" ref="0x102a2b7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x102a2b980"/>
        <function-ref name="localGroup" scoped="" ref="0x102a2bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x102a25b90" loc="50:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x102a25b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x102a22020"/>
        <function-ref name="stopDone" scoped="" ref="0x102a221b0"/>
        <function-ref name="start" scoped="" ref="0x102a22340"/>
        <function-ref name="stop" scoped="" ref="0x102a224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x102a21790" loc="52:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x102a21790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10147bd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102a21b10"/>
        <function-ref name="getPayload" scoped="" ref="0x102a21ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102a21e30"/>
        <function-ref name="cancel" scoped="" ref="0x102a20020"/>
        <function-ref name="sendDone" scoped="" ref="0x102a201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102a25540" loc="49:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102a25540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102a258c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x102a22c60" loc="51:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x102a22c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10147bd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102a21020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102a1f2b0" loc="56:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102a1f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102a1f630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102a1f7c0"/>
        <function-ref name="led1On" scoped="" ref="0x102a1f950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102a1fae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102a1fc70"/>
        <function-ref name="get" scoped="" ref="0x102a1fe00"/>
        <function-ref name="led1Off" scoped="" ref="0x102a1e020"/>
        <function-ref name="led2Off" scoped="" ref="0x102a1e660"/>
        <function-ref name="set" scoped="" ref="0x102a1e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x102a1e340"/>
        <function-ref name="led2On" scoped="" ref="0x102a1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x102a1a970" loc="55:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x102a1a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10147bd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x102a1acf0"/>
        <function-ref name="offset" scoped="" ref="0x102a1ae80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x102a1f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x102a177c0" loc="66:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x102a177c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x102a17b40"/>
        <function-ref name="stopDone" scoped="" ref="0x102a17cd0"/>
        <function-ref name="start" scoped="" ref="0x102a17e60"/>
        <function-ref name="stop" scoped="" ref="0x102a16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x102a9e6e0" loc="332:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x102a9e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102a9ea60"/>
        <function-ref name="runTask" scoped="" ref="0x102a9ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x102a7c860" loc="74:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x102a7c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x102a7cbe0"/>
        <function-ref name="stop" scoped="" ref="0x102a7cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x102a5e4f0" loc="191:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x102a5e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102a5e870"/>
        <function-ref name="runTask" scoped="" ref="0x102a5ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x102a17170" loc="65:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x102a17170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x102a174f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x102a78480" loc="75:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x102a78480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x102a78800"/>
        <function-ref name="flush" scoped="" ref="0x102a78990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x102aa2c70" loc="322:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x102aa2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102aa0020"/>
        <function-ref name="runTask" scoped="" ref="0x102aa01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x102a85020" loc="72:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x102a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x102a853a0"/>
        <function-ref name="resetSend" scoped="" ref="0x102a85530"/>
        <function-ref name="dataReceived" scoped="" ref="0x102a856c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x102a85850"/>
        <function-ref name="putData" scoped="" ref="0x102a859e0"/>
        <function-ref name="putDone" scoped="" ref="0x102a85b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x102a85d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102a82020" loc="73:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102a82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102a823a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102a82530"/>
        <function-ref name="led1On" scoped="" ref="0x102a826c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102a82850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102a829e0"/>
        <function-ref name="get" scoped="" ref="0x102a82b70"/>
        <function-ref name="led1Off" scoped="" ref="0x102a82d00"/>
        <function-ref name="led2Off" scoped="" ref="0x102a7c4d0"/>
        <function-ref name="set" scoped="" ref="0x102a7c020"/>
        <function-ref name="led0On" scoped="" ref="0x102a7c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x102a7c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x102a9aa00" loc="341:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x102a9aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102a9ad80"/>
        <function-ref name="runTask" scoped="" ref="0x102a99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x102a10720" loc="67:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x102a10720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x102a10aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x102a10c30"/>
        <function-ref name="startSend" scoped="" ref="0x102a10dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x102a15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x102a83c40" loc="68:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x102a83c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x102a14020"/>
        <function-ref name="byteReceived" scoped="" ref="0x102a141b0"/>
        <function-ref name="endPacket" scoped="" ref="0x102a14340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x102bb5020" loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x102bb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102bb53a0"/>
        <function-ref name="runTask" scoped="" ref="0x102bb5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x102b40de0" loc="51:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x102b40de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10147bd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102b3f1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x102b3f350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x102b3f4e0"/>
        <function-ref name="cancel" scoped="" ref="0x102b3f670"/>
        <function-ref name="sendDone" scoped="" ref="0x102b3f800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x102bb5800" loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x102bb5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x102bb5b80"/>
        <function-ref name="runTask" scoped="" ref="0x102bb5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x102b406c0" loc="50:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x102b406c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10147bd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x102b40a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x102b3fc20" loc="54:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x102b3fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x10147bd70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x102b3e020"/>
        <function-ref name="offset" scoped="" ref="0x102b3e1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x102b3e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102b3d920" loc="57:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102b3d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102b3dca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102b3de30"/>
        <function-ref name="led1On" scoped="" ref="0x102b3b020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102b3b1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102b3b340"/>
        <function-ref name="get" scoped="" ref="0x102b3b4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x102b3b660"/>
        <function-ref name="led2On" scoped="" ref="0x102b3bca0"/>
        <function-ref name="set" scoped="" ref="0x102b3b980"/>
        <function-ref name="led2Off" scoped="" ref="0x102b3b7f0"/>
        <function-ref name="led0On" scoped="" ref="0x102b3bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x102b3ee80" loc="56:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x102b3ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x102b3d220"/>
        <function-ref name="nextByte" scoped="" ref="0x102b3d3b0"/>
        <function-ref name="startSend" scoped="" ref="0x102b3d540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x102b3d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x102b3e590" loc="55:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x102b3e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x102b3e910"/>
        <function-ref name="byteReceived" scoped="" ref="0x102b3eaa0"/>
        <function-ref name="endPacket" scoped="" ref="0x102b3ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x102bb0e40" loc="50:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x102bb0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x102baf1e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x102baf370"/>
        <function-ref name="receive" scoped="" ref="0x102baf500"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x102baf690"/>
        <function-ref name="receiveDone" scoped="" ref="0x102baf820"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x102baf9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x102bafb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x102bb3e00" loc="48:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x102bb3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x102bb01c0"/>
        <function-ref name="resetSend" scoped="" ref="0x102bb0350"/>
        <function-ref name="dataReceived" scoped="" ref="0x102bb04e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x102bb0670"/>
        <function-ref name="putData" scoped="" ref="0x102bb0800"/>
        <function-ref name="putDone" scoped="" ref="0x102bb0990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x102bb0b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x102bafdc0" loc="51:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x102bafdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x102bae180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x102bae310"/>
        <function-ref name="led1On" scoped="" ref="0x102bae4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x102bae630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x102bae7c0"/>
        <function-ref name="get" scoped="" ref="0x102bae950"/>
        <function-ref name="led1Off" scoped="" ref="0x102baeae0"/>
        <function-ref name="led2Off" scoped="" ref="0x102bad1b0"/>
        <function-ref name="set" scoped="" ref="0x102baec70"/>
        <function-ref name="led0On" scoped="" ref="0x102baee00"/>
        <function-ref name="led2On" scoped="" ref="0x102bad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x102b8e6b0" loc="47:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x102b8e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x102b8ea30"/>
        <function-ref name="offset" scoped="" ref="0x102b8ebc0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x102b8ed50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x101443460" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1014431e0" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x101441ab0" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x101441830" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1014447b0" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x101443cb0" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10140cb00" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10143f740" loc="46:../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x10143f4c0" loc="46:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x10143e610" loc="56:../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x10143e020" loc="56:../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x10143e380" loc="56:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x101489490" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101489210" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x101488550" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1014882d0" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x101485890" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101485290" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1014855c0" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1014a4960" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x101486a00" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101486440" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101486770" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1014af410" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10148da90" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10148de10" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1014af170" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1014aca40" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1014ac440" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1014ac770" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1014aab80" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1014ae790" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1014ae510" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1014abcb0" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1014ab6d0" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1014aba20" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1014a57f0" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
              <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1014b0e50" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x1014a51e0" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1014a5510" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x101423270" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x101423a20" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x101421270" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x1014201f0" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x10141f940" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10141e190" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x101421a00" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10141ed00" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x10141ea80" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x101424a60" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x1014209d0" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x10141f190" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1014954a0" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10147c590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101495220" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x10149e020" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1014a0c60" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x1014a2350" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x1014a2e10" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1014a2b90" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x10149c960" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10149c380" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10149c6d0" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x10149d410" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10149ee10" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x10149d180" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x101498dc0" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101498b40" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1014972b0" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x10149abe0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x101497020" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x10147c1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x101499bc0" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101499940" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1014b4960" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10147c590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1014b4380" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1014b46d0" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10147c590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x1014b17a0" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10147c590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x101435350" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x101435350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10142d1f0" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x101432a60" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x101430820" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x101430250" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x101430590" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x101431a60" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10142c270" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10142d980" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x101431270" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x101433020" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x101435c40" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x10142e820" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10142e250" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10142e590" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x101433ae0" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x101433860" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x101432350" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1014e58d0" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x1014f9790" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x1014fba30" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x1014f9070" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x1014fb350" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x1014fa1f0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x1014fd510" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x1014fdbf0" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x1014fa910" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10130a070" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10103c670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x101551500" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x101551280" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x10153d9c0" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1015135a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x101511020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x101551d70" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x101550c80" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x101553b00" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x1015504f0" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x101554190" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x101554920" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x101553390" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1015135a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x101511020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x101553110" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x1015135a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x101511020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x101567520" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x101564bc0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x101564940" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x101563770" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x1015634f0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x101564190" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x101565940" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x101565020" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x101567c50" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10154d880" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x10156c2a0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10156c020" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x10156cc80" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10156ca00" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x10156b6a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10156b420" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10156bd90" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10155a120" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x101558a10" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x101558790" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10155a850" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10153c350" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x101558020" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10155c270" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10155b9e0" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10153cae0" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10155c980" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x10155b2e0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10155b060" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x101557450" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x1015571d0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x1015851f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x1013e1670" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x101093910" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x100f83020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x100f8e020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x100f83770" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x100f95020" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x100f95870" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x1016c7e30" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x1016c65c0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x1016c7020" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x1016c4480" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1016c7720" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x1016c6ce0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1016c8120" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x1016c87f0" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x1016eb020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x1016eb770" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x1016e72e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x1016e7060" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x1016ee770" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x1016ea780" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x1016e7bd0" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x1016ea020" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1016ed820" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x1016e8020" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x1016ed020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1016f18c0" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x1016e9020" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x1016e87c0" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x1016e97b0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x1016ee020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10192f100" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10192f100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10192fa20" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10192bb10" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10192bb10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10192bd50" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1019569c0" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x101927950" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x101956020" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1019269b0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
          </variable>
          <variable name="dt" ref="0x101926cf0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x101926190" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x1019551f0" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1019288e0" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x101928660" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10192bd50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x101927190" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1019bd100" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1019bd100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1019bd340" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1019bd340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1019bdc60" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1019bd340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x1019bbd70" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x1019bb510" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1019ba500" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x101ab87d0" loc="48:../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x101ab8200" loc="48:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101ab8540" loc="48:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x101aeb450" loc="79:../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x101aeb1d0" loc="79:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x101aea2b0" loc="90:../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x101aebc50" loc="90:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101aea020" loc="90:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x101aec0e0" loc="65:../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x101ae8bb0" loc="99:../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x101ae8280" loc="99:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101ae85c0" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x101ae8910" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x101aec9d0" loc="72:../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x101aed0d0" loc="57:../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x101aee760" loc="57:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101aeeaa0" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x101aeedf0" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x101aba270" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x101abaa80" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x101b3a7f0" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x101b39190" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x101b36230" loc="39:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x101b25920"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x101b25d40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x101b3c020" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x101b3d020" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x101b3f540" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x101b3d810" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x101b3ca80" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x101b2f840" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x101b2f020" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x101b602e0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x101b60060" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x101b29890" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x101b76af0" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x101b47790" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x101b54390" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101ae27a0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x101ae0020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x101b54110" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101ae27a0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x101ae0020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x101b497b0" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x101b51880" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101add6f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x101adb020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x101b51600" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101add6f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x101adb020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x101b7be70" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x101b78480" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x101b52e00" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101adf670"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x101adfe00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x101b500e0" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101add6f0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x101adb020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x101b4ddc0" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x101b4db40" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x101b4d420" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x101b7b740" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x101b52610" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101adf670"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x101adfe00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x101b52390" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101adf670"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x101adfe00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x101b4e270" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x101b7a5d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x101b4ec50" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x101b4e9d0" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x101b4b730" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x101b49020" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x101b7d840" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x101b7f790" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x101b487e0" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x101b7b020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x101b46020" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x101b7acf0" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x101b4c5f0" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x101ab9780"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x101ae4e60"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x101b794c0" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x101b76350" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x101b50a80" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x101b50800" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x101b754d0" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x101b75250" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x101b54b70" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101ae27a0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x101ae0020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x101b48020" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x101b46770" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x101b7d020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x101b25920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x101b25d40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x101b7ecf0" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x101b25920"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x101b25d40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x101b7e2a0" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x101afe8d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x101afecf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x101b7e020" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x101afe8d0"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x101afecf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x101b75d90" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x101b79cb0" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x101b4ce00" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x101b78be0" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x101b7f020" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x101b47020" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x101bf4390" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x101bf4be0" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x101c8dc70" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x101c8a4f0" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x101cb5420" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x101c9c270" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x101c9a350" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x101c9f9c0" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x101c9cae0" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x101c9ac80" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x101ccf4c0" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101cd83f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x101ccf240" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101cd83f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x101cd23b0" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x101cd0020" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101cd83f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x101cd2c30" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101cd83f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x101cd0930" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x101cd83f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x101d28770" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x101d5f1e0" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x101d5f1e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x101d5f420" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x101d5f420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x101da02a0" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x101d5f420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101da0020" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x101d9f430" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d9f1b0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x101d5d020" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d5fd60" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x101d9d740" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x101d5f420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d9d150" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x101d9d4b0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x101d5f420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x101d91990" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d91370" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x101d91700" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x101d8fb30" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d8f8b0" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x101d93ae0" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x101d93120" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x101d96e80" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x101d635f0" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d63370" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x101d627d0" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d62550" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x101d60940" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101d606c0" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x101dae980" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101dae700" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x101db0c30" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101db09b0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x101db1350" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x101db10d0" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x101db4800" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x101db4580" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x101db1d80" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x101db1b00" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x101dafb10" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101daf890" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x101da12b0" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x101dacc50" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x101da1020" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x101dbd810" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101dbd230" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x101dbd580" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x101db9e20" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101db9820" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x101db9b90" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x101dbb350" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x100cf6110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101dbb0d0" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x101dbad30" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101dbaab0" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x101dbe9c0" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101dbe740" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x101dbbe80" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101dbbc00" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x101da5b30" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101da58b0" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x101daabc0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101daa5a0" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x101daa930" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x101da9ad0" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101da9850" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x101da9020" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101da89c0" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x101da8d50" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x101da4b70" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101da48f0" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x101db5780" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101db5500" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x101ddfdd0" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101ddf810" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101ddfb40" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x101dd6620" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101dd6020" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101dd6350" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x101dd7660" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x101ddb2a0" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101ddb020" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x101dd9750" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101dd9170" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x101dd94c0" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x101dfe960" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101dfe3a0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x101dfe6d0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x101dfdc50" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x101df95f0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x101dfa660" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x101df9020" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101df9350" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x101dfbe20" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x101dfb840" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x101dfbb90" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x101dfd410" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x101dfd190" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x101df5990" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x101df5190" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x101df0bf0" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101df0930" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x101df0130" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x10143ac00"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x1014385a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101df1de0" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x101ded020" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x1014540c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x101453970"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101deebf0" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x101e046e0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x101e017f0" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x101e01020" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x101dc3e20" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x101e05e80" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x101e02020" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x101e02800" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x101e056c0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x101de74c0" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x101deab00" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x101de8cd0" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x101de8a50" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x101de82b0" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x101deb8c0" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x101deb640" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x101dea390" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x101dea110" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x101e5e020" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x101e5f9f0" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x101e5fd40" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x101e60960" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x101e60020" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x101e61820" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x101e61c00" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x101e672a0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x101e67020" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x101e5f270" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x101e64d70" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x101e64af0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x101e653e0" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x101e65160" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x101e5d270" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x101e61020" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x101e63c50" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x101e5ea20" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x101e65b60" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x101d95e00"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x101d8c5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x101e64390" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x101e68850" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x101e679f0" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x101e63530" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x101e5bc50" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x101e5bc50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x101e58540" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x101e572b0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x101e5bc50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x101e58cc0" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x101e57020" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x101e5bc50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x101e7b2a0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x101445d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x101e7b020" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x101e7bd80" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x101445d50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x101e7bb00" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x101e92640" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x101d95e00"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x101d8c5a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x101e84af0" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x101e83ab0" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x101e83350" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x10147c590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x101e842b0" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10147c590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x101e8ab40" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x10147c590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x101e84020" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10147c970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x101e74540" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x101445d50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x101e7f2c0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x101445d50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x101e803a0" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x101e80c10" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x101e7f020" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x101e7ea80" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x101445d50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x101e7fb90" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x101e7e490" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x101e7e7e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x101e86190" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x101e88960" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x101e881f0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x101e8b8d0" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x101fb9bb0" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x101fb8d70" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x101fb85c0" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x101fb8340" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x101fb9350" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x101fe2a60" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x101fdf540" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x101fe22d0" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x101fe1cf0" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x101fe1a70" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x101f99b00" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x101fe12b0" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x1020f5270" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x1020f5ac0" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x1020f3350" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x10211eb00" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10211e520" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10211e870" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x102119dd0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x102119490" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x1021197e0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x102119b30" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x10211b6b0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x101445d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10211b0d0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10211b420" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x1021206f0" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x101445d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x102120110" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x102120460" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x10211c2c0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10211d8f0" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x10211dc40" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10211c020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1020ffcf0" loc="70:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x1020ff380" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1020ff710" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1020ffa50" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1020fd3c0" loc="82:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x1020fb6a0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x1020fba30" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1020fbd70" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1020fd110" loc="83:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x102103c80" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x102103a00" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x1021b3120" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x101afe8d0"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x101afecf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x1021bbd60" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1021bbae0" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x1021b62a0" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1021b6020" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x1021b8610" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1021b6d30" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x1021b6ab0" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x1022669d0" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x102222420" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x10226d620" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10226d3a0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x10222baf0" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x10226ac50" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x1022725e0" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x102223540" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x1022212d0" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x102225500" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x102225280" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x102227a10" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x10221e070" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x10226b550" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x102266270" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x10226ec30" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x102261350" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x10225d9d0" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x10222a980" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x10221f8b0" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x1022731f0" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x102225dc0" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x10222c8c0" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x10226e460" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10226e1e0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x10222c190" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x10226a4d0" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x102265190" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x102260b00" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x10225d270" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x102269b90" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x1022658c0" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x10226ddb0" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x102262390" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x1022280e0" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x1022707e0" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x1022647b0" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x102267ac0" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x102273de0" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x102273b60" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x10225f2d0" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x10226fa60" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x102269420" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x10222b390" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x101b118d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x101b11cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x10222b110" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x101b118d0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x101b11cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x10221f190" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x1022272a0" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x102227020" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x10221e9d0" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x10221e750" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x102262b60" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x102226b50" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x102228850" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x10226f2a0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x10226f020" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x100cf7520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x10222a270" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x102264020" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x102267350" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x10226bcc0" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x102270020" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x102272d30" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x1022219f0" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x102223c80" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x10225fa40" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x1022263c0" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x102226140" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x102261b10" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x102222b50" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x102260350" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1024b45e0" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x1024b4360" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x1024a0b00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x1024a01c0" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x1024a0530" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1024a0860" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1024ff880" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x1024ff2c0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1024ff5f0" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x1024e64d0" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x1024e64d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x1024e6710" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1024e6710"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x1024e52a0" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1024e6710"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x1024e5020" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x1024e6710"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x102547580" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x10257c9e0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x10257c020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x10257c750" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x10257d7f0" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x10257d020" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x102580d30" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x100cf7920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x1025913d0" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102591150" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x1025933d0" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x100f87090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102593150" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x10258f350" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10258f0d0" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x102590390" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102590110" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x1027745f0" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1027745f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1027712a0" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1027745f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x102771020" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1027745f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x102a1a020" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102a1c960" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x102a1cce0" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x102a1d020" loc="15:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x102a1c020" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x102a1d8b0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10148c3c0"/>
                <typename><typedef-ref name="message_t" ref="0x10148ba00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x102a1dc20" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x102a78190" loc="54:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x102a7b9e0" loc="49:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x102a81270" loc="56:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x102a7f6c0" loc="72:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x102a7d390" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x102a7d110" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x102a7e020" loc="79:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x102a81de0" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x102a81b60" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x102a7dbf0" loc="100:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x102a7e8d0" loc="85:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x102a13c10" loc="71:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x102a12590" loc="81:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x102a132a0" loc="62:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x102a13020" loc="62:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x102a102a0" loc="91:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x102a10020" loc="91:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x102a84020" loc="62:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x102a84c40" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x102a849c0" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100cf7160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x102a83730" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x102a834b0" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x100f8a980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
