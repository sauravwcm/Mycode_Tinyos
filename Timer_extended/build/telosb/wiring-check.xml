<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:Timer_extendedAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10dc46580"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10dc43a20"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x10dc43a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x10de0f590"/></to>
    </wire>
    <wire loc="11:Timer_extendedAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x10de4fa80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10e24f370"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10e24f370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10e0bf610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:Timer_extendedAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10de369a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10de1dbe0"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x10de1dbe0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x10de63620"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10dc44020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e0b63e0"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10de0fc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10d7c63a0"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x10d7c63a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x10dc1e420"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x10de276c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10dc5d020"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10dc5d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10dc5a280"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x10de27dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x10dc44020"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10dc5a990"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x10dc5b640"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x10dc5b640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10dc77580"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x10dc590c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10dc533f0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x10dc597a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10de87dd0"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10dc77580"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10dc9b7e0"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x10dc8cae0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x10dc9a020"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x10db42510"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x10dc99360"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x10dcd65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10dda56d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x10dce4020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10dd9eb30"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x10dccd700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10dd88160"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x10dcf1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10dda8cb0"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x10dcd4aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10dd89480"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x10dcf7020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10dda8020"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x10dceea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10ddd9cb0"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x10dcde5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10ddc6220"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x10dcd7b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10dd509d0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x10dcf3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10ddb72f0"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x10dcf93e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10ddb8610"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x10dce35a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10dd95220"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x10dcec700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10dda37a0"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x10dcf0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10ddc42f0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x10dce2be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10ddb26d0"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x10dcd3890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10dda4ac0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x10dcc7060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd3c540"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x10dcf7da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10ddc5610"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x10dcbd0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10dd8a020"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x10dcdda50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10ddbe6d0"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x10dce7690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10dd90a90"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x10dcf2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10ddb07a0"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x10dccfcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10dd91de0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x10dcf81f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10ddb1ac0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x10dcefa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10ddbc7a0"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x10dcdf0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10ddaab30"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x10dcf6b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10ddbdac0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x10dcf4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x10dd9ccb0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x10dcf5a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10ddd9020"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x10dcfa570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x10dd9c020"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x10dcfb020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x10dddbb30"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10dd3a450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd3bd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10dd3aaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x10ddd4a90"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10dd39120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x10ddd0260"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10dd8f930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd3c540"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10dd8d020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd3bd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10dd87020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd3c540"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10dd857a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd3bd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10dda2610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd3c540"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10dda1c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd3bd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x10dd322f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x10dd32940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x10ddd09f0"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x10dd31020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x10ddcf240"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10dd9bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10dd992f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10ddb6160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10ddb57a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10ddaf610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10ddaec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10dda7b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10ddc92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10ddc3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10ddc27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10ddbb610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10ddbac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x10ddd8b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x10ddd62f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x10d7521d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10dc1d320"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x10dc19990"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x10d826760"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10de87dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10de63020"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10de5bb50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x10de3e590"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x10de3e590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10e091020"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10de61e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x10de89830"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x10de89830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10e0acb90"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10de5a020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x10de88b50"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x10de88b50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x10e0a7710"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10e0af2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x10decd200"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x10decd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dff7740"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10e0abde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x10deca200"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x10deca200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dff2100"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x10e0a6930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x10dec8200"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x10dec8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfeed10"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x10de97020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df61100"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x10dea9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df86d10"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x10df00560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfa3d10"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x10df03570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e020100"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x10defe580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df9d740"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x10dea5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfa7100"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x10deb9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfcfe00"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x10dee4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e02ad10"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x10def8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df94d10"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x10df0f570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e010100"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x10df24580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e01cd10"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x10de91020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df7d100"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x10def6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfbb740"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x10de8d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df74740"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x10de9f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df98100"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x10deb3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfc1d10"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x10dec6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e015740"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x10dede200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e01cd10"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x10de9b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df42d10"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x10deae020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df8f860"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x10dec1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfb6100"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x10deda580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfa3d10"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x10df09570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e001100"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x10df26570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e01cd10"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x10deee580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dffcd10"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x10debd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfada60"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x10ded1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e000100"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x10dee8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e006740"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x10df07570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e02ad10"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x10def4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfdfd10"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x10de95020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df5dd10"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x10dea7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df81740"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x10deec200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e010100"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x10dea3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfa3d10"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x10deb7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfca740"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x10dee2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e025740"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x10def0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e000100"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x10de82020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df4b6d0"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x10de8b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df6e100"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x10de9d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df94d10"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x10deb1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfe8740"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x10df14580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfb6100"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x10df0d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e00bd10"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x10df01570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e01cd10"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x10ded5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfdfd10"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x10df11580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfb2d10"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x10de99020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df66740"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x10deac020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df8a270"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x10debf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfb2d10"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x10def2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfd9740"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x10df05570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e025740"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x10debb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfd4460"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x10decf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dffcd10"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x10dee6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e001100"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x10de93020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df58740"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x10deea200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e00bd10"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x10de8f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df79d10"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x10dea1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df9d740"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x10deb5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfc5100"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x10dee0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e020100"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x10de77020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df46100"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x10deb0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df6ad10"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x10dec3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfbb740"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x10ded7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfe3100"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x10defa560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df98100"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x10df0b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e006740"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x10defc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10df98100"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x10ded3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfd9740"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x10df28570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e020100"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x10df22580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10e015740"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x10dedc1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x10dfa7100"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10e0bf610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x10e0b51d0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x10e0b51d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10e23a150"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10e0b63e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e1ae020"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x10e0dca80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x10e262790"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10e1ae020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e74dc40"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x10e234640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x10e1ea2f0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10e1e5850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e1ae870"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10e1ae870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e746890"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10e261a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10e15c8c0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10e15c8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10e171cf0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x10e74dc40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x10e730660"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x10e73f0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e74b4f0"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x10e74b4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x10e72f020"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x10e742c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10e15c8c0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e775190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10e735340"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e735340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e774770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e734a80"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e734a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e773a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10e733da0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e733da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x10dce4020"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x10dcfa570"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x10dce2be0"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x10dcf81f0"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x10dcdf0c0"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x10dcf7020"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x10dcde5a0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x10dcf7da0"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x10dcdda50"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x10dcf6b80"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x10dcfb020"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x10dcf5a20"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x10e1860f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10e15a8e0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10e15a8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x10e154b80"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x10e177c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x10e2159c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10d7521d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x10e265a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x10d7521d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="Timer_extendedC" loc="1:Timer_extendedC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Timer_extendedAppC.Timer0" loc="44(Timer_extendedAppC.Timer0):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x10dd09890" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x10dd09c30" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x10dd08020" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x10dd083a0" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x10dd08720" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x10dd08a90" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x10dd08e20" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x10dd06200" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x10dd065d0" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x10dd30e70" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x10dd4f270" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x10df1d9f0" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x10df1dda0" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x10df1c1a0" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x10df1c550" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x10df1c8c0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10e0fecb0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10e0fecb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x10e155a30" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x10e155a30"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10e170570" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10e170570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10e170d40" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10e170d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10e16f160" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10e16f160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10e16f940" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10e16f940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10e16fd10" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x10e16e540" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x10e16e540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x10e1306d0" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x10e1306d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x10e17f020" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x10e17f020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x10e17f410" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x10e17f410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x10e17fbf0" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x10e17fbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x10e17d020" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10e1decc0" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10e1decc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10e210230" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10e210230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x10e210560" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10e263dd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10e263dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x10dc44020" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10dc44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10dc43a20" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10dc43a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10dc43da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10dc5d020" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10dc5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x10dc590c0" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x10dc590c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc59440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10dc5a280" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10dc5a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc5a600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x10dc5a990" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10dc5a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc5ad10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x10dc597a0" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x10dc597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc59b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10dc533f0" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10dc533f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc53770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x10dc5b640" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x10dc5b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc5b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10dc8cae0" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10dc8cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10dc74980"/>
        <function-ref name="initTimerB" scoped="" ref="0x10dc74020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10dc741b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x10dc74340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10dc8ce60"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10dc744d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10dc74660"/>
        <function-ref name="initClocks" scoped="" ref="0x10dc747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10dc77580" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10dc77580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc77900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x10dc9a020" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10dc9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10dc99020"/>
        <function-ref name="initTimerB" scoped="" ref="0x10dc9a530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10dc9a6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x10dc9a850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10dc9a3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10dc9a9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10dc9ab70"/>
        <function-ref name="initClocks" scoped="" ref="0x10dc9ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x10dc99360" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10dc99360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10dc996e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10dc9b7e0" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10dc9b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc9bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x10dcd65a0" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x10dcd65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dcd6920"/>
        <function-ref name="getControl" scoped="" ref="0x10dcd6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcd6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dcd6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dcd5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcd51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dcd5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dcd54d0"/>
        <function-ref name="setControl" scoped="" ref="0x10dcd5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x10dce4020" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x10dce4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dce43a0"/>
        <function-ref name="getControl" scoped="" ref="0x10dce4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dce46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dce4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dce49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dce4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dce4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dce3020"/>
        <function-ref name="setControl" scoped="" ref="0x10dce31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x10dccd700" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x10dccd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dccda80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dccdc10"/>
        <function-ref name="captured" scoped="" ref="0x10dccdda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcec1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dcec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x10dcf1a20" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x10dcf1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dcf0020"/>
        <function-ref name="captured" scoped="" ref="0x10dcf01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcf0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcf04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dcf0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x10dcd4aa0" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x10dcd4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcd4e20"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcd3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcd31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcd3340"/>
        <function-ref name="fired" scoped="" ref="0x10dcd34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x10dcf7020" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x10dcf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcf7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcf76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcf7850"/>
        <function-ref name="fired" scoped="" ref="0x10dcf79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x10dceea20" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x10dceea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dceeda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dced020"/>
        <function-ref name="captured" scoped="" ref="0x10dced1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dced340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dced4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dced660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x10dcde5a0" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x10dcde5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dcde920"/>
        <function-ref name="getControl" scoped="" ref="0x10dcdeab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcdec40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dcdedd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dcdd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcdd1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dcdd340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dcdd4d0"/>
        <function-ref name="setControl" scoped="" ref="0x10dcdd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x10dcd7b10" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x10dcd7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dcbe020"/>
        <function-ref name="getControl" scoped="" ref="0x10dcbe1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcbe340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dcbe4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dcbe660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcbe7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dcbe980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dcbeb10"/>
        <function-ref name="setControl" scoped="" ref="0x10dcbeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x10dcf3a20" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x10dcf3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dcf2020"/>
        <function-ref name="captured" scoped="" ref="0x10dcf21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcf2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcf24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dcf2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x10dcf93e0" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x10dcf93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf9760"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcf98f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcf9a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcf9c10"/>
        <function-ref name="fired" scoped="" ref="0x10dcf9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x10dce35a0" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x10dce35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dce3a20"/>
        <function-ref name="getControl" scoped="" ref="0x10dce3bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dce3d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dce2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dce21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dce2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dce24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dce2660"/>
        <function-ref name="setControl" scoped="" ref="0x10dce27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x10dcec700" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x10dcec700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dceca80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dcecc10"/>
        <function-ref name="captured" scoped="" ref="0x10dcecda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dce6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dce61b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dce6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x10dcf0a20" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x10dcf0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dcef020"/>
        <function-ref name="captured" scoped="" ref="0x10dcef1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcef340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcef4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dcef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x10dce2be0" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x10dce2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dce1020"/>
        <function-ref name="getControl" scoped="" ref="0x10dce11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dce1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dce14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dce1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dce17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dce1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dce1b10"/>
        <function-ref name="setControl" scoped="" ref="0x10dce1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x10dcd3890" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x10dcd3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcd3c10"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcd3da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcce020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcce1b0"/>
        <function-ref name="fired" scoped="" ref="0x10dcce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x10dcc7060" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x10dcc7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dcc73e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dcc7570"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcc7700"/>
        <function-ref name="get" scoped="" ref="0x10dcc7890"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcc7a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcc7bb0"/>
        <function-ref name="getMode" scoped="" ref="0x10dcc7d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcc6020"/>
        <function-ref name="overflow" scoped="" ref="0x10dcc61b0"/>
        <function-ref name="setMode" scoped="" ref="0x10dcc6340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dcc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x10dcf7da0" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x10dcf7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf6180"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcf6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcf64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcf6630"/>
        <function-ref name="fired" scoped="" ref="0x10dcf67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x10dcbd0c0" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x10dcbd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dcbd440"/>
        <function-ref name="getControl" scoped="" ref="0x10dcbd5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcbd760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dcbd8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dcbda80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcbdc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dcbdda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dcd6020"/>
        <function-ref name="setControl" scoped="" ref="0x10dcd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x10dcdda50" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x10dcdda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dcdddd0"/>
        <function-ref name="getControl" scoped="" ref="0x10dcfc020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcfc1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dcfc340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dcfc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcfc660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dcfc7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dcfc980"/>
        <function-ref name="setControl" scoped="" ref="0x10dcfcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x10dce7690" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x10dce7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dce7a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dce7ba0"/>
        <function-ref name="captured" scoped="" ref="0x10dce7d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dccd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dccd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dccd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x10dcf2a20" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x10dcf2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dcf1020"/>
        <function-ref name="captured" scoped="" ref="0x10dcf11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcf1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcf14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dcf1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x10dccfcf0" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x10dccfcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcd40a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcd4230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcd43c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcd4550"/>
        <function-ref name="fired" scoped="" ref="0x10dcd46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x10dcf81f0" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x10dcf81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf8570"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcf8700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcf8890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcf8a20"/>
        <function-ref name="fired" scoped="" ref="0x10dcf8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x10dcefa20" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x10dcefa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcefda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dcee020"/>
        <function-ref name="captured" scoped="" ref="0x10dcee1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcee340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcee4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dcee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x10dcdf0c0" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x10dcdf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dcdf440"/>
        <function-ref name="getControl" scoped="" ref="0x10dcdf5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcdf760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dcdf8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dcdfa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcdfc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dcdfda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dcde020"/>
        <function-ref name="setControl" scoped="" ref="0x10dcde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x10dce66c0" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x10dce66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dce6a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dce6bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dce6d60"/>
        <function-ref name="get" scoped="" ref="0x10dce5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dce51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dce5340"/>
        <function-ref name="getMode" scoped="" ref="0x10dce54d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dce5660"/>
        <function-ref name="overflow" scoped="" ref="0x10dce57f0"/>
        <function-ref name="setMode" scoped="" ref="0x10dce5980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dce5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x10dcf6b80" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x10dcf6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf5020"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcf51b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcf5340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcf54d0"/>
        <function-ref name="fired" scoped="" ref="0x10dcf5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x10dcf4a20" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x10dcf4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dcf3020"/>
        <function-ref name="captured" scoped="" ref="0x10dcf31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dcf3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dcf34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dcf3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x10dcf5a20" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x10dcf5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcf4020"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcf41b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcf4340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcf44d0"/>
        <function-ref name="fired" scoped="" ref="0x10dcf4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x10dcfa570" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x10dcfa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dcfa8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x10dcfaa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dcfac10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dcfada0"/>
        <function-ref name="fired" scoped="" ref="0x10dcf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x10dcfb020" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x10dcfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dcfb3a0"/>
        <function-ref name="getControl" scoped="" ref="0x10dcfb530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dcfb6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dcfb850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dcfb9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dcfbb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dcfbd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dcfa020"/>
        <function-ref name="setControl" scoped="" ref="0x10dcfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10dd3aaa0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10dd3aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd3ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10dd3a450" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10dd3a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd3a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10dd39120" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10dd39120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd394a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10dd3bd80" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10dd3bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd3a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10dd3c540" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10dd3c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dd3c8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dd3ca50"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd3cbe0"/>
        <function-ref name="get" scoped="" ref="0x10dd3cd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd3b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd3b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10dd3b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd3b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10dd3b660"/>
        <function-ref name="setMode" scoped="" ref="0x10dd3b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dd3b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x10dd32940" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x10dd32940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd32cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x10dd322f0" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x10dd322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd32670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x10dd31020" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x10dd31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x10dd33bf0" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10dd33bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10dd343e0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10dd343e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dd34760"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dd348f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd34a80"/>
        <function-ref name="get" scoped="" ref="0x10dd34c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd34da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd33020"/>
        <function-ref name="getMode" scoped="" ref="0x10dd331b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd33340"/>
        <function-ref name="overflow" scoped="" ref="0x10dd334d0"/>
        <function-ref name="setMode" scoped="" ref="0x10dd33660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dd337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10dd90a90" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10dd90a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dd90e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dd8f020"/>
        <function-ref name="captured" scoped="" ref="0x10dd8f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd8f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd8f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dd8f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10dd509d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10dd509d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dd50d50"/>
        <function-ref name="getControl" scoped="" ref="0x10dd91020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd911b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dd91340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dd914d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd91660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dd917f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dd91980"/>
        <function-ref name="setControl" scoped="" ref="0x10dd91b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10dd8d020" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10dd8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10dd91de0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10dd91de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dd90180"/>
        <function-ref name="setEvent" scoped="" ref="0x10dd90310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dd904a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dd90630"/>
        <function-ref name="fired" scoped="" ref="0x10dd907c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10dd8f930" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10dd8f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dd8fcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dd8fe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd8e020"/>
        <function-ref name="get" scoped="" ref="0x10dd8e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd8e340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd8e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x10dd8e660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd8e7f0"/>
        <function-ref name="overflow" scoped="" ref="0x10dd8e980"/>
        <function-ref name="setMode" scoped="" ref="0x10dd8eb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dd8eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10dd88160" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10dd88160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dd884e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dd88670"/>
        <function-ref name="captured" scoped="" ref="0x10dd88800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd88990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd88b20"/>
        <function-ref name="setEdge" scoped="" ref="0x10dd88cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10dd8a020" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10dd8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dd8a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x10dd8a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd8a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dd8a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dd8a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd8ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dd8ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dd89020"/>
        <function-ref name="setControl" scoped="" ref="0x10dd891b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10dd857a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10dd857a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd85b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10dd89480" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10dd89480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dd89800"/>
        <function-ref name="setEvent" scoped="" ref="0x10dd89990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dd89b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dd89cb0"/>
        <function-ref name="fired" scoped="" ref="0x10dd89e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10dd87020" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10dd87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dd873a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dd87530"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd876c0"/>
        <function-ref name="get" scoped="" ref="0x10dd87850"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd879e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd87b70"/>
        <function-ref name="getMode" scoped="" ref="0x10dd87d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd85020"/>
        <function-ref name="overflow" scoped="" ref="0x10dd851b0"/>
        <function-ref name="setMode" scoped="" ref="0x10dd85340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dd854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10dda37a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10dda37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dda3b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dda3cb0"/>
        <function-ref name="captured" scoped="" ref="0x10dda3e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dda2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dda21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dda2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10dda56d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10dda56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dda5a50"/>
        <function-ref name="getControl" scoped="" ref="0x10dda5be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dda5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dda4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dda41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dda4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dda44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dda4660"/>
        <function-ref name="setControl" scoped="" ref="0x10dda47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10dda1c50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10dda1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dda0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10dda4ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10dda4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dda4e40"/>
        <function-ref name="setEvent" scoped="" ref="0x10dda3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dda31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dda3340"/>
        <function-ref name="fired" scoped="" ref="0x10dda34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10dda2610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10dda2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dda2990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dda2b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dda2cb0"/>
        <function-ref name="get" scoped="" ref="0x10dda2e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dda1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dda11b0"/>
        <function-ref name="getMode" scoped="" ref="0x10dda1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dda14d0"/>
        <function-ref name="overflow" scoped="" ref="0x10dda1660"/>
        <function-ref name="setMode" scoped="" ref="0x10dda17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dda1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10dd9ccb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10dd9ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dd9b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dd9b230"/>
        <function-ref name="captured" scoped="" ref="0x10dd9b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd9b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd9b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dd9b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10dd9eb30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10dd9eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dd9d020"/>
        <function-ref name="getControl" scoped="" ref="0x10dd9d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd9d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dd9d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dd9d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd9d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dd9d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dd9db10"/>
        <function-ref name="setControl" scoped="" ref="0x10dd9dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10dd992f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10dd992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10dd99670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10dd9c020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10dd9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dd9c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10dd9c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dd9c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dd9c850"/>
        <function-ref name="fired" scoped="" ref="0x10dd9c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10dd9bb40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10dd9bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10dd9a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10dd9a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd9a340"/>
        <function-ref name="get" scoped="" ref="0x10dd9a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd9a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dd9a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x10dd9a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dd9ab10"/>
        <function-ref name="overflow" scoped="" ref="0x10dd9aca0"/>
        <function-ref name="setMode" scoped="" ref="0x10dd9ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10dd99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10ddb72f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10ddb72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddb7670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10ddb7800"/>
        <function-ref name="captured" scoped="" ref="0x10ddb7990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddb7b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddb7cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x10ddb7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10dd95220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10dd95220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dd955a0"/>
        <function-ref name="getControl" scoped="" ref="0x10dd95730"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dd958c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dd95a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dd95be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dd95d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10ddb8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10ddb81b0"/>
        <function-ref name="setControl" scoped="" ref="0x10ddb8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10ddb57a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10ddb57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddb5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10ddb8610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10ddb8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddb8990"/>
        <function-ref name="setEvent" scoped="" ref="0x10ddb8b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10ddb8cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10ddb8e40"/>
        <function-ref name="fired" scoped="" ref="0x10ddb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10ddb6160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10ddb6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ddb64e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10ddb6670"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddb6800"/>
        <function-ref name="get" scoped="" ref="0x10ddb6990"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddb6b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddb6cb0"/>
        <function-ref name="getMode" scoped="" ref="0x10ddb6e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddb5020"/>
        <function-ref name="overflow" scoped="" ref="0x10ddb51b0"/>
        <function-ref name="setMode" scoped="" ref="0x10ddb5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10ddb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10ddb07a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10ddb07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddb0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10ddb0cb0"/>
        <function-ref name="captured" scoped="" ref="0x10ddb0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddaf020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddaf1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10ddaf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10ddb26d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10ddb26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10ddb2a50"/>
        <function-ref name="getControl" scoped="" ref="0x10ddb2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddb2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10ddb1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10ddb11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddb1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10ddb14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10ddb1660"/>
        <function-ref name="setControl" scoped="" ref="0x10ddb17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10ddaec50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10ddaec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10ddb1ac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10ddb1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddb1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x10ddb0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10ddb01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10ddb0340"/>
        <function-ref name="fired" scoped="" ref="0x10ddb04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10ddaf610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10ddaf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ddaf990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10ddafb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddafcb0"/>
        <function-ref name="get" scoped="" ref="0x10ddafe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddae020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddae1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10ddae340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddae4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10ddae660"/>
        <function-ref name="setMode" scoped="" ref="0x10ddae7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10ddae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10dda8cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10dda8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dda70a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10dda7230"/>
        <function-ref name="captured" scoped="" ref="0x10dda73c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10dda7550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10dda76e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10dda7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10ddaab30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10ddaab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10dda9020"/>
        <function-ref name="getControl" scoped="" ref="0x10dda91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10dda9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10dda94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10dda9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10dda97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10dda9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dda9b10"/>
        <function-ref name="setControl" scoped="" ref="0x10dda9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10ddc92f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10ddc92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddc9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10dda8020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10dda8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10dda83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10dda8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10dda86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10dda8850"/>
        <function-ref name="fired" scoped="" ref="0x10dda89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10dda7b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10dda7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ddca020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10ddca1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddca340"/>
        <function-ref name="get" scoped="" ref="0x10ddca4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddca660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddca7f0"/>
        <function-ref name="getMode" scoped="" ref="0x10ddca980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddcab10"/>
        <function-ref name="overflow" scoped="" ref="0x10ddcaca0"/>
        <function-ref name="setMode" scoped="" ref="0x10ddcae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10ddc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10ddc42f0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10ddc42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddc4670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10ddc4800"/>
        <function-ref name="captured" scoped="" ref="0x10ddc4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddc4b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddc4cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x10ddc4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10ddc6220" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10ddc6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10ddc65a0"/>
        <function-ref name="getControl" scoped="" ref="0x10ddc6730"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddc68c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10ddc6a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10ddc6be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddc6d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10ddc5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10ddc51b0"/>
        <function-ref name="setControl" scoped="" ref="0x10ddc5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10ddc27a0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10ddc27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddc2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10ddc5610" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10ddc5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddc5990"/>
        <function-ref name="setEvent" scoped="" ref="0x10ddc5b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10ddc5cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10ddc5e40"/>
        <function-ref name="fired" scoped="" ref="0x10ddc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10ddc3160" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10ddc3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ddc34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10ddc3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddc3800"/>
        <function-ref name="get" scoped="" ref="0x10ddc3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddc3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddc3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x10ddc3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddc2020"/>
        <function-ref name="overflow" scoped="" ref="0x10ddc21b0"/>
        <function-ref name="setMode" scoped="" ref="0x10ddc2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10ddc24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10ddbc7a0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10ddbc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddbcb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10ddbccb0"/>
        <function-ref name="captured" scoped="" ref="0x10ddbce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddbb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddbb1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x10ddbb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10ddbe6d0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10ddbe6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10ddbea50"/>
        <function-ref name="getControl" scoped="" ref="0x10ddbebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddbed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10ddbd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10ddbd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddbd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10ddbd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10ddbd660"/>
        <function-ref name="setControl" scoped="" ref="0x10ddbd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10ddbac50" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10ddbac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10ddbdac0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10ddbdac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddbde40"/>
        <function-ref name="setEvent" scoped="" ref="0x10ddbc020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10ddbc1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10ddbc340"/>
        <function-ref name="fired" scoped="" ref="0x10ddbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10ddbb610" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10ddbb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ddbb990"/>
        <function-ref name="setClockSource" scoped="" ref="0x10ddbbb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddbbcb0"/>
        <function-ref name="get" scoped="" ref="0x10ddbbe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddba020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddba1b0"/>
        <function-ref name="getMode" scoped="" ref="0x10ddba340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddba4d0"/>
        <function-ref name="overflow" scoped="" ref="0x10ddba660"/>
        <function-ref name="setMode" scoped="" ref="0x10ddba7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10ddba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x10ddd9cb0" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x10ddd9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddd80a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x10ddd8230"/>
        <function-ref name="captured" scoped="" ref="0x10ddd83c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddd8550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddd86e0"/>
        <function-ref name="setEdge" scoped="" ref="0x10ddd8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x10dddbb30" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x10dddbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10ddda020"/>
        <function-ref name="getControl" scoped="" ref="0x10ddda1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddda340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10ddda4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10ddda660"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddda7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10ddda980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10dddab10"/>
        <function-ref name="setControl" scoped="" ref="0x10dddaca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x10ddd62f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x10ddd62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddd6670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x10ddd9020" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x10ddd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10ddd93a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10ddd9530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10ddd96c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10ddd9850"/>
        <function-ref name="fired" scoped="" ref="0x10ddd99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x10ddd8b40" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10ddd8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10ddd7020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10ddd71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10ddd7340"/>
        <function-ref name="get" scoped="" ref="0x10ddd74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10ddd7660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10ddd77f0"/>
        <function-ref name="getMode" scoped="" ref="0x10ddd7980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10ddd7b10"/>
        <function-ref name="overflow" scoped="" ref="0x10ddd7ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10ddd7e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10ddd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x10ddcf240" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x10ddcf240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddcf5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x10ddd4a90" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x10ddd4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddd4e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x10ddd0260" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x10ddd0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddd05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x10ddd09f0" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x10ddd09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x10ddd0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x10db42510" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x10db42510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x10db42890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x10d826760" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10d826760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10d826ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x10d8cbcc0" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x10d8cbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x10d9600a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x10dc75b40" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x10dc75b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x10de0eb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x10de0e1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x10de0e340"/>
        <function-ref name="initTimerA" scoped="" ref="0x10de0e4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x10de0e020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x10de0e660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x10de0e7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x10de0e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x10de27dc0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x10de27dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10de26180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x10de0f590" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10de0f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10de0f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x10de276c0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x10de276c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10de27a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x10de0fc00" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10de0fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10de27020"/>
        <function-ref name="taskLoop" scoped="" ref="0x10de271b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10de27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10d7521d0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10d7521d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10d752550"/>
        <function-ref name="runTask" scoped="" ref="0x10d7526e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10d7c63a0" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10d7c63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10d7c6720"/>
        <function-ref name="taskLoop" scoped="" ref="0x10d7c68b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x10d7c6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x10dc1d320" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x10dc1d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10dc1d6a0"/>
        <function-ref name="runTask" scoped="" ref="0x10dc1d830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x10dc19990" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x10dc19990"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x10dc19d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x10dc1e420" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x10dc1e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10dc1e7a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x10dc1e930"/>
        <function-ref name="runNextTask" scoped="" ref="0x10dc1eac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x10de4fa80" loc="7:Timer_extendedC.nc">
      <component-ref qname="Timer_extendedC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x10de4fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10de4c020"/>
        <function-ref name="fired" scoped="" ref="0x10de34510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10de4d300"/>
        <function-ref name="isOneShot" scoped="" ref="0x10de34e10"/>
        <function-ref name="getdt" scoped="" ref="0x10de4c920"/>
        <function-ref name="gett0" scoped="" ref="0x10de4c4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x10de34990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10de356b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10de4d910"/>
        <function-ref name="startOneShot" scoped="" ref="0x10de35b80"/>
        <function-ref name="stop" scoped="" ref="0x10de34090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x10dc46580" loc="5:Timer_extendedC.nc">
      <component-ref qname="Timer_extendedC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x10dc46580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x10dc46900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x10de369a0" loc="6:Timer_extendedC.nc">
      <component-ref qname="Timer_extendedC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10de369a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10de36d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10de1b020"/>
        <function-ref name="led1On" scoped="" ref="0x10de1b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10de1b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10de1b4d0"/>
        <function-ref name="get" scoped="" ref="0x10de1b660"/>
        <function-ref name="led1Off" scoped="" ref="0x10de1b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x10de1be30"/>
        <function-ref name="set" scoped="" ref="0x10de1b980"/>
        <function-ref name="led0On" scoped="" ref="0x10de1bb10"/>
        <function-ref name="led2On" scoped="" ref="0x10de1bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10de1dbe0" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10de1dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10de41020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10de411b0"/>
        <function-ref name="led1On" scoped="" ref="0x10de41340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10de414d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10de41660"/>
        <function-ref name="get" scoped="" ref="0x10de417f0"/>
        <function-ref name="led1Off" scoped="" ref="0x10de41980"/>
        <function-ref name="led2Off" scoped="" ref="0x10de40020"/>
        <function-ref name="set" scoped="" ref="0x10de41b10"/>
        <function-ref name="led0On" scoped="" ref="0x10de41ca0"/>
        <function-ref name="led2On" scoped="" ref="0x10de41e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x10de5bb50" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10de5bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de61020"/>
        <function-ref name="isInput" scoped="" ref="0x10de611b0"/>
        <function-ref name="toggle" scoped="" ref="0x10de61340"/>
        <function-ref name="isOutput" scoped="" ref="0x10de614d0"/>
        <function-ref name="get" scoped="" ref="0x10de61660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de617f0"/>
        <function-ref name="set" scoped="" ref="0x10de61980"/>
        <function-ref name="clr" scoped="" ref="0x10de61b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10de63020" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10de63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10de633a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x10de61e30" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10de61e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de601e0"/>
        <function-ref name="isInput" scoped="" ref="0x10de60370"/>
        <function-ref name="toggle" scoped="" ref="0x10de60500"/>
        <function-ref name="isOutput" scoped="" ref="0x10de60690"/>
        <function-ref name="get" scoped="" ref="0x10de60820"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de609b0"/>
        <function-ref name="set" scoped="" ref="0x10de60b40"/>
        <function-ref name="clr" scoped="" ref="0x10de60cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x10de63620" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x10de63620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x10de639a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x10de63b30"/>
        <function-ref name="led1On" scoped="" ref="0x10de63cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x10de63e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x10de62020"/>
        <function-ref name="get" scoped="" ref="0x10de621b0"/>
        <function-ref name="led1Off" scoped="" ref="0x10de62340"/>
        <function-ref name="led2Off" scoped="" ref="0x10de62980"/>
        <function-ref name="set" scoped="" ref="0x10de624d0"/>
        <function-ref name="led0On" scoped="" ref="0x10de62660"/>
        <function-ref name="led2On" scoped="" ref="0x10de627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x10de5a020" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10de5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de5a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de5a530"/>
        <function-ref name="toggle" scoped="" ref="0x10de5a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10de5a850"/>
        <function-ref name="get" scoped="" ref="0x10de5a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de5ab70"/>
        <function-ref name="set" scoped="" ref="0x10de5ad00"/>
        <function-ref name="clr" scoped="" ref="0x10de59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x10de3e590" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x10de3e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de3e910"/>
        <function-ref name="isInput" scoped="" ref="0x10de3eaa0"/>
        <function-ref name="toggle" scoped="" ref="0x10de3ec30"/>
        <function-ref name="isOutput" scoped="" ref="0x10de3edc0"/>
        <function-ref name="get" scoped="" ref="0x10de89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de891b0"/>
        <function-ref name="set" scoped="" ref="0x10de89340"/>
        <function-ref name="clr" scoped="" ref="0x10de894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x10de89830" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x10de89830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de89bb0"/>
        <function-ref name="isInput" scoped="" ref="0x10de89d40"/>
        <function-ref name="toggle" scoped="" ref="0x10de88020"/>
        <function-ref name="isOutput" scoped="" ref="0x10de881b0"/>
        <function-ref name="get" scoped="" ref="0x10de88340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de884d0"/>
        <function-ref name="set" scoped="" ref="0x10de88660"/>
        <function-ref name="clr" scoped="" ref="0x10de887f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x10de87dd0" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10de87dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10de86180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x10de88b50" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x10de88b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de87020"/>
        <function-ref name="isInput" scoped="" ref="0x10de871b0"/>
        <function-ref name="toggle" scoped="" ref="0x10de87340"/>
        <function-ref name="isOutput" scoped="" ref="0x10de874d0"/>
        <function-ref name="get" scoped="" ref="0x10de87660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de877f0"/>
        <function-ref name="set" scoped="" ref="0x10de87980"/>
        <function-ref name="clr" scoped="" ref="0x10de87b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x10de97020" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x10de97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de973a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de97530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de976c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de97850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de979e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de97b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de97d00"/>
        <function-ref name="get" scoped="" ref="0x10de96020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de96340"/>
        <function-ref name="set" scoped="" ref="0x10de964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de96660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de96a80"/>
        <function-ref name="clr" scoped="" ref="0x10de96c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x10dea9020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x10dea9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dea93a0"/>
        <function-ref name="isInput" scoped="" ref="0x10dea9530"/>
        <function-ref name="setResistor" scoped="" ref="0x10dea96c0"/>
        <function-ref name="toggle" scoped="" ref="0x10dea9850"/>
        <function-ref name="isOutput" scoped="" ref="0x10dea99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dea9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dea9d00"/>
        <function-ref name="get" scoped="" ref="0x10dea8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dea81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dea8340"/>
        <function-ref name="set" scoped="" ref="0x10dea84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dea8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dea87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dea8a80"/>
        <function-ref name="clr" scoped="" ref="0x10dea8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x10df00560" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x10df00560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df008e0"/>
        <function-ref name="isInput" scoped="" ref="0x10df00a70"/>
        <function-ref name="setResistor" scoped="" ref="0x10df00c00"/>
        <function-ref name="toggle" scoped="" ref="0x10df00d90"/>
        <function-ref name="isOutput" scoped="" ref="0x10deff020"/>
        <function-ref name="getResistor" scoped="" ref="0x10deff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deff340"/>
        <function-ref name="get" scoped="" ref="0x10deff4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deff660"/>
        <function-ref name="getRaw" scoped="" ref="0x10deff7f0"/>
        <function-ref name="set" scoped="" ref="0x10deff980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deffb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deffca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10defe020"/>
        <function-ref name="clr" scoped="" ref="0x10defe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x10df03570" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x10df03570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df038f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df03a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df03c10"/>
        <function-ref name="toggle" scoped="" ref="0x10df03da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df02020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df02340"/>
        <function-ref name="get" scoped="" ref="0x10df024d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df02660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df027f0"/>
        <function-ref name="set" scoped="" ref="0x10df02980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df02b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df02ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df01020"/>
        <function-ref name="clr" scoped="" ref="0x10df011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x10defe580" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x10defe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10defe900"/>
        <function-ref name="isInput" scoped="" ref="0x10defea90"/>
        <function-ref name="setResistor" scoped="" ref="0x10defec20"/>
        <function-ref name="toggle" scoped="" ref="0x10defedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10defd020"/>
        <function-ref name="getResistor" scoped="" ref="0x10defd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10defd340"/>
        <function-ref name="get" scoped="" ref="0x10defd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10defd660"/>
        <function-ref name="getRaw" scoped="" ref="0x10defd7f0"/>
        <function-ref name="set" scoped="" ref="0x10defd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10defdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10defdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10defc020"/>
        <function-ref name="clr" scoped="" ref="0x10defc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x10dea5020" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x10dea5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dea53a0"/>
        <function-ref name="isInput" scoped="" ref="0x10dea5530"/>
        <function-ref name="setResistor" scoped="" ref="0x10dea56c0"/>
        <function-ref name="toggle" scoped="" ref="0x10dea5850"/>
        <function-ref name="isOutput" scoped="" ref="0x10dea59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dea5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dea5d00"/>
        <function-ref name="get" scoped="" ref="0x10dea4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dea41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dea4340"/>
        <function-ref name="set" scoped="" ref="0x10dea44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dea4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dea47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dea4a80"/>
        <function-ref name="clr" scoped="" ref="0x10dea4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x10deb9200" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x10deb9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deb9580"/>
        <function-ref name="isInput" scoped="" ref="0x10deb9710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deb98a0"/>
        <function-ref name="toggle" scoped="" ref="0x10deb9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10deb9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deb9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deb8020"/>
        <function-ref name="get" scoped="" ref="0x10deb81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deb8340"/>
        <function-ref name="getRaw" scoped="" ref="0x10deb84d0"/>
        <function-ref name="set" scoped="" ref="0x10deb8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deb87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deb8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deb8c10"/>
        <function-ref name="clr" scoped="" ref="0x10deb8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x10decd200" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x10decd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10decd580"/>
        <function-ref name="isInput" scoped="" ref="0x10decd710"/>
        <function-ref name="setResistor" scoped="" ref="0x10decd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10decda30"/>
        <function-ref name="isOutput" scoped="" ref="0x10decdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10decdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10decc020"/>
        <function-ref name="get" scoped="" ref="0x10decc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10decc340"/>
        <function-ref name="getRaw" scoped="" ref="0x10decc4d0"/>
        <function-ref name="set" scoped="" ref="0x10decc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10decc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10decc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deccc10"/>
        <function-ref name="clr" scoped="" ref="0x10deccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x10dee4200" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x10dee4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dee4580"/>
        <function-ref name="isInput" scoped="" ref="0x10dee4710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dee48a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dee4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dee4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dee4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dee3020"/>
        <function-ref name="get" scoped="" ref="0x10dee31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dee3340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dee34d0"/>
        <function-ref name="set" scoped="" ref="0x10dee3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dee37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dee3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dee3c10"/>
        <function-ref name="clr" scoped="" ref="0x10dee3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x10def8580" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x10def8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10def8900"/>
        <function-ref name="isInput" scoped="" ref="0x10def8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10def8c20"/>
        <function-ref name="toggle" scoped="" ref="0x10def8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10def7020"/>
        <function-ref name="getResistor" scoped="" ref="0x10def71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10def7340"/>
        <function-ref name="get" scoped="" ref="0x10def74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10def7660"/>
        <function-ref name="getRaw" scoped="" ref="0x10def77f0"/>
        <function-ref name="set" scoped="" ref="0x10def7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10def7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10def7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10def6020"/>
        <function-ref name="clr" scoped="" ref="0x10def61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x10df0f570" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x10df0f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df0f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df0fa80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df0fc10"/>
        <function-ref name="toggle" scoped="" ref="0x10df0fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df0e020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df0e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df0e340"/>
        <function-ref name="get" scoped="" ref="0x10df0e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df0e660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df0e7f0"/>
        <function-ref name="set" scoped="" ref="0x10df0e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df0eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df0eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df0d020"/>
        <function-ref name="clr" scoped="" ref="0x10df0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x10df24580" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x10df24580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df24900"/>
        <function-ref name="isInput" scoped="" ref="0x10df24a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10df24c20"/>
        <function-ref name="toggle" scoped="" ref="0x10df24db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df23020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df23340"/>
        <function-ref name="get" scoped="" ref="0x10df234d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df23660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df237f0"/>
        <function-ref name="set" scoped="" ref="0x10df23980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df23b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df23ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df22020"/>
        <function-ref name="clr" scoped="" ref="0x10df221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x10de91020" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x10de91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de913a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de91530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de916c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de91850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de919e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de91b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de91d00"/>
        <function-ref name="get" scoped="" ref="0x10de90020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de901b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de90340"/>
        <function-ref name="set" scoped="" ref="0x10de904d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de90660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de907f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de90a80"/>
        <function-ref name="clr" scoped="" ref="0x10de90c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x10def6580" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x10def6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10def6900"/>
        <function-ref name="isInput" scoped="" ref="0x10def6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10def6c20"/>
        <function-ref name="toggle" scoped="" ref="0x10def6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10def5020"/>
        <function-ref name="getResistor" scoped="" ref="0x10def51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10def5340"/>
        <function-ref name="get" scoped="" ref="0x10def54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10def5660"/>
        <function-ref name="getRaw" scoped="" ref="0x10def57f0"/>
        <function-ref name="set" scoped="" ref="0x10def5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10def5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10def5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10def4020"/>
        <function-ref name="clr" scoped="" ref="0x10def41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x10de8d020" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x10de8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de8d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de8d530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de8d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de8d850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de8d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de8db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de8dd00"/>
        <function-ref name="get" scoped="" ref="0x10de8c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de8c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de8c340"/>
        <function-ref name="set" scoped="" ref="0x10de8c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de8c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de8c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de8ca80"/>
        <function-ref name="clr" scoped="" ref="0x10de8cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x10de9f020" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x10de9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de9f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de9f530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de9f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de9f850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de9f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de9fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de9fd00"/>
        <function-ref name="get" scoped="" ref="0x10de9e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de9e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de9e340"/>
        <function-ref name="set" scoped="" ref="0x10de9e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de9e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de9e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de9ea80"/>
        <function-ref name="clr" scoped="" ref="0x10de9ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x10deb3200" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x10deb3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deb3580"/>
        <function-ref name="isInput" scoped="" ref="0x10deb3710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deb38a0"/>
        <function-ref name="toggle" scoped="" ref="0x10deb3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10deb3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deb3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deb2020"/>
        <function-ref name="get" scoped="" ref="0x10deb21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deb2340"/>
        <function-ref name="getRaw" scoped="" ref="0x10deb24d0"/>
        <function-ref name="set" scoped="" ref="0x10deb2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deb27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deb2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deb2c10"/>
        <function-ref name="clr" scoped="" ref="0x10deb2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x10dec6200" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x10dec6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dec6580"/>
        <function-ref name="isInput" scoped="" ref="0x10dec6710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dec68a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dec6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dec6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dec6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dec5020"/>
        <function-ref name="get" scoped="" ref="0x10dec51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dec5340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dec54d0"/>
        <function-ref name="set" scoped="" ref="0x10dec5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dec57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dec5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dec5c10"/>
        <function-ref name="clr" scoped="" ref="0x10dec5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x10dede200" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x10dede200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dede580"/>
        <function-ref name="isInput" scoped="" ref="0x10dede710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dede8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dedea30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dedebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deded50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dedd020"/>
        <function-ref name="get" scoped="" ref="0x10dedd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dedd340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dedd4d0"/>
        <function-ref name="set" scoped="" ref="0x10dedd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dedd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dedd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deddc10"/>
        <function-ref name="clr" scoped="" ref="0x10deddda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x10de9b020" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x10de9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de9b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de9b530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de9b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de9b850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de9b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de9bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de9bd00"/>
        <function-ref name="get" scoped="" ref="0x10de9a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de9a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de9a340"/>
        <function-ref name="set" scoped="" ref="0x10de9a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de9a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de9a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de9aa80"/>
        <function-ref name="clr" scoped="" ref="0x10de9ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x10deae020" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x10deae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deae4a0"/>
        <function-ref name="isInput" scoped="" ref="0x10deae630"/>
        <function-ref name="setResistor" scoped="" ref="0x10deae7c0"/>
        <function-ref name="toggle" scoped="" ref="0x10deae950"/>
        <function-ref name="isOutput" scoped="" ref="0x10deaeae0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deaec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deaee00"/>
        <function-ref name="get" scoped="" ref="0x10dead020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dead1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dead340"/>
        <function-ref name="set" scoped="" ref="0x10dead4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dead660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dead7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deada80"/>
        <function-ref name="clr" scoped="" ref="0x10deadc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x10dec1020" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x10dec1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dec13a0"/>
        <function-ref name="isInput" scoped="" ref="0x10dec1530"/>
        <function-ref name="setResistor" scoped="" ref="0x10dec16c0"/>
        <function-ref name="toggle" scoped="" ref="0x10dec1850"/>
        <function-ref name="isOutput" scoped="" ref="0x10dec19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dec1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dec1d00"/>
        <function-ref name="get" scoped="" ref="0x10dec0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dec01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dec0340"/>
        <function-ref name="set" scoped="" ref="0x10dec04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dec0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dec07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dec0a80"/>
        <function-ref name="clr" scoped="" ref="0x10dec0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x10deda580" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x10deda580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deda900"/>
        <function-ref name="isInput" scoped="" ref="0x10dedaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x10dedac20"/>
        <function-ref name="toggle" scoped="" ref="0x10dedadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10ded9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10ded91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ded9340"/>
        <function-ref name="get" scoped="" ref="0x10ded94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ded9660"/>
        <function-ref name="getRaw" scoped="" ref="0x10ded97f0"/>
        <function-ref name="set" scoped="" ref="0x10ded9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ded9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ded9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df00020"/>
        <function-ref name="clr" scoped="" ref="0x10df001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x10df09570" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x10df09570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df098f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df09a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df09c10"/>
        <function-ref name="toggle" scoped="" ref="0x10df09da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df08020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df08340"/>
        <function-ref name="get" scoped="" ref="0x10df084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df08660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df087f0"/>
        <function-ref name="set" scoped="" ref="0x10df08980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df08b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df08ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df07020"/>
        <function-ref name="clr" scoped="" ref="0x10df071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x10df26570" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x10df26570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df268f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df26a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df26c10"/>
        <function-ref name="toggle" scoped="" ref="0x10df26da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df25020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df25340"/>
        <function-ref name="get" scoped="" ref="0x10df254d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df25660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df257f0"/>
        <function-ref name="set" scoped="" ref="0x10df25980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df25b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df25ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df24020"/>
        <function-ref name="clr" scoped="" ref="0x10df241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x10deee580" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x10deee580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deee900"/>
        <function-ref name="isInput" scoped="" ref="0x10deeea90"/>
        <function-ref name="setResistor" scoped="" ref="0x10deeec20"/>
        <function-ref name="toggle" scoped="" ref="0x10deeedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10deed020"/>
        <function-ref name="getResistor" scoped="" ref="0x10deed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deed340"/>
        <function-ref name="get" scoped="" ref="0x10deed4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deed660"/>
        <function-ref name="getRaw" scoped="" ref="0x10deed7f0"/>
        <function-ref name="set" scoped="" ref="0x10deed980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deedb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deedca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df14020"/>
        <function-ref name="clr" scoped="" ref="0x10df141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x10debd020" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x10debd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10debd5a0"/>
        <function-ref name="isInput" scoped="" ref="0x10debd730"/>
        <function-ref name="setResistor" scoped="" ref="0x10debd8c0"/>
        <function-ref name="toggle" scoped="" ref="0x10debda50"/>
        <function-ref name="isOutput" scoped="" ref="0x10debdbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x10debdd70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10debc020"/>
        <function-ref name="get" scoped="" ref="0x10debc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10debc340"/>
        <function-ref name="getRaw" scoped="" ref="0x10debc4d0"/>
        <function-ref name="set" scoped="" ref="0x10debc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10debc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10debc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10debcc10"/>
        <function-ref name="clr" scoped="" ref="0x10debcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x10ded1200" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x10ded1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ded1580"/>
        <function-ref name="isInput" scoped="" ref="0x10ded1710"/>
        <function-ref name="setResistor" scoped="" ref="0x10ded18a0"/>
        <function-ref name="toggle" scoped="" ref="0x10ded1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10ded1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ded1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ded0020"/>
        <function-ref name="get" scoped="" ref="0x10ded01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ded0340"/>
        <function-ref name="getRaw" scoped="" ref="0x10ded04d0"/>
        <function-ref name="set" scoped="" ref="0x10ded0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ded07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ded0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ded0c10"/>
        <function-ref name="clr" scoped="" ref="0x10ded0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x10dee8200" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x10dee8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dee8580"/>
        <function-ref name="isInput" scoped="" ref="0x10dee8710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dee88a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dee8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dee8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dee8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dee7020"/>
        <function-ref name="get" scoped="" ref="0x10dee71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dee7340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dee74d0"/>
        <function-ref name="set" scoped="" ref="0x10dee7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dee77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dee7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dee7c10"/>
        <function-ref name="clr" scoped="" ref="0x10dee7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x10df07570" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x10df07570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df078f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df07a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df07c10"/>
        <function-ref name="toggle" scoped="" ref="0x10df07da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df06020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df06340"/>
        <function-ref name="get" scoped="" ref="0x10df064d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df06660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df067f0"/>
        <function-ref name="set" scoped="" ref="0x10df06980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df06b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df06ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df05020"/>
        <function-ref name="clr" scoped="" ref="0x10df051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x10def4570" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x10def4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10def48f0"/>
        <function-ref name="isInput" scoped="" ref="0x10def4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10def4c10"/>
        <function-ref name="toggle" scoped="" ref="0x10def4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10def3020"/>
        <function-ref name="getResistor" scoped="" ref="0x10def31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10def3340"/>
        <function-ref name="get" scoped="" ref="0x10def34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10def3660"/>
        <function-ref name="getRaw" scoped="" ref="0x10def37f0"/>
        <function-ref name="set" scoped="" ref="0x10def3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10def3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10def3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10def2020"/>
        <function-ref name="clr" scoped="" ref="0x10def21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x10de95020" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x10de95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de953a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de95530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de956c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de95850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de959e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de95b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de95d00"/>
        <function-ref name="get" scoped="" ref="0x10de94020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de94340"/>
        <function-ref name="set" scoped="" ref="0x10de944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de94660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de94a80"/>
        <function-ref name="clr" scoped="" ref="0x10de94c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x10dea7020" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x10dea7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dea73a0"/>
        <function-ref name="isInput" scoped="" ref="0x10dea7530"/>
        <function-ref name="setResistor" scoped="" ref="0x10dea76c0"/>
        <function-ref name="toggle" scoped="" ref="0x10dea7850"/>
        <function-ref name="isOutput" scoped="" ref="0x10dea79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dea7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dea7d00"/>
        <function-ref name="get" scoped="" ref="0x10dea6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dea61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dea6340"/>
        <function-ref name="set" scoped="" ref="0x10dea64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dea6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dea67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dea6a80"/>
        <function-ref name="clr" scoped="" ref="0x10dea6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x10deec200" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x10deec200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deec580"/>
        <function-ref name="isInput" scoped="" ref="0x10deec710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deec8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10deeca30"/>
        <function-ref name="isOutput" scoped="" ref="0x10deecbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deecd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deeb020"/>
        <function-ref name="get" scoped="" ref="0x10deeb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deeb340"/>
        <function-ref name="getRaw" scoped="" ref="0x10deeb4d0"/>
        <function-ref name="set" scoped="" ref="0x10deeb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deeb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deeb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deebc10"/>
        <function-ref name="clr" scoped="" ref="0x10deebda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x10dea3020" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x10dea3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dea33a0"/>
        <function-ref name="isInput" scoped="" ref="0x10dea3530"/>
        <function-ref name="setResistor" scoped="" ref="0x10dea36c0"/>
        <function-ref name="toggle" scoped="" ref="0x10dea3850"/>
        <function-ref name="isOutput" scoped="" ref="0x10dea39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dea3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dea3d00"/>
        <function-ref name="get" scoped="" ref="0x10dea2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dea21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dea2340"/>
        <function-ref name="set" scoped="" ref="0x10dea24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dea2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dea27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dea2a80"/>
        <function-ref name="clr" scoped="" ref="0x10dea2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x10deb7200" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x10deb7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deb7580"/>
        <function-ref name="isInput" scoped="" ref="0x10deb7710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deb78a0"/>
        <function-ref name="toggle" scoped="" ref="0x10deb7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10deb7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deb7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deb6020"/>
        <function-ref name="get" scoped="" ref="0x10deb61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deb6340"/>
        <function-ref name="getRaw" scoped="" ref="0x10deb64d0"/>
        <function-ref name="set" scoped="" ref="0x10deb6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deb67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deb6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deb6c10"/>
        <function-ref name="clr" scoped="" ref="0x10deb6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x10deca200" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x10deca200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deca580"/>
        <function-ref name="isInput" scoped="" ref="0x10deca710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deca8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10decaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x10decabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10decad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dec9020"/>
        <function-ref name="get" scoped="" ref="0x10dec91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dec9340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dec94d0"/>
        <function-ref name="set" scoped="" ref="0x10dec9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dec97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dec9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dec9c10"/>
        <function-ref name="clr" scoped="" ref="0x10dec9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x10dee2200" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x10dee2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dee2580"/>
        <function-ref name="isInput" scoped="" ref="0x10dee2710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dee28a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dee2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dee2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dee2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dee1020"/>
        <function-ref name="get" scoped="" ref="0x10dee11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dee1340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dee14d0"/>
        <function-ref name="set" scoped="" ref="0x10dee1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dee17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dee1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dee1c10"/>
        <function-ref name="clr" scoped="" ref="0x10dee1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x10def0580" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x10def0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10def0900"/>
        <function-ref name="isInput" scoped="" ref="0x10def0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10def0c20"/>
        <function-ref name="toggle" scoped="" ref="0x10def0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10deef020"/>
        <function-ref name="getResistor" scoped="" ref="0x10deef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deef340"/>
        <function-ref name="get" scoped="" ref="0x10deef4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deef660"/>
        <function-ref name="getRaw" scoped="" ref="0x10deef7f0"/>
        <function-ref name="set" scoped="" ref="0x10deef980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deefb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deefca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deee020"/>
        <function-ref name="clr" scoped="" ref="0x10deee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x10de82020" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x10de82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de823a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de82530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de826c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de82850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de829e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de82b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de82d00"/>
        <function-ref name="get" scoped="" ref="0x10de81020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de81340"/>
        <function-ref name="set" scoped="" ref="0x10de814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de81660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de81a80"/>
        <function-ref name="clr" scoped="" ref="0x10de81c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x10de8b020" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x10de8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de8b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de8b530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de8b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de8b850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de8b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de8bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de8bd00"/>
        <function-ref name="get" scoped="" ref="0x10de8a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de8a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de8a340"/>
        <function-ref name="set" scoped="" ref="0x10de8a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de8a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de8a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de8aa80"/>
        <function-ref name="clr" scoped="" ref="0x10de8ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x10de9d020" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x10de9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de9d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de9d530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de9d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de9d850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de9d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de9db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de9dd00"/>
        <function-ref name="get" scoped="" ref="0x10dec4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dec41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dec4340"/>
        <function-ref name="set" scoped="" ref="0x10dec44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dec4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dec47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dec4a80"/>
        <function-ref name="clr" scoped="" ref="0x10dec4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x10deb1200" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x10deb1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deb1580"/>
        <function-ref name="isInput" scoped="" ref="0x10deb1710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deb18a0"/>
        <function-ref name="toggle" scoped="" ref="0x10deb1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10deb1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deb1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ded8020"/>
        <function-ref name="get" scoped="" ref="0x10ded81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ded8340"/>
        <function-ref name="getRaw" scoped="" ref="0x10ded84d0"/>
        <function-ref name="set" scoped="" ref="0x10ded8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ded87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ded8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ded8c10"/>
        <function-ref name="clr" scoped="" ref="0x10ded8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x10df14580" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x10df14580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df14900"/>
        <function-ref name="isInput" scoped="" ref="0x10df14a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10df14c20"/>
        <function-ref name="toggle" scoped="" ref="0x10df14db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df12020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df12340"/>
        <function-ref name="get" scoped="" ref="0x10df124d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df12660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df127f0"/>
        <function-ref name="set" scoped="" ref="0x10df12980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df12b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df12ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df11020"/>
        <function-ref name="clr" scoped="" ref="0x10df111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x10df0d570" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x10df0d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df0d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df0da80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df0dc10"/>
        <function-ref name="toggle" scoped="" ref="0x10df0dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df0c020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df0c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df0c340"/>
        <function-ref name="get" scoped="" ref="0x10df0c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df0c660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df0c7f0"/>
        <function-ref name="set" scoped="" ref="0x10df0c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df0cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df0cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df0b020"/>
        <function-ref name="clr" scoped="" ref="0x10df0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x10df01570" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x10df01570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df018f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df01a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df01c10"/>
        <function-ref name="toggle" scoped="" ref="0x10df01da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df29020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df29340"/>
        <function-ref name="get" scoped="" ref="0x10df294d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df29660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df297f0"/>
        <function-ref name="set" scoped="" ref="0x10df29980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df29b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df29ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df28020"/>
        <function-ref name="clr" scoped="" ref="0x10df281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x10ded5200" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x10ded5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ded5580"/>
        <function-ref name="isInput" scoped="" ref="0x10ded5710"/>
        <function-ref name="setResistor" scoped="" ref="0x10ded58a0"/>
        <function-ref name="toggle" scoped="" ref="0x10ded5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10ded5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ded5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ded4020"/>
        <function-ref name="get" scoped="" ref="0x10ded41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ded4340"/>
        <function-ref name="getRaw" scoped="" ref="0x10ded44d0"/>
        <function-ref name="set" scoped="" ref="0x10ded4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ded47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ded4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ded4c10"/>
        <function-ref name="clr" scoped="" ref="0x10ded4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x10df11580" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x10df11580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df11900"/>
        <function-ref name="isInput" scoped="" ref="0x10df11a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10df11c20"/>
        <function-ref name="toggle" scoped="" ref="0x10df11db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df10020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df10340"/>
        <function-ref name="get" scoped="" ref="0x10df104d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df10660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df107f0"/>
        <function-ref name="set" scoped="" ref="0x10df10980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df10b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df10ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df0f020"/>
        <function-ref name="clr" scoped="" ref="0x10df0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x10de99020" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x10de99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de993a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de99530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de996c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de99850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de999e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de99b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de99d00"/>
        <function-ref name="get" scoped="" ref="0x10de98020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de98340"/>
        <function-ref name="set" scoped="" ref="0x10de984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de98660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de98a80"/>
        <function-ref name="clr" scoped="" ref="0x10de98c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x10deac020" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x10deac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10deac530"/>
        <function-ref name="setResistor" scoped="" ref="0x10deac6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10deac850"/>
        <function-ref name="isOutput" scoped="" ref="0x10deac9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deacb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deacd00"/>
        <function-ref name="get" scoped="" ref="0x10deab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10deab340"/>
        <function-ref name="set" scoped="" ref="0x10deab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deaba80"/>
        <function-ref name="clr" scoped="" ref="0x10deabc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x10debf020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x10debf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10debf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10debf530"/>
        <function-ref name="setResistor" scoped="" ref="0x10debf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10debf850"/>
        <function-ref name="isOutput" scoped="" ref="0x10debf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10debfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10debfd00"/>
        <function-ref name="get" scoped="" ref="0x10debe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10debe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10debe340"/>
        <function-ref name="set" scoped="" ref="0x10debe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10debe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10debe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10debea80"/>
        <function-ref name="clr" scoped="" ref="0x10debec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x10def2580" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x10def2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10def2900"/>
        <function-ref name="isInput" scoped="" ref="0x10def2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10def2c20"/>
        <function-ref name="toggle" scoped="" ref="0x10def2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10def1020"/>
        <function-ref name="getResistor" scoped="" ref="0x10def11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10def1340"/>
        <function-ref name="get" scoped="" ref="0x10def14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10def1660"/>
        <function-ref name="getRaw" scoped="" ref="0x10def17f0"/>
        <function-ref name="set" scoped="" ref="0x10def1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10def1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10def1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10def0020"/>
        <function-ref name="clr" scoped="" ref="0x10def01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x10df05570" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x10df05570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df058f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df05a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df05c10"/>
        <function-ref name="toggle" scoped="" ref="0x10df05da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df04020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df04340"/>
        <function-ref name="get" scoped="" ref="0x10df044d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df04660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df047f0"/>
        <function-ref name="set" scoped="" ref="0x10df04980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df04b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df04ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df03020"/>
        <function-ref name="clr" scoped="" ref="0x10df031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x10debb200" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x10debb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10debb580"/>
        <function-ref name="isInput" scoped="" ref="0x10debb710"/>
        <function-ref name="setResistor" scoped="" ref="0x10debb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10debba30"/>
        <function-ref name="isOutput" scoped="" ref="0x10debbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10debbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deba020"/>
        <function-ref name="get" scoped="" ref="0x10deba1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deba340"/>
        <function-ref name="getRaw" scoped="" ref="0x10deba4d0"/>
        <function-ref name="set" scoped="" ref="0x10deba660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deba7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deba980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10debac10"/>
        <function-ref name="clr" scoped="" ref="0x10debada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x10decf200" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x10decf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10decf580"/>
        <function-ref name="isInput" scoped="" ref="0x10decf710"/>
        <function-ref name="setResistor" scoped="" ref="0x10decf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10decfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x10decfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10decfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dece020"/>
        <function-ref name="get" scoped="" ref="0x10dece1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dece340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dece4d0"/>
        <function-ref name="set" scoped="" ref="0x10dece660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dece7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dece980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10decec10"/>
        <function-ref name="clr" scoped="" ref="0x10deceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x10dee6200" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x10dee6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dee6580"/>
        <function-ref name="isInput" scoped="" ref="0x10dee6710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dee68a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dee6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dee6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dee6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dee5020"/>
        <function-ref name="get" scoped="" ref="0x10dee51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dee5340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dee54d0"/>
        <function-ref name="set" scoped="" ref="0x10dee5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dee57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dee5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dee5c10"/>
        <function-ref name="clr" scoped="" ref="0x10dee5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x10de93020" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x10de93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de933a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de93530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de936c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de93850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de939e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de93b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de93d00"/>
        <function-ref name="get" scoped="" ref="0x10de92020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de92340"/>
        <function-ref name="set" scoped="" ref="0x10de924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de92660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de92a80"/>
        <function-ref name="clr" scoped="" ref="0x10de92c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x10deea200" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x10deea200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deea580"/>
        <function-ref name="isInput" scoped="" ref="0x10deea710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deea8a0"/>
        <function-ref name="toggle" scoped="" ref="0x10deeaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x10deeabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deead50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dee9020"/>
        <function-ref name="get" scoped="" ref="0x10dee91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dee9340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dee94d0"/>
        <function-ref name="set" scoped="" ref="0x10dee9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dee97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dee9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dee9c10"/>
        <function-ref name="clr" scoped="" ref="0x10dee9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x10de8f020" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x10de8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de8f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de8f530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de8f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de8f850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de8f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de8fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de8fd00"/>
        <function-ref name="get" scoped="" ref="0x10de8e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de8e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de8e340"/>
        <function-ref name="set" scoped="" ref="0x10de8e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de8e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de8e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de8ea80"/>
        <function-ref name="clr" scoped="" ref="0x10de8ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x10dea1020" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x10dea1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dea13a0"/>
        <function-ref name="isInput" scoped="" ref="0x10dea1530"/>
        <function-ref name="setResistor" scoped="" ref="0x10dea16c0"/>
        <function-ref name="toggle" scoped="" ref="0x10dea1850"/>
        <function-ref name="isOutput" scoped="" ref="0x10dea19e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dea1b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dea1d00"/>
        <function-ref name="get" scoped="" ref="0x10dea0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dea01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dea0340"/>
        <function-ref name="set" scoped="" ref="0x10dea04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dea0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dea07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dea0a80"/>
        <function-ref name="clr" scoped="" ref="0x10dea0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x10deb5200" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x10deb5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deb5580"/>
        <function-ref name="isInput" scoped="" ref="0x10deb5710"/>
        <function-ref name="setResistor" scoped="" ref="0x10deb58a0"/>
        <function-ref name="toggle" scoped="" ref="0x10deb5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10deb5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deb5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deb4020"/>
        <function-ref name="get" scoped="" ref="0x10deb41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deb4340"/>
        <function-ref name="getRaw" scoped="" ref="0x10deb44d0"/>
        <function-ref name="set" scoped="" ref="0x10deb4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deb47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deb4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deb4c10"/>
        <function-ref name="clr" scoped="" ref="0x10deb4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x10dec8200" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x10dec8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dec8580"/>
        <function-ref name="isInput" scoped="" ref="0x10dec8710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dec88a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dec8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dec8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dec8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dec7020"/>
        <function-ref name="get" scoped="" ref="0x10dec71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dec7340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dec74d0"/>
        <function-ref name="set" scoped="" ref="0x10dec7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dec77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dec7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dec7c10"/>
        <function-ref name="clr" scoped="" ref="0x10dec7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x10dee0200" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x10dee0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dee0580"/>
        <function-ref name="isInput" scoped="" ref="0x10dee0710"/>
        <function-ref name="setResistor" scoped="" ref="0x10dee08a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dee0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10dee0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dee0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dedf020"/>
        <function-ref name="get" scoped="" ref="0x10dedf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dedf340"/>
        <function-ref name="getRaw" scoped="" ref="0x10dedf4d0"/>
        <function-ref name="set" scoped="" ref="0x10dedf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dedf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dedf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dedfc10"/>
        <function-ref name="clr" scoped="" ref="0x10dedfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x10de77020" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x10de77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10de773a0"/>
        <function-ref name="isInput" scoped="" ref="0x10de77530"/>
        <function-ref name="setResistor" scoped="" ref="0x10de776c0"/>
        <function-ref name="toggle" scoped="" ref="0x10de77850"/>
        <function-ref name="isOutput" scoped="" ref="0x10de779e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10de77b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10de77d00"/>
        <function-ref name="get" scoped="" ref="0x10de9c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10de9c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10de9c340"/>
        <function-ref name="set" scoped="" ref="0x10de9c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10de9c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10de9c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10de9ca80"/>
        <function-ref name="clr" scoped="" ref="0x10de9cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x10deb0020" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x10deb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10deb03a0"/>
        <function-ref name="isInput" scoped="" ref="0x10deb0530"/>
        <function-ref name="setResistor" scoped="" ref="0x10deb06c0"/>
        <function-ref name="toggle" scoped="" ref="0x10deb0850"/>
        <function-ref name="isOutput" scoped="" ref="0x10deb09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10deb0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10deb0d00"/>
        <function-ref name="get" scoped="" ref="0x10deaf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10deaf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10deaf340"/>
        <function-ref name="set" scoped="" ref="0x10deaf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10deaf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10deaf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deafa80"/>
        <function-ref name="clr" scoped="" ref="0x10deafc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x10dec3020" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x10dec3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dec33a0"/>
        <function-ref name="isInput" scoped="" ref="0x10dec3530"/>
        <function-ref name="setResistor" scoped="" ref="0x10dec36c0"/>
        <function-ref name="toggle" scoped="" ref="0x10dec3850"/>
        <function-ref name="isOutput" scoped="" ref="0x10dec39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dec3b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dec3d00"/>
        <function-ref name="get" scoped="" ref="0x10dec2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dec21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dec2340"/>
        <function-ref name="set" scoped="" ref="0x10dec24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dec2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dec27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dec2a80"/>
        <function-ref name="clr" scoped="" ref="0x10dec2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x10ded7200" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x10ded7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ded7580"/>
        <function-ref name="isInput" scoped="" ref="0x10ded7710"/>
        <function-ref name="setResistor" scoped="" ref="0x10ded78a0"/>
        <function-ref name="toggle" scoped="" ref="0x10ded7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10ded7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ded7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ded6020"/>
        <function-ref name="get" scoped="" ref="0x10ded61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ded6340"/>
        <function-ref name="getRaw" scoped="" ref="0x10ded64d0"/>
        <function-ref name="set" scoped="" ref="0x10ded6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ded67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ded6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ded6c10"/>
        <function-ref name="clr" scoped="" ref="0x10ded6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x10defa560" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x10defa560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10defa8e0"/>
        <function-ref name="isInput" scoped="" ref="0x10defaa70"/>
        <function-ref name="setResistor" scoped="" ref="0x10defac00"/>
        <function-ref name="toggle" scoped="" ref="0x10defad90"/>
        <function-ref name="isOutput" scoped="" ref="0x10def9020"/>
        <function-ref name="getResistor" scoped="" ref="0x10def91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10def9340"/>
        <function-ref name="get" scoped="" ref="0x10def94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10def9660"/>
        <function-ref name="getRaw" scoped="" ref="0x10def97f0"/>
        <function-ref name="set" scoped="" ref="0x10def9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10def9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10def9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10def8020"/>
        <function-ref name="clr" scoped="" ref="0x10def81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x10df0b570" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x10df0b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df0b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df0ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df0bc10"/>
        <function-ref name="toggle" scoped="" ref="0x10df0bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df0a020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df0a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df0a340"/>
        <function-ref name="get" scoped="" ref="0x10df0a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df0a660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df0a7f0"/>
        <function-ref name="set" scoped="" ref="0x10df0a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df0ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df0aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df09020"/>
        <function-ref name="clr" scoped="" ref="0x10df091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x10defc580" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x10defc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10defc900"/>
        <function-ref name="isInput" scoped="" ref="0x10defca90"/>
        <function-ref name="setResistor" scoped="" ref="0x10defcc20"/>
        <function-ref name="toggle" scoped="" ref="0x10defcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x10defb020"/>
        <function-ref name="getResistor" scoped="" ref="0x10defb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10defb340"/>
        <function-ref name="get" scoped="" ref="0x10defb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10defb660"/>
        <function-ref name="getRaw" scoped="" ref="0x10defb7f0"/>
        <function-ref name="set" scoped="" ref="0x10defb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10defbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10defbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10defa020"/>
        <function-ref name="clr" scoped="" ref="0x10defa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x10ded3200" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x10ded3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10ded3580"/>
        <function-ref name="isInput" scoped="" ref="0x10ded3710"/>
        <function-ref name="setResistor" scoped="" ref="0x10ded38a0"/>
        <function-ref name="toggle" scoped="" ref="0x10ded3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x10ded3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x10ded3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10ded2020"/>
        <function-ref name="get" scoped="" ref="0x10ded21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10ded2340"/>
        <function-ref name="getRaw" scoped="" ref="0x10ded24d0"/>
        <function-ref name="set" scoped="" ref="0x10ded2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10ded27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10ded2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10ded2c10"/>
        <function-ref name="clr" scoped="" ref="0x10ded2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x10df28570" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x10df28570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df288f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df28a80"/>
        <function-ref name="setResistor" scoped="" ref="0x10df28c10"/>
        <function-ref name="toggle" scoped="" ref="0x10df28da0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df27020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df27340"/>
        <function-ref name="get" scoped="" ref="0x10df274d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df27660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df277f0"/>
        <function-ref name="set" scoped="" ref="0x10df27980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df27b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df27ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df26020"/>
        <function-ref name="clr" scoped="" ref="0x10df261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x10df22580" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x10df22580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df22900"/>
        <function-ref name="isInput" scoped="" ref="0x10df22a90"/>
        <function-ref name="setResistor" scoped="" ref="0x10df22c20"/>
        <function-ref name="toggle" scoped="" ref="0x10df22db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df21020"/>
        <function-ref name="getResistor" scoped="" ref="0x10df211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df21340"/>
        <function-ref name="get" scoped="" ref="0x10df214d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df21660"/>
        <function-ref name="getRaw" scoped="" ref="0x10df217f0"/>
        <function-ref name="set" scoped="" ref="0x10df21980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df21b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df21ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df20020"/>
        <function-ref name="clr" scoped="" ref="0x10df201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x10dedc1f0" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x10dedc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dedc970"/>
        <function-ref name="isInput" scoped="" ref="0x10dedcb00"/>
        <function-ref name="setResistor" scoped="" ref="0x10dedcc90"/>
        <function-ref name="toggle" scoped="" ref="0x10dedce20"/>
        <function-ref name="isOutput" scoped="" ref="0x10dedb020"/>
        <function-ref name="getResistor" scoped="" ref="0x10dedb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dedb340"/>
        <function-ref name="get" scoped="" ref="0x10dedb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dedb660"/>
        <function-ref name="getRaw" scoped="" ref="0x10dedb7f0"/>
        <function-ref name="set" scoped="" ref="0x10dedb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dedbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dedbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10deda020"/>
        <function-ref name="clr" scoped="" ref="0x10deda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df4b6d0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df4b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df4ba50"/>
        <function-ref name="isInput" scoped="" ref="0x10df4bbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x10df4bd70"/>
        <function-ref name="toggle" scoped="" ref="0x10df4a020"/>
        <function-ref name="isOutput" scoped="" ref="0x10df4a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df4a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df4a4d0"/>
        <function-ref name="get" scoped="" ref="0x10df4a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df4a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df4a980"/>
        <function-ref name="set" scoped="" ref="0x10df4ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df4aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df4ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df49120"/>
        <function-ref name="clr" scoped="" ref="0x10df492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df46100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df46100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df46480"/>
        <function-ref name="isInput" scoped="" ref="0x10df46610"/>
        <function-ref name="setResistor" scoped="" ref="0x10df467a0"/>
        <function-ref name="toggle" scoped="" ref="0x10df46930"/>
        <function-ref name="isOutput" scoped="" ref="0x10df46ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df46c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df46de0"/>
        <function-ref name="get" scoped="" ref="0x10df45020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df45340"/>
        <function-ref name="set" scoped="" ref="0x10df454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df45660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df45a80"/>
        <function-ref name="clr" scoped="" ref="0x10df45c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df42d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df42d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df400e0"/>
        <function-ref name="isInput" scoped="" ref="0x10df40270"/>
        <function-ref name="setResistor" scoped="" ref="0x10df40400"/>
        <function-ref name="toggle" scoped="" ref="0x10df40590"/>
        <function-ref name="isOutput" scoped="" ref="0x10df40720"/>
        <function-ref name="getResistor" scoped="" ref="0x10df408b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df40a40"/>
        <function-ref name="get" scoped="" ref="0x10df40bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df40d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10df3f020"/>
        <function-ref name="set" scoped="" ref="0x10df3f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df3f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df3f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df3f760"/>
        <function-ref name="clr" scoped="" ref="0x10df3f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df66740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df66740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df66ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10df66c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10df66de0"/>
        <function-ref name="toggle" scoped="" ref="0x10df65020"/>
        <function-ref name="isOutput" scoped="" ref="0x10df651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df65340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df654d0"/>
        <function-ref name="get" scoped="" ref="0x10df65660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df65980"/>
        <function-ref name="set" scoped="" ref="0x10df65b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df65ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df65e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df64120"/>
        <function-ref name="clr" scoped="" ref="0x10df642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df61100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df61100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df61480"/>
        <function-ref name="isInput" scoped="" ref="0x10df61610"/>
        <function-ref name="setResistor" scoped="" ref="0x10df617a0"/>
        <function-ref name="toggle" scoped="" ref="0x10df61930"/>
        <function-ref name="isOutput" scoped="" ref="0x10df61ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df61c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df61de0"/>
        <function-ref name="get" scoped="" ref="0x10df60020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df60340"/>
        <function-ref name="set" scoped="" ref="0x10df604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df60660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df60a80"/>
        <function-ref name="clr" scoped="" ref="0x10df60c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df5dd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df5dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df5c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10df5c270"/>
        <function-ref name="setResistor" scoped="" ref="0x10df5c400"/>
        <function-ref name="toggle" scoped="" ref="0x10df5c590"/>
        <function-ref name="isOutput" scoped="" ref="0x10df5c720"/>
        <function-ref name="getResistor" scoped="" ref="0x10df5c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df5ca40"/>
        <function-ref name="get" scoped="" ref="0x10df5cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df5cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10df5b020"/>
        <function-ref name="set" scoped="" ref="0x10df5b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df5b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df5b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df5b760"/>
        <function-ref name="clr" scoped="" ref="0x10df5b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df58740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df58740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df58ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10df58c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10df58de0"/>
        <function-ref name="toggle" scoped="" ref="0x10df57020"/>
        <function-ref name="isOutput" scoped="" ref="0x10df571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df57340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df574d0"/>
        <function-ref name="get" scoped="" ref="0x10df57660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df57980"/>
        <function-ref name="set" scoped="" ref="0x10df57b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df57ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df57e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df56120"/>
        <function-ref name="clr" scoped="" ref="0x10df562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df7d100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df7d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df7d480"/>
        <function-ref name="isInput" scoped="" ref="0x10df7d610"/>
        <function-ref name="setResistor" scoped="" ref="0x10df7d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10df7d930"/>
        <function-ref name="isOutput" scoped="" ref="0x10df7dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df7dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df7dde0"/>
        <function-ref name="get" scoped="" ref="0x10df7c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df7c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df7c340"/>
        <function-ref name="set" scoped="" ref="0x10df7c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df7c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df7c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df7ca80"/>
        <function-ref name="clr" scoped="" ref="0x10df7cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df79d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df79d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df780e0"/>
        <function-ref name="isInput" scoped="" ref="0x10df78270"/>
        <function-ref name="setResistor" scoped="" ref="0x10df78400"/>
        <function-ref name="toggle" scoped="" ref="0x10df78590"/>
        <function-ref name="isOutput" scoped="" ref="0x10df78720"/>
        <function-ref name="getResistor" scoped="" ref="0x10df788b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df78a40"/>
        <function-ref name="get" scoped="" ref="0x10df78bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df78d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10df77020"/>
        <function-ref name="set" scoped="" ref="0x10df771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df77340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df77760"/>
        <function-ref name="clr" scoped="" ref="0x10df778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df74740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df74740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df74ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10df74c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10df74de0"/>
        <function-ref name="toggle" scoped="" ref="0x10df73020"/>
        <function-ref name="isOutput" scoped="" ref="0x10df731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df73340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df734d0"/>
        <function-ref name="get" scoped="" ref="0x10df73660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df73980"/>
        <function-ref name="set" scoped="" ref="0x10df73b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df73ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df73e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df72120"/>
        <function-ref name="clr" scoped="" ref="0x10df722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df6e100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df6e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df6e480"/>
        <function-ref name="isInput" scoped="" ref="0x10df6e610"/>
        <function-ref name="setResistor" scoped="" ref="0x10df6e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x10df6e930"/>
        <function-ref name="isOutput" scoped="" ref="0x10df6eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df6ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df6ede0"/>
        <function-ref name="get" scoped="" ref="0x10df6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df6d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df6d340"/>
        <function-ref name="set" scoped="" ref="0x10df6d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df6d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df6d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df6da80"/>
        <function-ref name="clr" scoped="" ref="0x10df6dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df6ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df6ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df690e0"/>
        <function-ref name="isInput" scoped="" ref="0x10df69270"/>
        <function-ref name="setResistor" scoped="" ref="0x10df69400"/>
        <function-ref name="toggle" scoped="" ref="0x10df69590"/>
        <function-ref name="isOutput" scoped="" ref="0x10df69720"/>
        <function-ref name="getResistor" scoped="" ref="0x10df698b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df69a40"/>
        <function-ref name="get" scoped="" ref="0x10df69bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df69d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10df92020"/>
        <function-ref name="set" scoped="" ref="0x10df921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df92340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df92760"/>
        <function-ref name="clr" scoped="" ref="0x10df928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df8f860" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df8f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df8fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x10df8fd70"/>
        <function-ref name="setResistor" scoped="" ref="0x10df8e020"/>
        <function-ref name="toggle" scoped="" ref="0x10df8e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df8e340"/>
        <function-ref name="getResistor" scoped="" ref="0x10df8e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df8e660"/>
        <function-ref name="get" scoped="" ref="0x10df8e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df8e980"/>
        <function-ref name="getRaw" scoped="" ref="0x10df8eb10"/>
        <function-ref name="set" scoped="" ref="0x10df8eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df8ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df8d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df8d2b0"/>
        <function-ref name="clr" scoped="" ref="0x10df8d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df8a270" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df8a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df8a5f0"/>
        <function-ref name="isInput" scoped="" ref="0x10df8a780"/>
        <function-ref name="setResistor" scoped="" ref="0x10df8a910"/>
        <function-ref name="toggle" scoped="" ref="0x10df8aaa0"/>
        <function-ref name="isOutput" scoped="" ref="0x10df8ac30"/>
        <function-ref name="getResistor" scoped="" ref="0x10df8adc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df89020"/>
        <function-ref name="get" scoped="" ref="0x10df891b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df89340"/>
        <function-ref name="getRaw" scoped="" ref="0x10df894d0"/>
        <function-ref name="set" scoped="" ref="0x10df89660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df897f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df89980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df89c10"/>
        <function-ref name="clr" scoped="" ref="0x10df89da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df86d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df86d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df850e0"/>
        <function-ref name="isInput" scoped="" ref="0x10df85270"/>
        <function-ref name="setResistor" scoped="" ref="0x10df85400"/>
        <function-ref name="toggle" scoped="" ref="0x10df85590"/>
        <function-ref name="isOutput" scoped="" ref="0x10df85720"/>
        <function-ref name="getResistor" scoped="" ref="0x10df858b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df85a40"/>
        <function-ref name="get" scoped="" ref="0x10df85bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df85d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10df84020"/>
        <function-ref name="set" scoped="" ref="0x10df841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df84340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df84760"/>
        <function-ref name="clr" scoped="" ref="0x10df848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df81740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df81740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df81ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10df81c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10df81de0"/>
        <function-ref name="toggle" scoped="" ref="0x10df80020"/>
        <function-ref name="isOutput" scoped="" ref="0x10df801b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df80340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df804d0"/>
        <function-ref name="get" scoped="" ref="0x10df80660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df807f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df80980"/>
        <function-ref name="set" scoped="" ref="0x10df80b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df80ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df80e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df7f120"/>
        <function-ref name="clr" scoped="" ref="0x10df7f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfa7100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfa7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfa7480"/>
        <function-ref name="isInput" scoped="" ref="0x10dfa7610"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfa77a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfa7930"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfa7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfa7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfa7de0"/>
        <function-ref name="get" scoped="" ref="0x10dfa6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfa61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfa6340"/>
        <function-ref name="set" scoped="" ref="0x10dfa64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfa6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfa67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfa6a80"/>
        <function-ref name="clr" scoped="" ref="0x10dfa6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfa3d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfa3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfa10e0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfa1270"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfa1400"/>
        <function-ref name="toggle" scoped="" ref="0x10dfa1590"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfa1720"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfa18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfa1a40"/>
        <function-ref name="get" scoped="" ref="0x10dfa1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfa1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfa0020"/>
        <function-ref name="set" scoped="" ref="0x10dfa01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfa0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfa04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfa0760"/>
        <function-ref name="clr" scoped="" ref="0x10dfa08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df9d740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df9d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df9dac0"/>
        <function-ref name="isInput" scoped="" ref="0x10df9dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10df9dde0"/>
        <function-ref name="toggle" scoped="" ref="0x10df9c020"/>
        <function-ref name="isOutput" scoped="" ref="0x10df9c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df9c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df9c4d0"/>
        <function-ref name="get" scoped="" ref="0x10df9c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df9c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df9c980"/>
        <function-ref name="set" scoped="" ref="0x10df9cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df9cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df9ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df9b120"/>
        <function-ref name="clr" scoped="" ref="0x10df9b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df98100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df98100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df98480"/>
        <function-ref name="isInput" scoped="" ref="0x10df98610"/>
        <function-ref name="setResistor" scoped="" ref="0x10df987a0"/>
        <function-ref name="toggle" scoped="" ref="0x10df98930"/>
        <function-ref name="isOutput" scoped="" ref="0x10df98ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10df98c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df98de0"/>
        <function-ref name="get" scoped="" ref="0x10df97020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10df97340"/>
        <function-ref name="set" scoped="" ref="0x10df974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10df97660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10df977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10df97a80"/>
        <function-ref name="clr" scoped="" ref="0x10df97c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10df94d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10df94d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10df930e0"/>
        <function-ref name="isInput" scoped="" ref="0x10df93270"/>
        <function-ref name="setResistor" scoped="" ref="0x10df93400"/>
        <function-ref name="toggle" scoped="" ref="0x10df93590"/>
        <function-ref name="isOutput" scoped="" ref="0x10df93720"/>
        <function-ref name="getResistor" scoped="" ref="0x10df938b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10df93a40"/>
        <function-ref name="get" scoped="" ref="0x10df93bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10df93d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfbe020"/>
        <function-ref name="set" scoped="" ref="0x10dfbe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfbe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfbe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfbe760"/>
        <function-ref name="clr" scoped="" ref="0x10dfbe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfbb740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfbb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfbbac0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfbbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfbbde0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfba020"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfba1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfba340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfba4d0"/>
        <function-ref name="get" scoped="" ref="0x10dfba660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfba7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfba980"/>
        <function-ref name="set" scoped="" ref="0x10dfbab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfbaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfbae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfb9120"/>
        <function-ref name="clr" scoped="" ref="0x10dfb92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfb6100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfb6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfb6480"/>
        <function-ref name="isInput" scoped="" ref="0x10dfb6610"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfb67a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfb6930"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfb6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfb6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfb6de0"/>
        <function-ref name="get" scoped="" ref="0x10dfb5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfb51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfb5340"/>
        <function-ref name="set" scoped="" ref="0x10dfb54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfb5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfb57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfb5a80"/>
        <function-ref name="clr" scoped="" ref="0x10dfb5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfb2d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfb2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfb10e0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfb1270"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfb1400"/>
        <function-ref name="toggle" scoped="" ref="0x10dfb1590"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfb1720"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfb18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfb1a40"/>
        <function-ref name="get" scoped="" ref="0x10dfb1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfb1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfb0020"/>
        <function-ref name="set" scoped="" ref="0x10dfb01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfb0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfb04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfb0760"/>
        <function-ref name="clr" scoped="" ref="0x10dfb08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfada60" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfada60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfadde0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfac020"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfac340"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfac4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfac7f0"/>
        <function-ref name="get" scoped="" ref="0x10dfac980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfacb10"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfacca0"/>
        <function-ref name="set" scoped="" ref="0x10dface30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfab020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfab1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfab440"/>
        <function-ref name="clr" scoped="" ref="0x10dfab5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfd4460" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfd4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfd47e0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfd4970"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfd4b00"/>
        <function-ref name="toggle" scoped="" ref="0x10dfd4c90"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfd4e20"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfd2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfd21b0"/>
        <function-ref name="get" scoped="" ref="0x10dfd2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfd24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfd2660"/>
        <function-ref name="set" scoped="" ref="0x10dfd27f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfd2980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfd2b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfd2da0"/>
        <function-ref name="clr" scoped="" ref="0x10dfd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfcfe00" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfcfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfce1c0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfce350"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfce4e0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfce670"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfce800"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfce990"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfceb20"/>
        <function-ref name="get" scoped="" ref="0x10dfcecb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfcee40"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfcd020"/>
        <function-ref name="set" scoped="" ref="0x10dfcd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfcd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfcd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfcd760"/>
        <function-ref name="clr" scoped="" ref="0x10dfcd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfca740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfcaac0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfcac50"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfcade0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfc9020"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfc91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfc9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfc94d0"/>
        <function-ref name="get" scoped="" ref="0x10dfc9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfc97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfc9980"/>
        <function-ref name="set" scoped="" ref="0x10dfc9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfc9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfc9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfc8120"/>
        <function-ref name="clr" scoped="" ref="0x10dfc82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfc5100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfc5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfc5480"/>
        <function-ref name="isInput" scoped="" ref="0x10dfc5610"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfc57a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfc5930"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfc5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfc5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfc5de0"/>
        <function-ref name="get" scoped="" ref="0x10dfc4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfc41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfc4340"/>
        <function-ref name="set" scoped="" ref="0x10dfc44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfc4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfc47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfc4a80"/>
        <function-ref name="clr" scoped="" ref="0x10dfc4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfc1d10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfc1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfc00e0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfc0270"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfc0400"/>
        <function-ref name="toggle" scoped="" ref="0x10dfc0590"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfc0720"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfc08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfc0a40"/>
        <function-ref name="get" scoped="" ref="0x10dfc0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfc0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfbf020"/>
        <function-ref name="set" scoped="" ref="0x10dfbf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfbf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfbf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfbf760"/>
        <function-ref name="clr" scoped="" ref="0x10dfbf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfe8740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfe8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfe8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfe8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfe8de0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfe7020"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfe71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfe7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfe74d0"/>
        <function-ref name="get" scoped="" ref="0x10dfe7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfe77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfe7980"/>
        <function-ref name="set" scoped="" ref="0x10dfe7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfe7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfe7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfe6120"/>
        <function-ref name="clr" scoped="" ref="0x10dfe62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfe3100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfe3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfe3480"/>
        <function-ref name="isInput" scoped="" ref="0x10dfe3610"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfe37a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfe3930"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfe3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfe3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfe3de0"/>
        <function-ref name="get" scoped="" ref="0x10dfe2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfe21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfe2340"/>
        <function-ref name="set" scoped="" ref="0x10dfe24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfe2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfe27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfe2a80"/>
        <function-ref name="clr" scoped="" ref="0x10dfe2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfdfd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfdfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfde0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfde270"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfde400"/>
        <function-ref name="toggle" scoped="" ref="0x10dfde590"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfde720"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfde8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfdea40"/>
        <function-ref name="get" scoped="" ref="0x10dfdebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfded60"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfdd020"/>
        <function-ref name="set" scoped="" ref="0x10dfdd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfdd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfdd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfdd760"/>
        <function-ref name="clr" scoped="" ref="0x10dfdd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfd9740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfd9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfd9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfd9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfd9de0"/>
        <function-ref name="toggle" scoped="" ref="0x10dfd8020"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfd81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfd8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfd84d0"/>
        <function-ref name="get" scoped="" ref="0x10dfd8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfd87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfd8980"/>
        <function-ref name="set" scoped="" ref="0x10dfd8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfd8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfd8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfd7120"/>
        <function-ref name="clr" scoped="" ref="0x10dfd72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e000100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e000100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e000480"/>
        <function-ref name="isInput" scoped="" ref="0x10e000610"/>
        <function-ref name="setResistor" scoped="" ref="0x10e0007a0"/>
        <function-ref name="toggle" scoped="" ref="0x10e000930"/>
        <function-ref name="isOutput" scoped="" ref="0x10e000ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e000c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e000de0"/>
        <function-ref name="get" scoped="" ref="0x10dfff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfff340"/>
        <function-ref name="set" scoped="" ref="0x10dfff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfffa80"/>
        <function-ref name="clr" scoped="" ref="0x10dfffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dffcd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dffcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dffb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10dffb270"/>
        <function-ref name="setResistor" scoped="" ref="0x10dffb400"/>
        <function-ref name="toggle" scoped="" ref="0x10dffb590"/>
        <function-ref name="isOutput" scoped="" ref="0x10dffb720"/>
        <function-ref name="getResistor" scoped="" ref="0x10dffb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dffba40"/>
        <function-ref name="get" scoped="" ref="0x10dffbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dffbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10dffa020"/>
        <function-ref name="set" scoped="" ref="0x10dffa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dffa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dffa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dffa760"/>
        <function-ref name="clr" scoped="" ref="0x10dffa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dff7740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dff7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dff7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10dff7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10dff7de0"/>
        <function-ref name="toggle" scoped="" ref="0x10dff6020"/>
        <function-ref name="isOutput" scoped="" ref="0x10dff61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dff6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dff64d0"/>
        <function-ref name="get" scoped="" ref="0x10dff6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dff67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dff6980"/>
        <function-ref name="set" scoped="" ref="0x10dff6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dff6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dff6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dff5120"/>
        <function-ref name="clr" scoped="" ref="0x10dff52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dff2100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dff2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dff2480"/>
        <function-ref name="isInput" scoped="" ref="0x10dff2610"/>
        <function-ref name="setResistor" scoped="" ref="0x10dff27a0"/>
        <function-ref name="toggle" scoped="" ref="0x10dff2930"/>
        <function-ref name="isOutput" scoped="" ref="0x10dff2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10dff2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dff2de0"/>
        <function-ref name="get" scoped="" ref="0x10dff1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dff11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10dff1340"/>
        <function-ref name="set" scoped="" ref="0x10dff14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dff1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dff17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dff1a80"/>
        <function-ref name="clr" scoped="" ref="0x10dff1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10dfeed10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10dfeed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10dfed0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10dfed270"/>
        <function-ref name="setResistor" scoped="" ref="0x10dfed400"/>
        <function-ref name="toggle" scoped="" ref="0x10dfed590"/>
        <function-ref name="isOutput" scoped="" ref="0x10dfed720"/>
        <function-ref name="getResistor" scoped="" ref="0x10dfed8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10dfeda40"/>
        <function-ref name="get" scoped="" ref="0x10dfedbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10dfedd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10dfec020"/>
        <function-ref name="set" scoped="" ref="0x10dfec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10dfec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10dfec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10dfec760"/>
        <function-ref name="clr" scoped="" ref="0x10dfec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e015740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e015740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e015ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10e015c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10e015de0"/>
        <function-ref name="toggle" scoped="" ref="0x10e014020"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0141b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e014340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0144d0"/>
        <function-ref name="get" scoped="" ref="0x10e014660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e0147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10e014980"/>
        <function-ref name="set" scoped="" ref="0x10e014b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e014ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e014e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e013120"/>
        <function-ref name="clr" scoped="" ref="0x10e0132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e010100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e010100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e010480"/>
        <function-ref name="isInput" scoped="" ref="0x10e010610"/>
        <function-ref name="setResistor" scoped="" ref="0x10e0107a0"/>
        <function-ref name="toggle" scoped="" ref="0x10e010930"/>
        <function-ref name="isOutput" scoped="" ref="0x10e010ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e010c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e010de0"/>
        <function-ref name="get" scoped="" ref="0x10e00e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e00e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10e00e340"/>
        <function-ref name="set" scoped="" ref="0x10e00e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e00e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e00e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e00ea80"/>
        <function-ref name="clr" scoped="" ref="0x10e00ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e00bd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e00bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e00a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10e00a270"/>
        <function-ref name="setResistor" scoped="" ref="0x10e00a400"/>
        <function-ref name="toggle" scoped="" ref="0x10e00a590"/>
        <function-ref name="isOutput" scoped="" ref="0x10e00a720"/>
        <function-ref name="getResistor" scoped="" ref="0x10e00a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e00aa40"/>
        <function-ref name="get" scoped="" ref="0x10e00abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e00ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x10e009020"/>
        <function-ref name="set" scoped="" ref="0x10e0091b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e009340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e0094d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e009760"/>
        <function-ref name="clr" scoped="" ref="0x10e0098f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e006740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e006740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e006ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10e006c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10e006de0"/>
        <function-ref name="toggle" scoped="" ref="0x10e005020"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0051b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e005340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0054d0"/>
        <function-ref name="get" scoped="" ref="0x10e005660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e0057f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10e005980"/>
        <function-ref name="set" scoped="" ref="0x10e005b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e005ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e005e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e004120"/>
        <function-ref name="clr" scoped="" ref="0x10e0042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e001100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e001100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e001480"/>
        <function-ref name="isInput" scoped="" ref="0x10e001610"/>
        <function-ref name="setResistor" scoped="" ref="0x10e0017a0"/>
        <function-ref name="toggle" scoped="" ref="0x10e001930"/>
        <function-ref name="isOutput" scoped="" ref="0x10e001ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e001c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e001de0"/>
        <function-ref name="get" scoped="" ref="0x10e02d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e02d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10e02d340"/>
        <function-ref name="set" scoped="" ref="0x10e02d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e02d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e02d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e02da80"/>
        <function-ref name="clr" scoped="" ref="0x10e02dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e02ad10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e02ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e0290e0"/>
        <function-ref name="isInput" scoped="" ref="0x10e029270"/>
        <function-ref name="setResistor" scoped="" ref="0x10e029400"/>
        <function-ref name="toggle" scoped="" ref="0x10e029590"/>
        <function-ref name="isOutput" scoped="" ref="0x10e029720"/>
        <function-ref name="getResistor" scoped="" ref="0x10e0298b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e029a40"/>
        <function-ref name="get" scoped="" ref="0x10e029bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e029d60"/>
        <function-ref name="getRaw" scoped="" ref="0x10e028020"/>
        <function-ref name="set" scoped="" ref="0x10e0281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e028340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e0284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e028760"/>
        <function-ref name="clr" scoped="" ref="0x10e0288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e025740" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e025740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e025ac0"/>
        <function-ref name="isInput" scoped="" ref="0x10e025c50"/>
        <function-ref name="setResistor" scoped="" ref="0x10e025de0"/>
        <function-ref name="toggle" scoped="" ref="0x10e024020"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0241b0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e024340"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0244d0"/>
        <function-ref name="get" scoped="" ref="0x10e024660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e0247f0"/>
        <function-ref name="getRaw" scoped="" ref="0x10e024980"/>
        <function-ref name="set" scoped="" ref="0x10e024b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e024ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e024e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e023120"/>
        <function-ref name="clr" scoped="" ref="0x10e0232b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e020100" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e020100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e020480"/>
        <function-ref name="isInput" scoped="" ref="0x10e020610"/>
        <function-ref name="setResistor" scoped="" ref="0x10e0207a0"/>
        <function-ref name="toggle" scoped="" ref="0x10e020930"/>
        <function-ref name="isOutput" scoped="" ref="0x10e020ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e020c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e020de0"/>
        <function-ref name="get" scoped="" ref="0x10e01f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e01f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x10e01f340"/>
        <function-ref name="set" scoped="" ref="0x10e01f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e01f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e01f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e01fa80"/>
        <function-ref name="clr" scoped="" ref="0x10e01fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x10e01cd10" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x10e01cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e01b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x10e01b270"/>
        <function-ref name="setResistor" scoped="" ref="0x10e01b400"/>
        <function-ref name="toggle" scoped="" ref="0x10e01b590"/>
        <function-ref name="isOutput" scoped="" ref="0x10e01b720"/>
        <function-ref name="getResistor" scoped="" ref="0x10e01b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e01ba40"/>
        <function-ref name="get" scoped="" ref="0x10e01bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e01bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x10e01a020"/>
        <function-ref name="set" scoped="" ref="0x10e01a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e01a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e01a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e01a760"/>
        <function-ref name="clr" scoped="" ref="0x10e01a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10e0af2f0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10e0af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e0af670"/>
        <function-ref name="isInput" scoped="" ref="0x10e0af800"/>
        <function-ref name="setResistor" scoped="" ref="0x10e0af990"/>
        <function-ref name="toggle" scoped="" ref="0x10e0afb20"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0afcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e0afe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0ae020"/>
        <function-ref name="get" scoped="" ref="0x10e0ae1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e0ae340"/>
        <function-ref name="getRaw" scoped="" ref="0x10e0ae4d0"/>
        <function-ref name="set" scoped="" ref="0x10e0ae660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e0ae7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e0ae980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e0aec10"/>
        <function-ref name="clr" scoped="" ref="0x10e0aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10e091020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10e091020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e0913a0"/>
        <function-ref name="isInput" scoped="" ref="0x10e091530"/>
        <function-ref name="toggle" scoped="" ref="0x10e0916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x10e091850"/>
        <function-ref name="get" scoped="" ref="0x10e0919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e091b70"/>
        <function-ref name="set" scoped="" ref="0x10e091d00"/>
        <function-ref name="clr" scoped="" ref="0x10e0af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10e0abde0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10e0abde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e0aa180"/>
        <function-ref name="isInput" scoped="" ref="0x10e0aa310"/>
        <function-ref name="setResistor" scoped="" ref="0x10e0aa4a0"/>
        <function-ref name="toggle" scoped="" ref="0x10e0aa630"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0aa7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x10e0aa950"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0aaae0"/>
        <function-ref name="get" scoped="" ref="0x10e0aac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e0aae00"/>
        <function-ref name="getRaw" scoped="" ref="0x10e0a9020"/>
        <function-ref name="set" scoped="" ref="0x10e0a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e0a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e0a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e0a9760"/>
        <function-ref name="clr" scoped="" ref="0x10e0a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10e0acb90" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10e0acb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e0ab020"/>
        <function-ref name="isInput" scoped="" ref="0x10e0ab1b0"/>
        <function-ref name="toggle" scoped="" ref="0x10e0ab340"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0ab4d0"/>
        <function-ref name="get" scoped="" ref="0x10e0ab660"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0ab7f0"/>
        <function-ref name="set" scoped="" ref="0x10e0ab980"/>
        <function-ref name="clr" scoped="" ref="0x10e0abb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x10e0a6930" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x10e0a6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e0a6cb0"/>
        <function-ref name="isInput" scoped="" ref="0x10e0a6e40"/>
        <function-ref name="setResistor" scoped="" ref="0x10e0a5020"/>
        <function-ref name="toggle" scoped="" ref="0x10e0a51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0a5340"/>
        <function-ref name="getResistor" scoped="" ref="0x10e0a54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0a5660"/>
        <function-ref name="get" scoped="" ref="0x10e0a57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x10e0a5980"/>
        <function-ref name="getRaw" scoped="" ref="0x10e0a5b10"/>
        <function-ref name="set" scoped="" ref="0x10e0a5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x10e0a5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x10e0a4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x10e0a42b0"/>
        <function-ref name="clr" scoped="" ref="0x10e0a4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x10e0a7710" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x10e0a7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x10e0a7a90"/>
        <function-ref name="isInput" scoped="" ref="0x10e0a7c20"/>
        <function-ref name="toggle" scoped="" ref="0x10e0a7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x10e0a6020"/>
        <function-ref name="get" scoped="" ref="0x10e0a61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x10e0a6340"/>
        <function-ref name="set" scoped="" ref="0x10e0a64d0"/>
        <function-ref name="clr" scoped="" ref="0x10e0a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10e24f370" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="Timer_extendedAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10e24f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e24c870"/>
        <function-ref name="fired" scoped="" ref="0x10e24ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10e24dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x10e24d780"/>
        <function-ref name="getdt" scoped="" ref="0x10e2801e0"/>
        <function-ref name="gett0" scoped="" ref="0x10e24ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x10e24d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10e24e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10e24c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x10e24e4f0"/>
        <function-ref name="stop" scoped="" ref="0x10e24e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10e0bf610" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10e0bf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e0bbc40"/>
        <function-ref name="fired" scoped="" ref="0x10e0bc1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10e0bb020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10e0bcae0"/>
        <function-ref name="getdt" scoped="" ref="0x10e0ba590"/>
        <function-ref name="gett0" scoped="" ref="0x10e0ba110"/>
        <function-ref name="isRunning" scoped="" ref="0x10e0bc660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10e0be390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10e0bb630"/>
        <function-ref name="startOneShot" scoped="" ref="0x10e0be860"/>
        <function-ref name="stop" scoped="" ref="0x10e0bed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x10e0b51d0" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x10e0b51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e0e1630"/>
        <function-ref name="fired" scoped="" ref="0x10e0e4c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10e0e39d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x10e0e3550"/>
        <function-ref name="getdt" scoped="" ref="0x10e0e0020"/>
        <function-ref name="gett0" scoped="" ref="0x10e0e1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x10e0e30d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10e0b5dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10e0e1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x10e0e42e0"/>
        <function-ref name="stop" scoped="" ref="0x10e0e47b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10e0dca80" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10e0dca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e0de6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e0b63e0" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e0b63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e0b6760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e1ae870" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e1ae870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e1df090"/>
        <function-ref name="fired" scoped="" ref="0x10e1e0090"/>
        <function-ref name="startAt" scoped="" ref="0x10e1e0a10"/>
        <function-ref name="isRunning" scoped="" ref="0x10e1e0550"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e1df550"/>
        <function-ref name="start" scoped="" ref="0x10e1e16a0"/>
        <function-ref name="stop" scoped="" ref="0x10e1e1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e1ae020" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e1ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e1ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e74b4f0" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e74b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e749db0"/>
        <function-ref name="fired" scoped="" ref="0x10e74ada0"/>
        <function-ref name="startAt" scoped="" ref="0x10e749760"/>
        <function-ref name="isRunning" scoped="" ref="0x10e7492a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e7482a0"/>
        <function-ref name="start" scoped="" ref="0x10e74a3d0"/>
        <function-ref name="stop" scoped="" ref="0x10e74a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e74dc40" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e74dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e74b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10e733da0" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10e733da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10e732180"/>
        <function-ref name="setEvent" scoped="" ref="0x10e732310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10e7324a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10e732630"/>
        <function-ref name="fired" scoped="" ref="0x10e7327c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10e735340" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e735340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e7356c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e735850"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e7359e0"/>
        <function-ref name="get" scoped="" ref="0x10e735b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e735d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e734020"/>
        <function-ref name="getMode" scoped="" ref="0x10e7341b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e734340"/>
        <function-ref name="overflow" scoped="" ref="0x10e7344d0"/>
        <function-ref name="setMode" scoped="" ref="0x10e734660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e7347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10e734a80" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e734a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10e734e00"/>
        <function-ref name="getControl" scoped="" ref="0x10e733020"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e7331b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10e733340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10e7334d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e733660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10e7337f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10e733980"/>
        <function-ref name="setControl" scoped="" ref="0x10e733b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x10e0e8020" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10e0e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10e0e83a0"/>
        <function-ref name="setEvent" scoped="" ref="0x10e0e8530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10e0e86c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10e0e8850"/>
        <function-ref name="fired" scoped="" ref="0x10e0e89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x10e0ee8b0" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e0ee8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e0eec30"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e0eedc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e0ed020"/>
        <function-ref name="get" scoped="" ref="0x10e0ed1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e0ed340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e0ed4d0"/>
        <function-ref name="getMode" scoped="" ref="0x10e0ed660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e0ed7f0"/>
        <function-ref name="overflow" scoped="" ref="0x10e0ed980"/>
        <function-ref name="setMode" scoped="" ref="0x10e0edb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e0edca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x10e0eb560" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e0eb560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10e0eb8e0"/>
        <function-ref name="getControl" scoped="" ref="0x10e0eba70"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e0ebc00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10e0ebd90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10e0ea020"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e0ea1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10e0ea340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10e0ea4d0"/>
        <function-ref name="setControl" scoped="" ref="0x10e0ea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x10e773a80" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x10e773a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x10e773e00"/>
        <function-ref name="setEvent" scoped="" ref="0x10e772020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x10e7721b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x10e772340"/>
        <function-ref name="fired" scoped="" ref="0x10e7724d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10e775190" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e775190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e775510"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e7756a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e775830"/>
        <function-ref name="get" scoped="" ref="0x10e7759c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e775b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e775ce0"/>
        <function-ref name="getMode" scoped="" ref="0x10e775e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e774030"/>
        <function-ref name="overflow" scoped="" ref="0x10e7741c0"/>
        <function-ref name="setMode" scoped="" ref="0x10e774350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e7744e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e72f020" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e72f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e776870"/>
        <function-ref name="fired" scoped="" ref="0x10e72e840"/>
        <function-ref name="startAt" scoped="" ref="0x10e776220"/>
        <function-ref name="isRunning" scoped="" ref="0x10e72ed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e776d30"/>
        <function-ref name="start" scoped="" ref="0x10e72fe30"/>
        <function-ref name="stop" scoped="" ref="0x10e72e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x10e730660" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x10e730660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x10e7309e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x10e774770" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x10e774770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x10e774af0"/>
        <function-ref name="getControl" scoped="" ref="0x10e774c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e774e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x10e773020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x10e7731b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e773340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x10e7734d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x10e773660"/>
        <function-ref name="setControl" scoped="" ref="0x10e7737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10e15c8c0" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10e15c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e161700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e1600d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e161bc0"/>
        <function-ref name="overflow" scoped="" ref="0x10e160590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x10e15a8e0" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x10e15a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e157780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e156150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e157c40"/>
        <function-ref name="overflow" scoped="" ref="0x10e156610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x10e177c50" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x10e177c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x10e176020"/>
        <function-ref name="setClockSource" scoped="" ref="0x10e1761b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x10e176340"/>
        <function-ref name="get" scoped="" ref="0x10e1764d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x10e176660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e1767f0"/>
        <function-ref name="getMode" scoped="" ref="0x10e176980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e176b10"/>
        <function-ref name="overflow" scoped="" ref="0x10e176ca0"/>
        <function-ref name="setMode" scoped="" ref="0x10e176e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x10e175020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10e154b80" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10e154b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e1539b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e177360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e153e70"/>
        <function-ref name="overflow" scoped="" ref="0x10e177820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x10e1860f0" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x10e1860f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e184020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e1849a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e1844e0"/>
        <function-ref name="overflow" scoped="" ref="0x10e184e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x10e171cf0" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10e171cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e188b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e187550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e187090"/>
        <function-ref name="overflow" scoped="" ref="0x10e187a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x10e746890" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e746890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e7420d0"/>
        <function-ref name="fired" scoped="" ref="0x10e7430d0"/>
        <function-ref name="startAt" scoped="" ref="0x10e743a50"/>
        <function-ref name="isRunning" scoped="" ref="0x10e743590"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e742590"/>
        <function-ref name="start" scoped="" ref="0x10e7456e0"/>
        <function-ref name="stop" scoped="" ref="0x10e745bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x10e73f0a0" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x10e73f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de33680"/>
            <typename><typedef-ref name="T32khz" ref="0x10de339f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e73cb30"/>
        <function-ref name="fired" scoped="" ref="0x10e73d9f0"/>
        <function-ref name="startAt" scoped="" ref="0x10e73c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x10e73c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e73b020"/>
        <function-ref name="start" scoped="" ref="0x10e73d020"/>
        <function-ref name="stop" scoped="" ref="0x10e73d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10e742c00" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10e742c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e741a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e7404e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e740020"/>
        <function-ref name="overflow" scoped="" ref="0x10e7409a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x10e2159c0" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x10e2159c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10e215d40"/>
        <function-ref name="runTask" scoped="" ref="0x10e214020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x10e1e5850" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x10e1e5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e215090"/>
        <function-ref name="fired" scoped="" ref="0x10e1e3090"/>
        <function-ref name="startAt" scoped="" ref="0x10e1e3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x10e1e3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x10e215550"/>
        <function-ref name="start" scoped="" ref="0x10e1e46a0"/>
        <function-ref name="stop" scoped="" ref="0x10e1e4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10e1ea2f0" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10e1ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e1e6870"/>
        <function-ref name="fired" scoped="" ref="0x10e1e9e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10e1e8c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x10e1e8780"/>
        <function-ref name="getdt" scoped="" ref="0x10e1e51e0"/>
        <function-ref name="gett0" scoped="" ref="0x10e1e6cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x10e1e8300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10e1e9020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10e1e6260"/>
        <function-ref name="startOneShot" scoped="" ref="0x10e1e94f0"/>
        <function-ref name="stop" scoped="" ref="0x10e1e99c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x10e265a00" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x10e265a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x10e265d80"/>
        <function-ref name="runTask" scoped="" ref="0x10e264020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x10e234640" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x10e234640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e266c40"/>
        <function-ref name="fired" scoped="" ref="0x10e2311e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10e266020"/>
        <function-ref name="isOneShot" scoped="" ref="0x10e231ae0"/>
        <function-ref name="getdt" scoped="" ref="0x10e265590"/>
        <function-ref name="gett0" scoped="" ref="0x10e265110"/>
        <function-ref name="isRunning" scoped="" ref="0x10e231660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10e233390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10e266630"/>
        <function-ref name="startOneShot" scoped="" ref="0x10e233860"/>
        <function-ref name="stop" scoped="" ref="0x10e233d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x10e23a150" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x10e23a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x10e236700"/>
        <function-ref name="fired" scoped="" ref="0x10e239c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x10e237a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x10e2375b0"/>
        <function-ref name="getdt" scoped="" ref="0x10e234090"/>
        <function-ref name="gett0" scoped="" ref="0x10e236ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x10e237110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x10e23ad60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x10e2360d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x10e2392a0"/>
        <function-ref name="stop" scoped="" ref="0x10e239790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x10e262790" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x10e262790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e2613f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x10e261a60" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x10e261a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x10de1ae80"/>
            <typename><typedef-ref name="TMilli" ref="0x10de33240"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x10e256890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x10e255260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x10e256d50"/>
        <function-ref name="overflow" scoped="" ref="0x10e255720"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10dc45a50" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10d7c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10dc43650" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x10dc8c840" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x10dc70b00" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x10dc8c120" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x10dc70420" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x10dc6f2b0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x10dc72600" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x10dc72ce0" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x10dc6f9d0" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x10db42070" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x10d874670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x10dcd8020" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10dcd9cc0" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x10dcdc390" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10dc845a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x10dc82440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10dcd8890" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x10dcd77b0" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x10dcd9560" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10dcd7020" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x10dcdcb30" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x10dcdb350" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x10dcdbda0" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10dc845a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10dc82440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x10dcdbb20" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x10dc845a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x10dc82440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10dceb0e0" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x10dce8630" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x10dce83b0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x10dce72a0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10dce7020" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10dce9be0" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10dce93e0" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x10dceba90" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x10dceb810" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x10dcd23e0" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x10dcd2d60" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x10dcd2ae0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x10dcd0790" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10dcd0510" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x10dccf2a0" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x10dccf020" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10dccf990" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x10dcc2810" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x10dcbf2a0" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x10dcbf020" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x10dcc1020" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10dcc8aa0" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x10dcc1760" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10dcc49b0" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x10dcc2120" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10dcc4270" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10dcc30e0" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x10dcc39f0" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10dcc3770" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x10dcbfcb0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x10dcbfa30" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x10d52f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x10dd011f0" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x10dc19670" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x10d8cb910" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10d7bb020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10d7c6020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10d7bb770" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x10d7cd020" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10d7c2980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x10d7cd870" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10de31800" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10de31800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10de504a0" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10de2fda0" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x10de2cb70" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10de2c5a0" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10de2c8e0" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x10de2ddc0" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10de4f500" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10de50c30" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10de2d5d0" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10de30390" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10de30110" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x10de2bb20" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10de2b550" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10de2b890" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10de30e50" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10de30bd0" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10de2f690" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x10de3ca00" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x10de3b1f0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x10de3b9d0" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x10de3a940" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x10de37120" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10de37930" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x10de3a190" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10de364c0" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x10de36240" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x10de3c270" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x10de39190" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x10de39920" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10de5c270" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10de5c9a0" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10de5e420" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10de5b820" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10de5eb20" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10de5b0e0" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10de5f610" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10de5fce0" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10de7d190" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10de7d8e0" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x10de782e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10d7c2980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x10de78060" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10de809c0" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10de7c7d0" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x10de78bd0" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10de7c070" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10de7f990" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x10de7a020" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x10de7f190" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10d52f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10de83aa0" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x10de7b020" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x10de7a7c0" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x10de7b7b0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10de80270" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10e0e0c40" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10e0e0c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10e0dc5a0" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x10d52f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10e0d75b0" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10e0d75b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10e0d77f0" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10e0d2390" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10e0d53b0" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x10e0d39d0" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10e0d3400" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
          </variable>
          <variable name="dt" ref="0x10e0d3740" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10e0d5b90" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x10e0d2b80" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10e0d6390" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10e0d6110" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e0d77f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10e0d6bc0" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10e132df0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10e132df0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10e15e070" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e15e070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10e15e990" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10e15e070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10e15dad0" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10e15d270" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10d7bf090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10e15c270" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
